95cefea (HEAD, tag: v0.94.3) 0.94.3
81a311a (origin/hammer-12709) Workunits : fs/misc/chmod.sh : Include ACL characters in permission check.
2ecb3b7 Fh ref count will leak if readahead does not need to do read from osd
4c199bf (origin/wip-11998-hammer) debian/control: ceph-common (>> 0.94.2) must be >= 0.94.2-2
e19f928 (origin/wip-12502-hammer) rgw: conversion tool to fix broken multipart objects
28d32f6 rgw: only scan for objects not in namespace
e22e2b4 rgw_admin: add --remove-bad flag to bucket check
154f18c (origin/wip-12465-hammer) Log::reopen_log_file: take m_flush_mutex
b872882 (origin/wip-12237-hammer) librados_test_stub: read op should return number of bytes read
7d9fce3 tests: fixed TestObjectMap.InvalidateFlagInMemoryOnly
4a77be0 librbd: don't attempt to invalidate an object map in R/O mode
0aea70f tests: add new unit tests for object map invalidation
c732cb8 librbd: move object map codes to common location
27c99ea librbd: only update image flags when holding exclusive lock
ef45363 librbd: new ImageWatcher::is_lock_supported method
e4b55b3 Fixes: #12286 radosgw-admin: after subuser modify print only once user info.
9458b84 rgw: fix ListParts response
2357b6c rgw: If the client sends a Connection: close header respond accordingly.
f819332 ceph.spec.in: install 95-ceph-osd.rules, mount.ceph, and mount.fuse.ceph properly on SUSE
d8733be debian: move ceph_argparse into ceph-common
f99f312 (origin/wip-12384-hammer) test: potential memory leak in FlushAioPP
a4fc63a pybind: fix valgrind warning on rbd_get_parent_info call
aa3eb28 osdc: invalid read of freed memory
18ede75 krbd: fix incorrect types in the krbd API
488578c fsx: cleanup crypto library at exit
97ff6cb tests: add run-rbd-valgrind-unit-tests.sh
e690907 valgrind: update valgrind suppressions for lttng-ust
fe013e0 librbd: TaskFinisher should finish all queued tasks
43cd3ac tests: fix valgrind errors with librbd unit test
5d8d6a1 tests: librbd should release global data before exit
13f926e librados_test_stub: cleanup singleton memory allocation
1063f52 PG::find_best_info: ignore info.les for incomplete peer
7132277 Conditional-compile against minimal tcmalloc.
ad5745b OSD: add command_wq suicide timeout
059a579 OSD: add remove_wq suicide timeout
b8826bc OSD: add scrub_wq suicide timeout
878dd40 OSD: add snap_trim_wq suicide timeout
1157583 OSD: add recovery_wq suicide timeout
a82b450 OSD: add op_wq suicide timeout
89aa8ff (origin/wip-11833-hammer) mon: add an "osd crush tree" command
03c07d7 librbd: assertion failure race condition if watch disconnected
5c812c1 librbd: prevent object map updates from being interrupted
e50caab rgw: fix empty json response when getting user quota
ec70533 rgw: error out if frontend did not send all data
557865c rgw: fix reset_loc()
b1618a9 rgw: fix lack of account name in XML listing of Swift account.
e39dce7 rgw: generate the "Date" HTTP header for civetweb.
a5dbcbb Swift: Set Content-Length when requesting/checking Keystone tokens
3c8cdea client: reference counting 'struct Fh'
c78cc00 rgw: rectify 202 Accepted in response for PUT on existing bucket.
7f1c0cc crush/CrushTester: return EINVAL if crushtool returns non-zero
2aaeea1 tests: TEST_crush_reject_empty must not run a mon
80afb81 ceph-helpers: implement test_expect_failure
6b5e9a1 tests: display the output of failed make check runs
5141301 (origin/wip-11975-hammer) mon: add "--check" to CrushTester::test_with_crushtool()
5ec27cf crushtool: rename "--check-names" to "--check"
2a8fe88 mon: check the new crush map against osdmap.max_osd
c0b0f52 crushtool: enable check against max_id
f041bbe crush/CrushTester: check if any item id is too large
cc1cc03 mon: validate new crush for unknown names
ff29a7f crushtool: add the "--check-names" option
960ea49 crush/CrushTester: add check_name_maps() method
5e72479 (origin/wip-12021-hammer) OSDMonitor: allow addition of cache pool with non-empty snaps with config
ecac1a4 Always provide summary for non-healthy cluster
1a32379 mon/PGMap: add more constness
84ebc3d mon/PGMap: sort pg states by the states in "pg ls" spec
e310461 mon: s/recovery/recoverying/ in "pg ls*" commands' spec
524f4a5 mon: always reply mdsbeacon
413e407 mon/MDSMonitor: rename labels to a better name
a03968a mon: send no_reply() to peon to drop ignored mdsbeacon
39f3459 mon: remove unnecessary error handling
0e5e7e1 mon: remove unused variable
7034720 ReplicatedPG::finish_promote: handle results->snaps is empty case
3e44dc1 ReplicatedPG::finish_promote: fix snap promote head snaps
5ef0846 tools: chunk reads in Dumper
408880b qa: update to newer Linux tarball
56c2688 rgw: simplify content length handling
d9bbef3 rgw: make compatability deconfliction optional.
0260abd rgw: improve content-length env var handling
8abc46a rgw: fix data corruption when race condition
89d0266 (origin/wip-fix-doc-hammer) doc: add the corresponding @endcond command for @cond
2aa77b3 doc: remove orphan: directive in ceph-create-keys.rst
ad66e40 doc: let doxygen ignore src/tracing
356bd2c (origin/wip-11806-hammer) debian: ceph-dbg steals ceph-objectstore-tool from ceph-test-dbg (take 2)
c5c627f rgw/logrotate.conf: Rename service name
582cf73 (origin/wip-12109-hammer, origin/wip-12109) tests: add librbd watch/notify version compatibility test
43b9aef qa/workunits/rbd: add notify_master/slave bootstrap scripts
f995fb5 qa/workunits/rbd: add new test_librbd_api workunit
a09da2a tests: create librbd API-only integration test suite
e149916 Increase max files open limit for OSD daemon.
22f58ce Makefile: install ceph-post-file keys with mode 600
3e65a10 ceph-post-file: improve check for a source install
c1f6743 ceph-post-file: behave when sftp doesn't take -i
38d36b1 packaging: move SuSEfirewall2 templates out of src
24bc9f2 packaging: add SuSEfirewall2 service files
8acfb99 Bug fix to ceph systemV compatability script.
bd3fd92 Fixes to rcceph script
37d77d3 Increase max files open limit for OSD daemon.
78d894a qa/workunits/rados/test-upgarde-v9.0.1: fix exclude syntax
3e8d60a qa/workunits/rados/test-upgrade-v9.0.1: skip one more evict test
348a3d3 qa: add compatibility filtered rados api tests for upgrades
f68bf94 (origin/wip-11493-hammer) OSDMonitor: disallow ec pools as tiers
13c8d58 mon: prevent pool with snapshot state from being used as a tier
58e6266 test/librados/tier.cc: destroy and recreate cache pool on every test
3db1026 doc/release-notes: v0.94.2
ed5442b (origin/wip-11770-hammer) tests: verify librbd blocking aio code path
20e1048 librbd: new rbd_non_blocking_aio config option
b4571b3 PendingReleaseNotes: document changes to librbd's aio_read methods
9ea1edd librbd: AioRequest::send no longer returns a result
272df2a tests: update librbd AIO tests to remove result code
dd2e4c1 librbd: internal AIO methods no longer return result
dbd4e29 Throttle: added pending_error method to SimpleThrottle
7df6091 librbd: add new fail method to AioCompletion
cf6e1f5 librbd: avoid blocking AIO API methods
e61974a librbd: add task pool / work queue for requests
5fb8561 (tag: v0.94.2) 0.94.2
bfb1442 ReplicatedPG::release_op_ctx_locks: requeue in scrub queue if blocked
c7b6a63 ReplicatedPG::finish_ctx: take excl lock if operation is rw
1550a56 RadosModel: randomly prefix delete with assert_exists
4cdc5f7 RadosModel: assert exists on subsequent writes
25c730b test/librados/snapshots.cc: add test for 11677
3d74164 ReplicatedPG::trim_object: write filtered snapset while we're at it
a116154 ReplicatedPG: start_flush: use filtered snapset
82988d6 ceph-disk: support NVMe device partitions
bd91fb0 mon: prevent bucket deletion when referenced by a rule
56565ee crush: fix crash from invalid 'take' argument
1440122 common/config: detect overflow of float values
9b947fa common/config: detect overflow of int values
d723e11 mds: clear CDir::STATE_REJOINUNDEF after fetching dirfrag
54f4e7d rgw: Use attrs from source bucket on copy
9dfef60 rgw: always check if token is expired
fdb43eb ceph.spec.in: tweak ceph-common for SUSE/openSUSE
ba1a016 admin/build-doc: fix dependency checks
5a60a03 (origin/wip-4846) man/ceph-create-keys.8: add missing file
19305b8 doc: add ceph-create-keys.8
ffd0933 WorkQueue: added virtual destructor
a28adfb WorkQueue: add new ContextWQ work queue
1a321e4 rgw: Do not enclose the Bucket header in quotes
968573b debian: ceph-dbg steals ceph-objectstore-tool from ceph-test-dbg
a62c3aa ceph.in: handle unknown Exception correctly
cc7f744 ceph.in: improve the interactive mode
eb26388 ceph.in: parse quote correctly in interactive mode
344328d (origin/wip-11733-hammer) debian: set rest-bench-dbg ceph-test-dbg dependencies
293affe (origin/wip-11622-hammer) rgw: merge manifests correctly when there's prefix override
a43d248 rgw: restore buffer of multipart upload after EEXIST
558d639 json_sprit: fix the FTBFS on old gcc
678b3e6 json_spirit: use utf8 intenally when parsing \uHHHH
ef6641c ceph.spec: update OpenSUSE BuildRequires
0b6d442 (origin/wip-hammer-11535-admin-socket) common/admin_socket: close socket descriptor in destructor
95818da (origin/wip-hammer-package-perf-objectstore) packaging: include ceph_perf_objectstore
6e2dd40 (origin/hammer-uclient-checking) client: fix error handling in check_pool_perm
3c2e6ae client: use SaferCond in check_pool_perm
79b2ac2 client: check OSD caps before read/write
c548d8d tests: ceph-helpers kill_daemons fails when kill fails
fb10594 Added a "ceph hello world" for a simple check for ceph-deploy qa suite
46a4e8a packaging: mv ceph-objectstore-tool to main ceph pkg
f4a0dab rgw: send Content-Length in response for HEAD on Swift account.
32f4a74 rgw: send Content-Length in response for DELETE on Swift container.
d39a660 rgw: send Content-Length in response for PUT on Swift container.
02a3813 (origin/wip-11370-hammer) librbd: flatten should return -EROFS if image is read-only
af8939b librbd: allow snapshots to be created when snapshot is active
d21c0c0 librbd: better handling for duplicate flatten requests
ec0bd1d librbd: use generic helper for issuing async requests
8a6e6e4 OSD: handle the case where we resurrected an old, deleted pg
efbfe6f rgw: improve metadata handling on copy operation of Swift API.
d164d80 rgw: quota not respected in POST object
7f2a9ed rgw: fix handling empty metadata items on Swift container.
8e6efdb rgw: send Content-Length in response for GET on Swift container.
54b6290 rgw: enable end_header() to handle proposal of Content-Length.
c87aa11 rgw: Swift API. Complement the response to "show container details"
2cb5d60 rgw: enforce Content-Length in response for POST on Swift cont/obj.
d2043a5 rgw: send Last-Modified header in response for PUT on Swift object.
4d1f3f0 rgw: don't use rgw_socket_path if frontend is configured
3aef0f2 rgw: update keystone cache with token info
3edb196 civetweb: update max num of threads
bc6eb8d rgw: improve code formatting ONLY.
7aa1ae6 rgw: send X-Copied-From-Last-Modified header of Swift API.
150b9e2 rgw: dump object metadata in response for COPY request of Swift API.
e749701 rgw: refactor dumping metadata of Swift objects.
b034511 rgw: add support for X-Copied-From{-Account} headers of Swift API.
c9e6a0b rgw: send ETag, Last-Modified in response for copying Swift cobject.
7f41ff0 rgw: Swift API. Allows setting attributes with COPY object operation.
2f86995 rgw: improve format of X-Timestamp on Swift objects.
48b1981 rgw: add support for X-Timestamp on Swift containers.
893ffd3 tests: AioCompletion incorrectly freed
96b0db5 librbd: update ref count when queueing AioCompletion
0944051 librbd: failure to update the object map should always return success
7ee7dcf tests: librados_test_stub reads should deep-copy
113f3b1 mon: Total size of OSDs is a maginitude less than it is supposed to be.
6a04b55 Fix "disk zap" sgdisk invocation
8996907 osd: refuse to write a new erasure coded object with an offset > 0
bc51476 ceph_json: add decode / encoder for multimap
7c7e651 cls_rgw: use multimap to keep pending operations in bucket index
cb75713 rgw: generate new tag for object when setting object attrs
7387c43 java: libcephfs_jni.so is in /usr/lib64 on rhel
856b2fa (origin/hammer-next) rgw-admin: a tool to fix object locator issue
512ae4c rgw: set a special object locator if object starts with underscore
da4d227 rgw: use correct oid when creating gc chains
4e84f31 rgw: civetweb should use unique request id
4789686 Move ceph-dencoder build to client
7eabb70 Rework mds/Makefile.am to support a dencoder client build
da7f683 Add support for PPC architecture, provide fallback
3001fad Fix clear_pipe after reaping progress
379ef71 rgw : Issue AIO for next chunk first before flush the (cached) data.
b903ad2 rgw/Makefile.am: Populate DENCODER_SOURCES properly
f994483 Dencoder should never be built with tcmalloc
8709e34 ceph-disk: more robust parted output parser
8d9f4d4 osdc: add epoch_t last_force_resend in Op/LingerOp.
2f34d2e rgw: do not pre-fetch data for HEAD requests
c6edc16 rgw - make starting quota/gc threads configurable
c615972 librbd: ImageWatcher should cancel in-flight ops on watch error
0e6a032 librbd: moved snap_create header update notification to initiator
2864da8 librbd: updated cache max objects calculation
0cdc93f librbd: acquire cache_lock before refreshing parent
a1b4aeb librados_test_stub: AIO operation callbacks should be via Finisher
3a58e30 (origin/hammer-11482) mds: remove caps from revoking list when caps are voluntarily released
f30fa4a (origin/wip-11453-hammer-rgw-init-as-root) init-radosgw: run RGW as root
0ee022b osd/ReplicatedPG: don't check order in finish_proxy_read
8a58d83 Fix ceph_test_async_driver failed
85a68f9 rgw: remove meta file after deleting bucket The meta file is deleted only if the bucket meta data is not synced
51f5763 release-notes: backport Hammer release notes
e4bfad3 (tag: v0.94.1) 0.94.1
5ca771a crush: fix has_v4_buckets()
33e79ab crush: fix dump of has_v4_buckets
bd0ec49 bug fix: test case for lfn index
b5921d5 crush/mapper: fix divide-by-0 in straw2
93c8f43 osd: fix negative degraded objects during backfilling
e61c4f0 (tag: v0.94) 0.94
4347a32 debian: remove lttng checking from rules
57d2781 (origin/wip-11113-hammer) librbd: snap_remove should ignore -ENOENT errors
572a2f5 librbd: get_parent_info should protect against invalid parent
0b2e272 ReplicatedPG::cancel_pull: requeue waiters as well
23efab7 ReplicatedPG: don't write hitset while scrubbing, update scrub_cstat
85307b9 ReplicatedPG: in do_op, requeue op if we requeue waiters in agent_choose_mode
b1f078b ReplicatedPG: requeue waiting_for_active before waiting_for_cache_not_full
b0a3941 ReplicatedPG::promote_object: do not create obc if not promoting
bdc664f ECTransaction: write out the hinfo key on touch as well
8e5d4c6 osd: drop unused utime_t now arg to issue_repop
8db4056 osd: do not update mtime when recording digest
491474f test: Add testing for PGLog::filter_log()
1fcd3fb osd: Create a filter_log for PGLog
c751191 ceph-objectstore-tool, osd: Filter the pg_log_t for objects no longer in pg
ccc0839 (origin/wip-11177) common: send cluster log messages to 'cluster' channel by default
f9b98c9 ceph-objectstore-tool: Fix message and make it debug only to stderr
923d532 ceph-objectstore-tool: Remove bogus comment and eliminate a debug message
c176ebf (origin/wip-move-code) osd/: Move ReplicatedBackend methods into ReplicatedBackend.cc
e9d6096 ReplicatedPG: remove unused C_OnPushCommit
ddf0292 PG: set/clear CREATING in Primary state entry/exit
6f218b1 (origin/hammer-11205) qa/workunits/fs/misc: fix filelock_interrupt.py
1388d6b ReplicatedPG: trim backfill intervals based on peer's last_backfill_started
924ace8 (origin/wip-11145) rgw: shut down timer before erroring out
65bb4df ReplicatedPG::promote_object: check scrubber and block if necessary
78c5de7 osd/: s/is_degraded_object/is_degraded_or_backfilling_object
4a5bd05 Revert "osd/: update peer_missing and local missing if we write a degraded object"
6ed86b4 Revert "append_log: use remove_snap_mapped_object"
b84943c Revert "osd/: don't block writes on degraded objects"
9cefc59 Revert "ReplicatedPG: block writes on degraded objects for ec pools"
45bff59 Revert "Merge pull request #3641 from athanatos/wip-10731"
6f23d34 Revert "osd/: s/is_degraded_object/is_degraded_or_backfilling_object"
fc3ce48 (origin/wip-hammer-rgw) rgw: update makefile to enable civetweb config
2f1342e civetweb: update submodule
e5f3282 rgw: pass civetweb configurables to civetweb
a8ced2c rgw: don't overwrite bucket / object owner when setting acls
3edfa67 Revert "ReplicatedPG: only allow a degraded write if we have at least min_size copies"
5e4b7b0 Revert "Merge pull request #3911 from athanatos/wip-11057"
0a0d8f6 doc: Regenerate man/ceph.8 based on ceph.rst changes
eb890b1 doc: Break ceph osd pool get into sections based on pool type
b6512eb erasure code: add shec's documentation / change default layout
175aff8 ceph-objectstore-tool: Use exit status 11 for incompatible import attempt
68719f5 (origin/wip-omap-clear) osd: fix omap digest clearing for omap write ops
d5b3bd7 os/MemStore: make omap_clear zap the omap header too
d2467e4 ceph_test_rados_api_aio: verify omap_clear clears header, too
5b23f5b ceph-objectstore-tool: Output only unsupported features when incomatible
477ac92 (origin/wip-11102) osd: only complain about stored vs actual digest if all peers support it
9a2ff34 PG::find_best_info: reject infos with old last_epoch_started
f96d58b init-radosgw*: don't require rgw_socket_path to be defined
0712d8d PG: ensure that info.last_epoch_started only increases
2956ae2 doc: add last_epoch_started.rst
2da9584 PG: make sure to update history.last_epoch_started with first write
0d52aca osd: erasure-code-profile incremental rm before set
b92f9cf mon: informative message when erasure-code-profile set fails
f5fa25d (origin/wip-rgw-bootstrap) ceph-create-keys: create bootstrap-rgw key
679e266 mon: add 'bootstrap-rgw' profile
01379bd (origin/wip-refine-build-configuration-hammer) Compile test_build_librgw only if WITH_BUILD_TESTS
1c20417 (origin/wip-11123) osd: use (robust) helper for setting exists or clearing whiteout
f5a2aef PGLog::merge_log: in tail extend case, log.log might be empty
88d66ca mon: Support multiple args to ceph pg dump_stuck as in usage and man pages
a3dfeec Improve "ceph_argparse.py: add stderr note if nonrequired param is invalid"
bbe231a PGLog: split divergent priors as well
90a0393 PendingReleaseNotes: warn about lttng LD_PRELOAD for daemons
53cc492 ceph_test_rados_tier: add test case for delete+create compound ops
93ef911 PG: add config to ignore history les in find_best_info
d06c1d7 rhel 5.9 port fixes to compile librados only Signed-off-by: Rohan Mars <code@rohanmars.com>
f4bc48d doc: Fix ceph command manpage to match ceph -h (hammer)
9495de47 doc: Fix ceph command manpage to match ceph -h (firefly)
5680456 PGBackend: do not rewrite ec object oi checksums
e0bf132 PGBackend: add debug option to rewrite digest even if present
3858d0b ReplicatedPG: finish_ctx: do not assume that the oi is for the head object
aceb860 Build ceph-dencoder if server and mds for now
c365cac rbd: regenerate rbd(8) man page
416cbff doc: Fix typo in ceph pg dump_stuck usage in man page
ba77bda (origin/wip-librbd-invalidate-object-map) librbd: invalidating snapshot object maps should set snapshot flag
ba4bb22 test_cls_rbd: verify set_flags updates snapshots
fa25b84 cls_rbd_client: add snap_id param to set_flags
2d86898 cls_rbd: set_flags can now update snapshots
c1892a0 rgw_main.cc: fix null-deref in case get_storage() fails
f5b0151 rgw/rgw_op.cc: fix potential null-deref in strcmp()
595e87f Fix XioLoopbackConnection Lifecycle.
e1eebb3 osd: refactor RepScrubWQ::_process()
052debd osd: fix a msg leak when OSD is stopping
3ae87c8 XIO: Handle requeue case of XIO messages
5a8d4c5 qa,cephtool: add test case for 'ceph osd tier add-cache'
83d0581 mon: Don't forget set read_tier/write_tier for 'osd tier add-cache'.
23d7991 tests: add unit test for multiple concurrent resize ops
194fcfd librbd: retrieve image size at start of resize op
0212ae4 librbd: do not invalidate oversized object map
7f246b8 librbd: avoid canceling object map / header updates
85737ab librbd: update size / parent overlap after resize completes
1d29890 librbd: use image size and parent overlap from active shrink op
9c5c665 librbd: queue multiple resize requests
6bc47eb xlist: add const versions of front / back
e7f9e3b librbd: use ImageCtx::get_parent_overlap helper function
286b385 librbd: resize/flatten should validate image is R/W
9dcd517 librbd: hold write snap_lock when refreshing object map
ac527a2 (origin/wip-11079) crushtool: improve straw2 compile/decompile test
6445d9e crush: fix crush_get_bucket_item_weight and bucket destroy for straw2
b686eda crushtool: fix straw2 cli test
5b58ef1 osdc: fix a memory leak in C_TwoContexts
e3616a5 doc: rhel6.5 is rhel6
147b1db (origin/wip-11068-debian-jessie) deb: add zlib1g-dev to Build-Depends for Debian/jessie
84f05c0 TestAsyncDriver: Fix typo in ceph_test_async_driver
918afc0 qa: make rbd-fuse exit cleanly with lttng
b6326a0 ReplicatedPG: block write on degraded object if there are waiters
7acfdac (origin/wip-11015) crushtool: test compilation of a rule with straw2 buckets
61308cc crush: parse alg names that include a digit
cb6813c tests: add Debian jessie dockerfile
657844a tests: DEBIAN_FRONTEND=noninteractive apt-get install
f8dec72 tests: jq is not available on Ubuntu precise
4add63c install-deps.sh: strip | in the list of packages
dbe2b24 (origin/wip-wn-rgw-hammer) rgw: flush watch after unregistering
3530a25 Client: do not require successful remount when unmounting
b90018f The erasure-code is actually required by libcommon
9b3e1f0 Minor syntax fix-ups for Makefile.am redesign
96c685e Minor changes in other Makefile.am files to make them support the build refinement
0f04633 Split Makefile.am in src/test
e82ac10 rgw: only finialize finisher if it's not null
7bab9f7 rgw: fix watch initialization and reinit on error
387e4f8 rgw: move watch reinit into a finisher
30c32b4 rgw: add support for new watch/notify functionality
04437e4 rgw: switch to new watch/notify API
e3a7ab7 Split Makefile.am in src/tools
14572ff Cleanup src/Makefile's a bit more
70c89d5 Split Makefile.am in src
e37af1b Reorganize structure of Makefile.am in src/include
da9935e Split Makefile.am in cls
9e1c49c ceph.spec.in: loosen ceph-test's dependencies
5cbe5ca man: move ENABLE_* to Makefile.am
e531dd4 Add new configure options to improve build refinement
c474106 Split Makefile.am in man
fa13a5d qa: fix up rbd permissions test
cb840cc librbd: remove unneeded assert from unregister_watch()
8dc0bf8 (origin/wip-10828) osdc/Objecter: clean up oncommit_sync (and fix leak)
f7d35b9 osdc/Objecter: count oncommit_sync as uncommitted
099264f (origin/hammer-backports-hadoop) hadoop: workunits don't need java path
2f2ace3 qa: update old replication tests
a6a6df6 cmake:  build fixes
137800a (origin/wip-10968) librbd: delay completion of AioRequest::read_from_parent
7d2fe5b librbd: allow AioCompletions to be blocked
416ce76 librbd: delete Contexts when object map aio_update not required
1bfd760 librbd: handle possible aio_read return error code
fb2caa0 librbd: add log message for completion of AioRequest
1e3f814 mon: ignore crushtool validation if too long
7a5a635 mon: do not hardwire crushtool command line
eca153e (origin/wip-10962) test/cli-integration/rbd: updated to new CLI
6c2d929 rbd: permit v2 striping for clones and imports
b5050b6 rbd: fixed formatted output of rbd image features
6cff494 (origin/wip-10990) qa/workunits/rbd/copy.sh: remove all image locks
0e58463 librbd: missing callback log message for CopyupRequest object map update
ed9e358 librbd: hide flush log message if no flushes are pending
e2283e3 (origin/wip-10958) librbd: flush pending AIO after acquiring lock
472db64 librbd: hold snap_lock between clipping IO and registering AIO
7e89f51 mon: do not pollute directory with cvs files from crushtool
2e74959 (origin/wip-10546) mon: Monitor: fix timecheck rounds period
3f73eb4 (origin/wip-mon-datahealth-fix.hammer) test: encoding: add LevelDBStoreStats and ceph_data_stats to types.h
028806a mon/mon_types.h: allow testing encode/decode of LevelDBStoreStats
6c7f3a7 include/util.h: allow testing encoding/decoding of ceph_data_stats
b8c7bae include/util.h: initialize ceph_data_stats to zero
6c2dea9 mon: mon_types.h: initialize LevelDBStoreStats and avoid craziness
1584104 librbd: moved flush / cache invalidate to resize state machine
9fed4b9 librbd: add AIO version of invalidate_cache
bebf8e9 (tag: v0.93) 0.93
6f31458 (origin/wip-hammer-gplv2-text) Add GPLv2 text file
2c666f3 librbd: C_SaferCond memory leak
7ed9640 (origin/wip-fusesystem-10710) ceph-fuse: test dentry invalidation options and fail out if we fail
694529a Client: support using dentry invalidation callbacks on older kernels
a6ebf67 Client: add functions to test remount functionality
cd95b29 Client: check for failures on system() invocation
3ec52da (origin/wip-10961) qa/workunits/rbd/copy.sh: explicitly choose the image format
286a886 (origin/hammer-10912) client: re-send requsets before composing the cap reconnect message
f3ad61a (origin/wip-10864-hammer-packaging-rbd-udev) packaging: move rbd udev rules to ceph-common
ec26f08 (origin/wip-librbd-mdlock) librbd: remove unnecessary md_lock usage
1f9782e librbd: move object_map_lock acquisition into refresh()
27e5ae6 librbd: don't check if object map is enabled before refreshing
876f128 librbd: remove object map on rollback if needed
f4d8d16 librbd: clarify md_lock usage
01dc05b test_librbd: add simple test for object map snapshot consistency
8582500 librbd: use snap_lock to protect ImageCtx->size
7fed0a3 librbd: hold snap_lock while reading parent info in diff_iterate
df42fd3 test_librbd: close ioctx after imagectx
06e5a39 rbd: fix --image-feature parsing
eef7466 librbd: apply flag read failure to all snaps
6ac8139 librbd: make ImageCtx->object_map always present
d611121 (origin/wip-librbd-async-operations) tests: add unit test to verify async requests time out
c295485 librbd: restart async requests if lock owner doesn't report progress
c611936 librbd: replace Finisher/SafeTimer use with facade
41e186a librbd: cancel in-progress maint operations before releasing lock
dde882c librbd: flush context potentially completing too early
04d360a librbd: take ImageCtx->snap_lock for write in add_snap()
40c2abb librbd: use snap_lock to protect ImageCtx->flags
bb4041f librbd: add locking asserts to ImageCtx
4bcbdbf librbd: fix ImageWatcher::is_lock_supported() locking
a94ceb6 librbd: add and use a test_features() helper
cffd93a librbd: use ImageCtx->snap_lock for ImageCtx->features
468839e (origin/wip-librbd-image-watcher-tests) tests: add additional test coverage for ImageWatcher RPC
915064a librbd: add ostream formatter for NotifyOp
260c820 fuse: do not invoke ll_register_callbacks() on finalize
75d8c01 (origin/wip-10862-hammer) mon: do not try and "deactivate" the last MDS
a79e905 (origin/wip-devel-python-split) qa: fix python-ceph reference
46b45e3 doc: fix python-ceph refs in docs
d1c82ea ceph.spec: specify version
2a23eac debian: split python-ceph
39982b1 Split python-ceph to appropriate python-* packages
bd40f23 (origin/wip-librbd-python-tests) tests: speed up Python RBD random data generation
655e616 tests: fix potential race conditions in test_ImageWatcher
9c03750 (origin/wip-osdc-watch-error) osdc: watch error callback invoked on cancelled context
a9bfd5d ceph_test_rados_api_watch_notify: wait longer for watch timeout
91cda52 (origin/wip-10788) osd: better debug for maybe_handle_cache
bee9154 osd,mon: explicitly specify OSD features in MOSDBoot
30c904e osd: do not proxy reads unless all OSDs proxy features too
e0e765f osd/OSDMap: cache get_up_osd_features
63f6c9b (origin/wip-librbd-snap-create-race) librbd: fixed snap create race conditions
69b3857 (origin/wip-10898) librbd: improved ImageWatcher duplicate message detection
942f875 librbd: add test instances for watch/notify messages
10d8686 librbd: minor cleanup of ImageWatcher messages
0ed296b (origin/wip-librbd-exclusive-lock-config) rbd: disable RBD exclusive locking by default
2b63dd2 DBObjectMap: lock header_lock on sync()
170c88d cmake: radosgw, radosgw-admin related fixes
4feb171 vstart.sh: can use binaries outside of ceph/src
55d3db9 (origin/wip-10919) cls_rbd: invalidate bufferlist CRC when updating object map
970bb49 (origin/wip-10883) osd: Fix FileJournal wrap to get header out first
01f04cb (origin/wip-10914) osdc: pass fadvise op flags to WritebackHandler read requests
c463242 osd/OSDMap: include pg_temp count in summary
d6e2689 PG: compensate for bug 10780 on older peers
1d0d3dc PG: add a config option to enable (by default) recovery below min_size
08eb584 (origin/wip-10899) librbd: fixed ImageWatcher recursive locking issues
48466f8 ReplicatedPG: only allow a degraded write if we have at least min_size copies
d05539e ECBackend: use tbl for empty transaction as well if necessary
e059d58 ReplicatedBackend: use tbl for empty transaction to backfill peer also
25f9363 osd/: s/is_degraded_object/is_degraded_or_backfilling_object
4f55d41 (origin/wip-10900) test/librbd/fsx.c: disable RBD object map for krbd
487c205 (origin/wip-10892) osd: clear obc cache on_shutdown
c341c52 (origin/wip-10884-hammer-rpm-devel-split) ceph.spec: split ceph-devel to appropriate *-devel packages
ea66f5c doc: RGW is "built on top of librgw" changed to "librados"
b220b2a librbd: enforce write ordering with snapshot
0de6b61 librbd: use separate files for snapshot object maps
e97a8f1 librados_test_stub: added IoCtx::write_full implementation
32e259c librbd: skip invalidating an invalid object map
4638eaf cls_rbd: added CRC validation to object map
ec922a6 osd: use op (not connection) features for copy-get encoding
70eab06 osd: pass features through to proxied read op
248be16 osd: set features explicitly in MOSDOp
e95d4cc tests: remove tests for when init() is not called in shec (#10839)
3e37c13 rm some useless codes
e7735d3 osd: number of degraded objects in EC pool is wrong when there is OSD down(in)
e0fbe5c cmake: add librbd/test_fixture.cc
caf2e1d cmake: add os/XfsFileStoreBackend.cc to rules
62dd0c2 erasure-code: mark the shec plugin as experimental
f9c90e7 tests: fix unused variable warning
3a3bb6d common: capture check_experimental_feature_enabled message
d8f0215 (origin/wip-10787) mon/OSDMonitor: note osd map epoch in one other place
d9b0cd3 mon/OSDMonitor: move osd epoch cache update into helper, add fixme
b80e6ae README.md: fix the indent of a command line usage
4038d21 cleanup: delete useless member variable
280a198 PG,ReplicatedPG: make missing_digests local to scrub_compare_maps
8e806bc Docs: OSD name, not id, needs to be given to remove an item from the CRUSH map. Include command for deleteing bucket from the CRUSH map.
a5759e9 mon/OSDMonitor: do not trust small values in osd epoch cache
87544f6 (origin/wip-10844) mon: MonCap: take EntityName instead when expanding profiles
fd83020 (origin/wip-decoding-oldest-snap) mds: fix decoding of InodeStore::oldest_snap
6918a98 tests: Dockerfile COPY with two arguments
98297e0 tests: update docker helper documentation
1023aa9 tests: add Dockerfile for centos-6
b3771eb tests: one Dockerfile per repository:tag
b9b5868 osd: fix OSDCap parser on old boost/spirit
4ced591 osd/OpRequest: pass string by const&
74d5ccf osd/: include version_t in extra_reqids with promote
de6b53a (origin/hadoop) qa: hadoop plays nice with new teuthology task
3c05c9c tests: no need for python-flask at build time
b24a01b erasure-code: initialize all data members
1a9d717 erasure-code: fix uninitialized data members on SHEC
e2a5085 ReplicatedPG::on_change: requeue in_progress_async_reads close to last
a5ecaa1 ReplicatedPG::on_change: clean up callbacks_for_degraded_object
2d2dc13 mon/PGMonitor: drop pg ls debug line
65ce7b7 (origin/wip-da-fix-xio-configure) fix configure to reflect the missing libs for xio
a5804c4 (origin/wip-early-adopters) doc: add a page for CephFS early adopters
d237649 doc/cephfs: Ceph FS -> CephFS
65dfd5d doc/cephfs: clarify the 'not production ready' warning
700459b build-doc: package checks for fedora
c5a74a7 build-doc: don't ignore errors
94f9f60 tests: clone ceph-erasure-code-corpus from ceph
807cf57 xio: Fix out-of-order responses
807af4c cmake: Fix cmakelist to compile librbd
418ca0c (origin/wip-10784) osd: Update object state after removing watch from object info
27905fd osd: Simplify handle_watch_timeout() using existing support functions
45c388f (origin/wip-objecter-linger-locking) objecter: protect linger_op last_error and registered fields
69ee5ec objecter: remove unused RWLock::Context
e01c93d objecter: clarify a few lock assertions
a60d5fa objecter: remove dead race handling code
1b2da9b objecter: remove dead _get_op_target_session() method
4f36eae ceph.spec.in: junit always except for EPEL 6
9656018 (origin/wip-10791-stopping) MDSMonitor: do not allow MDS to transition from STATE_STOPPING
6898f0b rgw: Swift API. The second way of specifying desirable response format.
e504003 (origin/wip-10719) rgw: remove multipart entries for bucket index when aborting
3e54acb rgw: encode rgw_obj::orig_obj
64d7265 librados: code reformatting only.
3f11ab0 librados: add info about restrictions on rados_monitor_log() usage.
f67bfa2 rgw: Swift API. Support for X-Remove-Container-Meta-{key} header.
cdfc23f rgw: fix doc, A typo in command line argument name
2f8d31e rgw: Swift API. Dump container's custom metadata.
90d0f0d rados: add 'watch/notify' in rados --help command.
b623c42 rados: Using readable format to print object mtime when call 'stat obj'.
d3fc5bd Fix bug: When run Test_filejournal testcase with gtest argument, all of testcases is failed.
93f32f0 erasure-code: fix compilation warnings
01e154d osd: fix PG leak in SnapTrimWQ._clear()
a850514 fsync-tester: print info about PATH and locations of lsof lookup
b14ca1f (origin/wip-10737) test_libcephfs: test we can't set layouts on existing files
36d37aa rados.py: keep reference to python callbacks
7002f93 ShardedThreadPool: make wait timeout on empty queue configurable
32d7617 osd/PG.c: use boolean to init `bool` variables
5aa6f91 WorkQueue: make wait timeout on empty queue configurable
a3b1583 add tests for ceph pg ls-by-pool
25d9837 add CLI ceph pg ls-by-pool
6ccced2 add tests for ceph pg ls-by-osd
39e2640 add CLI ceph pg ls-by-osd
742c5e8 add tests for ceph pg ls-by-primary
f814262 fix error : ceph pg ls 0
203c06d (origin/wip-old-gcc) locally disable pragma warnings on gcc < 4.6
93629d3 Pipe: conditionally compile IPTOS setting
b025fbf librbd: consolidate all async operation flush logic
0a00be2 xlist: added missing include
78b1fb5 ReplicatedPG::eval_repop: check waiting_for_* even if !m
d9c024b osd/ReplicatedPG: remove dup op mark start call
b4f2e75 osd: add perf counter for proxy read
169c620 osd/ReplicatedPG: add assertion in apply_and_flush_repops
918b378 mon: have two COMMAND two COMMAND_WITH_FLAG macros
7920db3 tests: make ceph_watch_wait output watchfile content on failure
ac9d75c mon: noforward flag for commands that are not supposed to be forwarded
3ff4821 mon: fix Monitor::_get_moncommand()
27bab65 (origin/wip-10765) rados: make 'watch' command unwatch when done
45f842d (origin/wip-doc-ports) doc: remind user to calculate the correct max port
c65d8ed doc: fix "7810" port typo
fe47e23 doc: correct default of ms_bind_port_max
d2eaeea AsyncConnection: fix incorrect condition for exchanging in_seq
ab6c65a mon/OSDMonitor: fix nan on 'osd df' variance
6fe509d mon/OSDMonitor: fix nan on 'osd df' use%
e070718 osdc/Objecter: do watch/notify op completions synchronously
1faa947 osdc/Objecter: remove unused on_reg_ack
9b6b7c3 Handle differently-named xmlstarlet binary for *suse
155a83c librados: rectify the pool name caching in IoCtxImpl.
293cd39 tests: run osd-scrub-repair.sh with make check
bae1f3e FileJournal: fix journalq population in do_read_entry()
15350a0 ceph_objectstore_tool: fix check_output on python2.6
86fd8c3 (origin/wip-10761) librados_test_stub: added new blacklist_add method
7ecf864 tests: update librbd tests to handle blacklisting
25d7ac2 librbd: optionally blacklist clients before breaking locks
9dfd4ac mailmap: UMD is University of Maryland
a616de9 librados: add blacklist_add API method
6a91f2b libradosstriper: fixed write_full when ENOENT
0514536 (origin/wip-opath-setattr) client: handle O_PATH fds on setattr too
636a269 (origin/wip-librbd-maint-tests) tests: add simple tests for proxied maintenance operations
9f2f306 (origin/wip-10785) librbd: ensure ImageWatcher notifications are idempotent
f86fb97 rgw: obj delete operation can use remove_objs param
538395d rbd.py: Add rbd_read2/rbd_write2 funcion which can handle fadvise flags.
7890256 librbd: minor ImageWatcher cleanup
debd7f3 tests: relax librbd ImageWatcher test case state machine
dfee96e (origin/wip-10770) rgw: send appropriate op to cancel bucket index pending operation
cbfa08e mds: disallow layout changes for files with data
b3fdf15 (origin/wip-cephfs-snap1) mds: avoid propagrating unnecessary snap rstat to parent
32b0892 mds: update client_need_snapflush when splitting snap inode
6cb9b01 mds: fix rdlock snap inode
d62c67c mds: save the oldest snapid of inode
8624172 qa/workunits/snaps: remove snapshots when test finishes
b66e749 mds: split old_inode when needed
a464558 qa/workunits/snaps: don't assume snapshot is disabled
244267b ceph: don't count snap dentries when calculating new fragstat/neststat
c31ed41 mds: add snaprealm to open_past_parents after it's opened
01ff547 mds: avoid infinite loop of SnapRealm::_open_parents
dda08a0 mds: properly commit snaprealm to dirfrag
966e108 mds: don't manully create snaprealm during rename
f3b61e6 mds: don't mark dirfrag dirty after dropping stale dentries
ad6f0cf client: remove snapshot dentry during rmsnap
087ccd6 client: remove snaprealm from parent when closing it
505a5f5 client: check xattr version independent of inode version
13d8475 mds: remove superfluous assertion
b0e0e1c mds: temporarily disable recovery for snapshotted files
572e42e mds: verify backtrace by auth MDS only
d8e3ce8 mds: avoid sending snaptrace for snapshot inodes
1a648cd mds: optimize SnapRealm::split_at()
ed422be mds: fix reference after free
4391cdd mds: journal snaprealm for all types of inodes
a0f51a2 mds: always create multiversion inode when cow inode
5f58c4c mds: check multiversion inode when purging stray
6cd044a mds: properly project past snaprealm parent while renaming files
335f02b mds: properly update trace vector when quiting path traverse
f192e2d mds: properly update capability's client_follow
dbf09af mds: fix CInode::remove_need_snapflush
1e53bcb mds: provide correct snaps to purge_stale_snap_data()
040d5c5 mds: set last snapid according to removed snaps in data pools
5e5052b mds: update current_parent_since for newly snapshotted directory
1d9de22 mds: fix MDCache::journal_cow_dentry()
32b1a9a mds: check snaprealm before drop dentries in deleted directory
1479300 mds: properly update CInode->first during journal replay
5b75e30 (origin/wip-10827) osdc/Objecter: linger_register now acquires rwlock
3cf7fcc install-deps.sh: check for debian/control existence
09c152a run-make-check.sh: git --ancestry-path is not backward compatible
400ac23 mon: ignore osd failures from before up_from
3fba9ac Bug fix : AsyncConnection: fix wrong scope of data blocks
bb18d01 xio: Squash the whitespaces
16897aa cmake: Fix CMakeLists.txt to compile librbd
1d68abb xio: Fix release xio message on closed connection issue
41611ea Unconditionally chown rados log file.
484a147 osd: apply affinity if any affinity is not default
fffa5e2 osd,mon: add norebalance osdmap flag
f911411 NetHandler: Lower connect failed log level
c252e05 AsyncConnection: fixup for 2ffacbe (crc configuration in messenger)
2b6b100 AsyncConnection: Don't delete event if fd < 0
a3fc9d4 AsyncConnection: fix wrong scope of data blocks
0db7c48 SubmittingPatches: clarify the use of branches in PRs
adebf22 rbd_recover_tool: move rbd_recover_tool directory to src/tools subdirectory
70ae314 (origin/wip-opath) client: fix O_PATH on older Linux systems
2f49de5 ReplicatedPG: block writes on degraded objects unless all peers support it
2a83ef3 include/encoding: fix an compile warning
71c6d98 msg: fixup for 2ffacbe (crc configuration in messenger)
2598fc5 (origin/wip-10734) ObjectStore: fix Transaction encoding version number
46f9ca4 (origin/wip-10782) pybind: fixed runtime errors with librbdpy
9124a76 (origin/wip-8600) test/vstart_wrapper.sh: set PATH before calling vstart.sh
189ef38 init-ceph.in: add $PWD to PATH if running as ./init-ceph
0d80691 qa: workunits: cephtool/test.sh: test 'ceph osd setcrushmap'
ff74873 mon: OSDMonitor: use CrushTester::test_with_crushtool
58ea017 crush: CrushTester: add test_with_crushtool()
481d563 tools: crushtool: allow '--infile -' to pipe read from STDIN
b2549a6 (origin/wip-export-dir) mds: implement export dir asok
190c7e3 client: implement support for O_PATH on Linux.
911e4c0 client: add support for O_NOFOLLOW in Client::open().
a7a6fe4 rbd-recover-tool: add usefull information of this tool include README, FAQ, TODO
ea69219 rbd-recover-tool: add a test case for raw image & snapshot
4f395eb rbd-recover-tool: implement the function framework add control files & config files
aa3cda2 rbd-recover-tool: add the basic function files
97abcdd (origin/wip-traceless-reply) mds: properly record created inode in completed requests list
419800f client: re-send request when MDS enters reconnecting stage
b66caef mds: avoid sending traceless reply for request that created new inode
d12d92d mds: process completed requests in clientreplay stage
0548bea doc: Removed references to Inktank suppport.
2d1803b (origin/wip-da-SCA-20150129) xio/XioMsg.h: use static_cast instead of c-style cast
babac0c doc: Removed Inktank reference.
0d46790 mds/MDS.cc: don't compare integer with bool
aa7c968 EventKqueue.cc: clarify calculation precedence for '&' and '?'
df161d3 XioMessenger.cc: fix dead pointer usage
32dde2f cls_rgw.cc: prefer ++operator for non-primitive iter
72a7d0c rgw_rest_s3.cc: prefer !empty() over size() for emptiness check
33b5c58 src/.gitignore: add new files, resort alphabetical
bb09695 xio: use static_cast instead of c-style casts
64b7c36 rbd-fuse.cc: use static_cast instead of c-style cast
8ec3f76 XioMessenger.cc: use reinterpret_cast instead of c-style
c82da17 ReplicatedPG.cc: prefer ++operator for non-primitive iter
e10417d CrushTreeDumper.h: prefer ++operator for non-primitive iterator
4ec700b EventOutput.cc: prefer !empty() over size() for emptiness check
db37ef0 rgw/rgw_rados.cc: prefer !empty() over size() for emptiness check
1836f28 osd/PG.cc: prefer ++operator for non-primitive iterators
5c55424 osd/Ager.cc: remove already in .h included header
8256cef AsyncConnection.h: remove twice included header, resort includes
d70676a common/Cycles.cc: reduce scope of variable
25995a0 cls/statelog/cls_statelog_*.h: init memvars in ctor
863dde2 common/escape.c: move cppcheck-suppress to correct lines
d8456c4 cls_log_ops.h: ctor init cls_log_list_op::max_entries
4421b55 src/os/ObjectStore.h: reduce scope of variable
3cf04b8 TestErasureCodeIsa.cc: fix reassign before use old value
86b7c38 os/ObjectStore.h: use reinterpret_cast instead of c-style cast
a91cd60 msg/async/EventKqueue.h: init 'size' in constructor
8652ec9 sync/EventKqueue.cc: fix possible null pointer dereference
46e81d3 ObjectStore.h: prefer ++operator for non-primitive iterators
699e869 test_librbd.cc: close va_list before return in error case
cf85fb0 dumb_backend.h: fix warning about self init
19d5de9 install-deps.sh: babeltrace is not on wheezy
c6a60d9 ReplicatedPG::do_op: ignore snapset_obc if !exists
5f51856 librados: fix race condition in rados_monitor_log().
510a1cc librados: fix message dropping in rados_monitor_log().
4e791f3 install-deps.sh: get lsb_release if needed
85cdd12 tests: add Dockerfile for fedora
65c7e07 doc/release-notes: v0.92
f4d6515 install-deps.sh: get lsb_release if needed
24349a8 (origin/wip-8903) librbd: removed lingering TODO message from ImageWatcher
17a8330 (origin/wip-10720) mds: fix leaked MDCache::logger
9e9356b librbd: fixed object map issues discovered via fsx
6071142 (origin/wip-librbd-watch-errors) librados_test_stub: added Rados::watch_flush
1b110a5 librbd: better handling for image watch errors
225a19f vstart.sh: fix .ceph_port typo
8d61c39 (origin/wip-librbd-invalid-map) librbd: prevent copyup during image shrink operations
be05d9d rdb: update init-rbdmap to fix duplicate mount point
fbcde04 cls_rbd: fixed object_map_resize boundary issue
14424c8 librbd: removing objects can lead to infinite loop
bb8c9ae librbd: pending AIO operations are now flushed asynchronously
60b019f Fix memory leak in python rados bindings
46f2d80 tests: RBD tests now check object map validity
d00891f rbd: add image flags to 'rbd info'
706a655 librbd: added get_flags API methods
16e4d71 cls_rbd: get_flags now reads all snapshot flags
7dd2de8 (origin/wip-10707) test/cls_rgw: fix test
e0f12d9 (origin/wip-autogen) Fix do_autogen.sh so that -L is allowed
cfab01e (origin/wip-10722) rgw: move perf cleanup before context cleanup
4074a91 pybind: fix error hiding and inconsistency on librados load.
cfcfafc Objecter::_op_submit_with_budget: add timeout before call
00a3ac3 (tag: v0.92, origin/wip-sam-v0.92) 0.92
c656bce PGLog: improve PGLog::check() debugging
05ce2aa qa: use correct binary path on rpm-based systems
eb526af (origin/wip-10709) rbd: watch command should unwatch before exiting
2a0e9b7 (origin/wip-optional-encoding) encoding: ignore uninitialized instantiation in boost::optional decode
f40ee8c (origin/wip-lttng) do_autogen.sh: default to --with-lttng, -L to build without
7590387 (origin/wip-assert-version) librados: add missing tracepoints
57bac8e osd:  change pg_stat plain to display CRUSH_ITEM_NONE in pgmap output section.
4aa9f3f man: add rbd status to doc/man/8/rbd.rst
a007c52 doc: add cephfs disaster recovery guidance
9dbd37b test: add rbd status to src/test/cli/rbd/help.t
6fc0b80 rbd: add status command to list the watchers of an image
4be91c6 add CLI ceph pg ls-by-primary
2ac116e add tests for ceph pg ls
a1f634b add CLI ceph pg ls [pool] [state]
1c164cf get pg status with specific pool, osd, state
0e046bd add is_acting_osd function to check if pg is on that osd
34473f7 librados: rectify the guard in RadosClient::wait_for_osdmap().
624c056 librados: fix resources leakage in RadosClient::connect().
65fbf22 librbd: RemoteAsyncRequest: fix comparison operator
1cf30e6 rbd: use IO hints for read/write operations
bd8671f ceph_test_rados: fix typo
ac161bf librados: expose rados_{read|write}_op_assert_version() in C
11b6424 Add test case for librados assert_version()
eb45f86 (origin/wip-10106) rgw: flush xml header on get acl request
de2e5fa (origin/wip-10572) rgw: finalize perfcounters after shutting down storage
cab246d librbd: Don't do readahead for random read.
77689f1 ReplicatedPG::C_ProxyRead: fix dropped lock
0e3af8d ReplicatedPG: only populate_obc_watchers if active
b31221a OSD: allow recovery in peered
818b91b osd/: go "peered" instead of "active" when < min_size
e5a96fd PG: move most of all_activated_and_commited into the AllReplicasActivated handler
5911b45 PG::proc_master_log: assume les and history.les from log source
c4793ab osd_types: add last_peered, last_became_peered
63e5f57 PG: break waiting_for_peered out of waiting_for_active
96c3af8 PG: remove very obsolete comment about backfill_pos
aac4c25 osd/: add state PG_STATE_PEERED
abd1154 doc: add documentation for undersized
1f165d2 ReplicatedPG: block writes on degraded objects for ec pools
964d177 append_log: use remove_snap_mapped_object
0a32d3b ReplicatedPG::agent_maybe_evict: take write lock, skip on failure
721c878 ReplicatedPG: if we got ENOENT and an obc, we need to check the locks
a81f3e6 ReplicatedPG::get_rw_locks: use excl lock for read & write_ordered
a8e041f osd_types: add excl obc lock
e00daf5 ReplicatedPG::cancel_pull: drop_recovery_read lock
f5134c8 ReplicatedPG::wait_for_unreadable_object: use prep_object_replica_pushes instead of recover_missing if not missing
a74296f PG::purge_strays: purge peer_missing as well
f9abffb osd/: don't block writes on degraded objects
c632fec osd/: update peer_missing and local missing if we write a degraded object
56b8fc8 ReplicatedPG: always take recovery_read_lock for recovery
1c25dba (origin/wip-10701) rgw: use strict_strtoll() for content length
b1435e6 xio: Enforce at least two portals if bind
cbf0691 (origin/wip-10698) rgw: fail s3 POST auth if keystone not configured
10ddab8 doc: Fixed hyperlink.
a0a5185 rgw: Response 204 when post on containers
b7ab624 xio: Remove whitespace changes
7c80248 ObjectCacher: Only r >= 0, it need the read data.
ef48a70 osdc: only external_call can touch object.
ed209a5 osdc: For read w/ DONTNEED, if read data contain all cached data, move this object into the tail of LRU.
3dca5ef osdc: Make ObjectCahce can hanle read with DONTNEED.
3d38e1f osdc: touch hit bh although there are missing or rx bh.
3687dcb osdc: Make ObjectCahce can hanle write with DONTNEED.
28e73a7 osdc: Make ObjectCache can accept fadvise_flags.
fc76c89 osdc: add new filed dontneed in BufferHead.
3373249 Fix ReplicatedPG do_xattr_cmp_u64
2113524 Add tests for ceph dmcrypt encryption
998b461 Change ceph-disk default to use LUKS for encrypted partitions
c83a288 Rework ceph-disk to allow LUKS for encrypted partitions
707c78b Only create a key of 256 bits length, not 256 bytes
6a45b8e add all possible ceph-disk run-time requirements to build time deps
4c50f6a (origin/wip-rgw-versioning-4) rgw: more merge related fixes
01cc9d5 rgw: fix merge artifact
e26023e PG: set scrubber.start = scrubber.end after scrub_compare_maps
4f9e6ed PG: remove block_writes from scrubber
bed22b4 doc: improve incomplete state documentation
89bd6b1 (origin/wip-hints) librados: rename NOREUSE to NOCACHE
8571739 (origin/wip-10688-boost-157) support Boost 1.57.0
f623906 (origin/wip-pg-reqids) osd/PGLog: only do slow extra_reqid search of object appears at least once
eefdb32 osd: preserved extra_reqids on promote, flush
4d310a8 osd: preserve extra_reqids in PGLog
2ad229c osd: allow extra reqids to be stashed in each pg_log_entry_t
ca71376 cls_rgw: fix rgw_bucket_olh_log_entry::epoch initialization
61378f2 add pg_string_state function
4feb864 (origin/wip-10194-master) rgw: reuse fcgx connection structure
32b9bb7 QueueRing: a reduced contention queue
ecd5e5a test/encoding/types.h: add new structs for testing
5849380 cls_rgw: add missing struct test instance generator
4184387 cls_rgw: fix encoding for cls_rgw_obj
5808c77 rgw: don't call send_response() explicitly
1859239 rgw-admin: set explicit "null" instance when needed
0ace0f5 rgw: fix a crash when getting ECANCELED in delete_obj()
00f21d8 workunits/rgw: adjust radosgw-admin output parsing
b685baa workunits/rgw: set radosgw-admin location through env variable
2e3f75f rgw: don't clear olh log if we lost in race
9c8424f rgw: guard olh modification
caefe69 rgw: version id should not contain underscore
0b9859b cmake: Fix CMakelist.txt to compile librbd, libcommon
51dd9b2 xio: Spread and accept connections using different portals
e761b74 async: directly call delete without check
68c6f0e (origin/t-miyamae-wip-mshec-r44) mSHEC r44 initial commit
e45e97b run-make-check: use nproc and shorter git expression
0a998f5 edited failure conclusion
4527e8f corrected some confusing numbers
94b60c5 osd: don't log op stats for proxy read in the cache tier
a66898f cleanup : remove unused perf counter
a871651 (origin/wip-4087) librbd: object map updates should use AIO
4328069 test: correct two issues with the librados_test_stub
b63246f librbd: refactor existing object map code to its own class
f4b9442 cls_rbd: object_map_resize shrink protection
91f24f3 librbd: copy-on-read should update the object map
8fa3767 rbd: only enable object map if enabled in ceph config
9aad59d librbd: Protect object map updates with a lock assertion
719515a librbd: Use RBD image flags for invalid object maps
8571e47 cls_rbd: Add support for image flags
a41878a librbd: Use object map for IO operations
7e751ce librbd: Implement object map for tracking in-use objects
13fd6d1 cls_rbd: Add methods for manipulating an image object map
ca214c9 (origin/wip-8251-2) rgw: also convert sharded replicalog entries
0a4956e rgw: get rid of replicalog index_by_instance param
c4a6eab rgw: fixing rebase casualties
791c15b rgw: convert old replicalog entries if needed
778a53a rgw-admin: add replicalog update command
1cb10d7 async: add same behavior when message seq mismatch with simple
8d56ade (origin/wip-librbd-tests) tests: ensure RBD integration tests exercise all features
b6d6f90 (origin/wip-mdsmon-args) mon/MDSMonitor: fix gid/rank/state parsing
9b9a682 msg/Pipe: set dscp as CS6 for heartbeat socket
1e236a3 mds: don't join on thread which has not been runned.
6939e8c (origin/zhouyuan-submodule_https_git) Update git submodule to use the same https protocol
e393810 librbd: make librbd cache send read op with fadvise_flags.
a23676b librbd: Don't do readahead for random read.
8d0295c rgw: extend replica log api (purge-all)
6b0151c utime: extend utime parsing
e274e10 rgw: fix replica log indexing
0be7925 (origin/wip-fuse-regress-note) Update PendingReleaseNotes for ceph-fuse change in Giant
77bd883 test_msgr: add auth enabled basic test
408db65 async_msgr: crc configuration in messenger
ce941f6 async: Delete authorizer when connected
a8e2579 (origin/wip-perf-filter) common: filtering in `perf dump`
e5ddc50 tests: bring back useful test 'ceph tell osd.foo'
7c59bc0 cleanup: replace some length() with !empty()
17add06 cleanup: replace some size() with !empty()
9a9670c tests: better EPEL installation method
bf05ec1 (origin/wip-gmock) tests: replace existing gtest 1.5.0 with gmock/gtest 1.7.0
5301b2b (origin/wip-10637) librbd: trim header update not using AIO
5cbe0c5 gmock: use Google C++ Mocking Framework for unit tests
ca1d21e (origin/wip-install-deps) install-deps: fix LC_ALL setting
e4a97c6 librados_test_stub: add IoCtx::get_instance_id()
f6406c9 qa: small improvements to merge-diff test
4e88414 rbd-fuse: clean up when shutdown
75bdfec librados: fix typo in docs
4ac3cd7 librbd: throttle async progress callbacks
cd9d8eb librbd: add more robust retry handling to maintenance ops
1b6467b librbd: assert header lock ownership for maint operations
71e84e0 cls_lock: New assert_locked operation
376c7e0 librbd: Coordinate maintenance through exclusive lock leader
dfa96c5 librbd: Add maintenance operation requests to ImageWatcher
e6f1280 librados: Expose RadosClient instance id through librados
398bc96 librbd: Create async versions of long-running maintenance operations
87ef462 rgw: format mtime of radosgw-admin bucket stats
dc1630e (origin/wip-librbd-trim-error) librbd: trim would not complete if exclusive lock is lost
3347e0d bug: error when installing ceph dependencies with install-deps.sh
4e90a31 (origin/wip-10617) osd: add failure injection on pg removals
9b220bd ceph.spec.in: use wildcards to capture man pages
51e3ffa rgw: reorder bucket cleanup on bucket overwrite
313d6a5 rgw: access appropriate shard on bi_get(), bi_put()
b304af3 librbd: clean up log message for copy-on-read
879fd0c osd: do not ignore deleted pgs on startup
6f6facb (origin/wip-librbd-close-deadlock) librbd: potential deadlock on close_image
bda293a librbd: fix copy-on-read / resize down race condition
e917033 test: add rados_nobjects_list_xyz functions to librados test stub
7c7f072 librbd: eliminate CoR callback
9790b0f librbd: use finisher for copy-on-read copyup fulfillment
cfce41d ReplicatedPG::hit_set_persist: update ssc->snapset as well
f1f6f0b ReplicatedPG::hit_set_persist: write out oi.digest, these objects are immutable
4dda030 (origin/wip-noreuse) librados: add FADVISE_NOREUSE
9edd0a5 ceph.spec.in: move rgw logrotate to rgw subpackage
050a59e osd/OSDMap: remove unused variables
55dfe03 (origin/wip-4092) librbd: schedule header refresh after watch error
33f0afd doc: Some files still use http://ceph.newdream.net
2f9b3bd ceph-debugpack: fix bashism of {1..10}
5652a1d cls_rgw; fix json decoding and encoding of certain type
f9d82e6 test: Add --write-fadvise-dontned option to ceph_test_rados
075c604 librados: Fix error comment.
f710984 mon: Add "ceph osd pool set/get write_fadvise_dontnned" command
d26fe35 pg_pool_t: clean up code.
0f56b47 ReplicatedPG: handle OSDOp with pg_pool_t::FLAG_WRITE_FADVISE_DONTNEED.
ec3f79d osd: Add pg_pool_t FLAG_WRITE_FADVISE_DONTNEED
376b585 rgw: generate version ids that don't change when urldecoded
65f2871 rgw: hash bucket shard by original object name, not transformed
a9c882f ReplicatedPG: Remove the duplicated code.
67c4637 ReplicatedPG: Add some mark_delay events.
5548bbe rgw: use bucket shard for olh operations
fff3cf9 ceph.spec.in: capitalization and punctuation
e4b5bed rgw: api adjustments following a merge
c71ecae mon/OSDMonitor: validate crush features for osd (not just mon)
4621236 PGBackend: rename clear_state to clear_recovery_state
cd7ed04 osd/: s/backfill_read/recovery_read for obc locking
27dcb14 osd/: pass log_entries in write path as const ref
9650403 PG::add_log_entry: no need to 0 offset in append_log
6a025ef PGLog: trim mod_desc after appending to the log
a6eadae rbd image_read.sh: disable exclusive locking
f51ff28 vstart.sh: pull default CEPH_PORT from .ceph_port
35fcb04 (origin/wip-crush-straw2) Change crush_ln to provide 32 more digits.
6289912 crush: improve straw2 adjustment slightly
32a1ead Add crush_ln to calculate nature log efficently
0eca13d crush: fix dump for hammer tunables
7023eab crush: add allowed_bucket_algs tunable
325fc56 crush: introduce CRUSH_V4 feature bit
242293c crush: add a straw2 bucket type
6e084f6 unittest_crush: rename straw tests
d4ec757 crush: move default bucket choice into CrushWrapper helper
14eb1a7 crush/builder: fix warnings
07eadc4 (origin/wip-10474) FileJournal: Fix hang in FileJournal::close()
2865e13 doc: Change Availability text in all of the man pages
b04f698 Doc: Fix the extra blank space in doc/start/quick-rbd.rst
9930028 (origin/wip-mon-pgtemp) osd: OSDMap: remove pg temps for inexistent pools
34f5c17   use shardid as a key of the shardinfo when "dump_op_pq_state".   Signed-off-by: huangjun <hjwsm1989@gmail.com>
804deec Fix memstore free space caculation
6239151 RocksDBStore: filterpolicy is not deleted when RocksDBStore destructs
2e8bb1e (origin/wip-10614) test/librbd/fsx.c: disable RBD exclusive locking for krbd
9ad9ba8 doc: Fix a typo in radosgw-admin doc
008698b doc: Change Availability text in all of the man pages
6f44f7a Revert "Revert "Merge remote-tracking branch 'origin/wip-bi-sharding-3' into next""
90a90bb (origin/wip-rgw-versioning-3) rgw: set default value for swift versioning extension
dc11ef1 PGBackend: fix and clarify be_select_auth_object
26656e3 rgw: fix bucket removal with data purge
b18b14b ObjectStore::_update_op: treat CLONERANGE2 like CLONE
4d3b49e rbd: ensure aio_write buffer isn't invalidated during image import
500f4b4 rgw: assign versioned_epoch on bucket listing response
8cbfac4 Wrong HTTP header name
a0af5de (origin/wip-10579) qa: move fs quota to its own dir
2ce38db osd: fix some compile warning
b9be97f Doc: Fix the typo in doc/rbd/rados-rbd-cmds.rst
fe93f73 test: fix rbd cli tests for new feature bit
946958c qa: disable automatic locking for manual locking test
c68ecc7 xio: Enable xio option to call fork init
b1b299d osd: revert d427ca35404a30e1f428859c3274e030f2f83ef6
46347fc osd: Transction::append SHOULD NOT modify other.op_bl
988d007 ReplicatedPG::on_change: clear cache at the end
8453f71 (origin/wip-10555) mon: Do not allow empty pool names when creating
68af510 ceph-disk: do not reuse partition if encryption required
48963ba test_msgr: Rename unittest_msgr to ceph_test_msgr
b311e7c (origin/wip-10257) mon: PGMonitor: skip zeroed osd stats on get_rule_avail()
8be6a6a mon: PGMonitor: available size 0 if no osds on pool's ruleset
e84f27e doc: Replace placeholder with 'gateway'
190c185 librbd: copy-on-read   Addressed Jason's review comments.
8c47800 librbd: copy-on-read   Asychronously perform copyup on read path.   Sychronously perform copyup on write path.
f408c8e librbd: copy-on-read for clones, write entire object into child asychronously
701a248 librbd: copy-on-read for clones, read entire object from parent
541637d librbd: copy-on-read for clones, add an option for copy-on-read
88b1032 Introduce the term MON at http://ceph.com/docs/master/rados/
08faee0 doc: mon should be listed before osd
6b1c92c Doc : Documentation#10205
b8dd228 doc bug 10206
9147c62 (origin/wip-10576) ceph_test_rados_api_misc: do not assert rbd feature match
6d209c2 rgw: cors set attrs on bucket using appropriate call
2c36798 rgw: switch index ops to new apis
11befab rgw: break if done when timing out pending olh ops
0b6300d rgw: start pending entries attr name by timestamp
f51a5a9 cls_rgw: user swap() instead of assignment operator
e23a32d rgw: fix unitest compilation
03f2d0c rgw: handle 'null' instance when setting delete marker
6931132 rgw: fix setting of versioned epoch when removing object instance
0bf6991 rgw: add bucket index log flags, use these for marking versioned ops
2718ecc rgw: fix use of rgw_remove_object() versioning_status param
dd7ffdb rgw, cls_rgw: log versioned operations in bucket index log
eaf19a5 cls_rgw: cleanup, add read_bucket_header()
b999bc7 cls_rgw: fix rgw_bi_log_entry::dump()
7a090be cls_rgw: bound bi log listing appropriately
842da1f rgw: only retry on ECANCELED before doing the operation
bfb5068 rgw: fix olh guarding scheme
2a9a193 rgw_admin: don't reuse -o command line option
9169569 rgw: multi object delete sends delete marker info
f1f9a5f rgw: delete obj, handle null instance in all paths
fa7afd1 rgw: when deleting object version return -ENOENT if needed
c4cf0e2 cls/rgw: when removing delete marker, clean up instance entry
e8afa65 rgw: multi object delete supports versioning
9b31a83 rgw: break out of inifinite ECANCELED state
12ef0ac rgw, cls_rgw: conditionally remove olh object
b664903 rgw, cls_rgw: clean up olh artifacts when dropping last version
ecd5496 rgw: dump versioned epoch on system user bucket listing
cecea50 rgw: only set olh attr on actual olh object
d707db2 rgw: no need to set tag on object we're removing
4e82209 cls_rgw: only maintain object if there are preserved xattrs
85aa725 rgw: limit print length of bufferlist buffer
fc99601 rgw: multipart meta object shouldn't be versioned
3dd6994 rgw: remove clutter
7024ebd rgw: fix caching for remove_system_obj()
8cf22f7 rgw: fix get_system_obj() caching
fe158ec rgw: use correct objv_tracker for bucket instance
8f5e073 rgw: allow setting of explicit object version on non-versioned bucket
630c0ba cls_rgw: don't increase epoch when converting plain entry
6a05cc1 rgw: fix a few regressions
38b9352 rgw: move versioning handling to Object::Write::write_meta()
9b88af6 rgw: copy obj does versioning too
0903502 rgw: propagate version id when putting obj
b947c7c rgw: cleaup RGWRados::copy_obj()
8787b92 rgw, cls_rgw: provide optional version id, versioned epoch to olh ops
37d15f2 cls_rgw: link, unlink olh ops can get epoch
aa0667d cls_rgw, rgw: pending_log can hold multiple entries per epoch
d57cdd0 rgw: parse copy location version id
6c08f58 rgw: reduce use of Object::get_obj()
b4f3de0 rgw: Object::Read operations should use state->obj
37856d0 rgw: Object::Read::read() returns total bytes read
333f8d2 rgw: time out pending olh entries
445a4ac cls_rgw: don't write list entry when converting when deleting
2093aab cls_rgw: revise null object instance handling, versioned epoch
bda1561 rgw: read bucket owner when following olh if pending entries
aa888ab rgw: remove warning
3de35d8 rgw: remove unused code
90ed9a2 cls_rgw: clean up compilation warnings
56787ff cls_rgw: implement dump() and generate test instances
79bb0fd cls_rgw: guard certain operations using olh tag
01b8e61 rgw, cls_rgw: improve olh atomicity
3f29f0a rgw: encode timestamp in pending olh info
16f1b24 cls_rgw: remove instance entry when removing delete marker
a871a8d rgw: send x-amz-version-id and x-amz-delete_marker header fields
5e82500 rgw: add dump_string_header()
5ab83ef cls_rgw: add missing cls_cxx_create()
9e65570 rgw, cls_rgw: fix update of olh to reflect non existing object
33b19e7 cls_rgw: inc olh epoch when updating log
3e48a49 rgw: fix access to object through the null instance
b8b832b rgw: adjust versioning enable/suspend api
ba34ecf rgw: propagate object owner and mtime for deletion marker
7f13928 rgw, cls_rgw: multiple changes related to obj removal
0a3df98 rgw: send "null" version id if needed
5bca3b9 formatter: no need for dynamic allocation
4f622cc osd: fix filter_prefix scoping in omap_get_vals
3593b6c rgw, cls_rgw: add bi put
a8180ba cls_rgw, rgw-admin: create bi list operation
de3c5ec cls_rgw, rgw-admin: move bi_get() entry encoding to cls
cec02f9 cls_rgw: add missing flags encoding to rgw_bucket_dir_entry::dump()
75b9050 common, rgw: json escaping gets input buf size
9c347b9 rgw-admin, cls_rgw: add bi_get objclass operation
7013901 cls_rgw: keep null-versioned object as versioned object
ed1813d rgw: follow olh where needed
bb8365a rgw: unlink obj instance
55877be cls_rgw: unlink object instance
a6d65bb cls_rgw: update olh log when unlinking entry
89f9372 cls_rgw: more cleanup
fd9bffe cls_rgw: more cleanup
ca3104b cls_rgw: reorganize rgw_bucket_link_olh()
47f2bff rgw: convert RGWRados::get_attr() to new interface
9ec08b5 rgw: switch get_obj_iterate() to new interface
8d7c882 rgw: remove unused code
b0cc9e4 rgw: purge intent log
7f5c010 rgw: adjust to new interfaces
5c3985f rgw: s/RGWRados::ObjectCtx/RGWObjectCtx
7788daa rgw: clean up system obj interfaces
d32d945 rgw: change RGWRados::get_attr()
cd8c60e rgw: rework prepare_get_obj(), get_obj()
8ccf603 rgw: remove more unused code
4855c87 rgw: fix missing state initalization
71afabf rgw: switch RGWRados::delete_obj() to new interface
e3a4898 rgw: remove unused code
c5eb6f7 rgw: remove old index update calls
b771524 rgw: get rid of put_obj_meta(), replace with put_system_obj()
99cc362 rgw: don't use put_system_obj() for data objects
aec13bd rgw: pass around object context refrences, remove unused code
db143ea rgw: remove plain object processor
ce2abde rgw: start reorganizing RGWRados
ffee996 cmake: Fix CMakelist.txt to remove depleted files
d53275c ceph_test_objectstore: fix keyvaluestore name
738f868 PGBackend: do not update oi digest on inconsistent object
8ab3c41 osd: new pool safeguard flags: nodelete, nopgchange, nosizechange
6613358 Revert "Merge remote-tracking branch 'origin/wip-bi-sharding-3' into next"
66f3bd6 (origin/wip-recover-dentries) tools: output per-event errors from recover dentries
3e15fd5 tools: handle hardlinks in recover_dentries
9d91757 tools: recover_dentries efficiency
e2ae91f tweak comment wording in recover_dentries
5f34831 fixup some oversized lines
1dc023b fix handling of io.read retval
d94a7a8 tools: remove duplicated InoTable encoding
478659f JournalTool: handle corrupt fnodes
36830eb tools/cephfs: add recover_dentries to journaltool
46326ff (origin/wip-10388) mds: perfcounters for RecoveryQueue
62b4e43 mds/MDCache: stray/purge perfcounters
4bd0894 Doc: rbd-snapshot: Fix the typo
07e1d18 rbd: fix bug about rbd watch command
bbaf582 mon: handle case where mon_globalid_prealloc > max_global_id
d29aef5 doc: Fix OpenStack Glance configuration
1d1215f mon: change mon_globalid_prealloc to 10000 (from 100)
be1416a mon: silently ignore mark_down, mark_disposable on AnonConnection
b5e1bd1 (origin/wip-osd-df) mon/OSDMonitor: pull totals into the table format
169d680 mon/OSDMonitor: don't -nan for variance when no osds
9aa0006 common/TextTable: do padding during final step
ea5166e mon/OSDMonitor: drop unnecessary stringify
8a0d124 crushtool: fix cli tests for new tree output
4698882 osd/ReplicatedPG: skip all of maybe_handle_cache if caching is off
04c09ed crushtool: add --tree option
871c3ec crush/CrushWrapper: drop weights from crush dump_tree
86729e7 osd, crush: caps for headers
022950e crush/CrushTreeDumper: add missing close_section
7a04518 crush, osdmap: use weightf_t helper for all weights
9e22f61 osd: use TextTable for osd tree command output
1d984a5 osd: use weightf_t type when outputing weights by osd tree command
4bae3a8 mon: ceph osd df -- a new command to show OSD utilization
b42c7e2 Add a type (weightf_t) to output float weights.
3e2eaa4 osd: use CrushTreeDumper for printing osd tree.
3f9b4d1 crush: use CrushTreeDumper for dumping crush tree.
26921f4 crush: introduce a helper class for dumping crush tree.
4d0e0ae AsyncConnection: Fix memory leak for AsyncConnection
78b040c rgw: s/RGWRadosCtx/ObjectCtx
fa5f832 rgw: move RGWRadosCtx into RGWRados
559e705 rgw: set olh if object has been versioned
3b1ea1d cls_rgw: allow olh linking to null instance objects
1d49393 rgw, cls_rgw: don't remove olh objects
b1dd4a7 rgw: initial versioned object removal implementation
8d25ec6 rgw: bucket versioning status is tri-state
1488c03 rgw: add support for version-id-marker
4dadae3 rgw, cls_rgw: cls_bucket_list returns raw key in map
cd13c5a cls_rgw: update the appropriate prev key entry
674a754 rgw: fix rgw_obj initialization
7f26ab7 rgw: request state and various op functionality use rgw_obj_key
1dcdea3 rgw: cleanup, get rid of req_state::object
debee80 rgw: restful api now dumps versions
105ba48 rgw: propagate dirent flags to rgw (from cls), other fixes
5dfe152 cls_rgw: deletion marker needs to keep instance entry
9e3065b rgw, cls_rgw: list object versions is optional
9cf200c rgw: bucket listing gets extra param for versioning
bb649ff cls_rgw: revise the data model
bde5a8a rgw: add get_type() to rgw ops
337e523 rgw: add 'versioning', and 'versions' to handled subresources
303db77 rgw: object manifest should reflect instance
8819b38 rgw: update json encoding for rgw_obj
983c68e rgw: follow olh if needed
bc4dd1f cls_rgw: olh trim op is read/write
7a08619 rgw: tie set_olh() to object completion
cb94d55 rgw: more atomicity fixes, set_olh()
bf9d319 rgw: guard against racing writes
fb45e05 rgw: olh atomicity groundwork
67b73a9 rgw, cls_rgw: trim olh log functionality
1802136 rgw: apply olh log functionality
b5c54f0 cls_rgw: olh init op
d669a7e rgw-admin: add olh readlog command
2d86a68 rgw: implement rgw_bucket_olh_log_entry::dump()
b11551e rgw: new api to retrieve olh log
b2490b5 rgw: bucket index link olh interface
da05386 cls_rgw: object instance olh linking
bf11594 cls_rgw: bucket index link olh
038073f cls_rgw: encode / decode obj and list index keys
928b256 cls_rgw: prepare groundwork for olh
16b5c82 rgw: obj_stat() follows on olh
f32ceae rgw: some code cleanup
988310c rgw: init olh tag
d139f8d rgw: gen rand lowercase string (stl string version)
da98d13 rgw: adjust return code when generating random strings
f6bb825 rgw: gen rand lower alphanumberic string
57629b3 rgw: initial olh implementation
cb65826 rgw: remove old unused code
b2ea8e8 rgw: interface adjustment following a rebase
68af4a2 rgw: generate random instance id
6979c70 radosgw-admin: some commands use object_version param
8941d6f rgw: clean up some locator use
6c930f9 test: cls_rgw fixes
3697803 radosgw-admin: adapt to new interfaces
54f2e0a rgw: adapt to new objclass interface
840b086 cls_rgw: change data structures to keep single object key structure
fe435a6 rgw: rename cls_rgw_obj::key to cls_rgw_obj::loc
cb3694f rgw, cls_rgw: various datastructures use new rgw_obj_key
99da88c rgw: rename rgw_obj::key to rgw_obj::loc
45586aa rgw: decouple object name from index representation
201467d rgw: remove unused code
20c45eb rgw, cls_rgw: add accounted_size for object metadata entry
b383b52 rgw: enable s3 get/set versioning ops
7cd5e9d rgw: restful op to set bucket versioning
0d97b40 rgw: get bucket versioning status op
8ed79d6 rgw: add versioning_enabled field to bucket info
50547dc mon: PGMonitor: fix division by zero on stats dump
dbaa142 (origin/wip-bi-sharding-3) rgw: bilog marker related fixes
c4548f6 (origin/wip-10439) pybind: ceph_argparse: validate incorrectly formed targets
80a9d99 (origin/wip-mon-fixes) mon: Monitor: return 'required_features' on get_required_features()
ab996c1 mon: Elector: output features in handle_propose()
bb48ebe mon: Elector: put dangling message reference
0a369b9 mon: mkfs compatset may be different from runtime compatset
6b982e4 mon/OSDMonitor: require mon_allow_pool_delete = true to remove pools
b20ea5a tests: centos7 needs nc to run make check
3ee69e3 osd: fix journal header.committed_up_to
e85197c test: add test for osd scrub
f4b94e0 osd: support schedule scrub between some time defined by users
881fe33 test: Using different filename for different test case.
1511198 Striep: s/OSDExtent/ObjectExtent
bb582d9 librados: clean up code.
7cfdba2 librbd: clean up code.
7372ac7 crush: move two crush tests over
ddb91b2 crush: rename unit tests
7e1553c (origin/wip-10553) rgw: fix partial GET in swift
e7d5fdd (origin/wip-10552) client: fix getting zero-length xattr
97c1881 osd/PG: do not republish unchanged pg stats
d2e1049 osd/PG: avoid most of publish_stats_to_osd for non-primary
65d3342 osd/osd_types: add operator== for pg stat types
2f31606 (origin/wip-cephfs-tabletool) tools: create cephfs-table-tool
b8ffe5c mds: give MDSTables a `rank` attribute
ea153c3 mds: abstract SessionMapStore from SessionMap
d8d608d erasure-code: update links to jerasure upstream
dac666f erasure-code: tests use different pool/profile names
02cab93 documentation: add troubleshooting erasure coded PGs section
8b64fe9 erasure-code: set max_size to chunk_count() instead of 20
2f87ac8 crush: set_choose_tries = 100 for erasure code rulesets
4d07a32 crush: update tries statistics for indep rules
6c34528 erasure-code: update jerasure/gf-complete submodules
fc01b01 doc: add cases where ceph-extras is not needed
2dc29de (origin/wip-9780-9781) ceph-objectstore-tool, test: Fix objectstore name changed to keyvaluestore
0c5b66d osd: Get pgid ancestor from last_map when building past intervals
7fb721c osd: Pass oldest_map when generating past intervals
b9a0484 osd: build_push_op() handle short reads so recipient doesn't crash
05d916e ceph_objectstore_tool: For import get object_info_t available for each object
afda6e4 ceph_objectstore_tool: Handle import of pg which OSD has split
68b27e2 ceph_objectstore_tool: On import following a split skip objects no longer in pg
da3be80 ceph_objectstore_tool: Verify that object pool and pgid pool match
f34b930 ceph_objectstore_tool: Fixes to not encode OSDMap due to CRC checking
19fdeea ceph_objectstore_tool: Check for splits and fail import if there were splits
b1f12f0 ceph_objectstore_tool: Add special exit code for test infrastructure
f24f646 ceph_objectstore_tool: Check that pool exists before allowing import
196c811 ceph_objectstore_tool: Check cluster_fsid before allowing an import
62dd912 ceph_objectstore_tool: Allow the metadata_section to be anywhere in the export
f727d2e ceph_objectstore_tool: import-rados shouldn't import internal namespace objects
ddc4613 ceph_objectstore_tool: Get g_ceph_context available to import-rados
fe93602 ceph_objectstore_tool: Fix import-rados skipping of snapshots
5cb6925 ceph_objectstore_tool: read_fd() doesn't handle ^D from tty stdin, don't allow
3de2d3b ceph_objectstore_tool: validate pgid before calling PG::_has_removal_flag()
22b7174 ceph-objectstore-tool: Remove --pretty-format and use new --format options
80473f6 os/FileJournal: Fix journal write fail, align for direct io
cc0dba5 mon: encode stashed monmap with all features
7bb7b1e AsyncConnection: Fix deadlock if socket failed when replacing
bd627e7 Event: Fix typo
f7f25b4 AsyncConnection: Don't increment connect_seq if connect failed
898d43d async: adjust test_msgr and normalize log output format
296e545 AsyncConnection: Fix replacing cause original state lossy
2bc1675 AsyncConnection: Don't discard out_q and unregister when replacing
c65df9b test_msgr: Add SyntheticInjectTest
a75ac0e AsyncConnection: Add ms_inject_* to AsyncConnection
50771dd AsyncConnection: Enhance replace process
a175390 AsyncConnection: set state_offset=0 in case of reuse this connection
2f92383 Event: Fix incorrect memset
4b900a6 test_msgr: Add SyntheticWorkload to do message measurement
e823af4 AsyncConnection: Don't alloc buffer when reenter "READ_FRONT" state
9fc24d4 test_msgr: Add test for a message with large payload
34cbd4c AsyncConnection: Avoid calling callback after delteing AsyncMessenger
9a84a90 test_msgr: Add random usleep to Dispatcher impl
e7db911 AsyncMessenger: wait for dispatch event done
e84d134 AsyncConnection: Add omissive STATE_WAIT state
cb3e1bf AsyncConnection: Adjust backoff wakeup granularity
44a0189 AsyncConnection: using send_keepalive instead of _send_keepalive_or_ack
a98b9e2 AsyncConnection: Fix mark_down race condition
24fd12f MessengerTest: Add markdown with caller lock tests
abb4e68 AsyncMessenger: Retry binding on addresses if binding fails
0a7c331 AsyncMessenger: allow RESETSESSION whenever we forget an endpoint
d93bdad AsyncConnection: Using buffer read to avoid small read overhead
8d2af2f AsyncMessenger: Using EventCenter instead of poll for bind
f4fcff1 AsyncMessenger: Bind async thread to special cpu core
0aeba0f ceph_objectstore_tool: Describe super_ver values
d91fe8b test_shared_cache::get_next: fix get_next call on uninitialized value
37dc423 shared_cache: reduce duplication between get_next's
9db5969 fix command 'ceph pg dump_stuck degraded'
3408156 (origin/wip-mon-drop-conversion) mon: Monitor: drop StoreConverter code
1d814b7 ceph_mon: no longer attempt store conversion on start
447d469 (origin/wip-9440) mon: Monitor: health to clog writes every X seconds on the second
ae1032e mon: Monitor: cache 'summary' string to avoid dups on clog
fcd7aa0 mon: Monitor: reset health status cache on _reset()
81a2faf mon: Monitor: write health status to clog every X seconds
e2d66ae mon: Monitor: 'get_health()' returns overall health status
7ce770d mon: Monitor: health summary to clog on get_health()
889969e (origin/wip-fail-idempotent) mon/MDSMonitor: make 'mds fail' idempotent for IDs
b957fa8 (origin/wip-10547-formatter) tests: adapt to new json-pretty format
97609a3 test: rename test_activate_osd
8d8ce96 common: restore format fallback semantic
e9aeaf8 mailmap: Loic Dachary name normalization
d80ded9 mailmap: David Zhang affiliation
4b47886 ReplicatedPG: on_chnage: clarify object_contexts.clear() comment
33ba23f common/shared_cache.hpp: empty() iff weak_refs is empty
d532f3e remove unused hold_map_lock in _open_lock_pg
9748655 man: add help for rbd merge-diff command
6986ec1 (origin/wip-10477) osd/PG: populate blocked_by with peers we are trying to activate
5b0e8ae mailmap: Yehuda Sadeh name normalization
3f03a7b doc/release-notes: v0.91
4ca6931 doc/release-notes: typo
e7cc611 qa: ignore duplicates in rados ls
e5591f8 (origin/wip-10539) qa: fail_all_mds between fs reset and fs rm
26a2df2 mailmap: Josh Durgin name normalization
d6a9d25 doc/release-notes: v0.80.8
45e9cd5 Fix make check blockers.
daefad7 xio: enable accelio debug on level 2
aa5f195 xio: Get the right Accelio errno code
37719c3 Dequeue XioMsg on send-fail
d16e181 Reduce lock spam in XioPortal SubmitQueue.
f276145 xio:  initial mark_* and queueing/flow control
1c2efde xio: Enable Accelio flow control with msgs and bytes throttlers
3c7e857 xio: Configure Accelio internal pool
dcfb80a Accelio Autotools glue.
aba35bc cmake: add xio
610d66f Ceph Accelio/RDMA Transport (XioMessenger).
a064237 Cosmetic ceph_mon.cc.
53bc4d1 Cosmetic ceph_osd.cc.
fd5cd93 Cosmetic ceph_mds.cc.
d53b378 Introduce Message flag values used by XioMessenger.
b4447e9 Add Message::set_src(const entity_name_t& src)
a96373f Remove pure virtuals from Message::CompletionHook.
ef7e735 Add intrusive list anchor for Message dispatch to Message.
984a3ee Add MDataPing.
71d08b4 Accelio ceph::buffer Extensions
4cbf2d5 Cosmetic:  Normalize an entity_name_t initialization in ceph-syn.
2ffacbe msg: crc configuration in messenger
b677a86 Build rbd-fuse as a C++ unit (matching its existing linkage).
80b3ff0 mon: OSDMonitor sends maps over connection
9fff0c5 msg: remove create_anon_connection from Messenger
2401c3b dout: dlog_p macro for should_gather
a39cbe2 atomic: add and sub return their result
0f6b9f2 Combined CMake Build for Hammer
4368e0a Null tracepoint macro when !WITH_LTTNG.
f57383a Don't use __cplusplus to mean !__KERNEL__
71e4987 Add missing Messenger::create ms_type in test_msgr.
3ce683a Fixup int_types.h.
3424bae (origin/wip-librbd-coverity) librbd: fix coverity false-positives for tests
f3a57ee rgw: wait for completion only if not completion available
833b277 ceph_test_objectstore: enable keyvaluestore experimental option
204fa0f ReplicatedPG::_scrub: don't record digests for snapdirs
0172069 common/shared_cache.hpp: restructure clear()
9daeaec (origin/wip-10382) mds: handle heartbeat_reset during shutdown
fc5cb3c osd/ReplicatedPG: remove unnecessary parameters
78b2cf0 osd: force promotion for watch/notify ops
c8bef13 osd/OpRequest: add osd op flag CEPH_OSD_RMW_FLAG_PROMOTE
a78a93e rgw: bi list, update marker only if result not empty
24aec12 rgw: fix memory leak
33dc07c rgw: initialize RGWBucketInfo::num_shards
d19a49d cls_rgw: call ioctx->aio_operate() under lock
9d17bd0 rgw: fix linkage following rebase
f060dd6 rgw: update calls to handle bucket sharding
0b5d803 rgw: only keep track for cleanup of rados objects that were written
ce0ed6b test: fix test_cls_rgw
c07af12 cls_rgw: remove incorrect function declaration
37a1186 rgw: max shards configuration is part of the zone config
7101665 rgw: pass num shards on bucket initialization
9536f74 rgw: write multi shard markers on replica_log appropriately
15703cf cls_rgw: extend shards marker api
0d1f97f rgw, cls_rgw: keep shard ids with oids
6b1c4a0 cls_rgw: clean up CLSRGWConcurrentIO
a063cba rgw: modify bucket instance shard marker ids
0d9c2d3 rgw: bucket replica log, handle shard ids
a2c3680 cls_rgw: list bi log should not return marker entry
d52a8b1 rgw: bucket_index_shard_hash_type fixes
44bc63b rgw: decode the req_state bucket instance id if needed
d31e84e rgw: improve bucket sharding hashing
a33ca59 rgw: data changes log, log info by bucket shard id
8793470 rgw: use new BucketShard structure for index manipulation calls
381f68a rgw: bi log list/trim can get specific bucket shard
8a04c0a Fix the multipart uploads functional test failures due to bucket index sharding.
231fa0e Fix get_bucket_instance_info, only build the oid if it is empty.
9e45a7c Adjust bi log trim implementation to work with multiple bucket shards. Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
f9b280e Adjust bi log listing to work with multiple bucket shards. Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
47665b2 cls_rgw, rgw: switch different ops to new concurrent infrastructure
30d0a49 rgw: generalize container type for concurrent IO base class
04441f2 cls_rgw, rgw: create base class for common bucket shard operations
9c5acd6 Adjust bucket stats/index checking/index rebuild/tag timeout implementation to work with multiple shards.
56feee7 Adjust bucket listing to work with multiple shards.
751fd07 Adjust rgw bucket prepare/complete OP to work with multiple bucket index shards.
5d004d3 Implement sharding for bucket creation.
90a3920 Add a new field to bucket info indicating the number of shards of this bucket and make it configurable.
364b868 (origin/wip-mon-propose) mon/Paxos: consolidate finish_round()
67a90dd mon: accumulate a single pending transaction and propose it all at once
d159586 PendingReleaseNotes: make a note about librados flag changes
725d660 (tag: v0.91) 0.91
9264d25 (origin/wip-formatter) common/Formatter: new_formatter -> Formatter::create
617ad5d common/Formatter: improve json-pretty whitespace
83c3b13 common/Formatter: add newline to flushed output if m_pretty
e2a7b17 osd/PG: remove unnecessary publish_stats_to_osd() in all_activated_and_committted()
77bc23c osd/PG: add 'activating' pg state between peering and active
b578a53 (origin/wip-quota-test) qa: set -e explicitly in quota test
8d706cd osd/ReplicatedPG: init ignore_cache in second OpContext ctor
792ac7c osd/ReplicatedPG: fix cancel_proxy_read_ops
7c664fa Doc: Fix the indentation in doc/rbd/rbd-snapshot.rst
1c01c3a (origin/wip-librbd-rados-stub) tests: create unittest_librbd
c105003 tests: add mock librados API for supporting unit tests
1e9da43 include: moved RBD's generic FunctionContext wrapper
1483a43 msg/simple: remove redundant calling of setsockopt
9ef6ce5 FileJournal: check fsync/fdatasync result.
3cbe5da mon: check size must larger than zero.
3f03003 test/mon: Add test case for ceph osd pool set size/min_size.
e3678f4 mon: check min_size range.
7945f8d (origin/wip-8900) librbd: flush pending AIO requests under all existing flush scenarios
2dd0f03 librbd: AIO requests should retry lock requests
6176ec5 librbd: differentiate between R/O vs R/W RBD features
544ed96 librbd: Add internal unit test cases
17f22d9 librbd: Add ImageWatcher unit test cases
5160281 librbd: Add convenience library to support unit tests
4297e3b rbd: Allow CLI to optionally create shared images
ccadff1 librbd: Integrate librbd with new exclusive lock feature
9ee80b3 librados: bump rados version number
f5668d6 librbd: Create image exclusive lock watch/notify handler
2ecd874 (origin/wip-9956) osd: enable filestore_extsize by default
b76d0dc os/FileStore: verify kernel is new enough before using extsize ioctl
f4ff12a (origin/wip-mon-converter) drop ceph_mon_store_converter
a4152db (origin/wip-fs-reset) mon/MDSMonitor: add confirm flag to fs reset
8630696 qa: add `fs reset` to cephtool tests
1713ffd mon: implement `fs reset`
1f69476 Fix bug 10503: http://tracker.ceph.com/issues/10503 ceph-fuse: quota code is not 32-bit safe for vxattr output
4aa02f8 osd: add an option to prioritize heartbeat traffic
11bdfb4 osd: requeue blocked op before flush it was blocked on
c80c2cf test: modify test/cli/rbd/help.t for merge-diff
d300220 rbd: test case for rbd merge-diff
337f821 rbd: merge two diff files into one single file
9c82efc rbd: parse diff file body for diff merging
b4720ae rbd: parse diff file header for diff merging
f42ef1e (origin/wip-promote) ceph_test_rados: add some debug output
1554fbc osd/ReplicatedPG: improve proxy read cancelation
1c8b679 osd/ReplicatedPG: put proxy read completion on finisher
650f1d9 osd: tiering: avoid duplicate promotion on proxy read
43f13af osd: tiering: proxy instead of redirect read in writeback mode when the cache pool is full
bfb71a4 osd: tiering: cancel and requeue proxy read when needed
759db93 osd/ReplicatedPG: allow reads to proxy etc even if blocked
ce14310 test: add proxy read test
8e145e0 osd: tiering: proxy reads during promote
4dc9990 osd: tiering: add cache mode READPROXY
70d3d08 osd: tiering: add proxy read support
9ed2ac7 osd/ReplicatedPG: separate promotion from the triggering op
a03d375 osd/ReplicatedPG: pass promote error to all blocked operations
a4a4149 osd/ReplicatedPG: drop unnecessary cache_mode checks
2a67b0a osd/ReplicatdPG: adjust braces (no semantic change)
5361bc0 osd/ReplicatedPG: factor out must_promote case from all cache modes
8645ed7 osd/ReplicatedPG: factor out common exists case from all cache modes
1d89f18 osd/ReplicatedPG: make op argument to promote_object optional
2bbab05 OSD: add a get_latest_osdmap command to the admin socket
d5e8ef5 doc: Fix PHP librados documentation
a16e72c (origin/wip-mon-wishlist) doc: mon janitorial list is now a wishlist
19955fc doc: Replace cloudfiles with swiftclient in Python Swift example
5461368 mon: paxos: queue next proposal after waking up callbacks
d375532 rgw: return InvalidAccessKeyId instead of AccessDenied
dd57af2 rgw: return SignatureDoesNotMatch instead of AccessDenied
a238834 tests: install parted in centos Dockerfile
c1080b2 doc: Clean up pool usage.
38f424d doc: Cleanup RGW pool usage.
e6a4ab1 client: include ceph and git version in client metadata
f90c48f Revert "rgw: switch to new watch/notify API"
f887817 doc: Added section to install priorities/preferences.
bf8f062 (origin/wip-10311) rgw: only keep track for cleanup of rados objects that were written
55a5c5f tests: temporarily disable unittest_msgr
26e7d5f (origin/wip-asok-get-subtrees) mds: add asok command for getting subtreemap
1c1897e mds: give CDir a dump() method for JSON output
a58d104 (origin/wip-mdscacheobject-const) mds: support constness in MDSCacheObjects
e9033bb (origin/wip-librbd-snap-unprotect) librbd: shadow variable in snap_unprotect and list_children
cf432fa doc: Add Librados PHP documentation
d994e60 (origin/wip-table-formatter) common: Formatter: cosmetic re-indent
e797dcf common: Formatter: add TableFormatter class
c528d87 erasure-code: test repair when file is removed
9406b7f osd: accumulate authoritative peers during recovery
bcdbbd5 os: fix confusing indentation in FileJournal::corrupt
ecc3bca os: remove debug message leftover in FileJournal
63c8dd0 msg: initialize AsyncConnection::port
c60f88b Bump memstore_device_bytes from U32 to U64
8811df3 FileStore: return error if get_index fails in lfn_open
20be188 (origin/wip-peeringqueue) osd: assert there is a peering event
492ccc9 osd: requeue PG when we skip handling a peering event
49d114f librados: Translate operation flags from C APIs
8d52782 (origin/wip-10445) rgw: use gc for multipart abort
6edfcc1 (origin/wip-nits) mds: allow 'ops' as shorthand for 'dump_ops_in_flight'
1617fbb osd: allow 'ops' as shorthand for 'dump_ops_in_flight'
3d2fbf7 tests: group clusters in a single directory
bd7be04 doc: don't suggest mounting xfs with nobarrier
8b3dfc9 rgw: check keystone auth also for s3 post requests
27cb78b mon, os: check the result of sync_filesystem.
3646e1e encoding: wrap ENCODE_START/FINISH arguments
fa96bb4 librbd: Stub out new exclusive image feature
478629b (origin/wip-10471) rgw: index swift keys appropriately
97cc409 (origin/wip-mdsmonitor-fixes) mon/MDSMonitor: fix `mds fail` for standby MDSs
c400ba1 mon/MDSMonitor: respect MDSMAP_DOWN when promoting standbys
487c22a (origin/wip-10384-ceph-test-helper-races) init-ceph: stop returns before daemons are dead
3d08a68 (origin/wip-da-SCA-20150102) msg/async/AsyncConnection.cc: reduce scope of variable
b99508b osd/ClassHandler.cc: move stat into error handling
fd4ac46 crush/crush.c: prevent DIVIDE_BY_ZERO
aacdaae src/common/obj_bencher: fix some UNINIT issues
c27e0fe mds/MDLog.cc: fix uninitialized pointer read
8511b55 librados/librados.cc: fix UNINIT issue
5ca4709 test/librados/snapshots.cc: fix resource leak, delete op
78542f9 ceph_objectstore_tool.cc: reduce scope of variable
a58446c tools/ceph_authtool.cc: reduce scope of some variables
7b5ccb7 msg/async/AsyncMessenger.cc: reduce scope of variable
2bd1833 msg/async/EventSelect.cc: reduce scope of variable
b7b13d2 ceph_monstore_tool.cc: unsigned can't be less than zero
678ece8 common/Cycles.cc: reduce scope of variable
b087008 src/mds/MDS.cc: remove unused variable
79d63a0 bench/tp_bench.cc: fix warning about self init
ed7ca16 test_mon_workloadgen.cc: fix warning about self init
f19c2e6 mds/Server.cc: fix compiler warning
2ab4003 mds/Capability.h: init num_revoke_warnings in constructor
36dd487 configure.ac: fix warnings about unknown commands
936b98a client/Client.cc: cleanup code to silence cppcheck
252fc03 ceph_objectstore_tool.cc: prefer ++operator for non-primitive iterators
42417e2 KeyValueStore.cc: prefer !empty() over size() for emptiness check
369af32 perf_counters.cc: prefer ++operator for non-primitive iterators
69f8223 ceph_context.cc: prefer ++operator for non-primitive iterators
3ccd792 client/Client.cc: prefer ++operator for non-primitive iterators
1a00fb7 test/librados/aio.cc: release completion before exit
2f54209 test/librados/aio.cc: delete AioCompletion* before return
485d139 (origin/wip-10041) client: fix mount timeout
397b261 common: Don't call ioctl(BTRFS_IOC_SYNC) in sync_filesystem.
3f7faa4 common: Directly return the result of syncfs().
1c38895 disable tcmalloc by default when enable jemalloc
95d2174 osd/ECBackend: make sure localt uses tbl is ec txn does
5d66525 ceph-object-corpus: drop compat with old ObjectStore::Transaction
0354305 osd: fix Transaction::get_data_offset bug when map layout used
fda6019 osd: add feature CEPH_FEATURE_OSD_TRANSACTION_MAY_LAYOUT (1ULL<<47)>>)
5da6b41 osd: build fields for Transaction::iterator when tbl is used
1889d39 ceph_perf_objectstore: fix warning
d427ca3 osd: Transaction::append & Transaction::swap
6b2103b osd: new Transaction::iterator interface
a4575d1 osd: add encode/deocde impl for new layout
3db4f69 osd: new format for Transaction encode/decode
dbae922 osd: Add Transaction::TransactionData for fast encode/decode
3bd0042 osd: remove unused Transaction fields
de02134 tests: resolve ceph-helpers races
bea2d4a qa: drop tiobench suite
8618a53 cli: ceph: easier debugging (pdb) with 'CEPH_DBG=1'
55f8fee (origin/wip-10412) client: fix use-after-free bug in unmount()
93d39a8 cleanup: fix a compile warning
ea3ed5b TestLFNIndex.cc: For root, dont do permission operations.
488355c (origin/wip-fix-copyfrom) osd: fix object_copy_data_t compat encoding
ed50377 (origin/wip-repop) osd/PG: print last_update_applied if != last_update
78d2d31 Add MOSDRepOp and MOSDRepOpReply
6ca2eb8 configure: show pkg names when libkeyutils is missing
5cf84e6 (origin/wip-watch-leak) librados: fix leak of WatchContext on unwatch
b5c24e4 qa: add test_tell, which currently is used only for testing 'ceph tell mon version'.
244777d test/bufferlist: For root, don't do permission operation for read_file case.
3b4e021 qa: refactor 'ceph -w' magic in test_mon_misc by introducing helper functions ceph_watch_start and ceph_watch_wait so they can be reused in other tests.
1189138 mon: make ceph tell mon.* version work
c7cc6af rbd: write a diff description into the merged diff file
bca862c rbd: parse merge-diff arguments
0b6ab82 rbd: add an option merge-diff
bdd0e3c (origin/wip-10351) mount.ceph: avoid spurious error message
6e67450 (origin/wip-10387) client: close dirfrag when trying to trim an inode
274b989 doc: rm reference to old Ubuntu release
0471be6 debian: create a repository from sources
c8f56ab AsyncMessender: use IOV_MAX instead of IOV_LEN
d49b694 AsyncMessenger: s/sended/sent/
c9da51d AsyncMessenger: should retry in case of EINTR
169e8bd msg: fix factory error message
ec1f58a unittest_msgr: enable experiemntal async msgr
1265603 (origin/wip-10441-b) osd: force read bit for watch
4642441 osd: drop unused watch_info_t w
cef7a82 KeyValueStore:: do_transactions: clean up code which is never used clean up ops and bytes which is never used in do_transactions()
dfd6a38 (origin/wip-mon-janitorial-list) src/doc: add monitor janitorial list
1dba143 Make pg dump {,sum,pgs,pgs_brief} work for format=plain
7d75f0c Makefile: include radosgw-admin in base
38350a0 client: fix quota signed/unsigned warning
b7b4534 common: log which experimental features are enabled.
55405db ms: mark async messenger experimental
44ce7cc os: rename keyvaluestore-dev -> keyvaluestore; mark experimental
8a55972 common: add 'enable experimental data corrupting features'
783956c (origin/wip-10341) tools: ceph-monstore-tool: validate start/stop vals
60e9c3f tools: ceph-monstore-tool: output number of paxos versions dumped
b27ca4c tools: ceph-monstore-tool: raw map to stdout if outfile not specified
68f3b77 tools: ceph-monstore-tool: use subcmd parser helper
a186ee1 tools: ceph_monstore_tool: add sub-command parser helper function
fe662c5 tools: ceph-monstore-tool: a cli that works
793c32d Event: Avoid illegal multiplication for memset
4193594 mailmap: Chris Holcombe affiliation
bb09b20 mailmap: Alfredo Deza affiliation : Fix Typo.
f3fd07c mailmap: Christos Stavrakakis affiliation
a8542d0 mailmap: Ning Yao affiliation
9636dfc mailmap: Shishir Gowda affiliation
eb659ce mailmap: David Anderson affiliation
977db4f mailmap: Matt Benjamin affiliation
6cea1e3 mailmap: Yunchuan Wen affiliation
fe44cd3 doc: Updates information for SSL configuration in Ceph Object Gateway installation.
7526767 ceph pg dump: num_objects_misplaced is missing for pools and summary
25cf82e AsyncMessenger: reset newly allocated file_events
852aab6 PG:: filter_snapc: Return immediately if no snapc need to trim we can return immediately if no snapc need to trim. Do not iterater snapc vector and do extra judgement and ops.
45fb9a3 FileJournal: Don't cache journal data if journal w/o directio mode
e4e1777 AsyncMessenger: fix the leak of file_events
70ef30f osd: osd tree to show primary-affinity value
aa56ee4 (origin/wip-10422) mon: provide encoded canonical full OSDMap from primary
d7fd6fc (origin/wip-10372) osdc/Objecter: improve pool deletion detection
a540ac3 librados: only call watch_flush if necessary
6b030aa mds: add default ctor for quota_info_t
ee6529b AsyncMessenger: Fix leak memory
b41a739 10132: osd: tries to set ioprio when the config option is blank
9aa65aa Makefile: Restore check
69dbfce AsyncConnection: Init peer_global_seq
917ed96 test_msgr: Avoid deadlock between send_message and dispatch
1cb78ee AsyncMessenger: Make learn_addr async to avoid destroying lock rule
1c0af36 AsyncConnection:: Avoid getting stopping connection
6b01b5e AsyncConnection: Ensure reply connect_seq larger than sent
926a1b7 librados: only call watch_flush if necessary
73257e8 os: WBThrottle: optimize map to unordered_map Using unordered_map to save the cpu cost and acceralate map::find() operation.
d3fb563 (origin/wip-10415) libcephfs/test.cc: close fd before umount
b95c73e librados: warn about rados_watch_flush() prior to ioctx shutdown
93825bf librados: watch_flush() on shutdown
7de1b4d librados: add rados_watch_flush() call
5cf4483 osdc/Objecter: do notify completion callback in fast-dispatch context
1fbe9b6 librados: warn about rados_watch_flush() prior to ioctx shutdown
4ce6d25 (origin/wip-stop.sh-me) stop.sh: killall -u takes username, not uid
dab5391 (origin/wip-10414) client: fix uninitialized member
3f3f2fa osd: be_compare_scrubmaps uses incorrect j iterator
d87918a (origin/wip-10409) osd: scrub: only assume shard digest == oi digest for replicated pools
a25429c osd: clean up use of hex for digests
9c96fbb osd/ECBackend: use correct seed for (empty) omap digest
7f9c03d (origin/wip-pg-stat) mon/PGMap: restructure 'pg stat' formatted output
e89bafb remove unmatched op code comparasion
4bb6e29 tests: use port 7111 for osd-copy-from.sh
6f8aad0 tests: recovery of a lost object in erasure coded pools
f4da356 objectstore: add fadvise_flags operations in ObjectStore::Transaction::append func.
992e7ea tests: remove spurious lines from osd-scrub-repair.sh
bb921a8 packages: add python-virtualenv and xmlstarlet
6ce1469 tests: reduce centos docker intermediate steps
b15bd60 tests: add docker-test.sh --ref giant|firefly etc.
f080595 tests: avoid bash == --shell confusion in docker-test-helper.sh
4a1c3b2 tests: add xmlstarlet in containers
2d0d388 tests: helpers to run make check in containers
46c83d9 tests: run-make-check.sh arguments are passed to configure
94abadb tests: replace --enable-docker with --enable-root-make-check
7b68f70 tests: docker-test.sh commands are relative to git root
812570e tests: deprecate docker-test.sh --compile option
6218138 tests: enable password-less sudo in containers
19b6de3 tests: ceph.spec.in or debian/control rebuild docker images
d8f84d1 tests: docker images must use install-deps.sh
80f20f8 tests: run-make-check.sh install jq
2de2c4b install-deps.sh: do not require sudo when root
e99da68 (origin/wip-mon-health) mon: make 'ceph -s' show pg state counts in reverse descending order
9c8827a (origin/wip-osd-ctor) osd/ReplicatedPG: initialize new_backfill in ctor
30678f6 (origin/wip-watch-notify-2) librados: watch_flush() on shutdown
4ebd4b4 librados: add rados_watch_flush() call
218de82 (origin/wip-9059-checksums) osd: scrub: wait for digest updates to apply before next scrub chunk
1646d17 osd: change omap data encoding in object_copy_data_t
925f572 test/osd/osd-copy-from: simple test of copy-from and error injection
6d80078 rados: use copy_from for rados cp (and cppool) command
5d2d839 osd: add copyfrom error injection
f8c1d40 osd: pass and verify data+omap digest on copyfrom
75b2bc2 osd: EIO if a full-object read produces a bad digest
55bf020 osd: scrub: set a min age before we update whole-object digest
28d4dd8 osd: scrub: record whole-object digest on scrub
6feb4a1 osd: scrub: complain about bad digest in final pass auth check
85f677a osd: scrub: be explicit about whether bad digest is known bad
14f3c26 osd: scrub: disqualify shards with digests that disagree with oi digest
cf3b047 osd: scrub: share auth oi with caller and be_compare_scrub_objects
74bd870 osd: move scrub no good auth check out of helper
9c3afcc osd: remove more (most? all?) of classic scrub
7d73f41 osd: use -1 for deep scrub digest seed on new OSDs
e68d771 osd: drop vestigal invalid_snapcolls fields from scrub
591e7e1 osd: clean up scrub method debug output
3f7b2cf osd/osd_types: add {data,omap}_digest to object_info_t
8a75800 osd/ReplicatedPG: kill some dead scrub code
056de09 osd/ReplicatedPG: set and invalidate data/omap digests on osd ops
9d5d491 doc: Adds updated ceph-deploy man page under man/
8c38cc6 doc: Fixes a typo in ceph-deploy man page.
46a1a4c (origin/wip-10319-wusui) If trusty, use older version of qemu
7f1e510 (origin/wip-10400-quota-info-t) mds: add default ctor for quota_info_t
18d6b20 doc/release-notes: v0.90
9b78daf osdc/Objecter: do notify completion callback in fast-dispatch context
ecbdbb1 tests: temporarily disable unittest_msgr
08bd1e1 (tag: v0.90) 0.90
49c2322 doc: Instead of using admin socket, use 'ceph daemon' command.
a302c44 ceph-disk: Fix wrong string formatting
2f63e54 cleanup : remove sync_epoch
19dafe1 (origin/wip-10255-wusui) Remove sepia dependency (use fqdn)
1eb0cd5 (origin/wip-osdmap) osd: only verfy OSDMap crc if it is known
1b7585b stop.sh: only try killing processes that belong to me
0af2a1c (origin/wip-10326) qa/workunits/rest/test.py: fix pg stat test
2a1bd76 .gitmodules: update ceph-object-corpus auth repo to github
623ebf0 osd: clear ReplicatedPG::object_contexts when PG start a new interval
1f9c087 AsyncConnection: Fix time event is called after AsyncMessenger destruction
20ea086 PipeConnection: Avoid deadlock when calling is_connected
9783a5c test/msgr/test_msgr: Fix potential unsafe cond wakeup and wrap check
bba4d35 (origin/wip-librados-init) librados: init last_objver
2cd9dc0 (origin/wip-caps-init) messages/MClientCaps: init peer.flags
679652a (origin/wip-osdmap-leak) osd: fix leaked OSDMap
18f545b librados: Avoid copy data from librados to caller buff when using rados_read_op_read.
001ea29 Messenger: Create an Messenger implementation by name.
3a2cb71 (origin/wip-fix-asok) mds: fix asok on rank 0
8de9a0f doc: Adds updated man page for ceph under man/
8b79617 doc: Changes format style in ceph to improve readability as html.
7093cb3 doc: Adds updated man page for ceph-disk under man/
62b3fcd doc: Updates man page for ceph-disk with suggested changes.
2862a49 doc: Adds updated man page for ceph-disk under man/
3f6be22 doc: Updates man page for ceph-disk.
9252d75 osd: add ObjectContext cache perf counter
98110f6 osd: change ReplicatedPG::object_contexts to SharedLRU
d61b1d9 shared_cache: add lookup_or_create, get_next, etc. and their unittests
883e1ae doc: Show how new data pools can be added to CephFS for file layouts
2b577ce packaging: package ceph-deploy(8)
c664818 doc: Adds updated man page for ceph-deploy under man/
e638469 doc: Updates man page for ceph-deploy.
a806778 (origin/wip-qa-empty-xattr) qa: test zero size xattr
42dc937 librados: avoid memcopy for rados_getxattr.
4f72ba5 (origin/wip-cot-rename) ceph_objectstore_tool: Rename generated binary to ceph-objectstore-tool
1b2b344 (origin/wip-10335) MDS: do not allow invocation of most commands on an inactive MDS
69fa532 ceph.spec.in: quote %files macro in comment
aea232c client, librados, osdc: do not shadow Dispatcher::cct
378ebb7 python-rados: refactor class Rados a little bit
59b70fe Cleanup: Drop hobject_incorrect_pool
0c9d55d pybind/cephfs: Fix setxattr function. Pass value as character pointer
023a8ac (origin/wip-test-helpers) tests: ignore xmlstarlet extra empty lines
e582135 (origin/wip-pgmeta) os/FileStore: better debug on omap_setkeys
f6ca2bc os/FileStore: better debug on unlink
43f0bcb os/MemStore: drop support for collection attrs
17e4e19 os/ObjectStore: deprecated collection_getattr et al
56232d9 ceph_test_objectstore_workloadgen: set pgmeta omap instead of collection xattr
82f452c osd/PG: drop PG/collection attrs from ScrubMap
a1a3e15 os/ObjectStore: deprecated collection attr operations
db3daaf osd/PG: drop PG::read_info support for ancient PGs
880135a osd: drop snap_collections
5877c06 osd: drop infos_oid arg from PG::read_info()
a599d88 osd: drop legacy arg to PG::peek_map_epoch
f93b293 ceph_objectstore_tool: use '_remove' pgmeta omap key to indicate removal too
cd462d1 osd: move pg removal flag into a static helper
f056bdf ceph_objectstore_tool: Prevent tool from transitioning struct_v on rm-past-intervals
fbf6408 ceph_objectstore_tool: Clean-up unused struct_ver in tool's metadata section
d6df6ea osd: retire meta/infos object entirely
9d1466c osd: prevent upgrade from older than v7
d1973f3 osd/PGLog: drop support for ancient logs
8cb25cb test/osd/osd-test-helper.sh: enable filestore log
6074bdd osd: move pg log and info to a per-pg object
8fa9407 osd/PGLog: explicitly pass log_oid collection
9819221 osd/PGLog: take ghobject_t instead of hobject_t
be86cc7 osd: move PG collection creation into static PG method
5a5a4a8 osd: don't need to pass object names via ctor
35fcfce osd/PG: define pgmeta_oid member
4d22adf osd: skip pgmeta object on remove_dir
e247cd4 ceph-objectstore-tool: skip pgmeta object on export
9ebdb99 osd/PGBackend: skip pgmeta objects
a56f10a osd/osd_types: spg_t::make_pgmeta_oid()
033a533 common/hobject_t: add pgmeta named ctor and is_pgmeta() check
c765de6 common/hobject_t: fix whitespace
95eccd8 osd: add PGMETA ondisk feature
1821492 os/FileStore: move to v4, trigger DBOjectMap upgrade
69e169d os/DBObjectMap: new version v2; drop support for upgrading from v1
462bad3 ceph_test_rados: generate mix of small and large xattrs
456255b os/DBObjectMap: include hash in header key for EC objects
9f53eeb (origin/wip-7317) doc: add cephfs ENOSPC and eviction information
a8babcb client: add 'status' asok
6fdf890 client: propagate flush errors to fclose/fsync
a8611ac client: handle ENOSPC in _flush
cdf679b mds: add 'osdmap barrier' admin command
fcc64f3 mds: set epoch barrier on transition to active
40503ff mds: implement osd epoch barrier on caps
2d993c4 messages: always encode barrier
68ba7f5 messages: add osd_epoch_barrier to cap msgs
fc7d62a mds: return ENOSPC on write ops while osds full
09287fd osdc: add public Objecter::osdmap_full_flag
56af795 (origin/wip-10329) rgw: return InvalidAccessKeyId instead of AccessDenied
ef75d72 rgw: return SignatureDoesNotMatch instead of AccessDenied
bab3d3d osdc: remove spurious _maybe_request_map return value
cf3101a osdc: implement Objecter::set_epoch_barrier
c4861a6 osdc: continuously subscribe to osd map on pause
3ad6ed3 osdc/Objecter: add have_map method
fe32d6e osdc/Objecter: add op_cancel_writes
a991212 osdc/ObjectCacher: invoke flush_set_callback on purge_set
bb80437 erasure-code: relax cauchy w restrictions
058f433 man: Deprecate preferred OSD setting for cephfs
37a9969 (origin/wip-10299) librbd: complete all pending aio ops prior to closing image
02fae9f (origin/wip-10262) osd: handle no-op write with snapshot case
db951ae cls/refcount: ENOENT when put on non-existent object
9ff9144 (origin/wip-librados-fadvise) librados: do not choke on asphyxiate doc generation
394fd4c (origin/wip-9405) librbd: fixed garbage output from test LibRBD.TestIOPP
1853461 (origin/wip-10220) mon: Paxos: reset accept timeout before submiting work to the store
b5381c2 ReplicatedPG: Make pull and push op use sparse read
31adfeb doc: fix spelling in corpus page
12808b9 osdc/Objecter: respect honor_osdmap_full setting
7e84034 os: free space tracking for MemStore
e8d3399 (origin/wip-10201-osd-scrub-repair) tests: convert osd-scrub-repair to ceph_objectstore_tool
aa54640 tests: shell functions toolbox dedicated to testing
f0961ae mailmap: Blaine Gardner affiliation
b0e88a0 mailmap: Lei Dong affiliation
6d683d1 mailmap: Sandon Van Ness name normalization
973e9f7 jemalloc-support: Added --with-jemalloc configure option
ad20551 mailmap: Chendi Xue name normalization
04ab409 mailmap: Ding Dinghua affiliation
d048ec9 mailmap: Dongmao Zhang affiliation
a3dd8b0 mailmap: Kefu Chai affiliation
c40176e mailmap: Michal Jarzabek affiliation
5d97384 mailmap: Xinze Chi affiliation
1fd074d mailmap: Karl Eichwalder affiliation
e90818f mailmap: Dan Mick name normalization
cc05518 mailmap: Adam Spiers affiliation
41707ee mailmap: Nilamdyuti Goswami affiliation
3886734 ceph_test_rados_api_io: fix new test
e3ba3d2 (origin/wip-watch-notify) ceph_test_rados_api_watch_notify: use 5 min timeout for notifies
a2572c3 ceph_test_stress_watch: do not unwatch if watch failed
35f084d (origin/wip-test-huge-tickets) qa: add script to test how libceph handles huge auth tickets
e7d434b (origin/wip-warning) tests: fix signedness compilation warnings
847e5e1 (origin/wip-9555) osd: check that source OSD is valid for MOSDRepScrub
707a111 osd: pass Message* to most require_* helpers
09c1648 osd: drop redundant check in handle_replica_op
b6401c1 ceph-disk: LOG.info instead of print
e0f052a ceph-disk: test re-using an existing journal partition
0e4cb57 ceph-disk: fix get_partition_uuid for loop/cciss
29eb135 ceph-disk: don't change the journal partition uuid
b9ddf97 documentation: simplify running make check
35e4f42 tests: install parted in centos container
85ab278 tests: install hdparm in containers
60bca67 tests: update centos docker file to epel 7.5
e038b126 tests: docker tests only need a workdir, not a clone
53929ba (origin/wip-10270) librbd: gracefully handle deleted/renamed pools
f79b7fe librados: Added new API methods to create an ioctx by pool id
5cf193c (origin/wip-10307) rgw: use s->bucket_attrs instead of trying to read obj attrs
f773c74 (origin/wip-swift-storage-policy) rgw: cannot modify swift bucket policy
07dc42a rgw: dump X-Storage-Policy header on bucket HEAD
f16da1c rgw: compare placement target on bucket recreation
c55d7da librados: remove IoCtxImpl lock member
c598e63 librados: stop using IoCtxImpl lock for watch/notify functions
90246c1 osdc/Objecter: only ping after watch is registered
50e9e39 librados: do not overload C++ API methods with new signatures
ffd6c7e doc: Adds man page for ceph under man/.
76da87a doc: Adds man page for ceph.
7409ab3 (origin/wip-9254) rgw: http headers need to end with \r\n
0801361 mon/OSDMonitor: dump inc and full maps we get a crc mismatch
f31135c mon/OSDMonitor: do not reencode OSDMap on 'osd getmap'
b1f1381 ceph-dencoder: mark OSDMap as featureful, but with stray data
8a674da osdmaptool: allow OSDMap encode
32a837d osd: add osd_inject_bad_map_crc_probability option
d898698 osd: verify our OSDMap encoding based on crc
716f90f mon/OSDMonitor: verify full_crc when available
5fc7a0b (origin/wip-10271) rgw: change multipart upload id magic
7925b82 rgw: Conditional PUT on ETag
023927b ReplicatedPG: For MAPEXT, using bl.length() instead of op.extent.length as num_rd_kb.
c1dc361 ReplicatedPG: Don't use the return value of getattr_maybe_cache as attr length.
0c802e1 test/librados: Add test case for librados function which can handle fadvise flas.
bf156e5 test/librbd: Add test case for librbd function which can handle fadvise flags.
c9d15b0 FileStore: Implement fadvise handle for read-operation.
4f12974 ECBackend: Make parity data don't cache.
3752864 ObjectStore/Transaction: Add fadvise_flags to track write fadvise flags.
8acc932 PGTransaction: Modify append/write function can handle fadvise flags.
5f92d82 osd: Make async-read can handle fadvise flags.
a727470 include: Remove unused code: class triple.
9b1f347 types: Add operator<< for type boost::tuple<A, B, C>.
edaacf9 encoding: Add type boost::tuple<A,B,C> encoding/decode func.
fc639b1 PGBackend: Make objects_read_sync can handle fadvise flags
2dedf31 ObjectStore: Modify read function can handle fadvise flags.
7853f8d osd: print OSDOp flags
d3ce0d6 librbd: increment version for new functions rbd_read2/write2,rbd_aio_read2/write2.
d2b0152 librbd: add new read/write api for librbd C++ interface which handle op flags.
5896f99 librbd: add new read/write api for librbd C interface which handle op flags.
847d988 librbd: Add set_op_flags in AioWrite to set op_flags for rbd write.
7b11c47 librbd: Add m_op_flags in AioRead to track op flags for rbd read.
da862e2 librbd/internal: Modify read/write api to handle op flags.
c5ed33d librados/ObjectOperation: add new function set_op_flags2
b35cb48 librados: Add read/write fadvise op flags CEPH_OSD_OP_FLAG_FADVISE_*.
5b54410 librados: Add read/write fadvise op flags in ObjectOperationFlags.
f5abed7 librados.h: Add read/write op fadvise flags  LIBRADOS_OP_FLAG_FADVISE_*.
e8e27a8 (origin/wip-10296) unittest_blkdev: test an abbreviated /sys/block dir
5e454a8 common/blkdev: add simple sandboxing function for testing
9b26de3 ReplicatedPG: fail a non-blocking flush if the object is being scrubbed
dce6f28 ReplicatedPG::scan_range: an object can disappear between the list and the attr get
6110220 (origin/wip-aarch64) debian: enable libgoogle-perftools-dev on arm64
2246dca common/blkdev: fix block device discard check
25e3783 common/blkdev: get_block_device_base
beaa04e mon: MonitorDBStore: allow randomly injecting random delays on writes
2ad55cd (origin/wip-10296-journal-discard) tests: do not ignore ceph-disk.sh::test_activate_dev failure
9c5fd8c os: do not attempt to detect discard by default
21e07eb rgw: url decode http query params correctly
279c199 ceph_test_rados_api_watch_notify: fix a zillion warnings
531e8bb ceph_test_rados_api_watch_notify: use GT macro
008d788 ceph_test_rados_api_watch_notify: print err to debug
c1dd92b osdc/Objecter: normalize watch error (ENOENT on delete)
5559e6a (origin/wip-10288) mon: fix `fs ls` on peons
b025f56 (origin/wip-typo) mds: fix log typo
a8f85dc (origin/wip-9323) mon: allow full flag to be manually cleared
2e5ee30 Finisher: call signal if necessary in function queue
d92e2ca lttng: add int type definitions
060cbaa cycles: add reader for i386 and aarch64
370bb96 Add unittests for safe sharing and make_shareable()
6a45d75 Add diagnostic unshareable buffer.
28725eb Restore zero-copy buffers in OSD fast path.
5f551cc Add safe-sharing to buffer::list and buffer::ptr.
b038e8f (origin/wip-8797) Call Rados.shutdown() explicitly before exit
5ba9b8f rados.py: remove Rados.__del__(); it just causes problems
8b195ec check endpoints is not empty before use it.
320c256 osdc/Objecter: only issue one error per watch; do it through one path
1e32e3b ceph_test_rados_api_watch_notify: wait longer for osd to time us out
78eed52 ceph_test_rados_api_watch_notify: weak assert cookie is valid (it's a ptr)
6f43c6c osdc/Objecter: pass correct cookie value to error
b34e545 os/FileStore.cc: insert not empty list<Context*> to op_finisher/ondisk_finisher.
7ab4a39 ceph.conf: update sample
efd9d8d (origin/wip-librbd-test-cleanup) tests: Minor cleanup to librbd test
78a15ee Fix libstriprados::remove, use strtoll insdead of strtol
2d4dca7 (origin/wip-10029) SimpleMessenger: Retry binding on addresses if binding fails
e8063a1 test: modify cephfs quota test case
31a0cdc mds: fix parse_quota_vxattr for invalid data
bab7122 OSD: FileJournal: call writeq_cond.Signal if necessary in submit_entry
17d6390 os: IndexManager:: optimaze map<coll_t, CollectionIndex* > col_indices col_indices is just used to cache CollectionIndex, and use col_indices.find() to get its corresponding index. Without any using of up_bound() and low_bound(), we can use unordered_map to make it fast. Based on perf, when I chanage map to unordered_map, the cpu cost for get_index(coll_t c, const string& baseDir, Index *index) is much lower.
4036b91 os: FileJournal:: fix, uninitialization of FileJournal throttle Since after firefly, take() in class throttle add if(0 == max.read()) return. If throttle is not initialized with max throttle value, it actually does not work. So initialize it in FileJournal
6b51a9f (origin/wip-10164) mds: set dirfrag version when fetching dirfrag is skipped
17c72f5 (origin/wip-10010) ceph-osd: remove extra close of stderr
5836899 Revert "client: support listxattr for quota attributes"
89b2fee (origin/wip-crush-straw) mon: 'osd crush reweight-all'
dd7b58f crush: set straw_calc_version=1 for default+optimal; do not touch for presets
adf5c6d crush/builder: a note about the original crush_calc_straw()
9000068 mon: add 'osd crush {get,set}-tunable <name> [value]' commands
606b004 (origin/wip-gfcomplete-dirty) gf-complete: update submodule to newest upstream
bf0d8d3 (origin/wip-cleanup-removal) osd: Remove dead code related to old pg removal mechanism
0827bb7 (origin/wip-10277) client: use remount to trim kernel dcache
dfcb1c9 client: cleanup client callback registration
2f52202 Revert "client: invalidate kernel dentries one by one"
9902383 (origin/wip-9998) crush/CrushWrapper: fix create_or_move_item when name exists but item does not
8c87e95 crush/builder: prevent bucket weight underflow on item removal
eeadd60 crush/CrushWrapper: fix _search_item_exists
a198dee Modifying the docs to add the Get pool commands to match the CLI. Signed-off-by: Chris Holcombe <chris.holcombe@nebula.com>
3a84602 Include common/likely.h in buffer.h
e8b412c mailmap: Zhiqiang Wang name normalization
c0ce4a5 (origin/xiaoxichen-cleanup_getheader) Cleanup:Use get_type()instead of get_header().type
c2d9333 WBThrottle: make bytes/ios/inode_wb's perf counter effective
12d85c6 Fix stack buffer overflow reported by ASan.
f6f6ea2 Fix alloc-dealloc mismatch reported by ASan (new[] vs. delete).
5bb8666 Fix alloc-dealloc mismatch reported by ASan (malloc vs. C++ delete).
8ed536e ceph_test_rados_api_watch_notify: fix signed/unsigend
45223d9 librados: mark new API watch/notify calls
812ff7a ceph: respect the PYTHON environment variable for dev mode.
1bf39db AsyncConnection: Add loopback connection support
fca14dc AsyncMessenger: Fix accept connection replacing process
e446a8f AsyncConnection: Avoid name conflicting with AsyncMessenger
b3e3fae AsyncConnection: Avoid hungry if mark_down's caller is the eventcenter's owner
09b3e77 FileStore: Move ftruncate to do_sparse_copy
f5bf75f python-rados: Add object lock support
f6d81d3 PipeConnection: Modify "is_connected" semantic
2dfda54 Messenger: Add unit tests
dc67cd6 rgw: switch to new watch/notify API
1ac17c0 osd_types: op_queue_age_hist and fs_perf_stat should be in osd_stat_t::operator==
9029813 common/ceph_context: don't import std namespace
59b423e ceph_objectstore_tool: Accept json object with --pgid instead of array
de6384f ceph_objectstore_tool: Improve object spec parsing error messages
eae7c02 ceph_objectstore_tool: Fix errors messages in newer code
32c832f ceph_objectstore_tool: Remove extraneous endl on error throw messages
cca85a5 ceph_objectstore_tool: Add --format and --pretty-format support
00c96c2 doc: Adds ceph-deploy man page in TOC.
d93e561 doc: Adds ceph-deploy man page under /man.
9191005 doc: Adds man page for ceph-deploy.
f4735cf .gitignore: add ceph_perf_objectstore
bcee92e StoreTest: Add tests for clone_range op
cabb57a FileStore: Fix _do_sparse_copy_range don't truncate zero sections
980f094 common: bufferlist::get_contiguous return 0 when param len == 0
be11a45 (origin/wip-fadvise) os/FileStore: stop disabling fadvise on XFS
d6a7a7c os/FileStore: merge filestore_replica_fadvise -> filestore_fadvise
5eacd3c ceph_objectstore_tool: Strip _* (always _head) from pgid in list entry output
b617ee2 ceph_objectstore_tool: BUG: --op list wasn't including snapshots
5a66db9 ceph_objectstore_tool: For terminal output of list one object per line
bc6ea9c ceph_objectstore_tool: In error case umount objectstore
ddba267 objectstore_tool: test --op list variants
df9d5c5 objectstore_tool: parse new object description format
c69aace objectstore_tool: filter --op list and explore all PGs
7c1165f objectstore_tool: lookup objects by name
d9e747b objectstore_tool: refactor list-lost and fix-lost
a90233c objectstore_tool: update usage strings
6de83d4 Cache hobject filestore_key to avoid massive _reverse_nibbles calls
58682d1 ceph-disk: dmcrypt file permissions
2b59c5a common/Initialize.h: add header file to Makefile.am
5da15ee mds: drop dentry leases in deleted directory
f55a1f8 (origin/wip-mds-readonly) mds: disallow flush dentry/journal when MDS is readonly
f4f1880 mds: properly unregister asok commands
818a807 mds: drop dirty dentries in deleted directory
ff901b5 arch: add support for HW_CAP based neon runtime detection
360d627 (origin/wip-10104) pybind/test_rados: add test for wait_for_complete_and_cb()
19212cd rados.py: fix misnamed 'wait_*' routines, add true wait/wait-with-cb
a53dbab librados:: carry IoCtx ref from WatchInfo
a989fec osd: allow deletion of objects with watchers
1c6944f osd/ReplicatedPG: do watch effects only when change commits
1c5bba6 osd/ReplicatedPG: pass obc to OpContext ctor
6fa05db osdc/Objecter: queued_async() gets called inside watch_lock from caller
61fc317 librados: remove failed notify
0a61287 librados: s/handle/cookie/ in headers
f0614a1 ceph_test_rados_watch_notify: do not unwatch on invalid handle
27ceb16 ceph_test_rados_api_watch_notify: test ENOENT case
1a36eb3 PendingReleaseNotes: a few notes about watch/notify changes
a824be9 test_async_driver: fix warning
7f8ffae osdc/Objecter: set last_error before async error event delivery
26440fd osdc/Objecter: use RWLock for watch_lock
5c0a8c4 osdc/Objecter: make watch_check time reflect async delivery
955a2f0 osdc/Objecter: use recast LingerOp* as OTW cookie, too
14e933d librados: use (gid,cookie) to identify notify participants
5e99450 librados: include missed watchers in notify reply data
32043a3 encoding: multiset encode/decode
9d9e66e osd: rejigger watch connect/disconnect callers
8823369 osdc/Objecter: ignore pings from previous registrations
45aaa34 osdc/Objecter: only reconnect watches; skip ack unless needed
e8df077 osdc/Objecter: drop ACK callback for watch
e72035f librados: move watch/notify into the Objecter
cd6a4aa rados: break out notify replies by client
de9f18d osdc/Objecter: take Finisher ref from creator
8ec0af4 librados: use Objecter's linger_id as the cookie
34c9d72 osdc/Objecter: spit out linger register step
5f90c20 osdc/Objecter: expose LingerOp instead of linger_id
889cd87 messages/MWatchNotify: print more nicer
0377850 librados: watch_check() to check on status of watch
8c867b8 ceph_test_rados: use new watch/notify API
42e4baa librados: unwatch doesn't need the oid argument
85f336d rados: use new notify API
ea53983 librados: no need for '2' suffix in c++
219f824 librados: mark old rollback call deprecated
d3ec70e librados: mark old watch calls deprecated
5e794c1 librados: mark old object listing api deprecated
1b6bcfe librados: mark old rollback method deprecated
6c83ec5 librados: mark deprecated watch/notify methods with deprecated attribute
b575194 scratchtoolpp: suppress deprecation warnings
cdc9f5f ceph_test_rados_api_watch_notify: test watch disconnect, reconnect
300131e osd: send watch DISCONNECT to client when a watch is removed
14cd719 ceph_test_rados_api_watch_notify: reorder tests
a4eeaf5 ceph_test_rados_api_watch_notify: drop 'Test' suffix
0601b5f ceph_test_rados_watch_notify: fix signed/unsigned warnings
2c6076b ceph_test_rados_api_watch_notify: verify notify after missed notify works
b4d769c osdc/Objecter: fix whitespace
485daab osdc/Objecter: factor out _send_op_account()
872012f osdc/Objecter: skip ping if PAUSERD
f68fcc0 osdc/Objecter: objecter_inject_no_watch_ping
b583152 osdc/Objecter: stop sending pings once we get an error
26e2fc7 osd/Watch: set timeout event for new watchers
83189b0 make ping verify we are connected
b76fc39 osdc/Objecter: only ping watches (not notifies)
1a82cc3 osd, librados: distinguish between old and new watchers
10ac629 librados: tell watcher if we cause a notify timeout
7f00b72 osd/Watch: inform watchers when they cause a notify timeout
e0e90f7 librados: EINVAL on bad args to watch2
aa7ea5b librados: behave if errcb is NULL
7c8a1cd osd/Watch: drop redundant in_progress_watchers
66747c8 osd/Watch: fix comment typo
e8f36ef ceph_test_rados_api_watch_notify: verify we get the right # of notifies
29802bf ceph_test_rados_api_watch_notify: s/handle/cookie/
89e033c clean up CEPH_WATCH_EVENT_* namespace, and make COMPLETE distinct
bdef13c osdc/Objecter: send regular PING ops
909bdbc osdc/Objecter: queue an error if reconnect fails
e424103 osdc/Objecter: separate WATCH from RECONNECT
5e113ce rados: improve watch command output
22572a3 librados: add infrastructure to deliver an error notification
c973c93 librados: define error callback
97661e1 librados: remove crufty declaration
d44bd2b osd/ReplicatedPG: handle PING and RECONNECT watch ops
2288f31 librados: define RECONNECT and PING watch ops
2e508d0 osdc/Objecter: fix assert_src_version
7372013 librados: use new watch op codes; simplify Objecter helpers
0d6aa20 librados: define CEPH_OSD_WATCH_OP_*
6af4e1f librados: unconditionally pass WATCH_NOTIFY to legacy callback
6183dcc osd: allow multiple watchers/notify replies per client
8b409d4 librados: include notifier's gid in notify
e1a3bc8 ceph_test_rados_api_watch_notify: test notify2 api
7589bfc librados: update notify2 API to accept reply payloads
81cdff2 osd: implement notify ack payloads
7e0c4efc librados: define updated watch/notify interface
12940c9 librados: drop useless ver arg to _notify_ack
22c1d9b (origin/wip-rados-include) librados: Fix rados include problem reported by "sponce"
7b621f4 rgw: run radosgw as apache with systemd
3f2f42d doc/release-notes: v0.89
237b29c Changed os-recommendation table sorting to remove implied bias.
a6102f0 documentation: add centos 7 to ceph-deploy installation
7631b10 os: add filestore_fadvise to control whether use posix_fadvise.
1fba28f WBThrottle: Call posix_fadvise to free page cache if nocache set in clear().
e42df6a (origin/wip-mon-mdsdne) MDSMonitor.cc: fix assertion caused by MDSMap::STATE_DNE state
d3ee89a (origin/wip-10229) osdc/Filer: use finisher to execute C_Probe and C_PurgeRange
43d5c7c crush: fix crush_calc_straw() scalers when there are duplicate weights
85498bc crush: fix distortion of straw scalers by 0-weight items
6edaf4e (origin/wip-10231-gperftools-location) heap_profiler: support new gperftools header locations
d5e2c2c (origin/wip-unsigned) mon: fix signed/unsigned comparison warning
7c12036 crush/builder: break out new version 1 of crush_calc_straw
f35a3d8 crush: pass crush_map * to various builder methods
9565621 crush: default to straw_calc_version 1
50e2cee crush: add straw_calc_version tunable
c133a83 crush/CrushWrapper: dump chooseleaf_vary_r with other tunables
3877f00 crush/CrushTester: add new --show-mappings option
294b06c crushtool/CrushTester: output utilization even with 1 batch
3506293 crush: recalculate straw scalers during a reweight
7a99b48 osdmaptool: --test-map-pgs-dump
68fdc0f (tag: v0.89) 0.89
d98cec7 (origin/wip-cephtool-exec) qa: fix teardown in cephtool's test_mon_mds
8cd1fdd (origin/wip-10080) SimpleMessenger: allow RESETSESSION whenever we forget an endpoint
8e5dbe7 common/perf_counters: Remove the duplicated code.
963b764 test/perf_counters: Replace perfcounters_dump to perf dump.
eafb224 test/perf_counters: Add test case for cmd 'perf reset'
5f8186b common/perf_counters: Add 'perf reset all|perfcountername' for 'ceph --admin-daemon'
5d3bff0 doc: rm Fedora minor versions in os recommendations
0d4dd10 (origin/wip-snapmapper) os/ObjectStore: drop tolerate_collection_add_enoent
bc5a22b osd: require SNAPMAPPER feature from peers
b743a95 packaging: package ceph-disk(8)
2497f16 doc: rm old releases in os recommendations page
0bb2e1e doc: clarify "B" flag in os recommendations page
3047c9e (origin/wip-cephtool) qa: cephtool/test.sh use regular strings to list tests
e3e5741 tests: vstart_wrapper.sh must call vstart.sh with a list of daemons
946bebd crush: add dprintk's for crush_calc_straw
4e955f4 (origin/wip-10211-erasure-code-buffer-alignement) erasure-code: enforce chunk size alignment
73ad2d6 common: allow size alignment that is not a power of two
9ade88e common: add bufferlist::rebuild_aligned_size_and_memory
56dae09 doc: Reformatting on rbd replay doc.
b8f6b5f doc: Added rbd-replay-many and restructured index.
54d5ed3 doc: Fixed index syntax.
3012c4a doc: add CentOS 7 to recommended OSes
6862891 doc: Adds man page for ceph disk in TOC.
491da51 (origin/wip-9997-1) client: invalidate kernel dentries one by one
2fa4884 (origin/wip-flush-journal-fix) mds: fix race of trimming log segments
70e1a5d (origin/wip-doc-rbd-replay) doc: Document RBD Replay
131f092 mds: don't blindly create empty object when dirfrag is missing
9b9e3ed mds: allow choosing action for wirte error
dafef3c mds: add asok command to force MDS readonly
6b59ead client: handle MDS 'force readonly' message
f716903 mds: notify clients when MDS goes to readonly
e0637b4 mds: add helper to force MDS readonly
5db3bbf mds: disallow reconnectiong to readonly MDS
44d9abb mds: disable misc internal activitiles when MDS is readonly
cfef515 mds: disallow slave requests when MDS is readonly
4aed047 mds: keep locks in sync state when MDS is readonly
2d4a746 mds: don't trim log when MDS is readonly
4f6474f mds: disallow write operations when MDS is readonly
01df222 (origin/wip-10209) osd: tolerate sessionless con in fast dispatch path
0f1c9fd msg: do not const methods that return a mutable pointer
0d6c803 (origin/wip-kill-category) osd/osd_types: drop category from object_info_t
5ecdce3 osdc/Objecter: drop category from copy-get
d229548 osd/ReplicatedPG: drop cateogry support from CREATE
4e1f4cf rados: drop optional 'create [category]' arg
3008ca4 rados: change 'df' output now that categories are gone
39c46a2 PendingReleaseNotes: not about dropping category
ee4f6d7 osd/osd_types: drop useless conditionals on object_info_t decode
ee3b5b2 osd/osd_types: remove cat_sum from object_stat_collection_t
c94c33b mon/PGMonitor: do not report per-category stats
387d055 osd: stop doing per-category accounting
bebcd14 librados: drop create category args
5020bbe librados: add new get_pool_stats() variant; deprecate others
080fae6 librados: mark category args and ops as unused
dff5b73 AsyncMessenger: Make WorkerPool use CephContext's singleton
7fed5de CephContext: Add AssociatedSingletonObject to allow CephContext's singleton
0659381 documentation: replace deps.{deb,rpm}.txt with scripts
e0190bd KnieticStore: add necessary header file
49bedd4 ObjectStoreBenchmark: Used to perf ObjectStore::Transaction
929fcd6 better systemd support
3376fee Cleanup noop in message
5b5493d (origin/wip-9881) mds: implement "flush journal" asok
efeaaaa mds: in segment expiry, use end instead of start
2ec6773 mds: fix MDLog I/O callback without finisher
dba078a Cycles: A precious performance profile tool using rdstc
62a8f2d added consts, cleanup Signed-off-by: Michal Jarzabek <stiopa@gmail.com>
1a8aea7 AsyncMessenger: Fix thread destroy when no active Messenger
faa4cbb doc: minor fix in ceph-authtool man page
0fe5bc6 osd: log message content cosmetics
8658911 common: admin sock output XML elements whitespace
b9d7f79 Add "make check" dep python-virtualenv in deps.rpm.txt
f714697 AsyncConnection: Skip delete_file_event if sd < 0
02c602f AsyncConnection: Avoid deadlock for AsyncConnection::lock
5e478a5 Event: Fix Coverity error
30194e8 AsyncConnection: Introduce "signal" event
ea3d4d7 AsyncConnection: Ensure "mark_down" complete when returned
bdedad2 AsyncMessenger: Async event threads shared by all AsyncMessenger
c10d639 Add isa-erasure yasm dep for deps.rpm.txt
6a98dac rpm: unconditionally package rbd-replay-prep(8)
dbb5a48 (origin/wip-librados-symbols) librados: Only public API symbols from the shared library
03a61d2 Minor typos and trailing spaces
782a74c KineticStore: Fix compile error and add _test_init
21798f9 doc: fix some typos in ObjectStore.h
016080d doc: Adds the updated man page for ceph-disk utility.
8a48847 doc: Updates the man page for ceph-disk utility with some changes.
3b00c6f safe_io: do not set ending \0 in safe_read_file()
e6410eb added some consts Signed-off-by: Michal Jarzabek <stiopa@gmail.com>
17b5fc9 (origin/wip-10135) mon: OSDMonitor: allow adding tiers to FS pools
9a118d5 doc: Adds man page for ceph-disk utility.
242dd1c doc: Removes ceph-deploy usage instances from ceph-disk man page.
cb820f8 erasure-code: test NEON arch selection logic
a788829 erasure-code: include new headers in distribution
59f78b0 erasure-code: always compile SSE and NEON tests
990c6d5 erasure-code: build and use a NEON jerasure variant
8351fd6 erasure-code: gf-complete use neon enabled branch
987d54b aarch64: add support for HW_CAP based neon runtime detection
cec00c9 autotools: ARM/AArch64 NEON detection similar to x86
ba520bf erasure-code: conditionally build jerasure sse3/sse4 plugins
0b985d2 (origin/wip-10185-neon) arch: fix neon feature detection
24eb564 Remove pidfile and asok after stopping ceph
7dcc850 doc: Updates man page for ceph-disk utility.
e983230 remove unneeded include file
a1ba385 doc: rgw document s3 bucket location features
0c33930 (origin/wip-10151) mon: fix MDS health status from peons
a450cab doc: Adds man page for ceph-disk utility.
4b35ae0 rgw: check for timestamp for s3 keystone auth
61cae54 (origin/wip-10173-autogen) autogen.sh: git submodule sync
00da974 test: extend quota test case
5515cc4 client: fix problem with move files between quota tree
b2c15d6 mds: Fix a problem with rstat refresh.
12f1f21 (origin/wip-mailmap) mailmap: Update Warren Usui's attribution to Red Hat
43c75ee mailmap: Update Tyler Brekke's attribution to Red Hat
9df4624 mailmap: Update Tamil Muthamizhan's attribution to Red Hat
fb74152 mailmap: Update Sandon Van Ness' attribution to Red Hat
c5d5e06 mailmap: Update Samuel Just's attribution to Red Hat
a6a2a05 mailmap: Update Patrick McGarry's attribution to Red Hat
4d2f63e mailmap: Update Noah Watkins' attribution to Red Hat
4ee3a87 mailmap: Update Neil Levine's attribution to Red Hat
12e511b mailmap: Update Mark Nelson's attribution to Red Hat
bdf534a mailmap: Update Ken Dreyer's attribution to Red Hat
df19410 mailmap: Update Josh Durgin's attribution to Red Hat
d9ee8d6 mailmap: Update John Wilkins' attribution to Red Hat
c84aa39 mailmap: Update Joao Luis' attribution to Red Hat
806a478 mailmap: Update Ilya Dryomov's attribution to Red Hat
eaa9889 mailmap: Update Dan Mick's attribution
330b09d mailmap: Update Alfredo Deza's attribution to Red Hat
1853af3 mailmap: Update Greg Farnum's attribution to Red Hat
9d5e4ed check endpoints is not empty before use it.
5541348 client: support listxattr for quota attributes
5470914 lockdep: do not use $CEPH_LOCKDEP for g_lockdep
9ba17a3 rgw-admin: create subuser if needed when creating user
25fe088 GenericObjectMap: Fix typo
e424d07 client: Fix problem in get_quota_root with update parent and ancestor
6c7bb8c blkdev: using strncpy instead of strcpy.
1fe8b84 PGLog: include rollback_info_trimmed_to in (read|write)_log
627f138 (origin/wip-sepia-update) Updated sepia hardware list.
7a868fd ReplicatedPG: remove unused parameter in function write_update_size_and_usage
0d89db5 (origin/wip-9557) mds: store backtrace for straydir
a79ba32 mds: verify backtrace when fetching dirfrag
5177759 KeyValueStore: Fix parse_header_key
9d84d2e (origin/wip-10018-primary-erasure-code-hinfo) osd: deep scrub must not abort if hinfo is missing
92662a9 mailmap: Loic Dachary name normalization
77c1a35 rgw: support swift storage policy api
f692bfe PG: always clear_primary_state on new interval, but only clear pg temp if not primary
a4b42d6 doc: erasure-code developer documentation typo
2601a25 StoreTest: Add scrub situation to tests
b4fa384 KeyValueStore: Add KEY_ENDING sign to the end of key
b2e8254 StoreTest: Clean up warning
dcecfb8 MemStore: Return -ENODATA when collection_getattr hit nonexist attr
7a9b755 KeyValueStore: Fix collection_getattrs problem when zero-length attr
877237f KeyValueStore: Return -ENODATA if collection_getattr is nonexist
00b275b StoreTest: Add collection_getattr(s) tests
ffb6f78 KeyValueStore: Remove assert for collection_getattr method
f3dab44 (origin/wip-10077) ceph_objectstore_tool: Add feature called set-allow-sharded-objects
b3021b0 ceph_objectstore_tool: Add utility routine get_osdmap()
86baf2d ceph_objectstore_tool: Clear ...INCOMPAT_SHARDS from feature if exporting replicated pg
d3d5852 FileJournal: add journal_discard to control ssd whether support discard
9f9eb67 FileJournal: Add ssd discard for journal which using ssd disk as journal.
10f6ef1 (origin/wip-10114-fix-warning) erasure-code isa-l: remove duplicated lines (fix warning)
c912116 (origin/wip-9665-ceph-disk-partprobe) autotools: add --enable-docker
26bf8d1 ceph-disk: test prepare / activate on a device
ecccb39 tests: helper to run unit / function tests in docker
23aaf6c ceph-disk: implement init=none for block devices
fed3b06 ceph-disk: run partprobe after zap
23e71b1 ceph-disk: use update_partition in prepare_dev and main_prepare
922a15e ceph-disk: encapsulate partprobe / partx calls
0e6db90 doc: update debian compilation dependencies
8613984 (origin/sponce-master) Fixed locking issue in the trun method of libradosstriper leading to potential race conditions - Fixes: #10129
9e53c35 (origin/wip-10128) tests: ceph_objectstore_tool.py test all variants of export/import
8c87f32 ceph_objectstore_tool: Make --file option consistent by treating "-" as stdout/stdin
0d5262a ceph_objectstore_tool: When exporting to stdout, don't cout messages
0d350b6 (origin/wip-10123) librbd: protect list_children from invalid child pool IoCtxs
de547c9 Fix bug #10096 (ceph-disk umount race condition)
06fc39c (origin/wip-9321) mon: PaxosService: can be readable even if proposing
d8a7db8 (origin/wip-9913) mon: Monitor: use session's entity name for audit log
125b58d mon: Monitor: forward session entity name to leader
ca8e1ef mon: Monitor: stash auth entity name in session
8773474 messages: MForward: stash auth entity name
948f207 mailmap: fix Rongze's affiliation
fe6679d Fix libstriprados::stat, use strtoll insdead of strtol
11aa383 doc: fix typos in diagram for incomplete write
2379c57 doc: fix incorrect equalities
625dd40 doc: fix typo (superfluous "no")
cbecab4 (origin/wip-10063-objectstore-tool-erasure-code) tests: ceph_objectstore_tool.py fix list-attr for erasure code
40717aa tests: ceph_objectstore_tool.py check for malformed JSON for erasure code objs
eaf1d1e tests: ceph_objectstore_tool.py fix off by 1 ATTR_OBJS handling
dcf09ae common: do not omit shard when ghobject NO_GEN is set
6d04b3c tests: run ceph_objectstore_tool.py from make check
4c94f17 tests: ceph_objectstore_tool.py skip if /dev/tty fails
fc435ff tests: ceph_objectstore_tool.py encapsulate init-ceph stop
0f3d7b1 tests: ceph_objectstore_tool.py main returns
e8f34bd tests: ceph_objectstore_tool.py replace stop.sh with init-ceph
e303d1a tests: ceph_objectstore_tool.py use a dedicated directory
235257c tests: ceph_objectstore_tool.py run faster by default
f04d4e7 tests: ceph_objectstore_tool.py run mon and osd on specific port
783378c tests: ceph_objectstore_tool.py can use a WARN cluster
74506d2 tests: ceph_objectstore_tool.py use env python
d1c4e5b vstart: use hostname -s instead of fqdn
cf2104d common: do not unlock rwlock on destruction
06a245a (origin/wip-execstack) Add annotation to all assembly files to turn off stack-execute bit
e25724b (origin/wip-warn-max-pg) mon: tighten pg vs osd warning bounds to 3x above/below 100 (target)
7f3dcdb mon/PGMonitor: add max pgs per osd warning
b70be56 mon/PGMonitor: make min pg warning based on pg *instances*
5eb662c mon/PGMonitor: fix summation when we adjust up/acting
d671e1c mon/PGMap: allow stat_pg_{add,sub} that only touches stats
cf24117 osd/osd_types: include up and acting count in pool_sum_t
c87bde6 PG: always clear_primary_state when leaving Primary
b10bd19 (origin/wip-dumper-coverity) tools: Close the fd before returning in Dumper
50f9edb (origin/wip-da-SCA-20141111) FileJournal.cc: fix _open() to return negative value in error case
0c8955b mailmap: Loic Dachary name normalization
b6d6180 test_async_driver: fix warning
175d6e0 doc: Removed separate build file for rpm.
a5a0d5c doc: Adds build-doc guidelines for Fedora and CentOS/RHEL.
4cdc9c7 doc: update release descriptions on packages page
3b28fd0 tests: fix cast compilation warning
088230e Improve readability of the exception
3c4b782 rgw: add location when data in another region.
35ae591 doc: update the OpenStack glance configuration
83e8b07 (origin/wip-librbd-symbols) librbd: Only public API symbols from the shared library
8dde6a6 (origin/wip-10052) ceph_test_rados_api_tier: fix cleanup of whiteouts
34e4d24 osd/ReplicatedPG: allow whiteout deletion with IGNORE_CACHE flag
a04bb13 Mailmap: add Rongze organization
ef2565e vstart.sh: complain less about fullish mon disks
cba4ed4 librados: Fix operator= null ptr references
156d17c os/FileJournal.cc: fix potential use after close cases
9314fe2 c_read_operations.cc: prevent potential null pointer deref
10fc8a2 tools/psim.cc: catch ceph::buffer::end_of_buffer exception
5f6b091 librados-config.cc: catch ceph::FailedAssertion exception
6fd2123 ceph_authtool.cc: catch ceph::FailedAssertion exception
fa98605 ceph_authtool.cc: catch ceph::buffer::end_of_buffer exception
3674c8c MDSMonitor.cc: remove cmd_getval for poolid
ed0d3ed st_rados_list_objects.cc: free resources in error case
4814cf7 net_handler.cc: close another socket leak
72c0156 net_handler.cc: close socket leak
0e03551 ceph_erasure_code_benchmark.cc: don't check unsigned for < 0
13504a3 ceph_erasure_code_non_regression.cc: prefer ++op for non-primitive iterators
c73c47e ceph_erasure_code_benchmark.cc: prefer ++operator for non-primitive iterators
3b31e74 crush/CrushWrapper.cc: prefer ++operator for non-primitive iterators
35ab4d7 rgw/rgw_gc.cc: silence cppcheck
699fc05 (origin/wip-10057) msg/simple: ms_die_on_skipped_message
20f99ca mds: don't overwrite reply's snapbl
6f8b96a (origin/wip-10095) crush/CrushWrapper: fix detach_bucket
a46fb02 Makefile: include 'ceph' in base target
585b906 msg/Makefile: add new header to tarball
2fe5c4c (origin/wip-9921) msg/Pipe: inject delay in stop_and_wait
2d69805 SimpleMessenger: Pipe: do not block on takeover while holding global lock
6e5bae4 mailmap: Dan Mick name normalization
5fdec03 mailmap: Xan Peng affiliation
e8a60ce mailmap: BJ Lougee affiliation
e8daba6 mailmap: Derrick Schneider affiliation
e386588 mailmap: Federico Gimenez name normalization
1cd7422 mon: ceph-monstore-tool must close()
d6be062 tests: fix compilation warning
0ee6437 doc: remove superfluous white spaces (for testing)
ee45f48 doc: Fix 2 syntax errors.
571c857 AsyncMessenger: Fix select driver for add_event
17ce4ec AsyncMessenger: Add tests for async drivers
ebc8875 AsyncMessenger: Support select for other OS such as Windows
59d8c94 qa/workunits/fs/misc/quota.sh: simple quota test
86f87bb fix
78d1e6c (origin/wip-9439) osd: Check filter ops for pgls and pgnls
9e05ba0 (origin/wip-9835) osd/OSD: use OSDMap helper to determine if we are correct op target
89c0263 osd/OSDMap: add osd_is_valid_op_target()
079a8d7 Add myself to <contact@intel.com>
5ce0919 ceph_objectstore_tool: Fixes to make import work again
a69b845 vstart.sh: warn less
6c80525 qa: handle CEPH_CLI_TEST_DUP_COMMAND on ceph osd create
3776f07 common/Formatter: fix JSON dump of floating point values
1b6cf7c mon/PGMap: fix {recovery,degraded,unfound}_ratio units, type
e27b0d9 mon: fix formatted 'pg stat'
0cff914 doc: correct grammar in RGW SSL cert installation
731ea68 doc: correct spelling of "fqdn"
40994c9 doc: enable RBD cache and socket on OpenStack deployments
e94d3c1 qa: allow small allocation diffs for exported rbds
09eefac Fix Yuan's mailmap
05a1c3f doc/release-notes: v0.88
90c5869 (origin/wip-7467) rgw: support multiple host names
1342548 (origin/wip-crush-tree) crush: fix tree bucket functions
e444b22 crush/builder: replace printf with an empty dprintk macro
109bcd4 (origin/wip-da-revert-10b68b) Revert "osd: detect (some) misordered ondisk tmaps"
4be687b (tag: v0.88) 0.88
d12fa35 AsyncMessenger: Fix large bufferlist send segment fault
d145cca AsyncMessenger: Try send in queue bufferlist
123d364 AsyncMessenger: Normalise log informations
fc4e4f2 AsyncMessenger: Release connection if stopped
4d4b7d0 doc/rados/configuration fix 'ods mkfs options' default
41b5dd2 (origin/wip-da-SCA-20141028) AuthSessionHandler.h: init protocol in constructor
dbfb63e src/librbd/librbd.cc: fix potential null pointer deref
4fc9428 osd/ReplicatedPG.cc: remove redundant check
a4cecda test/librados/c_read_operations.cc: fix invalid checks
97ed2ae rgw_rados.cc: remove dead code
e590d42 rados_sync.cc: fix xattr_diff() for the only_in_b checks
04517f0 bench_log.cc: catch ceph::FailedAssertion exception
60e7da9 osd/PGLog.cc: prefer empty() over size() for emptiness check
fea7097 (origin/wip-rbd-python-tests) librbd: Python unit tests now use unique pools and images
c11cf2a bufferlist: Don't call rebuild(), c_strt() call it if bufferlist not contiguous.
cd784ea (origin/wip-9854) osdc: Constrain max number of in-flight read requests
12913c0 AsyncMessenger: Eating up pipe buffer for waking up
2704914 (origin/wip-10045) common/Readahead: use correct lock when waiting on the pending ops
42b0a35 (origin/wip-scrub-coverity) mds: remove dead code from inode_t::compare()
f78cfa7 mds: CInode: catch exception by reference, not value
dafd335 osd/OSDMap: verify CRC on decode
33490b7 mon/OSDMonitor: populate Incremental::full_crc
3dcf5b9 osd/OSDMap: encode crc
93ec350 buffer: add iterator::get_bl()
3978c1d mon/OSDMonitor: handle MMonGetOSDMap
6f3d5cd add MMonGetOSDMap message
7009440 prevent random people from encoding the OSDMap
c0836ca osd: use encoded osdmap bl instead of reencoding
110c093 osd: warn if reencoding and OSDMap with fewer features than the mon
2f92d8d mon: use pre-encoded OSDMap for build_latest_full() MOSDMap message
50df613 reserve a few feature bits
c914df2 qa/workunits/cephtool/test.sh: ceph, not ./ceph
66b920a qa/workunits/fs/misc: combine sudo and echo effectively
197a2ab OSD: batch trim for pg_log
9850227 crush: fix incorrect use of adjust_item_weight method
2d7adb2 erasure-code: erasure_code_benchmark exhaustive erasure exploration
3ff2816 erasure-code: add erasure_code_benchmark --verbose
efe121d erasure_code: implement ceph_erasure_code to assert the existence of a plugin
49613cb erasure-code: ceph_erasure_code does not need to avoid dlclose
6fdbdff erasure-code: add corpus verification to make check
10c88c8 erasure-code: Makefile.am cosmetics
2c84d0b erasure-code: s/alignement/alignment/ typos in jerasure
7638b15 erasure-code: workunit to check for encoding regression
f590130 erasure-code: store and compare encoded contents
c44bdb1 erasure-code: document pool operations
54ee8ee KeyValueStore: move buffers from strip_header to BufferTransaction
a0c1f22 tests: use kill -0 to check process existence
17f5c36 tests: looping to wait for an osd to be up is expected
79f8b81 tests: increase timeout to accommodate slow machines
0b4ccbd tests: kill_daemon use $name.pid instead of pidfile
6741b71 tests: group workunits/cephtool/test.sh tests per daemon
0cb12c7 tests: run workunits/cephtool/test.sh
c3b51ef tests: remove vstart_wrapped_tests.sh
7a6ca17 tests: use different ports for each mon
bdca0ac tests: tolerate a disk 99% full
f80499e (origin/wip-flush-snaps) osd/ReplicatedPG: flush snaps immediately
560e22e (origin/wip-gtest-warnings) test: use unsigned ints to compare against size()
a21bca1 mailmap: Loic Dachary affiliation
740a1bd (origin/wip-10025) tools: error handling on journal import/export
3e0295f (origin/wip-doc-dumpling-to-firefly) doc: Added Dumpling to Firefly upgrade section.
15d487f MDS: clean up internal MDRequests the standard way
07e0831 MDS: CInode: break out of validation early on symlinks
f1677e7 common/ceph_strings: add some MDS internal op names to ceph_mds_op_name()
26736b2 MDS: add a flush_dentry() function, and wire it up to the admin socket
86384fe MDS: CInode: create a flush() function
063cd2f MDCache: handle internal ops in respond_to_request()
f82f6ef MDCache: make scrub_dentry schedulable and reentrant
3917402 MDCache: "handle" request_forward on internal ops
a4da522 Server: rename reply_request() -> respond_to_request()
cfac5c3 Server: rename reply_request -> reply_client_request; make it private
e980d1b Server: add snapbl to MDRequest and eliminate last explicit MClientReply
592be4d Server: use mdr->reply_extra_bl instead of explicit MClientReply
c9f8d11 Server: do not use explicit MClientReply if we don't need to
a65d986 Server: remove tracei and tracedn parameters from reply_request
515ab2d MDCache: add a scrub_dentry() function, and wire it up to the admin socket
fa75434 MDS: CInode: implement validated_data::dump()
0d6f8b6 MDS: CInode::validate_disk_state()
153aa20 Rebase: MDS: Add an MDSContinuation for ease of use
a7020dd Continuation: Add a new Continuation class.
c575d16 MDCache: create_unlinked_system_inode() as the guts of create_system_inode()
9441283 MDS: MDRequestImpl: provide filepath/filepath2 substitute for MClientRequest
adee21b MDRequest: dump internal op names as well as IDs
05d2444 MDCache: remove #if 0'd code
f8db040 mdstypes: add a same_sums() function to nest_info_t
af4bddd test/mds: unit tests for the inode_backtrace_t and inode_t compare() functions
4743f28 mdstypes: write inode_t::compare() function
7795a4e MDS: add operator==() and compare() for inode_backtrace_t
aed1498 MDS: CInode: add a fetch_backtrace() utility function
80fac9e mds: add an MDSInternalContextWrapper and MDSIOContextWrapper
dc307ac tools: persist trimmed_pos in journal dump
fb29e71 tools: fix MDS journal import
abc995b qa/workunits/fs/misc: combine sudo and echo effectively
3aa7797 qa: use sudo even more when rsyncing /usr
2a61735 Fedora 19 uses systemd but there is no systemd-run available in the release (rhbz#1157938), this patch makes sure that the init scripts check for availability of systemd-run before they use it (otherwise, they fall back to the default method)
5ac05d4 Fix tests on btrfs: leftover subvolumes removed
762eda8 (origin/wip-blacklist-respawn) osdc: fix Journaler write error handling
61ebfeb (origin/wip-10030) librbd: don't close an already closed parent image upon failure
d13b478 EC: Allow bench.sh to test ISA backend also
52cb44c (origin/wip-9887) osd, mon: Send initial pg create time from mon to osd
2e63944 (origin/wip-rbd-test-fixtures) librbd: Refactor librbd unit tests to use test fixtures
5d9f36f (origin/wip-9918) rgw: update swift subuser perm masks when authenticating
ef6d3ad (origin/wip-9973) rgw: remove swift user manifest (DLO) hash calculation
b1bfc3a (origin/wip-9479) rgw: send back ETag on S3 object copy
3196345 (origin/wip-9478) rgw: S3 object copy content type fix
3103c8a ObjectStore: Fix a error comment.
a1aa70f ObjectStore: Don't use largest_data_off to calc data_align.
8ba504d buffer: Add _memcopy_count to track total count of memcopy by rebuild/rebuild_page_aligned/c_str.
3d45a68 (origin/wip-log-client) mds: fix log_client config
7dc2ca8 osd: configure log_client properly
da6a8a3 mon: move log config parsing into LogClient.h helper
0fd54a7 move Monitor::update_log_client to LogChannel::update_config
4561aff move get_conf_str_map_helper to str_map.h (from Monitor.h)
84fec86 osd: add 'cluster_log [type] [message ...]' tell command
4f40975 commong/LogEntry: string_to_clog_type
705a1e3 osd: cache pool: delete dead code in ReplicatedPG::agent_choose_mode
fe7bf06 (origin/wip-9877) rgw: RGWRados::get_obj() returns wrong len if len == 0
f4ee949 osd: cache pool: flush object ignoring cache min flush age when cache pool is full Signed-off-by: Xinze Chi <xmdxcxz@gmail.com>
6da9405 doc: Edited Key/Value store config reference.
03be944 doc: Added Key/Value store config reference to index.
72fc262 (origin/wip-doc-openstack-juno) doc: Update for OpenStack Juno.
65c3350 (origin/wip-9977) tools: skip up to expire_pos in journal-tool
e0166a2 (origin/wip-9986) osdc/Objecter: Fix a bug of dead looping in Objecter::handle_osd_map
31c584c osdc/Objecter: e shouldn't be zero in Objecter::handle_osd_map
093c5f0 (origin/wip-9987) mon/PGMap and PGMonitor: update last_epoch_clean cache from new osd keys
3fb731b mon/PGMap: invalidate cached min_last_epoch_clean from new-style pg keys
8924158 (origin/wip-6756) JounralingObjectStore: journal->committed_thru after replay
122c503 client: Inform mds file size when approaching quota limit
a50b8eb client: Enforce quota check when changing file size
bbfeaae client: Forbid moving files across quota trees
ce77ce5 client: Enforce quota check when creating new file
5a1e334 client: Add helper for quota check
65ddf0c client: Handle MClientQuota to update quota information
2ea274b client: Update qtree when fs tree changed
fcf51b6 client: Handle getxattr to show quota information
11979bd client: Add QuotaTree functions
1cb86c6 client: Add quota config to config_opts.h
a07c88f client: Get root's parents inode when mount -r used
0e4c9c9 client: Add quota field to Inode
f435aaf client: Add class QuotaTree type
4dca37d mds: Push new rstat and quota info to client
cb8f25a mds: Add broadcast_quota_to_client routine
43938c9 mds: Export cap to auth mds when mds handle MGatherCaps
d7dfc79 mds: Push quota info to client by MClientReply
ea2ef4c ceph: Add MGatherCaps message type
fb57e84 ceph: Add MClientQuota message type
1d1a340 mds: Handle quota update
1914031 mds: Add quota field to inode_t
da488ce test: add test case for quota_info_t
a071201 ceph: Add quota_info_t to store quota info
3619ea8 ceph: Add quota feature flags
a554766 (origin/wip-buffer) buffer: implement list::get_contiguous
4a9ad7d osd/ReplicatedPG: fix compile error
29d7786 ceph.in: remove '--' from injectargs, if there, as well
7533245 Fix rados_shutdown hang forever when using radosstriper
c5f8d6e (origin/wip-9752-past-intervals) osd: past_interval display bug on acting
50c2c75 (origin/wip-9944) osdc/Objecter: fix null dref when pool dne
1eb9bcb (origin/wip-9945) messages: fix COMPAT_VERSION on MClientSession
c96fe59 doc: update RBD for Juno
56ee3b4 doc/release-notes: it's 8MB, not 32MB
f7431cc msg/Pipe: discard delay queue before incoming queue
c51c8f9 (tag: v0.87) 0.87
ce6f22d AsyncMessenger: Add kqueue support
5a4c3aa (origin/wip-9800-giant) client: allow xattr caps in inject_release_failure
214ac9f (origin/wip-doc-fs-quickstart) doc: include 'fs new' stuff in cephfs quickstart
1fef4c3 Get the currently atime of the object in cache pool for eviction
66b4cd9 tests: fix signed/unsigned warning
4b87a81 rbd: Fix the rbd export when image size more than 2G
ef1980f osd: tiering: calculate object age during eviction when there is no hit set
6fca23f (origin/wip-9919-injectargs-side-effects) qa: avoid qa/workunits/cephtool/test.sh unstability
5691c68 client: allow xattr caps in inject_release_failure
5950710   Fix the match error when starting OSD daemons.   If we have osd.7 and osd.77 on the same host, osd.7 will not be mounted if   osd.77 is mounted.   Signed-off-by: huangjun <hjwsm1989@gmail.com>
abd3fd3 fix can not disable max_size quota
622c5ac osd: cache tiering: fix the atime logic of the eviction
b90b483 (origin/wip-objectstore) remove collection_rename
a80f2f6 ceph_filestore_dump: use "remove" marker instead of collection rename
5dc990c osd: remove pgs with "remove" flag on startup
856504c ceph_test_filestore_idempotent_sequence: drop collection_rename
6f2b274 os/FileStore: assume COLL_ADD is always followed by COLL_REMOVE
cfa2290 os/ObjectStore: remove collection_{add,remove}
eb1c330 ceph_test_objectstore: s/collection_remove/remove/
11e98fd ceph_test_filestore_idempotent_sequence: use collection_move
ffda7c4 osd: s/collection_remove/remove/
7093ce6 os/FileStore: remove old collection conversion code
11fcad5 os/ObjectStore: remove version calls from interface
de52873 osd, filestore: move automatic upgrade into mount()
86919f5 osd, filestore: mount in upgrade() caller
5f8a1df osd, filestore: move convertfs into FileStore
b889b6b remove ceph_dupstore
a5184cf (origin/wip-9869) client: cast m->get_client_tid() to compare to 16-bit Inode::flushing_cap_tid
a4caed8 (origin/wip-9894) client: fix I_COMPLETE_ORDERED checking
387d5d8 (origin/wip-vstart) init-ceph: make ./init-ceph behave from src dir on systemd
a6357f2 unittest_shared_cache: fix build line
1abb620 doc/release-notes: giant notes
6a43809 rgw_rest_client.cc: remove self assignment of new_info.effective_uri
09edada test/librbd/fsx.c: fix indentation (NESTING_INDENT_MISMATCH)
c92d47e libradosstriper/striping.cc: fix strdup memory leaks
be674c5 test/libradosstriper/striping.cc: fix wrong indentation
4f5d1f4 msg/async/Event.cc: use static_cast instead of c-style cast
c952cb9 rgw/rgw_formats.cc: fix realloc memory leak
1cef833 arch/neon.c: check result of fread()
1bd2abe cls_rgw_client.cc: fix potential null pointer deref
56de4ca SyntheticClient.cc: check return value of getdir()
6c4a08c SyntheticClient.cc: remove empty lines in if/else blocks
6f614fc test_rbd_replay.cc: fix va_list parameter handling
4522a68 AsyncConnection.cc: prefer ++operator for non-primitive iterators
0214653 mon_store_converter.cc: move convert() call out of assert()
2ecd43b test_str_map.cc: remove unused variable
7f446ea rgw/rgw_rest_user.cc: reduce scope of key_type
5c7b8c6 rgw/rgw_rest_swift.cc: use empty() instead of size()
17c327f rgw/rgw_rest_s3.cc: use !empty() instead of size() > 0
84a5c84 vstart.sh: Fix usage
a9a2185 (origin/wip-crush-link-id) mon: fix `osd crush link` id resolution
1877670 Remove dead code in EC LRC plugin
a05dedc check to_remove before setting transaction
f99c5f9 rgw/rgw_rados.cc: remove unused variable 'objs'
7954562 osd/ReplicatedPG.cc: use !empty() instead of size() > 0
912743c PGLog.cc: reduce scope of variable
ddfdcc3 common/escape.c: add cppcheck-suppress
52ca2b1 fuse_ll.cc: use reinterpret_cast instead of c-style cast
61872e4 JournalScanner.cc: reduce scope of local variable
94a0ec1 test_disk_bw.cc: reduce scope of variable
abb2b80 objectstore/store_test.cc: reduce scope of variable
5e9492c TestErasureCodeIsa.cc: reduce scope of 'err' variable
170db69 TestCrushWrapper.cc: reduce scope of variabele
8ebe9e9 test_sharedptr_registry.cc: reduce scope of local variable
f2340aa test_shared_cache.cc: reduce scope of local variable
c01e7d2 TestSignalHandlers.cc: add cppcheck-suppress nullPointer
10ddfbf rgw_rest_user.cc: reduce scope of key_type in several places
53f2dad rbd-replay-prep.cc: reduce scope of variable
be66b82 osd/ReplicatedPG.cc: reduce scope of variable
f4de437 osd/PGLog.cc: reduce scope of variable, remove not needed code
3d61d8a osd/PG.h: add cppcheck-suppress
f4f652d os/chain_xattr.cc: reduce scope of some variables
ca347b0 os/KeyValueStore.cc: reduce scope of variables
9d87448 os/HashIndex.cc: reduce scope of variable
935edd7 mon/OSDMonitor.cc: reduce scope of variable
48a1dc3 mds/Server.cc: reduce scope of variable
d62b96f mds/MDS.cc: remove unused local variable
2f9bf47 ErasureCodeLrc.cc: reduce scope of variable
d9abd53 ErasureCodeIsa.cc: reduce scope of variable
e145bff ErasureCodePlugin.cc: reduce scope of variable
c3ee13a cls_rbd_client.cc: reduce scope of variable
53e2ba0 mailmap: Federico Gimenez affiliation
eea9803 (origin/wip-enoent-race) os/LevelDBStore, RocksDBStore: fix race handling for get store size
06a73c3 doc/release-notes: v0.87 giant (draft)
ecbbf87 (origin/wip-da-SCA-20141010) Paxos.cc: use reinterpret_cast instead of c-style cast
784f6d5 fuse_ll.cc: use reinterpret_cast instead of c-style cast
3994cca librados.cc: use static_cast instead of c-style cast
719dc17 Revert "Enforce cache size on read requests"
71d3202 Revert "osdc: Fix ObjectCounter::_readx perf counters"
c2cebe5 Revert "osdc: Fix compiler warning"
a1f23b7 Revert "rbd: ObjectCacher reads can hang when reading sparse files"
b808cdf Revert "Fix read performance regression in ObjectCacher"
c4b2abd .gitmodules: ignoring changes in rocksdb submodule
082416f (origin/wip-rbd-revert) Revert "Enforce cache size on read requests"
544b9a8 Revert "rbd: ObjectCacher reads can hang when reading sparse files"
3b1eafc Revert "Fix read performance regression in ObjectCacher"
d8442eb (origin/wip-rwtimer) common/Timer: kill RWTimer
f76f83c (origin/wip-9873) osdc/Objecter: fix tick_event handling in shutdown vs tick race
4848435 common/Timer: recheck stopping before sleep if we dropped the lock
8d51142 erasure-code: remove LRC dead code
9d09e37 ECTransaction: Remove unused typedef.
60eaeca .gitmodules: ignoring changes in rocksdb submodule
a9dd4af rgw: send http status reason explicitly in fastcgi
44a8d59 (origin/fix-fstat-mode) java: fill in stat structure correctly
cb9262a (origin/wip-9806-giant) Objecter: resend linger ops on any interval change
1a3ad30 ReplicatedPG: writeout hit_set object with correct prior_version
8ae942a Remove unnecessary expressions about conf_journal_sz
024efeb EC: document the LRC per layer plugin configuration
a460c3b check rocksdb library when '--with-librocksdb' option is enabled
95a0ee1 qa: use sudo when rsyncing /usr so we can read everything
fa07c04 qa: use sudo when rsyncing /usr so we can read everything
4128814 FDCache: purge hoid on clear
3abbd4c shared_cache: add purge and tests
c116b4b shared_cache::add: do not delete value if existed
227ecd8 (origin/wip-9859) mon: Monitor: MMonGetMap doesn't require caps
9803ced (origin/wip-init-radosgw) init-radosgw.sysv: set ulimit -n before starting daemon
e81d887 Make better error reporting for client's call to rados.Rados
d9ff3a6 PG:: reset_interval_flush and in set_last_peering_reset
a49d745 objecter: Unlock in shutdown before waiting for timer thread
bc8fd49 erasure-code: use ErasureCode::SIMD_ALIGN in ceph_erasure_code_benchmark
c894812 erasure-code: add ErasureCode::encode unit test
0749a29 erasure-code: expose ErasureCode::SIMD_ALIGN as a const
abc1cfb ceph_erasure_code_benchmark: use 32-byte aligned input
fdeeeb1 erasure code: use 32-byte aligned buffers
3ce0615 erasure code: use a function for the chunk mapping index
6154339 common: add an aligned buffer with less alignment than a page
681dad8 common: remove dead code in buffer.cc
12f1151 (origin/wip-9852) mon: MDSMonitor: have 'filesystem_command' return int instead of bool
c589f3f mon: MDSMonitor: proper error output if pool DNE on 'add_data_pool'
52180a5 mon: MDSMonitor: update function doxygen description
64cf8ea (origin/wip-msgr) msg/async/AsyncConnection: drop unused port
86d3b18 msg/Messenger: allow ms_type 'random'
57d8195 msg/Makefile: keep headers
c025632 msg/async: rename ms_event_ -> ms_async_, drop unused config options
ddc9bc0 libcephfs.cc: use reinterpret_cast instead of c-style cast
fbf89f5 (origin/wip-9857) rbd: Correct readahead divide by zero exception
d9e340c Makefile.am: remove also old *.o/lo files
89eb2fe crush/CrushWrapper.cc: use reinterpret_cast instead of c-style cast
32665fa client/Client.cc: prefer empty() over size() for emptiness check
4cf3b5c FileJournal.cc: use reinterpret_cast instead of c-style cast
e72dfb4 Default configure with nss instead of cryptopp
2ec3609 (origin/wip-9372-injectargs) cli: CEPH_ARGS must be before injectargs
a566610 doc: update injectargs syntax
a458bd8 cli: do not parse injectargs arguments twice
f1afb18 cli: add verbose information related to argument parsing
a4fcc21 mailmap: Jiantao He name normalization
b42627b mailmap: Ma Jianpeng name normalization
13643d6 mailmap: Wyllys Ingersoll affiliation
82ce82c mailmap: Jiantao He affiliation
d80ea6a mailmap: Mehdi Abaakouk affiliation
4eee5f0 mailmap: VRan Liu affiliation
d8b260a mailmap: Yann Dupont affiliation
65be257 Fix read performance regression in ObjectCacher
349eb51 (origin/wip-9836-test-mon-id) tests: mon id is incorrectly skipped
9fbc083 (origin/wip-9031-9262) rados command: Add format support for ls operation
81f1a54 doc: Changes to librados to fix doc errors
09a6186 doc: The dot package is included in graphviz package
aae0976 doc: Remove unused PendingReleaseNotes file
58d3b7f rados command: Disable rados export/import (see feature #9403 to enable again)
feeda6b rados command: Minor namespace fixes
f5ebc92 pybind, test: Use new rados_nobjects_list_open() variants
d133315 test: Improvements to allow more thorough clean up between tests
a5a9a5f test: New and updated testing for pgls of all namespaces
9f772c8 rados command: Enhance ls output to show namespaces
a03f85a osd, osdc, librados, tools, rgw: Implement pgls of all namespaces
b5ca735 rados: Fix ObjectIterator instantiation to specify correct value_type
aa837b0 pybind: Add previously missed basic namespace to python bindings
760dddb doc: Add namespace to description of rados_ioctx_t
3de15e8 test: Handle destructor of KvStoreBench by adding io_ctx_ready bool
21a0eb3 test, key_value_store: Use pool rbd since no default data pool present
d7a8148 ceph_test_rados_api_*: expose RadosTest::nspace Expose RadosTestEC::nspace Rename others to nspace for consistency
e42fb5e Revert "ceph_test_rados_api_*: expose nspace"
ac3c1cb (origin/wip-9820) qa/workunits: cephtool: don't remove self's key on auth tests
98d7760 (origin/sponce-wip-9356) Added missing semaphore in libradosstriper AIO tests leading to potential memory corruption and thus test failures
f26cd1b Fixed remaining part of the seg fault described in bug 9356 by adding reference counting to CompletionData
783fc66 Fixed part of the seg fault described in bug 9356 by adding reference counting on RadosReadCompletionData
52c97b0 Fixed part of the seg fault described in bug 9356 by cleaning reference counting on MultiAioCompletionImpl
5299db3 Cleanup up useless method release in MultiAioCompletionImpl. It was exactly equivalent to put
777fe21 Updated names of default pools created at startup
ea100ac KeyValueStore: Add clone op detect to promote error
21dc6af mailmap: Ilya Dryomov transition from Inktank to Red Hat
1037193 mailmap: Greg Farnum name normalization
f207416 mailmap: Cheng Cheng name normalization
f76a676 osd: log when scrub,deep scrub, repair starts
64d977b client: fix signed/unsigned compilation warnings
cb290a1 (origin/wip-adamcrume) osdc: Fix compiler warning
2ae1cba mon: MDSMonitor: wait for osdmon to be writable when requesting proposal
0dd473c mon: MDSMonitor: have management_command() returning int instead of bool
91b2a2b mon: MDSMonitor: don't return -EINVAL if function is bool
1d1ae41 mon: MDSMonitor: check all conditions are met *before* osdmon proposal
07b7f10 mon: MDSMonitor: return if fs exists on 'fs new'
2c06413 (origin/wip-mds-coverity) mds: fix null dereference
9e6ae73 (origin/giant-unknown-locktype) mds: reply -EOPNOTSUPP for unknown lock type
bb9add6 test: fix compile warning in bufferlist.cc
a49255f librbd: fix compile warning in librbd/internal.cc.
69b5c72 doc: updates on Backfill Reservation
4606af7 (origin/wip-9526-crush-rename-bucket) mon: unit tests for osd crush rename-bucket
aa67560 mon: add the osd crush rename-bucket command
29d13d4 crush: unit tests for CrushWrapper rename item/bucket methods
30f3ac3 crush: add CrushWrapper::rename_bucket and can_rename_bucket
5e2a826 crush: add CrushWrapper::rename_item and can_rename_item
f810710 add unittest for Striper::get_num_objects
236895e crush: improve constness of CrushWrapper methods
7b66ee4 when non-default striping is used, internal methods can operate on extra objects
3741aab (origin/wip-9790-display-auid) auth: unit tests for auid display
5558afa qa/workunits/rbd/import_export.sh: be case insensitive
fcc3692 auth: add display auid to KeyServer::encode_secrets
fa2ff33 auth: add display auid to KeyRing::encode_formatted
2cbebc3 doc: correct command of `config push`
107cb0d rgw: correct "If-Modified-Since" handle.
ac92c45 (origin/wip-client-flock) qa/workunits/fs/misc: Add a workunit for file lock interruption
b0e6e85 mds: fix neighbor lock check
b61468d doc/dev/sepia: notes about sepia email list and irc channels
6705180 doc/release-notes: v0.80.7
c9f9e72 (origin/wip-9598) Revert "Objecter: disable fast dispatch of CEPH_MSG_OSD_OPREPLY messages"
00907e0 msg/simple: do not stop_and_wait on mark_down
22637f4 doc: update lab notes
7022679 (origin/wip-5977) librbdpy: Added missing method docstrings
6753923 mds: reply -EOPNOTSUPP for unknown lock type
c4bac3e (origin/wip-inotable-init) mds: fix inotable initialization/reset
c95bb59 mds: fix inotable initialization/reset
f1fccb1 rpm: 95-ceph-osd-alt.rules is not needed for centos7 / rhel7
b73fe1a (origin/wip-9730) doc: remove node requirement from 'mon create-initial'
264f0fc doc: remove whitespace
20b2766 Update vstart to setup users for s3-tests
0969945 client: use finisher to abort MDS request
e464a77 client: use atomic variable to track reference of MetaRequeset
4134c14 client: allow interrupting blocked file lock operation
289e8b4 client: register callback for fuse interrupt
229a6df FileStore:Round offset of fiemap down aligned with CEPH_PAGE_SIZE.
35bbb2d The fix for issue 9614 was not completed, as a result, for those erasure coded PGs with one OSD down, the state was wrongly marked as active+clean+degraded. This patch makes sure the clean flag is not set for such PG. Signed-off-by: Guang Yang <yguang@yahoo-inc.com>
fbf4d47 KeyValueStore: Make clone error message more friendly
b426460 GenericObjectMap: sync transaction avoid lookup_parent failed
674c911 StoreTest: Add clone xattr test
d947050 (origin/wip-9718) osd/osd_types: consider CRUSH_ITEM_NONE in check_new_interval() min_size check
5ff4a85 (origin/wip-9747-ceph-spec) rpm: 95-ceph-osd-alt.rules is not needed for centos7 / rhel7
50987ec libcephfs.h libcephfs.cc : Defined error codes for the mount function Used new error codes from libcephfs.h to replace the magic numbers in the mount functon found in libcephfs.cc.
7bab093 return value of handle_message for MSG_OSD_SUBOP/MSG_OSD_SUBOPREPLY should be true
d955676 (origin/wip-8983) rados: Use strict_strtoll instead of strtoll
809ddd2 (origin/wip-9706) osdc/Objecter: fix use-after-frees in close_session, shutdown
72a2ab1 osdc/Objecter: fix tick() session locking
d98b755 (origin/wip-9716) librados: Fix function prototypes in librados.h
d458b4f PGLog::IndexedLog::trim(): rollback_info_trimmed_to_riter may be log.rend()
022bace rados: Add tests for CLI strict parsing
26fe180 test: Fix rmpool in test_rados_tool.sh
459b2d2 mds: Locker: remove unused variable
6a2303a client: add helper function that updates lock state
b17b43a fuse: enable fuse_multithreaded by default
a1b2c8f client: posix file lock support
e075c27 common: link mds/flock.o to libcommon
89ebcaa Fixed JSON output for stray OSDs
a8d597f Fix error message when stripping with format 1
66afcd9 Check pointer before deleting
2c7c03c (origin/wip-coverity-20141003) ceph_erasure_code_benchmark: fix parameter handling
8021581 client: add missing dendl and s/dout/ldout/
fa539b9 (origin/wip-9692) qa/workunits/fs/misc: fix syntax error
9b18d99 (origin/wip-9696) PG::choose_acting: in mixed cluster case, acting may include backfill
3dd4cca (origin/wip-7796) rgw: set length for keystone token validation request
3cd8a7f (origin/giant-locker-null) mds: Locker: fix a NULL deref in _update_cap_fields
3b9dcff rados: Parse command-line arguments strictly
aa138eb mds: MDirUpdate: initialize discover count to 0 if we're not discovering
2a9ed93 mds: MDSAuthCaps: init "read" param in default constructor
ce4436c (origin/wip-print-mode) client: print out mode, uid, gid if they are changed
7cb2840 test_rgw_admin_log.cc: refactor to use calloc()
c43c85f test_rgw_admin_log.cc: fix use-after-free
c60a170 test/librados/c_write_operations.cc: free ressources
86ebaf6 os/FileStore: Because do_fiemap will do fsync, so don't do fsync() before calling do_fiemap.
042c536 rados_list_parallel.cc: cleanup before return from run()
3bba7ce test/librbd/fsx.c: fix potential unterminated string handling
b414b1d ErasureCodeIsa.cc: reduce scope of variables
557ca80 SyntheticClient.cc: reduce scope of variables
43c0d37 mds/flock.cc: reduce scope of some variables
d75856b osd/ReplicatedBackend.cc: prefer ++operator for non-primitive iterators
72e708c osd/OSDMap.cc: prefer ++operator for non-primitive iterators
4669233 mount.ceph.c: ensure '\0' terminated string
865a0dc build: add ceph-erasure-code-corpus to gitmodule_mirrors
f06ffba (origin/wip-da-fix-make_check) Makefile.am: make sure everything was build before make check
9b3d345 qa: move mon_mds tests last
e27cf41 (origin/wip-9437) qa: cephtool tests for `tell mds.X`
620a722 qa: fixup cephtool test when MDS exists
82ecf60 test: unit tests for MDSAuthCaps
d15ecaf vstart: create fewer pgs for fs pools
5f6589c vstart: mds * auth caps
316660d mds: fix MDSAuthCap when cephx is disabled
92178bc pybind/ceph_argparse: implement 'tell mds'
44e8390 pybind/cephfs: implement mds_command
0909fe4 pybind/cephfs: implement conf_parse_argv
1eb93f5 pybind/rados: add conf/conf_defaults attributes
fba3ede libcephfs: add ceph_mds_command
688396a client: add mds_command operation
b9c0ce4 osdc/Objecter: don't consume non-osd cmd replies
e8f3f6b mds: introduce MDS auth caps
fad2865 mds: handle MCommand (mds tell)
5e7cb60 mds: deprecation-warn on numeric mds names
9552e8f common: fix cmd_getval constness
9610029 messages: fix constness in MCommand constructor
f93bf38 mds: typedefs for rank and gid in MDSMap
90ca5e3 mailmap: João Eduardo Luís name normalization
c967ced mailmap: Yongyue sun affiliation
8149ac6 mailmap: Andreas Peters name normalization
9a32e8c Avoid unused pg_to_acting_osds call in OSDMap::get_primary_shard for not ec pool
8c4040b AsyncMessenger: Remove unused option
7f2d660 AsyncMessenger: add comments for structures
afe2b1a AsyncMessenger: add copyright for async files
23924a3 AsyncMessenger: Fix header file path
ed862ec AsyncMessenger: move Async* related file to msg/async
79a12de AsyncConnection: Fix mark_down problem when calling send_message
268db10 AsyncConnection: Rescheduler write event when connect successfully
b8ae562 AsyncConnection: Avoid seq ack not send and skip sd<0 shutdown
e25f2fe AsyncMessenger: Avoid join when worker thread not started
64ca744 (origin/wip-heap-profiler) doc: update memory-profiling with examples
6f6e7e2 mon,mds: call ceph_heap_profiler_init() at boot time
472a4b3 perfglue: profiler stats need more than 1024 bytes
cb36ccb mailmap: add yuandong to organizationmap
bc0209e (origin/wip-catch-options-errors) test,tools: indentation, whitespace only
3677fe0 tools: allow_unregistered() options
29b3771 tools: move po::collect_unrecognized in the try block
8e5b7ac tools: display boost::program_options errors
0100c9c test: catch boost::program_options errors
b085fd8 test,tools: capture boost::program_options in a try
b5ded99 AsyncConnection: mark down connection as soon as possible
c8dd0f2 AsyncConnection: make send_message directly send message possibly
5df3212 AsyncConnection: Reduce _try_send call
e1eec9a AsyncConnection: Optimize _try_send avoid new/delete
f27e51b Asyncconnection: Fix in_seq_acked problem
300cd7d EventEpoll: don't need to expand epoll struct
0caad0d Event: Use array instead of unordered_map for file_events
da83dac Event: time event can used as priority queue
19a9d95 Event: Change time precision from millisecond to microsecond
b9c86a3 Event: Fix do_request bug
cce1ae5 Event: Simply process_event impl
27f7cc0 Event: external_event lock may stuck in dead lock
cc0554a AsyncConnection: Avoid external thread access center
d62fe90 AsyncMessenger: Use round-robin to dispatch new connection
d746a1f AsyncConnection: Fix incorrect usage for bufferlist::splice
42d1368 AsyncConnection: Rescheduler avoid dead lock
05a238a AsyncMessenger: Check send queue when message in queue before connect ready
f7fd64d AsyncMessenger: Use unordered_map instead of map and remove unused codes
d9266a9 AsyncMsgr: Fix remote_reset segv
b5d741b Reconnect when socket is shutdown
e79f809 Use shared_ptr for EventCallback
13ed6c0 Add wake up to EventCenter
ec913d0 Add support for mon library
3554bed Replace AsyncConnection* with AsyncconnectionRef
5783ea0 Add EventCenter stop function
d43b0ae Fix Time Event problem
d41bb28 Add STANDBY state process
6bb277f Add TimeEvent to Event API
071ba4a Add event option
a653af1 Remove DispatchQueue in AsyncMessenger
d09d28c Add AsyncMessenger support
82175ec (origin/wip-9513) Fix read performance regression in ObjectCacher
0dd3afd (origin/wip-9496) mon: PGMonitor: populate scrub timestamps with 'now' on pg creation
ccdbfb4 mon: PGMonitor: prettify access to pg_stats_t in register_pg
9b39033 (origin/wip-9419) osd: Return EOPNOTSUPP if a set-alloc-hint occurs with OSDs that don't support
70ef4c1 osd: Remove unused PG functions queue_notify(), queue_info(), queue_log()
d14ca34 0.86
7c4e278 (origin/wip-9677-ioprio-class-giant) common: ceph_ioprio_string_to_class always returns -EINVAL
822b088 osd: log error if set_ioprio fails to parse class
efb23b8 common: set_ioprio debug message including pid
62f0ef4 common: do not set ioprio if pid is not set
19c92d8 doc: missing osd prefix to ioprio config options
97dcc05 (tag: v0.86) 0.86
32e8bcd Run configure without liblttng on squeeze as well.
be6de4a Run configure without liblttng on squeeze as well.
3535b7a (origin/wip-9677-ioprio-class) common: ceph_ioprio_string_to_class always returns -EINVAL
5088e0d osd: log error if set_ioprio fails to parse class
33339c7 common: set_ioprio debug message including pid
c7e4c0b common: do not set ioprio if pid is not set
6223568 doc: missing osd prefix to ioprio config options
b2e4bd5 msg: move SimpleMessenger to msg/simple/
5a860be librados: use Messenger factory method
5eff0ee msg: use localized cct for derr
06aef6f doc/release-notes: v0.86
10fe7cf (origin/wip-ostool) ceph_objectstore_tool: Accept CEPH_ARGS environment arguments
6aba0ab (origin/wip-9128) Add reset_tp_timeout in long loop in add_source_info for suicide timeout
52ac520 (origin/wip-rm-legacy-cli) tools: remove old ceph.cc
63c7e16 test/osd/Object: don't generate length of 0
abe4c35 (origin/wip-os-recommend-doc-fix) doc: update kernel recommendations, add tunables link
6b9e20a (origin/wip-9658) ceph.spec: make ceph -> python-ceph dependency specify version
69acc8a msg: make messenger type configurable
62b0bfd msg/Message: drop unneeded #include
e55cb1f mon/MonClient: use generic Messenger factory
fe57fab (origin/wip-9663) client: clean-up objecter on failed client init
ca10ce4 Add one more case ( "=" ) and test get_str_vec as well. Signed-off-by: Yann Dupont <yann@objoo.org>
257dcc9 (origin/wip-osd-op-macro) rados.h: use macros to generate osd ops definitons and strings
1858f06 (origin/johnugeorge-wip-9492-crush-giant) Crush: Ensuring at most num-rep osds are selected
01e389a Crush: Ensuring at most num-rep osds are selected
f1becf9 (origin/wip-9655-osd-tell) qa: ceph tell must retry on ENXIO
234b066 (origin/wip-9492-crush-indep) Crush: Ensuring at most num-rep osds are selected
5c6c366 debian/control: fix python-ceph -> ceph file move to allow upgrades
35fd272 (origin/wip-9657) messages: provide an explicit COMPAT_VERSION in MMDSBeacon
177a33b (origin/wip-9661) MemStore: Need set/get_allow_sharded_objects() to work for ceph_objectstore_tool
0b155d0 ceph_objectstore_tool: MemStore needs a CephContext
7f6c31b debian/control: BuildDepend on lsb-release
73d5bdb (origin/wip-9245-test-mon-pending-giant) tests: remove tests requiring osdmonitor_prepare_command
e865781 mon: obsolete osdmonitor_prepare_command
d0c2d7d test: minor case fix
d0ceb3a (origin/wip-9545) os/FileStore: do not loop in sync_entry on shutdown
7e2bd22 (origin/wip-9418) mon: Monitor: let 'handle_command()' deal with caps validation
f0653c0 qa/workunits: mon: auth_caps: account for mon blank caps
87d06f1 mon: MonCommands: adjust indentation for 'auth add'
c7d5c25 qa/workunits: mon: auth_caps: variables must be local
7e85beb qa/workunits: mon: auth_caps: cleanup on successful exit
5488f46 test/vstart_wrapper.sh: use cephx
7469561 mon: Monitor: remove redudant call to osdmon's dispatch
c0e3bc9 mon: Monitor: check caps and source before dispatching messages
3d78285 mon: Monitor: create logical divisions on dispatch() based on msg nature
d0113e0 test: mon: test-mon-msg: Check which msgs the mons handle and reply to
ea96863 qa/workunits: cephtool: test auth profiles
d6b702c mon: MonCap: add new profiles
940c4e2 mon: Monitor: match command module caps against what's on MonCommands.h
8612461 mon: AuthMonitor: validate caps when creating or changing mon caps
038de00 (origin/wip-9245-test-mon-pending) tests: remove tests requiring osdmonitor_prepare_command
2abc8f4 mon: obsolete osdmonitor_prepare_command
6f69837 test: minor case fix
eb2f0f4 (origin/wip-9653-ceph-disk-bootstrap-osd-giant) ceph-disk: bootstrap-osd keyring ignores --statedir
fa0bd06 (origin/wip-9653-ceph-disk-bootstrap-osd) ceph-disk: bootstrap-osd keyring ignores --statedir
19be358 PG::actingset should be used when checking the number of acting OSDs for a given PG. Signed-off-by: Guang Yang <yguang@yahoo-inc.com>
8253ead osdc/Objecter: use SafeTimer; make callbacks race-tolerant
6c37984 mailmap: Yehuda Sadeh name normalization
beff616 ceph-disk: set guid if reusing a journal partition
50e8040 (origin/wip-rados-empty-file) tools: rados put /dev/null should write() and not create()
0b0a373 (origin/wip-ysw-mailmap) mailmap: update email address
188370a doc/release-notes: fix attributions for 8702 fix
c0dc3a5 doc/release-notes: v0.80.6
5b41d80 (origin/wip-8911) rgw: swift GET / HEAD object returns X-Timestamp field
29356d8 qa: fix osd pool ls invalid test
a1aa06b ReplicatedPG: dump snap_trimq on pg query
34f38b6 ReplicatedPG: do not queue the snap trimmer constantly
b29bf00 ReplicatedPG: clean out completed trimmed objects as we go
3374a0b (origin/wip-coverity-20141002) BtrfsFileStoreBackend.cc: fix string overflow
8b7fc61 test_librbd.cc: fix compiler warning, cast to size_t
e506f89 (origin/wip-objecter-shutdown) Objecter: check the 'initialized' atomic_t safely
0f731ae (origin/revert-2604-wip-9113) Revert "ReplicatedPG: clean out completed trimmed objects as we go"
fea0154 (origin/wip-mon-status) mon: break recovery status onto separate lines
46a76d5 mon: put 'ceph status' quorum status on new line
e127c89 mon: put 'ceph status' health items on separate lines
da9ae5c ceph.spec: fix typo
63b30d4 (origin/wip-8187) librbd: Skip tier pools in list_children and snap_unprotect
63d0ec7 (origin/wip-9013) rgw: add civetweb as a default frontend
d8ae14f (origin/wip-8188) librados: Add rados_pool_get_base_tier call
5b58f16 (origin/wip-coverity-20141001) test_librbd.cc: fix compiler warning
58c732f client/SyntheticClient.cc: remove dead code
3184a20 doc: A couple of fixes to the CloudStack documentation
88022e8 SyntheticClient.cc: remove dead code
17fa397 LogEntry.h: init LogEntry::prio in constructor
7d6e21d osd: fix need_journal call
8388836 (origin/wip-rpm-epoch) ceph.spec.: add epoch
a470c96 (origin/wip-fsls-json) mon: fix JSON `fs ls` output
2955b3d ObjectStore: Add "need_journal" interface to make aware of journal device
05fd507 Pipe: avoid redundancy new/delete for struct iovec
cefb1a3 (origin/wip-9635) mon: wait for paxos writes before touching state
46c1d93 mon: flush paxos write before setting shutdown state
4072ef7 mon: move paxos write wait into a helper
624aaf2 PG: release backfill reservations if a backfill peer rejects
62e2bca (origin/wip-8822) osd: swap state spinlock for atomic_t
a8ac4b6 osdc/Filer: drop probe/purge locks before calling objecter
0ea20a6 Locker: accept ctime updates from clients without dirty write caps
2e9c7c9 test-shared-cache:   Add test for "lower_bound" method.   Add multithread tests for "lookup" and "lower_bound" methods.
d34c21c test-shared-cache:   Initial draft for the unit test of "common/shared_cache.hpp".
de87d54 common: document C_GatherBuilder and C_Gather
a67c2f9 (origin/wip-9628) mds: Add session to sessionmap when its state becomes opening
1feba20 Objecter: init with a constant of the correct type
46d5518 (origin/wip-osd-objecter) osd: do not bind ms_objecter messenger
fe3434f (origin/wip-python-flask) debian: move ceph_rest_api.py into ceph
8cda623 ceph.spec.in: move ceph_rest_api.py into ceph
b241624 ceph.spec: fix python-flask dependency
e42424e debian: python-flask is needed by ceph, not python-ceph
984a147 mailmap: Riccardo Ferretti affiliation
8d9fcbc mailmap: Casey Marshall affiliation
26941ea mailmap: Feng Wang affiliation
23c8fe5 mailmap: Scott A. Brandt affiliation
eedcd9c mailmap: Gerben Meijer affiliation
91af25f mailmap: John Wilkins name normalization
242f334 mailmap: John Spray name normalization
7571665 mailmap: Samuel Just name normalization
5d3c025 mailmap: Pavan Rallabhandi name normalization
214e6cd mailmap: Swami Reddy name normalization
d0a2202 mailmap: Volker Voigt affiliation
dc601c7 mailmap: Laurent Guerby affiliation
1a96348 mailmap: Johnu George affiliation
f0bbbad mailmap: Janne Grunau affiliation
f817935 mailmap: Daniel Schepler affiliation
29efada mailmap: Cheng Cheng affiliation
b167f70 mailmap: Sahid Ferdjaoui affiliation
4b33b58 mailmap: Jiang Heng affiliation
b386b59 mailmap: JuanJose Galvez affiliation
e6bba0d mailmap: Roman Haritonov affiliation
e133a92 mailmap: Yongyue Sun affiliation
beade63 (origin/wip-9620-test-mon-thrash) qa/workunits/cephtool/test.sh: fix thrash (ultimate)
5d1d9db librados: cap the IoCtxImpl::{aio_}*{write,append} buffer length
5f029ff os/FileStore: using FIEMAP_FLAGS_SYNC instead of fsync() before call fiemap.
69fc171 Clock: Using clock_gettime instead of gettimeofday in linux os.
becc114 librados: test s/E2BIG/TooBig/
32195f9 librados: cap the rados_aio_*{write,append} buffer length
f777fc6 osd: Make RPGTransaction::get_bytes_written return the correct size.
7849d79 (origin/wip-crush-location) crushtool: add --show-location <id> command
33501d2 librados: cap the rados*{write,append} buffer length
f8ac224 ceph-disk: add Scientific Linux as a Redhat clone
6b4d1aa (origin/johnugeorge-wip-9492-crush) Crush: Ensuring at most num-rep osds are selected
5ca7ea5 ceph-disk: add Scientific Linux as a Redhat clone
7827e00 os: io_event.res is the size written
d851c3f osd: improve debug output for do_{notifies,queries,infos}
126d0b3 (origin/wip-9582) osdc/Objecter: only post_rx_buffer if no op timeout
ba02a5e (origin/wip-9536-isa-alignment) erasure-code: test isa encode/decode with various object sizes
eb8fdfa erasure-code: add test for isa chunk_size method
7a468f3 (origin/wip-msgr-shutdown) msg: allow calling dtor immediately after ctor
af07d29 erasure-code: isa encode tests adapted to per chunk alignment
aa9d70b erasure-code: isa test compare chunks with memcmp instead of strncmp
ed77178 erasure-code: run isa tests via libtool and valgrind
668c352 erasure-code: do not use typed tests for isa
28c2b6e erasure-code: isa uses per chunk alignment constraints
6f4909a erasure-code: [ISA] modify get_alignment function to imply a platform/compiler independent alignment constraint of 32-byte aligned buffer addresses & length
7552571 doc/release-notes: v0.67.11
8dc94a2 (origin/wip-9562) osdc/Filer: drop probe/purge locks before calling objecter
9593d87 documentation: erasure-code plugin isa does not require k/m
6886224 mailmap: Yan Zheng affiliation
fc1380b mailmap: Thorsten Glaser affiliation
7973280 (origin/wip-zafman-cleanup) osd: Remove unused PG functions queue_notify(), queue_info(), queue_log()
0f884fd (origin/wip-9008) For pgls OP, get/put budget on per list session basis, instead of per OP basis, which could lead to deadlock.
7f87cf1 ReplicatedPG: clean out completed trimmed objects as we go
2cd9b5f tests: use memcmp to compare binary buffers
c17ac03 (origin/wip-9487) ReplicatedPG: don't move on to the next snap immediately
255b430 osd: initialize purged_snap on backfill start; restart backfill if change
f833f12 (origin/wip-5595) rgw: rados->set_attrs() updates bucket index
44cfd88 rgw: PutObjMetadata, clear bufferlist before appending into it
4be53d5 PG: check full ratio again post-reservation
9c825ec documentation: revise placement group number guide
7f71c11 (origin/wip-mon-fix-checks) ceph-mon: check fs stats just before preforking
9687150 erasure-code: isa/lrc plugin feature
f51d21b (origin/wip-9572-erasure-code-blaumroth) erasure-code: restore jerasure BlaumRoth default w
e270216 mailmap: William A. Kennington III affiliation
9f0202b mailmap: Jason Dillaman affiliation
89fceb3 (origin/wip-mon-data-space-die) mon: Monitor: log RO commands on 'debug' level, RWX on 'info'
2c5b12d mon: Monitor: use MonCommand::requires_perm() when checking perms
bb55862 mon: Monitor.h: add 'requires_perm()' function to MonCommand struct
f1b814e mon: Monitor: log RO admin socket commands on 'debug' level
282bac7 mon: LogMonitor: adjust debug messages output levels
9686044 mon: LogMonitor: add debug message upon logging to a channel's file
3760bc1 mon: LogMonitor: appropriately expand channel meta variables
6c378ae common: LogEntry: if channel is missing, default to "cluster"
2da1a29 ceph_mon: check available storage space for mon data dir on start
9996d44 mon: DataHealthService: use get_fs_stats() instead
3d74230 common: util: add get_fs_stats() function
f421d5c documentation: comment the CompatSet data members
ce8eefc (origin/wip-8629) osd/ReplicatedPG: do not clone or preserve snapdir on cache_evict
398c74e ceph_test_rados_api_tier: add EvictSnap2 test case
682b9da os/FileJournal: do not request sync while shutting down
544b8c7 ReplicatedPG::on_removal: clear rollback info
781f05c Revert "PG::init: clear rollback info for backfill as well"
a53ead1 osd: Cleanup boost optionals
28b7b93 (origin/wip-log-msgs) mds: remove spurious logging
226c0c7 (origin/wip-9547-python-rados-truncate) test: check python rados aio_read with buffers containing null
8bda44f pybind: Fix aio_read handling of string buffer
9d9c8c7 (origin/wip-9539) Filer: add lock to protect strcut PurgeRange
b47fdd4 rbd: Use a rolling average to compute RBD write throughput
f3acae4 rgw_main.cc: add missing virtual destructor for RGWRequest
eeb74a1 os/GenericObjectMap.cc: pass big parameter by reference
1f134bb mds/Beacon.*: fix UNINIT_CTOR cases
f2a7d62 ErasureCodeLrc.h: fix UNINIT_CTOR
1a74822 ErasureCodeLrc.h: fix data_chunk_count UNINIT_CTOR
0e15df4 LogEntry.h: init LogEntry::seq with 0
5bb94ed (origin/wip-9529) rgw: calculate hash after writing data
7b13724 crypto: don't hash zero sized buffer
76eff95 include/util.h: prevent multiple inclusion of header
b82ceda (origin/wip-coverity-20140919) rgw_main.cc: add missing virtual destructor for RGWRequest
13b8c92 os/GenericObjectMap.cc: pass big parameter by reference
45e0b33 common/buffer.cc: catch exception by reference
7e82950 test/kv_store_bench.cc: fix coverity REVERSE_INULL
48389d0 test/libradosstriper/striping.cc: remove dead initialization
ff61483 mds/Beacon.*: fix UNINIT_CTOR cases
ea02dc3 ErasureCodeLrc.h: fix UNINIT_CTOR
2bb35bb ErasureCodeLrc.h: fix data_chunk_count UNINIT_CTOR
2c2b413 LogEntry.h: init LogEntry::seq with 0
af039ce test/librados/aio.cc: close resource leak
639c981 documentation: explain ceph osd reweight vs crush weight
f51e368 erasure-code: fix assert overflow
13780d7 (origin/wip-9538-format-plain) mon: osd find / metadata --format plain fallback
0fb0967 documentation: tiering typo
7ac60d8 (origin/wip-cephtool-test) tests: check osd health in cephtool/test.sh
4d75c4c tests: qa/workunits/cephtool/test.sh ! and -e
be97b7d documentation: fix bugous osd stop/start example
3f23709 (origin/wip-giant-messenger-fixes) Objecter: disable fast dispatch of CEPH_MSG_OSD_OPREPLY messages
681a754 Pipe: stop delayed delivery fast_dispatch in stop_and_wait()
fb5a244 osd/Watch: handle con without sessions
93dccdb osd/ReplicatedPG: handle sessionless op con in do_osd_op_effects
5d37850 osd: drop dead shutdown message handler
bb45621 common: Add cctid meta variable
c421b55 (origin/wip-9301) mon: re-bootstrap if we get probed by a mon that is way ahead
d81cd7f mon/Paxos: fix off-by-one in last_ vs first_committed check
9132ca4 (origin/wip-5768) rbd-fuse: Fix memory leak in enumerate_images
9a1ab95 (origin/wip-6926) rbd: Fix rbd diff for non-existent objects
d6913ae mds: fix not journaling client metadata
1395275 (origin/wip-9518) mds: fix not journaling client metadata
346c06c (origin/wip-6613) client: preserve ordering of readdir result in cache
600af25 client: introduce a new flag indicating if dentries in directory are sorted
59c8976 (origin/wip-acl-test) qa/workunits/fs/misc: Add a workunit for ACL
2bd7cee (origin/wip-9341) client: trim unused inodes before reconnecting to recovering MDS
95ee699 (origin/wip-rbd-readahead) client: Replace client readahead logic with Readahead
ad45d8c librbd: Add read-ahead
830373e osdc: Fix ObjectCounter::_readx perf counters
4809418 doc: Change listed RBD cache defaults to actual defaults
4089684 (origin/wip-decode-dump) msg: hexdump bad messages at debug level 1 (not 30)
5495570 msg: hexdump messages we can't decode at configurable debug level
7e13ac8 rgw: Export user stats in get-user-info Adminops API
480c372 Revert "crushtool: safeguard for missing --num-rep when --test"
288f05a (origin/wip-9189) mds: use new Session::human_name in health msgs
6320e53 mds: implement const SessionMap::get_session
32b51bb mds: generate friendly name for client sessions
920cac9 ceph_fuse: include mount point in client metadata
bd8c441 client: send metadata in session open
bdda237 ceph_fuse: refactor init to make mount_point accessible
758a7ce mds: include client metadata in `session ls`
1a9e3cc mds: store client metadata on Session
cd215c7 messages: add cephfs client metadata to MClientSession
3025b5f mds: collapse numerous client warnings into one
0769310 PGLog::claim_log_and_clear_rollback_info: fix rollback_info_trimmed_to
07f54f2 PG::find_best_info: let history.last_epoch_started provide a lower bound
92cfd37 PG::choose_acting: let the pg go down if acting is smaller than min_size
1f450fa (origin/wip-xattr-fix) client: request xattrs if xattr_version is 0
c837fb9 mds: return xattrs when client explictly requests xattrs
681a49c (origin/wip-9435) mon: forbid tier changes when in use by FS
80441cd mon: prevent cache pools being used CephFS
86a4bed FileStore: Race condition during object delete is fixed
10b8966 crushtool: safeguard for missing --num-rep when --test
9a65b39 doc: Fixed broken hyperlink.
399fa80 script/run-coverity: update submodules
123c3fb test/mon/mkfs.sh: add check for default keyring
8ea86df test/ceph-disk.sh: resolve symlinks before check
8b27997 mon: pool create must not always create a ruleset
d5084f3 mon: add the get_crush_ruleset helper
daf6379 mailmap: correcting Zhiqiang Wang's mailmap and org affiliation
4b8c50f tests: flush logs before grepping them
45731db os: FileStore::lfn_unlink always clears FDCache
0ffc5ee tests: set the failure domain to OSD by default
191d67c tests: add get_osds() and get_pg() helpers
6d4e2ca test: libtool --mode=execute valgrind
457790d KeyValueStore: Reduce redundant "make_pair"
1a8b91b doc: Add keyvaluestore config description
bb49547 KeyValueStore: Reduce redundancy set_header call
306fb2f mds: set new inode's xattr version to 1
1b9226c (origin/wip-9219-giant) osd: subscribe to the newest osdmap when reconnecting to a monitor
56ba341 (origin/wip-objecter-cancel) osdc/Objecter: fix command op cancellation race
baf7be9 osdc/Objecter: cancel timeout before clearing op->session
1149639 (origin/wip-xfs-inode64) ceph-disk: mount xfs with inode64 by default
ded1b30 erasure-code: preload fails if < 0
27208db (origin/wip-doc-preflight) doc: Added feedback.
a140439 (origin/wip-9284) mds: limit number of caps inspected in caps_tick
bf590f8 mds: keep per-client revoking caps list
a6a0fd8 xlist: implement copy constructor
fd04d5e mds: health metric for late releasing caps
05d6958 mon: trigger transaction on MDS health changes
e6062b8 mds: add a health metric for failure to recall caps
8c0f255 mds: add state for tracking RECALL progress
8199f80 xlist: implement const_iterator
00a0021 client: fix trim_caps for inodes in root
2b5bbab client: failure injection for cap release
21f5e18 client: fix potentially invalid read in trim_caps
9007217 client: more precise cap trimming
c328486 client: fix crash in trim_caps
83fd1cf bugfix: wrong socket address in log msg of Pipe.cc
868b6b9 doc: osd_backfill_scan_(min|max) are object counts
cdb7675 (origin/wip-rbd-objectcacher-hang) rbd: ObjectCacher reads can hang when reading sparse files
ddd52e8 init-radosgw.sysv: Support systemd for starting the gateway
d32b428 doc: Added bucket management commands to ops/crush-map
d446a65 documentation: jerasure plugin is sub section of erasure code profile
4fb3e29 documentation: isa plugin is sub section of erasure code profile
75f0fb2 documentation: erasure code profile update
b8a1ec0 doc: fixes a formatting error on ops/crush-map
c3c6468 mds: update segment references during journal rewrite
a8c943a (origin/wip-9445) log: add simple test to verify an internal SEGV doesn't hang
2313ce1 (origin/wip-client-msg-leak) client: fix a message leak
e3fe18a global/signal_handler: do not log if SEGV originated inside log code
558463e log: add Log::is_inside_log_lock()
386f2d7 (origin/wip-9427-rewrite) mds: update segment references during journal rewrite
d41c3e8 (origin/wip-9307) rgw: push hash calculater deeper
28d4460 DBObjectMap: restructure map_header_in_use locking
0a1abac osd_types: fix pg_log_t tail dump
4d3579d doc: Added clarifications and added additional preflight steps for CentOS/RHEL.
1c8485e doc: Deleted redundant text string.
ce7b2ec erasure-code: fix erasure_code_benchmark goop (decode)
9ba4e78 (origin/wip-9446) mon: fix MDS health detail output
2b45bfa (origin/majianpeng-fix3) buffer: Add a test for bufferlist::rebuild_page_aligned
c268400 buffer: In rebuild_page_aligned for the last ptr is page aligned, no need call rebuild().
bccb0eb (origin/wip-always-create-pidfile) daemons: write pid file even when told not to daemonize
aa5234e doc: Add file system osd config settings Add documentation for osd mkfs and osd mount options.
f54d5c7 rbd-replay: Add code documentation
8d23e8d rbd-replay: Add --dump-perf-counters option
675a6a6 rbd-replay: Add rbd-replay-many
398ebc0 librbd: Add missing tracepoints
3911354 rbd-replay: Add --anonymize flag to rbd-replay-prep
0e0a8d4 (origin/wip-7767-b) msg: prefetch data when doing recv()
16bd457 ReplicatedPG: cancel cb on blacklisted watcher
b7bdb93 erasure-code: fix erasure_code_benchmark goop
11082f7 OpTracker: Race condition removed while dumping ops through admin socket
3945ead OpTracker: The TrackedOp::events list was not protected while dumping ops
1de43e0 OpTracker: Removed _dump_op_descriptor_unlocked call for log level < 5
3fac790 OpTracker: Sharding logic is implemented to improve performance
2fbe82d doc: Fixed syntax error.
7dbf750 doc: Updated authentication notes. Fixed syntax error.
7281638 (origin/wip-mds-beacon) mds: sleep in progress thread if laggy and waiting_for_nolaggy waiters
6fb5769 mds/Beacon: do not reconnect to mon in quick succession
4ad5db0 (origin/wip-client-ll-ref) client: include ll_ref when printing inode
cf70b90 (origin/wip-7934) test: Fix ceph_test_rados_watch_notify to delete the pools it creates
2e4e98b ReplicatedPG: Make perfcounter record the read-size for  async-read.
cf34e00 ReplicatedPG: record correctly subop for perfcounter.
117de00 (origin/wip-9413-erasure-code-version-check) erasure-code: mon, osd etc. depend on the plugins
5a05e6b [rgw][s3] Allow colon ':' in access key
f05c977 (origin/wip-pool-ls) mon: add 'osd pool ls [detail]' command
46bbe30 (origin/wip-osdc-leak) osdc/Objecter: fix leak of MStatfsReply
1ff94cc EC-ISA: avoid usage of table cache lock outside the class implementation by introducing the setEncodingTable/setEncodingCoefficient methods
5b41dac EC-ISA: add intelligent table cache
83bd343 (origin/wip-replay-locking) mds: fix replay locking
3448d85 Cache tiering: do not allow flush/evict when there are requests pending
b40cce7 osd: set min_read_recency_for_promote to default 1 when doing upgrade
d734600 Change CrushWrapper::crush to private
5a784cd (origin/wip-9241) osdc/Objecter: drop bad session nref assert
3c6e888 osd/ClassHandler: fix build
d165238 FileStore: report l_os_j_lat as commit latency
70ce400 (origin/wip-9365) osd/ClassHandler: improve error logging
2305b28 (origin/wip-9362) osdc/Objecter: revoke rx_buffer on op_cancel
f295c1f ceph_test_rados_api_io: add read timeout test
977d289 ceph_test_rados_api_*: expose nspace
1349383 Objecter::_recalc_linger_op: resend for any acting set change
9e2d04f erasure-code: fix BlaumRoth sanity check on w
f917166 erasure-code: refactor jerasure Liberation parameters checks
4843fd5 ReplicatedPG:start_flush send a second delete
937d2b0 Revert "ReplicatedPG:start_flush send a second delete"
78d7499 Revert "osd/ReplicatedPG: avoid dereferencing iterator at end()"
3578b11 ReplicatedPG: create max hitset size
e9b09e8 (origin/wip-9381-erasure-code-rpm) packaging: add all erasure code plugins to RPM packages
c5bafae erasure-code: Avoid k/m that we set are not equal in erasure-plugin.
9606232 KeyValueStore: Fix scrub causing inconsistence state
ae05edd ObjectStore Test: Add test for simulating scrub behavior
c664179 KeyValueStore: Fix upgrade from non-exist superblock OSD version error
6681008  mailmap: M Ranga Swami Reddy affiliation
448342e mailmap: John Spray name normalization
2f2c37f mailmap: Marco Garcês affiliation
0204998 mailmap: Erik Logtenberg affiliation
284fb49 mailmap: François Lafont affiliation
6307536 (origin/wip-yasm) configure: do not try yasm on x32
d5777c4 doc: Fixed broken links and clarified terms for new authentication docs.
e2de11a doc: Minor cleanup.
9ab46dc debian: only B-R yasm on amd64
836a670 doc/release-notes: v0.85
591a179 (origin/wip-doc-qemu) doc: Added more robust usage example for uid and conf for QEMU.
b178e97 doc: Clean up syntax to suppress warnings.
4ad1106 doc: Clean up syntax.
7531b28 (origin/wip-9366) lttng: Fix 'make tag' when configured --without-lttng
1c34601 (origin/wip-paxos-dout) mon/Paxos: make is_readable debug output show result
62ca27d mon/Paxos: don't spam log with is_readable at dout level 1
a0c2284 (tag: v0.85) 0.85
f0e0c31 Include types.h after stdint.h to accomodate for older distributions. This fixes compilation on CentOS 5.
9254792 (origin/wip-rbd-force-write-back) rbd should use write-back when caching is enabled
0fb3e52 correct error of repeatedly adding io_size to off in do_bench_write
4fc9fff (origin/wip-6494) Enforce cache size on read requests
f0a4a2f tests: flush logs before grepping them
03aa113 erasure-code: init function is extern "C"
484fb85 doc: Update logging path to reflect log rotate script default path.
f0a1d28 doc: Add a contributing file at the root of repo
4673242 rgw: add .log to default log path
6fac815 (origin/wip-formatter-va) formatter: clean up dump_format()
df3c70a qa: scripts to help test ceph-qa-suite
2280736 (origin/wip-9358) osdc/Journaler: fix try_read_entry()/wait_for_readable() locking
94173a3 (origin/wip-9282) mds: warn clients which aren't revoking caps
d8e672f rgw: Implementation for S3 Get Bucket Location
9e503b5 test/formatter: Add tests for dump_format_ns
eaa2bb0 rgw_formats: dump_format_ns implementation
2fb51b2 Formatter: add a dump_format_ns to base Formatter
14d87bd (origin/xiaoxichen-refactor_lrc_crush) Refactor ErasureCodeLrc::create_ruleset
eae88da (origin/wip-8648) mds: clear objects' dirty flags after log segment is expired
69638df doc: fix missing bracket
35663fa doc: attempt to get the ayni JS into all head tags
409c955 (origin/wip-SCA-20140902) OSDMonitor.cc: fix potential division by zero
7b77210 objectstore/store_test.cc: fix unintentional integer overflow
6b70483 os/HashIndex.cc: fix unintentional integer overflow
f29e5b3 mount.ceph.c: free memory before return
903af9c st_rados_create_pool.cc: cleanup before return from run()
ece990d rados_list_parallel.cc: cleanup before return from run()
135ccad erasure-code: warning fix
7de8d17 FileStore: Remove unused code.
41df414 (origin/wip-mds-lock) mds: don't take mds_lock when doing journal operations
7ccabbf librbd.cc: add check to prevent null deref in rbd_list()
4f35714 (origin/wip-9311) Parallelize RBD import/export
f53bf53 PendingIO.cc: use static_cast instead of c-style cast
cbd324d FileStore.cc: use static_cast instead of c-style cast
ca6eb61 (origin/wip-9026) client: vxattr support for rstat
c2443b9 (origin/wip-doc-authentication) doc: Provided additional detail on daemon-specific caps syntax.
8569b93 doc: Updated Keyring settings from comments and ceph-deploy defaults.
b6a97d8 documentation: disk thread ioprio options
1b9e670 systemd support in ceph-disk activate
6ec08e0 client/Client.cc: fix null pointer checks for 'in'
c8d2388 (origin/wip-9151) mon: add MDS metric metadata to health detail
9ee8015 mds: add thread to progress queues outside dispatch
1058a9e mon: handle beacon health metrics in MDSMonitor
0fc8a0d mds: populate health metrics in beacon
12ab937 messages: add health fields to MMDSBeacon
f5e7a4b mds: use HeartbeatMap to control beacons
681f4f8 mds: const getters in MDLog
124856a include/CompatSet: more const-ness
232757f mds: promote Beacon to be a Dispatcher
17d547e mds: extract beacon state from MDS lock
e69f321 include/CompatSet: make merge const()
46c94e9 mds/CInode.h: prefer ++operator for non-primitive iterators
a5468ab ceph_objectstore_tool.cc: prefer ++operator for non-primitive iterators
4d9927e (origin/wip-session-stats) mds: cap and lease count in `session ls` asok
ea2a8d0 (origin/wip-request-count) mds: Fix Session::get_request_count
15df8ac rbd_replay/Replayer.cc: pass const string parameter by reference
9d926f1 ReplicatedPG.cc: prefer ++operator for non-primitive iterators
dae0593 IndexManager.cc: prefer ++operator for non-primitive iterators
40189a2 PGMonitor.cc: prefer empty() over size() for emptiness check
99fc33f ErasureCodeLrc.cc: prefer ++operator for non-primitive iterators
2dcfe0f ErasureCodePlugin.cc: prefer ++operator for non-primitive iterators
a754ce5 ErasureCodeLrc.cc: fix -Wmaybe-uninitialized compiler warning
0d27bcc osd/ReplicatedPG.cc: fix resource leak
38e6c64 test_rgw_admin_log.cc: remove unused variables
473b33b osdc/ObjectCacher.cc: refer ++operator for non-primitive iterators
16cbaba osd/PGLog.h: prefer ++operator for non-primitive iterators
8f368c5 mailmap: Ashish Chandra affiliation
5fd50c9 mailmap: Boris Ranto affiliation
a5b4c58 (origin/wip-9309) lockdep: increase max locks (1000 -> 2000)
9fac072 documentation: add the mark_unfound_lost delete option
bec3032 osd: MissingLoc::get_all_missing is const
e13ddc7 tests: qa/workunits/cephtool/test.sh early fail
fc499aa mailmap: add .peoplemap
177202e erasure-code: lowercase LRC plugin name
4c9fdbf common/LogEntry: fix warning on x86_64
a24c8ba common/LogEntry: fix warning on i386
acfe62e (origin/wip-aio-journal) Revert "os/FileJournal: For journal-aio-mode, don't use aio when closing journal."
c776a89 os/FileJournal: stop aio completion thread *after* writer thread
fa45ed8 (origin/wip-9285) osd/ReplicatedPG: do not evict blocked objects
ded1cf4 (origin/wip-9294) osd/ReplicatedPG: avoid dereferencing iterator at end()
d20432e erasure-code: preload LRC plugin
982c9dd (origin/wip-hitset-bytes) osd/ReplicatedPG: adjust avg_size calculation in agent_choose_mode
3fc6a73 osd/ReplicatedPG: calculate num_user_bytes
6ce36b0 osd/ReplicatedPG: scrub and repair hit_set_archive bytes
3409c38 osd/ReplicatedPG: account for hit_set_archive bytes
9edd655 osd/osd_types: add num_bytes_hit_set_archive to stats
93beff1 erasure-code: use s/get_str_map/get_json_str_map/
6388934 erasure-code: mkfs.sh needs to know the plugin directory
8110204 osd: OSDMap: ordered blacklist on non-classic encode function
1e69ff2 PG::init: clear rollback info for backfill as well
45a61ad erasure-code: ECRecPred must be true if all chunks can be recovered
734ae88 erasure-code: LRC plugin documentation
01b943b erasure-code: test LRC pool, profile and crush ruleset
c222601 erasure-code: high level LRC configuration
b0fd481 erasure-code: locally repairable code plugin
c2ca011 erasure-code: delegate chunk remapping to the plugin
b517ca4 erasure-code: override the default only if the plugin match
4670d9e erasure-code: relax profile parameter syntax
e2e07d9 erasure-code: add ErasureCodeInterface::get_coding_chunk_count
9fc2684 (origin/wip-9281) tools: use cout instead of cerr in journal tool
a994145 (origin/wip-mds-recover) mds/RecoveryQueue: do not start prioritized items synchronously
e0b19e3 (origin/wip-hadoop) qa: fix+cleanup hadoop wordcount test
76b8e57 erasure-code: preload the default plugins in the mon
c3e1466 Test: fixing a compile warning in ceph_objectstore_tool.cc
1b42726 Cache tiering: use local_mtime to calculate the age of objects during evicting
335c1f7 doc: Added rbd-replay-prep and rbd-replay manpages to block device TOC.
b965398 doc: Fixed broken hyperlink.
7948e13 doc: Added sysctl max thread count discussion.
a257291 (origin/wip-9266) client: fix dispatcher ordering (broken fuse)
ce29b76 (origin/wip-8231-forreview) Fix ceph_scratchtoolpp to create and delete its own pool
a03f719 ceph_objectstore_tool: Bug fixes and test improvements
23ec93a ceph_objectstore_tool, test: Implement import-rados feature and unit test code
b193812 tools/rados: Improve trigger for op_size rounding info message
54dcbf2 test: ceph_objectstore_tool unit test improvements
3694068 ceph_objectstore_tool: Add operation "rm-past-intervals" for testing purposes
9325ec1 ceph_objectstore_tool: Add past_intervals to export/import code
a2bd2aa ceph_objectstore_tool: Minor improvements
f01e334 ceph_objectstore_tool, test: Add list-pgs operations and unit test case
83fbc91 Complete replacement of ceph_filestore_tool and ceph_filestore_dump with unified ceph_objectstore_tool
7786419 Renames and removal towards a unified ceph_objectstore_tool
f464f57 ceph_filestore_dump.py: Replace ceph_filestore_dump.sh with better python version
970d983 PG: wait until we've build the missing set to discover_all_missing
3e9e108 test: ceph_filestore_dump.sh test improvements
b4d95cc ceph_filestore_dump: Add set-omaphdr object command
30c0f31 ceph_filestore_dump: Add get-omaphdr object command
0fc6bd2 ceph_filestore_dump: Add rm-omap object command
50cd57e ceph_filestore_dump: Add set-omap object command
b50c43c ceph_filestore_dump: Add get-omap object command
465d777 ceph_filestore_dump: Add rm-attr object command
95554e0 ceph_filestore_dump: Add set-attr object command
55d43c0 ceph_filestore_dump: Add get-attr object command
3c24d1f ceph_filestore_dump: Add set-bytes object command
869dd92 ceph_filestore_dump: Add get-bytes object command
48890c7 ceph_filestore_dump: Add list-omap object command
00c6b06 ceph_filestore_dump: Add list-attrs object command
844dabb ceph_filestore_dump: Add --type list to output objects in a pg in json
605caec ceph_filestore_dump: Add remove object command and usage for new commands
d4a9daf ceph_filestore_dump: Add utility function get_fd_data()
7520e50 ceph_filestore_dump: Fail import/export with a tty for stdin/stdout
3a574cc ceph_filstore_dump: Save if stdout is a tty and add routine to clean binary strings
c05f895 common: Add missing ghobject_t::decode() for json
2e9dcb2 ceph_filestore_dump: Add --skip-journal-replay and --skip-mount-omap
3d9fde9 os: Add optional flags to generic ObjectStore creation (SKIP_JOURNAL_REPLAY and SKIP_MOUNT_OMAP)
44b261d ceph_filestore_dump: Improve debug output by showing actual offset
087c0f9 ceph_filestore_dump: Use cerr now that we aren't closing stderr
f7f9b25 common,ceph_filestore_dump: Add ability for utilities to suppress library dout output
3bc4291 doc/install/manual-deployment: move 'done' comment up
dc6bd3b mds/Locker: if a client asks for file caps, prioritize file recovery
0fcdc6b mds/Locker: prioritize file recovery on rd/wr/x lock
bd3c8bc mds/RecoveryQueue: add method to prioritize a file recovery; fix logging
8f4ea81 mds: change mds_max_file_recover from 5 -> 32
0747ca7 mds: make max file recovers configurable
848fcf7 (origin/wip-8718) rgw: don't try to authenticate a CORS preflight request
e440fb4 test/mon/*: prime mon with initial command before injection
7a93258 (origin/wip-mds-namespace) mds: remove `using namespace std` in headers
fc89c27 messages: remove `using namespace std` in headers
e5930a3 tests: reduce osd-crush.sh execution time
b059bcd (origin/wip-jerasure-upgrade) erasure-code: assert the PluginRegistry lock is held when it must
3c4220e erasure-code: add Ceph version check to plugins
d4ea682 erasure-code: implement ErasureCodePluginRegistry::remove
c02c41c erasure-code: wrap lines for emacs compile command
efc8bfd erasure-code: jerasure preloads the plugin variant
56db6de erasure-code: add Red Hat to copyright notices
203d62f erasure-code: remove unused errno.h include
487105d erasure-code: add directory to plugin init functions
39bcb43 erasure-code: preload the isa plugin by default
e9a05b8 doc: Update docs about OSD benchmark syntax
a087f03 Revert "doc: Update docs about OSD benchmark syntax"
36f15c3 doc: Update docs about OSD benchmark syntax
ae3d873 PG::can_discard_op: do discard old subopreplies
97e4e11 (origin/wip-9148) civetweb: update submodule
1434e5c (origin/wip-blacklist-mds) mds: restart on -EBLACKLISTED
bb11936 mon: flush paxos write on shutdown
b1cf210 mon/Paxos: WRITING != WRITING_PREVIOUS
96030d6 mon: _reset() before updating state
d3bb477 mon: flush before scrub
805e5d7 mon/Paxos: flush io on reset()
a0e0b9b mon/Paxos: make backend write async
3dcea3b mon/Paxos[Service]: allow reads during WRITING state
6a71159 mon/Paxos: add writing and refresh states
663146a mon/Paxos: move post-commit finish work into commit_finish()
08f331b mon/Paxos: break commit() into two pieces
e74c044 mon/MonitorDBStore: assert closed in destructor
bb50371 mon/MonitorDBStore: drop useless ctor
02a7209 mon/MonitorDBStore: add async queue_transaction()
01072b0 mon/MonitorDBStore: add close() method
a6a1e99 mon: interact with MonitorDBStore::Transactions by shared_ptr Ref
cfc6830 common/Finisher: fix perfcounter
97f9b6d mon/OSDMonitor: fix double-free on old MOSDBoot
06b92ce (origin/wip-rewrite-PR2189) Move fedora patch file (used by ceph.spec.in) to rpm/ subdir
7474f72 ceph.spec.in: tests for rhel or centos need to not include _version
e37b262 ceph.spec.in: Add a small comment on the empty %files section
875a99e ceph.spec.in: Obsolete all older versions.
8f95daf ceph.spec.in: No version on ceph-libs Obsoletes.
7598502 ceph.spec.in: Obselete ceph-libcephfs (not libcephfs)
00877ae ceph.spec.in: We need those nice recent changes for rhel7 in Fedora too.
461523b ceph.spec.in, init-ceph.in: Don't autostart ceph service on Fedora.
e9da2d8 ceph.spec.in: Add obsoletes for libcephfs
6c264f2 ceph.spec.in: add ceph-libs-compat
62d74b3 civetweb: update submodule
11acb70 rgw: convert header field underscores into dashes
06ec5ef (origin/wip-7988) test: common: test_config: whitelist '$channel' meta-variable
8a9831f osd/mds/monc: Adjust for LogClient/LogChannel usage
bb9d4ca mon: LogMonitor: debug update_from_paxos
8f9e105 mon: LogMonitor: expand meta variables at time-of-call
86b2153 mon: LogMonitor: observe config changes
b97b06e mon: LogMonitor: write log messages on a per-channel basis
8b5e0cf mon: Monitor's clog/audit_clog need to accessed as pointers
68ef681 mon: Monitor: observe log client config changes
3ee9061 mon: Monitor: propagate return for functions called for admin socket
301fc0c mon: Monitor: log administrative actions via admin socket
43075bf mon: Monitor: log every administrative action in an 'audit log'
b7ce633 common: LogEntry: if 'channel' is empty on decode assign default
7ef1273 common: LogClient: allow specifying facility for LogClient
6885824 common: str_map: have 'get_str_map' only handling plain-text
9181114 rgw: clear bufferlist if write_data() successful
b1af4bd common: str_map: add helper methods to get values from maps
15e9fc4 common: LogClient: delegate message reference release to caller
59dac42 common: LogEntry: refactor how we output to syslog
8a2bfcd common: LogEntry: add 'channel' field
3178ca9 common: LogEntry: add clog_type_to_string()
0d2a6c7 common: LogEntry: change field name from 'type' to 'prio' (aka priority)
f25bca3 systemd: ceph-mds and ceph-mon need networking too
c6f4b42 sample.ceph.conf: some updates
2b13de1 (origin/wip-8863) osd/PG: fix crash from second backfill reservation rejection
5a63215 (origin/wip-reweight) mon/OSDMonitor: make reweight_by_* output less misleading
146e60d osd: Remove extra call to release_op_ctx_locks in eval_repop. It is called in remove_repop.
3bfbc14 test/mon/mkfs.sh: fix test
c2f21c0 (origin/wip-9218) osd: fix osd_tp shutdown
8346e10 PG: mark_log_for_rewrite on resurrection
cb4c5e8 OSD::session_notify_pg_create: requeue at the start of the queue
3c847c5 (origin/wip-config-diff) common: ceph_context: add admin socket command 'config diff'
ef51160 common: config: let us obtain a diff between current and default config
4b8b25e tests: histogram prevent re-use of local variables
a525bf3 (origin/wip-9054) ReplicatedPG:start_flush send a second delete
ee02293 tests: histogram prevent re-use of local variables
66c7439 ReplicatedPG::start_flush: remove superfluous loop
0416b88 update license for libcephfs
e6da732 PG: recover from each osd at most once
8a1723f PG: make the reservation sets more descriptively named
bf3e483 (origin/wip-9238) mds: fix FP error in ROUND_UP_TO
4672e50 osd/OSDMap: encode blacklist in deterministic order
a15ad38 vstart: start rgw on port specified by env var
dbe6c79 don't update op_rw_rlatency/op_w_rlatency when rlatency is zero
f3bf246 fix wrong value of op_w_latency perf counter
501dd3c ceph_filestore_dump: Export omap in batches for large omap case
398b418 ceph_filestore_dump: Remove unused bufferlist databl
9449520 (origin/wip-9209-round-up-to) common: ROUND_UP_TO accepts any rounding factor
df3b6fc Fix syntax error in rst documentation
cef1299 doc: Added links. Clarified namespace comments. Added limitations.
d817a6a doc: Minor changes.
16d946b qa/workunits/hadoop/wordcount: remove bogus rm -r
5db51d6 doc: Added a few comments and links to other relevant docs.
751b3e2 (origin/wip-9226) rgw: fix test to identify whether object has tail
c7e1b9e (origin/wip-9221) ceph_test_rados_api_tier: make PromoteOn2ndRead test tolerate retries
73733dd documentation: update recovery config options defaults
97b1916 CollectionIndex: Collection name is added to the access_lock name
3e85041 rgw: admin ops create user API can not determine existing user
f7ca1bf Update python.rst
f651f93 (origin/wip-9079) msg/Accepter: do not unlearn_addr on bind()
a67421a (origin/wip-objecter) osd: update handle_osd_map call
ef44292 common/Timer: fix deadlock in RWTimer::shutdown
10efe17 osdc/Objecter: fix op_cancel on homeless session
28110ff osdc/Objecter: hold session ref longer in resend
5d1b295 test: fix prematurely released lock in RadosModel
e7e7fdb osdc/Objecter: fix ref counts in *Map_Latest
ad193e1 osdc/Objecter: avoid locking two sessions at once
2463be5 osdc/Objecter: disable lockdep for double lock
8a0382b common/RWLock: allow disable lockdep on calls
9a5651b osdc/Objecter: fix resource management
213f652 librados: handle (and ignore) MOSDMap; do not leak
1e1ee48 client: handle (and ignore) MOSDMap
6baf36f librados: shut down monclient after objecter
2b94408 mon/MonClient: ensure !cur_con == cur_mon.empty()
73e5bb0 librados: verbose logging in ::notify
f356d0b librados: fix uninitialized values in notify
e784586 librados: separate ::notify return values
6f3bb55 librbd: handle blacklisting during shutdown
69612e7 librados: refactor watch/notify; return notify error code
e4e7a18 librados: prefix msg handler with handle_
59a9785 librados: rename watch/notify callback register functions
7a2ec05 osd: include ETIMEDOUT in notify reply on timeout
a786d2d messages/MWatchNotify: include an error code in the message
611d0f7 librados: avoid unnecessary locks
52b0ddc librados: fix race on osdmap initialization
545baf8 librados: update Objecter shutdown
28e5c03 tools: update for Journaler/Objecter interfaces
6373112 common: fix Finisher perf counter
13fbefa osdc: remove unused Blinker.h
ed1f807 test: add some missing modelines
13e6c5f osdc: Add lock to Filer::Probe
a0fd5e0 mds/Server: fix wait_for_osd_map calls
3487f21 osdc/Journaler: fix C_RetryRead locking
c272855 mds: convert IO contexts
e1e2866 osdc/Journaler: use finisher for public callbacks
10a08b8 osdc/Journaler: remove unused waitfor_trim
4f3b803 mds: Switch to new context types
0860f1a mds: add MDSContext subclasses
dcdcfd3 include: generalize C_Contexts and C_Gather*
04d01eb common: assert non-null ptrs in OnFinisher
6b55c42 client: add missing lock in sync_write_commit
1e0387a client: remove unused C_SnapFlush
85fbddc mds: rename IO completions with _IO_
27aed2d osdc/Objecter: make homeless_session a pointer
45b355e mds/MDLog: del stale ref to C_MDS_WroteImportMap
29533f3 mds: fix C_MDC_TruncateFinish locking
68d1497 mds: fix Server::C_MarkEvent locking
d893938 mds: update mds_lock handling in Locker contexts
0cfaeb9 mds/MDLog: enable Journaler finisher
61a69c8 osdc: Use a finisher from Journaler
db7369b osdc: locking for Journaler
2be623b mds: fix calls to Objecter::wait_for_map
619ea1f mds: update MDLog._replay_thread for locking
f6cd5fa mds: use finisher for BootStart contexts
0a54f00 librados: wait for map on create_ioctx failure
6236521 librados/RadosClient: remove unused get_pool_name()
83d983f mds: allow Objecter to dispatch its own messages
5668941 osdc/Objecter: ignore messenger events before or after initalized
a30f7c6 mon/MonClient: fix shutdown typo
65f9080 librados dispatch fix
7262da3 client: let Objecter dispatch directly
d3b87fb client: add a Finisher for the Objecter
9cb2c81 include/Context: add generic C_Lock
2e30812 mds: push objecter completions to a Finisher
641364e mds: mark objecter completions with _IO_, take mds_lock
c7b7bdd osdc/Objecter: take over ownership of OSDMap
8c860f9 osdc/Objecter: make OSDMap private
659909e osdc/Filer: use lock-safe OSDMap accessors
0dfe6d6 mds/SnapServer: use lock safe OSDMap accessors
fad3641 mds: use lock-safe OSDMap accessors; adjust Objecter wait_for_map call
85bffa3 mds: use lock safe OSDMap accessors for TMAP2OMAP check
5328f0a client/SyntheticClient: use lock safe OSDMap accessors
fd179ea test_mon_workloadgen: use Objecter::wait_for_osd_map
9f37f3d osdc/Objecter: make wait_for_osd_map() locking safe
5ec56c3 client: use Objecter::{get,put}_osdmap_read() interface
f698112 librados: use {get,put}_osdmap_read() accessors
af15f9e osd/OSDMap: return const string from get_pool_name
1145b2c librados: drop osdmap pool name cache
1848e99 osd/OSDMap: make lookup_pg_pool_name const
a37fcd8 osdc/Objecter: add name-base pool_delete
d0d1605 osdc/Objecter: protect pool ops with rwlock
d83d0f4 osdc/Objecter: add OSDMap accessors that are lock-safe
c86d2b9 librados: let Objecter dispatch its own messages
0c7dd66 osd: let Objecter dispatch directly
31b0ead osdc/Objecter: wire up native Dispatcher fast dispatch
09a8543 osdc/Objecter: make Objecter a Dispatcher
2c2e38e mds: add finisher
a6a8840 objecter: take write lock in ms_handle_reset()
8147f9f rwlock: assert on unlock if not locked
795cba9 objecter: fix locking
9b811a3 objecter: split objecter initialization
b440597 objecter: Objecter::Op is refcounted
e76cfcc objecter: don't serialize responses if there's no object name
cdb8899 objecter: shard completion_lock
9e6aedf objecter: a major refactoring
452dc9e timer: fix RWTimer shutdown
8f5cb22 librados: cancel operation
94119c4 test_mon_workloadgen: fix for new objecter interface
1d07ef2 rgw: abort early from logging function
09af405 osd: adapt to new Objecter interface
a2f94d2 librados: remove warning
c9d4cde librados: push snap related functions down to objecter
dc8494d librados: call objecter->handle_osd_map() under lock
517f10d librados: adapt to new objecter interface
e2fa0cf librados: don't hold client lock in certain operations
aac2242 librados: don't hold lock in dispatch()
bcc69ed mds: adapt to new objecter interface
4c6eb6e client: adapt to new objecter interface
94e1809 time: create RWTimer
33ecf3d common/RWLock: add lock context
91c938f common/RWLock: add explicit unlock() to *Lockers
3a399ea common/RWLock: add get()
8f9a9db common/RWLock: check return values
92615ea common/RWLock: track read/write locks via atomics for assertion checks
74ce4f2 rbd: fix signess warning
f7c0001 common: remove spurious uint32_t in buffer.c
6ad8e61 Fix FTBFS on alpha due to incorrect check on BLKGETSIZE
2554243 (origin/wip-mds-pc) mds/Server: rename perfcounters
b0cc869 mds: rename a bunch of metrics
31ef1a9 mds: set l_mds_req on client request
06682c4 vstart.sh: debug rgw = 20 on -d
00c677b (origin/wip-civetweb-log) rgw: use a separate callback for civetweb access log
850242c rgw: separate civetweb log from rgw log
f246b56 (origin/wip-weak-refs) common/shared_cache: dump weak refs on shutdown
6cf583c common/shared_cache: take a cct
2c27485 Doc: Add config option to turn off crush update
78e84f3 CrushWrapper: pick a ruleset same as rule_id
1835778 needs network or it will not start if enabled
8c69054 osd: make coll_t::META static to each file
493577b (origin/wip-9173) mds: fix crash killing sessions without conn
dcf8c03 mds: logging in SessionMap
01ce249 Revert "Merge pull request #2253 from adamcrume/wip-lttng"
3ced97b (origin/wip-9176) mon: make dispatch(), _ms_dispatch() void
610f4be mon: always process the message in dispatch
19df386 mon: fix occasional message leak after session reset
b245d60 (origin/wip-fingerprint) mon: generate cluster_fingerprint if null
675b004 mon: add a cluster fingerprint
552c4b4 rbd_replay: Add unit test for batch_unreachable_from
7616092 rbd-replay: Add unit test for Ser
9673e2f lttng: Split --with-lttng and --with-babeltrace options
07ab36f lttng: Remove tracing-specfic local variables when lttng disabled
3f1917c lttng: Add informational messages to configure.ac
230c5b8 lttng: Only install rbd-replay-prep when enabled
141f37a lttng: Check for babeltrace when autoconfiguring lttng
9c388f0 lttng: Check that the main babeltrace header is present
84bfe91 lttng: Test for sane lttng-gen-tp
e419ba6 lttng: Don't build trace libraries when lttng is disabled
d1064bf lttng: Fix build error on 32-bit systems
42d633f lttng: Remove -lboost_regex from unit test
a35b5d2 lttng: Don't build trace headers when lttng is disabled
861e6a3 lttng: Update packaging
7ff6ed1 lttng: Only require lttng for Fedora >= 20 and RHEL == 6 for RPM distros
fed22f4 lttng: Add distro packaging
edddb3f lttng: Fix "make distcheck"
d4186fe lttng: Support --with-lttng=check
8d71b6c lttng: Remove tracing from libcommon
660f1d6 rbd-replay: Fix bug in rbd-replay-prep, Thread::issued_io with wrong IO
18c081e rbd-replay: Remove extent tracepoints and inline extents
e555867 rbd-replay: Move tracepoints from internal.cc to librbd.cc
0cd2651 rbd-replay: Add man page and package binaries for rbd-replay-prep
0f052f8 rbd-replay: Convert prep-for-replay.py to rbd-replay-prep.cc
e18748e rbd-replay: Add man page, and add binaries to Debian packaging
f5272d5 rbd-replay: Remove outdated message that says regexes are used
63273a2 lttng: Replace Boost dependencies with custom string code
8b9f887 rbd-replay: Remove boost_regex from LIBADD and LDADD
f64776a rbd-replay: Fix compiler warning in unit tests
c78f994 rbd-replay: Switch ImageNameMap from regex to plain string matching
6f79f13 rbd-replay: Switch ImageNameMap to using rbd_loc
612e85b rbd-replay: Add rbd_replay::rbd_loc
c40ac91 rbd-replay: Use standard image@snap instead of image/snap
684643a lttng: Fix ceph_ctf_stringp
e22f59f rbd-replay: Support replaying partial traces
0d82222 rbd-replay: Use non-zero fake data
8a67647 rbd-replay: Add unit tests
c4939f9 lttng: Preload liblttng-ust-fork.so in TESTS_ENVIRONMENT
2a11a5c lttng: Disable LTTng by default, add --with-lttng configure option
c888a89 lttng: Fix 'make check' by setting up fake HOME
2eb6ea3 rbd-replay: Add --map-image option for image name mapping
2a66e09 rbd-replay: Add --pool option
5365a3e rbd-replay: Add assertions
4109879 lttng: Default to not storing buffer content
0421b69 rbd-replay: Add command-line arguments to prep-for-replay.py
1540f2f rbd-replay: Fix async writes in prep-for-replay.py
3dc8443 rbd-replay: Add --read-only flag
4c360ce rbd-replay: Fix examples/rbd-replay/replay
e7bf657 rbd-replay: Clean up prep-for-replay.py
25d3d42 rbd-replay: Hash completions across multiple mutexes to reduce contention
ffc9d05 rbd-replay: Add --latency-multiplier option to usage statement
d4697bc doc: Add usage comment to librbd::RBD::AioCompletion
2db768f rbd-replay: Fix memory leak in PendingIO
dd8ad8e rbd-replay: Check that return values are non-negative
c651bf2 rbd-replay: Support writing Actions to ostreams
eec9382 rbd-replay: Print "Still waiting for" more judiciously
f2228c0 rbd-replay: Change Worker::m_pending_ios from vector to map
8011016 rbd-replay: Printing pending IOs when worker threads waiting to die
b99f819 rbd-replay: Bugfix: ensure PendingIOs are added before they're removed
9452423f rbd-replay: Add rbd_replay subsystem
4eac518 Add assertf macro
16b7562 rbd-replay: Switch logging from cout to dout
4c4289c lttng: Add rbd-replay
f625775 lttng: Add more tracing to librbd
e9b39d9 tracing: instrument filestore
d0834bb lttng: Basic tracing of librbd
772148e lttng: Remove 'ver' from trace in code for CEPH_OSD_OP_NOTIFY
e1e157f lttng: Split up libtracepoints
00b2ec6 lttng: Prevent deletion of tracing-common.h when cleaning
012ff29 lttng: Prevent creation of incorrect .o files when generating from .tp
16cd074 lttng: Trace librados C API
10a476a examples: Add example for the librados C API
fcf4925 lttng: Add tracing-common.h
e312be6 lttng: Trace ReplicatedPG::do_osd_ops
1802bc2 lttng: Add rmw_flags to tracepoint in PG::queue_op
ae59946 lttng: Trace OpRequest
33b87f9 tracing: automake-ify tracepoint generation
915a6a6 lttng: Check for lttng/tracepoint.h when configuring
3ac99e3 lttng: add pg and osd tracepoints
7fa513e lttng: trace mutex::unlock
115cfb3 tracing: bootstrap lttng-ust with mutex events
e870fd0 (origin/wip-filejournal) os/FileJournal: For journal-aio-mode, don't use aio when closing journal.
a66a493 os/FileJournal: Only using aio then alloc the related resources.
c8e2b89 os/FileJournal: Tune the judge logic for read_header.
3ed8c68 (origin/wip-9153-jerasure-upgrade) erasure-code: do not preload the isa plugin
4c2ae69 add pom.xml so to deploy the libcephfs to maven repository. to build a jar, version=0.80-rc1-2008-gf71c889 mvn package -Dversioin=; and mvn deploy command will deploy the jar to maven central
e45f5c2 TrackedOp:_dump_op_descriptor is renamed to _dump_op_descriptor_unlocked
f680a24 TrackedOp: Removed redundant lock in OpTracker::_mark_event()
5026a89 Rebased civetweb version to master's
e665e62 Rebased and changed debug option
98b24f3 vstart.sh to enable support for simple RadosGW
57778e2 os/FileJournal: signal aio_cond even if seq is 0
5bf472a os/FileJournal: Update the journal header when closing journal
790de97 doc/start/quick-ceph-deploy: missing {ceph-node} from mon create-initial
615d2d9 CollectionIndex: Collection name is added to the access_lock name
9b80270 erasure-code: preload the jerasure plugin
fc41273 mon: fix signed/unsigned warnings
1441ffe (origin/wip-8587) rgw: subuser creation fixes
82409ee (origin/wip-reweight-tunables) mon: make reweight-by-* sanity limits configurable
3304841 mon/OSDMonitor: respect CRUSH weights for reweight-by-pg
1ecf44e mon/OSDMonitor: reweight-by-pg for pool(s)
8b971e9 mon/OSDMonitor: adjust weights up, when possible
977f852 qa/workunits/cephtool/test.sh: test reweight-by-pg
01cb405 mon/OSDMonitor: reweight-by-pg
e6658e2 mailmap: Anand Bhat affiliation
4535cc9 mailmap: Federico Simoncelli affiliation
dbf624e Add tests for the collection hint OP: 1) Store Test 2) Idempotent Test. Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
ad6a2be Implement the collection hint transaction, add a new transation type as expected number of objects. Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
7d266d1 Add a new transaction OP (collection hint) to ObjectStore. Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
35f323d Add a new monitor command to let user specify the expected number of objects during pool creation.
da37273 Add a new field 'expected_num_objects' to pg_pool_t which denotes the expected number of objects on this pool.
ab886c4 doc: Removed quick guide and wireshark from top-level IA.
acee2e5 doc: Move wireshark documentation to dev.
ce6e9a9 doc/release-notes: v0.84
b016f84 (origin/wip-fs-docs) doc: add notes on using "ceph fs new"
948178a (origin/wip-mon-empty-store) ceph_mon: check for existing mon store before opening db
8336f81 (tag: v0.84) 0.84
bda2301 qa/workunits/rbd/qemu-iotests: touch common.env
1dc1fb8 qa/workunits/hadoop: move all hadoop tests into a hadoop/ dir
3d3fcc9 qa/workunits/hadoop-wordcount: fix/use -rmr command
adaf5a6 qa/workunits/hadoop-wordcount: use -x
055be68 qa/workunits/rbd/qemu-iotests: touch common.env
4cdec2f mailmap: Owen Synge affiliation
ff893d5 mailmap: Andreas Peters name normalization
4d5d0d9 mailmap: Pavan Rallabhandi affiliation
78de7e1 mailmap: Zhiqiang Wang affiliation
725aa4e mailmap: Huamin Chen affiliation
309c98b mailmap: Xiaoxi Chen affiliation
bac88db mailmap: Luis Pabón affiliation
a06affb mailmap: Thorsten Behrens affiliation
55227aa mailmap: Shu, Xinxin affiliation
cc3b5ad mailmap: Abhishek Lekshmanan affiliation
5045c5c qa/workunits/rest/test.py: use rbd instead of data pool for size tests
3279f3e qa/workunits/rest/test.py: do snap test on our data2/3 pool
6d7a229 qa/workunits/rest/test.py: fix rd_kb -> rd_bytes
0e07f7f osd: fix theoretical use-after-free of OSDMap
904a5f1 (origin/wip-misplaced) vstart.sh: make filestore fd cache size smaller
932e478 mon: track stuck undersized
190dc2f mon: track pgs that get stuck degraded
5168907 osd: track last_fullsized in pg_stat_t
dbc3f65 osd: track last_undegraded pg stat
1907066 osd/osd_types: add last_undegraded, last_undersized to pg_stat_t
6d6767d osd/PG: track PG_STATE_UNDERSIZED separately from DEGRADED
b037e47 osd: add PG_STATE_UNDERSIZED
6c0a213 osd/PG: account for misplaces separately than degraded
988d741 librados: approximate legacy 'degraded' value
d734d7f mon: warn about misplaced objects, just like degraded
a314999 osd: num_objects_misplaced
14614e0 qa/workunits/rest/test.py: fix 'df' test to use total_used_bytes
93c5b25 Revert "os/FileJournal: Update the journal header when closing journal"
29e93f7 (origin/wip-9144) os/FileStore: rename start_sync() -> do_force_sync()
dd11042 os/FileStore: fix mount/remount force_sync race
0395914 mailmap: Loic Dachary affiliation
c83c90c (origin/wip-8621) rgw: update civetweb submodule
0d6d1aa (origin/wip-init-ceph) init-ceph: don't use bashism
7df67a5 Fix -Wno-format and -Werror=format-security options clash
ae0b9f1 (origin/wip-osd-mon-feature) osd: fix feature requirement for mons
0db3e51 (origin/wip-9119) ReplicatedPG::maybe_handle_cache: do not forward RWORDERED reads
5040413 ReplicatedPG::cancel_copy: clear cop->obc
2f0e295 unittest_osdmap: test EC rule and pool features
0b27610 Remove Old Wireshark Dissectors
16dadb8 osd: only require crush features for rules that are actually used
1d95486 crush: add is_v[23]_rule(ruleid) methods
b22d693 lttng: Add distro packaging
6891f4e lttng: Fix "make distcheck"
c54f1e4 (origin/wip-9053) mon/Paxos: share state and verify contiguity early in collect phase
3e5ce5f mon/Paxos: verify all new peons are still contiguous at end of round
5c2d232 (origin/wip-9025-chunk-remapping) erasure-code: remap chunks if not sequential
164cfe8 erasure-code: parse function for the mapping parameter
298da45 erasure-code: ErasureCodeInterface::get_chunk_mapping()
240764f rgw: update civetweb submodule
0e74b7a rgw: don't allow negative / invalid content length
1293e6b rgw: log civetweb messages
ffac52b rgw: disable civetweb url decoding
b24db81 FileStore: Introduced a RLock instead of WLock
3e7848d FileStore: No need to hold Index lock during omap calls
cfff9f6 FileStore: FDCache lookup is rearranged
78d70da FileStore: Index caching is introduced for performance improvement
b04d84d shared_cache: pass key (K) by const ref in interface methods
95ac43f FileStore: remove the fdcache_lock
a9f76d4 FDCache: implement a basic sharding of the FDCache
4c2828e shared_cache: expose prior existence when inserting an element
a1e79db (origin/wip-9039) rgw_admin: add --min-rewrite-stripe-size for object rewrite
46d8c97 doc: Add documentation about Wireshark dissector.
6a55543 rgw: fix compilation
f6771f2 shared_cache: use a single lookup for lookup() too
cec40da (origin/historic/old-wireshark-dissectors) qa/workunits/cephtool: verify setmaxosd doesn't let you clobber osds
a1c3afb OSDMonitor: Do not allow OSD removal using setmaxosd
16a4360 rgw: pass set_mtime to copy_obj_data()
800eff2 rgw: copy_obj_data() uses atomic processor
5d3a7e5 rgw: copy object data if target bucket is in a different pool
aec684b (origin/wip-9005) add calamari to the api/index section
ac70490 doc: update kernel recommendations (avoid 3.15!)
5374386 doc: Added user management link to quick start.
5e8eae7 doc: Removed cephx intro. Moved details to user management, config, and architecture.
3aa3e96 doc: Removed cephx guide. Replaced by user management.
aac6aa2 doc: Removed auth intro and auth docs and added user management to index.
4c651b7 doc: Restructured auth configuration reference.
3faf37a doc: Put architectural details of authentication in to architecture doc.
118ae72 doc: Created a new User Management doc to replace authentication.
0a49db8 (origin/wip-9062) msg/PipeConnection: make methods behave on 'anon' connection
8512904 lttng: Support --with-lttng=check
bb046ed mon/Paxos: put source mon id in a temp variable
d74d3f1 (origin/wip-8725) mds/MDSMap: fix incompat version for encoding
369c639 mds/MDSMap: drop trailing else in favor of early return
b2c1fa8 (origin/wip-9087) test/system/systest_runnable.cc: debugging on start and end
d74ed9d (origin/wip-9102) ceph-disk: linter cleanup
3efa30d lttng: Remove tracing from libcommon
520b75b rbd-replay: Fix bug in rbd-replay-prep, Thread::issued_io with wrong IO
89c3860 rbd-replay: Remove extent tracepoints and inline extents
b5bc14a rbd-replay: Move tracepoints from internal.cc to librbd.cc
febcce9 rbd-replay: Add man page and package binaries for rbd-replay-prep
c629241 rbd-replay: Convert prep-for-replay.py to rbd-replay-prep.cc
dca21ee rbd-replay: Add man page, and add binaries to Debian packaging
95e3b0b rbd-replay: Remove outdated message that says regexes are used
de9327c lttng: Replace Boost dependencies with custom string code
86d0b57 rbd-replay: Remove boost_regex from LIBADD and LDADD
a602bd4 rbd-replay: Fix compiler warning in unit tests
6be0c2b rbd-replay: Switch ImageNameMap from regex to plain string matching
77cf034 rbd-replay: Switch ImageNameMap to using rbd_loc
429a089 rbd-replay: Add rbd_replay::rbd_loc
0b68f01 rbd-replay: Use standard image@snap instead of image/snap
11f55de lttng: Fix ceph_ctf_stringp
ee4d217 rbd-replay: Support replaying partial traces
d66ee7a rbd-replay: Use non-zero fake data
b915161 rbd-replay: Add unit tests
ecd20a3 lttng: Preload liblttng-ust-fork.so in TESTS_ENVIRONMENT
c938829 lttng: Disable LTTng by default, add --with-lttng configure option
ae4e02a lttng: Fix 'make check' by setting up fake HOME
ff2b9f5 rbd-replay: Add --map-image option for image name mapping
c83856c rbd-replay: Add --pool option
0274376 rbd-replay: Add assertions
3a20acb lttng: Default to not storing buffer content
bbdd0da rbd-replay: Add command-line arguments to prep-for-replay.py
b11ab2e rbd-replay: Fix async writes in prep-for-replay.py
11186af rbd-replay: Add --read-only flag
9a31808 rbd-replay: Fix examples/rbd-replay/replay
4f6e775 rbd-replay: Clean up prep-for-replay.py
b58797e rbd-replay: Hash completions across multiple mutexes to reduce contention
d4e07f0 rbd-replay: Add --latency-multiplier option to usage statement
0a629a9 doc: Add usage comment to librbd::RBD::AioCompletion
a7da7e0 rbd-replay: Fix memory leak in PendingIO
a06e347 rbd-replay: Check that return values are non-negative
e06e979 rbd-replay: Support writing Actions to ostreams
0129841 rbd-replay: Print "Still waiting for" more judiciously
c4ba997 rbd-replay: Change Worker::m_pending_ios from vector to map
84edf37 rbd-replay: Printing pending IOs when worker threads waiting to die
d8a86bf rbd-replay: Bugfix: ensure PendingIOs are added before they're removed
9ec70b9 rbd-replay: Add rbd_replay subsystem
6d987ce Add assertf macro
fc71284 rbd-replay: Switch logging from cout to dout
b73af7c lttng: Add rbd-replay
cffb8f3 lttng: Add more tracing to librbd
ef5c30a tracing: instrument filestore
4001b28 lttng: Basic tracing of librbd
289c98d lttng: Remove 'ver' from trace in code for CEPH_OSD_OP_NOTIFY
8e238b5 lttng: Split up libtracepoints
50020b0 lttng: Prevent deletion of tracing-common.h when cleaning
be3c913 lttng: Prevent creation of incorrect .o files when generating from .tp
c4f29af lttng: Trace librados C API
1dcf847 examples: Add example for the librados C API
3e21f8e lttng: Add tracing-common.h
fb45d60 lttng: Trace ReplicatedPG::do_osd_ops
469c937 lttng: Add rmw_flags to tracepoint in PG::queue_op
d5b16e4 lttng: Trace OpRequest
2f2d6e1 tracing: automake-ify tracepoint generation
64fbc28 lttng: Check for lttng/tracepoint.h when configuring
8a28388 lttng: add pg and osd tracepoints
090f63e lttng: trace mutex::unlock
7a9eb3f tracing: bootstrap lttng-ust with mutex events
239401d mon: fix divide by zero when pg_num adjusted and no osds
c5687b1 mon: fix potential divide by zero on can_mark_{down,out}
f81d2b0 mon: fix divide by zero when pg_num adjusted and no osds
8a647f7 mon: fix potential divide by zero on can_mark_{down,out}
5ed9f4e (origin/wip-9029) mds: Revert from mds_mksnap_ setting to mds_snap_ settings
6f7798e (origin/wip-ceph-disk) ceph-disk: warn about falling back to sgdisk (once)
b1651af ceph-disk: only fall back to sgdisk for 'list' if blkid seems old
b75e8a3 ceph-disk: add get_partition_base() helper
c7a1ceb ceph-disk: display information about dmcrypted data and journal volumes
5be56ff osd/ReplicatedPG: only do agent mode calculations for positive values
7b3714c (origin/wip-9096) osd: fix some line wrapping
df945a9 osd: fix require_same_peer_instance from fast_dispatch
3d7e2b3 osd: inline require_osd_up_peer
e86fdef rgw: move generic server usage after all options
b09b856 mon/Paxos: add perfcounters for most paxos operations
f80ed26 ceph-disk: move fs mount probe into a helper
6c77f5f ceph-disk: use partition type UUIDs, and blkid
ea90d9f Revert "ReplicatedPG: do not pass cop into C_Copyfrom"
300b5e8 ReplicatedPG: do not pass cop into C_Copyfrom
24aeca9 (origin/wip-9064) ReplicatedPG::maybe_handle_cache: do not skip promote for write_ordered
984f614 erasure-code: isa plugin must link with ErasureCode.cc
1088d6c ceph-disk: fix log syntax error
41e4461 doc/changelog: v0.67.10 notes
44ed188 init-ceph: conditionally update  after argparsing
350b512 doc/release-notes: v0.67.10
7998c32 rgw: call throttle_data() even if renew_state() failed
057c680 common/LogClient: fix sending dup log items
71e827f utime: Because class Clock didn't exist,so remove the declaration in class utime_t.
78dc4df doc: Replace [default] with [global].
e5324ed doc: Added yum-priorities procedure to manual install.
a01252a doc: Added priority = 2 to packages.
3dfa72d (origin/wip-8912) librbd: fix error path cleanup for opening an image
2edf01f Revert "Fix for bug #6700"
d6e6ba1 ceph-disk: fix verify_no_in_use check
0a2b4c2 rgw: Don't send error body when it's a HEAD request
b0f5ba9 (origin/wip-rados-df-json) rados: remove {read,write}_kb fields from rados df json output
5663f91 rados: fix {read,write}_bytes value
8180713 (origin/wip-9057) msg/Pipe: do not wait for self in Pipe::stop_and_wait()
fd421b2 mon/MonitorDBStore: add get_{keys,bytes}() accounting to Transaction
d7fb7bf (origin/wip-9055) ceph_test_rados_api_tier: fix cache cleanup (ec too)
ebbe8aa ceph_test_rados_api: fix cleanup of cache pool
1d199fb librados/TestCase: inheret cleanup_default_namespace
5808d6a (origin/wip-9044-use-ruleset) osd: improve ruleno/ruleset consistency
3f5d86a erasure-code: ErasureCodeIsa::create_ruleset must return a ruleset
0029a35 erasure-code: ErasureCodeJerasure::create_ruleset must return a ruleset
04a484a erasure-code: OSDMonitor::crush_ruleset_create_erasure needs ruleset
4e8de17 os/FileStore: dump open fds before asserting
281159b doc: Initial network docs.
4f6d513 os/chain_xattr: Remove all old xattr entry when overwrite the xattr.
84c9654 OSD: add require_same_peer_inst(OpRequestRef&,OSDMap&) helper
4a0c941 OSD: introduce require_self_aliveness(OpRequestRef&,epoch_t) function
48c9b38 OSD: use OpRequestRef& for a few require_* functions
f86bf1d OSD: introduce require_up_osd_peer() function for gating replica ops
ee790e3 (origin/wip-problem-osds) osd/osd_types: s/int/int32_t/ in pg_stat_t
d862731 osd/PG: bound number of blocked_by OSDs we report per PG
bee79ec qa/workunits/cephtool: add trivial 'ceph osd blocked-by' test
6380f47 qa/workunits/cephtool: add simple 'ceph osd perf' test
c511046 mon: add 'osd blocked-by' command
d55e973 mon/PGMap: track histogram of pg blocked_by
47a9af3 osd/PG: set blocked_by in GetMissing
6fcdbd2 osd/PG: set blocked_by in Incomplete state
ceaca9f osd/PG: set blocked_by during peering GetLog
6e96c2d osd/PG: set blocked_by during peering GetInfo
e4b0071 RadosClient: Enable pool existence check
c34f935 (origin/wip-fsx-flatten) test_librbd_fsx: also flatten as part of randomize_parent_overlap
214630b mds: Also check min/max uid on snap removal
a52a855 (origin/wip-pg-epoch) osd: fix pg epoch floor tracking
2120f4b OSD: move waiting_for_pg into the session structures
71cb4d3 doc: Removed Debian reference from Upstart.
8357cae doc: Incorporated user feedback to clarify upgrade doc.
b6bf33c doc: Added configuration discussion at end of gateway install with links to config.
11cefca OSD::shutdown: actually drop sessions waiting on map
6aba942 OSD: clear_session_waiting_on_map in ms_handle_reset
11d6e5a OSD: rename session_waiting_for_map_lock to session_waiting_lock
20fd714 OSD: wake_pg_waiters outside of the pgmap write_lock, pg_lock
6e7b86a OSD: fix wake_pg_waiters revert error in _open_lock_pg
4260767 (origin/wip-8625) osd_types: s/stashed/rollback_info_completed and set on create
d0ccb1c make ceph-disk use the new init flag for cluster
23b4915 allow passing a --cluster flag to the init script
6bd2b0f mds: Make min/max UID configurable for who is allowed to create a snapshot
a5ecf15 powerdns: Update README with better markdown
bf9726a (origin/xiaoxichen-fix_crush_ruleset) mon/OSDMonitor : Use user provided ruleset for replicated pool
f1aad8b RadosClient: Fixing potential lock leaks.
26750fc (origin/wip-filestore-bigxattr) os/FileStore: force any new xattr into omap on E2BIG
cc3112e (origin/wip-rados-xattr) rados: use STD{IN,OUT}_FILENO for magic values
e3819b6 qa/workunits/rados/test_rados_tool: add a few xattr tests
645c28a rados: optionally read setxattr value from stdin
59a715a rados: don't add \n to getxattr
e5b67f7 Update doc
789284c mon/PGMap: s/osdid/osd/ in 'osd perf' plaintext heading
1b8a9ec mon/OSDMonitor: clean up 'osd perf' command placement
940e42d osd/PG: populate pg_stats_t blocked_by
ea731ae qa/workunits/cephtool/test.sh: fix 'ceph df ...' tests
bdf5f30 use cluster name when checking the host
3fb25c2 use  name in /var/lib/ceph paths
9e08e3a when starting an OSD, pass in the cluster name
0bd7c34 PendingReleaseNotes: make note about rbd cache default change
c0ef8b8 rocksdb: fix i386 build
7a9b986 rados: add {read,write}_ops to df json
ee2dbdb mon/PGMonitor: remove {rd,wr}_kb from pool stat dumps
4c8e322 mon: remove *_kb perf counters
3179bb1 mon/PGMonitor: add _bytes perf counters
adb2791 mon/PGMonitor: add _bytes fields for all usage dumps
895318c README.md: word wrap
500b95e README: symlink from README.md
0114b33 (origin/wip-8496-erasure-code-base-class) erasure-code: rework ErasureCode*::parse methods
77690f6 erasure-code: move to ErasureCode::decode_concat
54394fa erasure-code: move to ErasureCode::to_{int,bool}
b4b7c51 erasure-code: move to ErasureCode::minimum_to_decode*
4ff981f erasure-code: move to ErasureCode::{encode,decode}{,chunk}
1ebce98 erasure-code: ErasureCode base class
859944d (origin/wip-test-ceph-disk) test/osd/osd-test-helpers: mkdir -p for ceph-disk
4b45e25 Add handles for the ceph-mon starting with upstart
c2f58e6 test/ceph-disk.sh: mkdir -p
a923e2c Renamed README to README.md to render in markdown
52cf693 Developer quick start guide
c09036a enable info_log_level config option for rocksdb
66de51d (origin/wip-8875) be a bit more explicit about 'ceph-deploy new' in quickstart
b4c80e3 Do not make directories by mistake.
f773b24 powerdns: Define a application variable when not invoked from Shell
1682e62 doc: typo s/loose/lose
466aba4 osd/osd_types: add blocked_by to pg_stat_t
b9b022e add annotation for rocksdb config option
8dcfbd8 (origin/wip-8998) osd: simplify dout_prefix macros
80829d7 osd: reorder OSDService methods under proper dout_prefix macro
047c18d doc/release-notes: make note about init-radosgw change
354c411 doc: Added 'x' to monitor cap.
7b2c8b3 cls_rgw: fix object name of objects removed on object creation
8519e9a rgw: need to pass need_to_wait for throttle_data()
0620624 rgw: call processor->handle_data() again if needed
516101a EC-ISA: provide a 10% faster simple parity operation for (k, m=1). Add simple parity unit test for k=4,m=1
985b7c2 osd/ECBackend: clean up assert(r==0) in continue_recovery_op.
8363a94 erasure-code: HTML display of benchmark results
3cc7234 COPYING: Cloudwatt copyright is inline
e11c3fc erasure-code: rework benchmark suite
90592e9 erasure-code: properly indent ErasureCodePluginSelectJerasure.cc
be3e1e4 erasure-code: control jerasure plugin variant selection
5fb4354 erasure-code: reduce jerasure verbosity
c7daaaf (origin/wip-8475) erasure-code: implement alignment on chunk sizes
3987ac2 erasure-code: cauchy techniques allow w 8,16,32
cb54605 mailmap: sort entries
accf8c2 mailmap: Tommi Virtanen is not with Red Hat
f870b34 mailmap: João Eduardo Luís name normalization
ef620cc mailmap: Sebastien Ponce name normalization
2f21a11 mailmap: Brian Rak affiliation
b1ba72f mailmap: George Ryall affiliation
6f24a04 mailmap: Stephen Jahl affiliation
6f238fa mailmap: Adam Crume affiliation
6652494 mailmap: Accela Zhao affiliation
794f70a mailmap: Kevin Cox affiliation
d8e6415 mailmap: Ma Jianpeng affiliation
3230060 (origin/wip-ceph-conf) ceph-conf: flush log on exit
076f33a ECBackend: Don't directly use get_recovery_chunk_size() in RecoveryOp::WRITING state.
98997f3 (origin/wip-8891) msg/SimpleMessenger: drop msgr lock when joining a Pipe
e36babc os/MemStore: fix lock leak
e93818d (origin/wip-rgw-need-to-wait) rgw: need to pass need_to_wait for throttle_data()
3de7b7c doc/release-notes: fix syntax error
c95e91e os/KeyValueStore: clean up operator<< for KVSuperBlock
1417ede ceph_test_rados_api_tier: test promote-on-second-read behavior
0ed3adc osd: promotion on 2nd read for cache tiering
13b9dc7 osd: add local_mtime to struct object_info_t
57fd60c rocksdb: -Wno-portability
c574e65 autogen.sh: debug with -x
213e0ac debian, rpm: build rocksdb statically if we can
a497a3b debian, rpm: build require bzip2 dev
da5edb8 add rocksdb bz2 dep
8fcbb65 configure: enable static rocksdb if check and c++11
7500b89 Makefile: include rocksdb in dist tarball always
5502dd3 configure: verify c++11 is present for rocksdb
3329352 rocksdb: require less shiny autoconf
bcebf9c do_autogen.sh: build with static librocksdb
eb1cd78 rocksdb: update submodule makefile
2e549b4 (origin/wip-ec-isa) unittest_erasure_code_[plugin_]isa: conditionally compile
04037ef (origin/wip-osd-leaks) osd: do not leak Session* ref in _send_boot()
d00f23b erasure-code/isa: fix signed/unsigned comparison
8a193ab erasure-code/isa: don't use typename outside of template
92d0bbe ECBackend: Using ROUND_UP_TO to refactor function get_recovery_chunk_size()
e4ed2cb ReplicatedPG: For async-read, set the real result after completing read.
6e52efa doc/release-notes: tweak quoting
8091173 (origin/wip-round) use llrintl when converting double to micro
d8b291f configure: check for 'better' yasm that can build ISA-L
1520b47 erasure-code/isa/Makefile: add missing \, and missing headers
e1f32d9 yasm-wrapper: fix -f ...
1670fd6 yasm-wrapper: turn -I foo into -i foo
6d95797 yasm-wrapper: echo original args
b7d0017 EC: add plugin for Intel ISA-L library
383536a (origin/wip-8982) mon/OSDMonitor: warn when cache pools do not have hit_sets configured
caf554b osd/ReplicatedPG: improve agent_choose_mode args
ce4e559 vstart.sh: limit open files
ea4996d osd/ReplicatedPG: evict blindly if there is no hit_set
5d1c76f osd/ReplicatedPG: check agent_mode if agent is enabled but hit_sets aren't
51c1f2a FileStore: Add omap_backend to "<<" operator
7faed14 Add superblock to KeyValueStore
b879e74 KeyValueStore: use generic KeyValueDB::create()
9df9d28 (origin/wip-8969) mon/OSDMonitor: fix i386 floating point rounding error
aa9ae1f (origin/wip-8944) qa/workunits/cephtool/test_daemon.sh: verify ceph -c works with daemon
22d20f3 qa/workunits/cephtool/test_daemon.sh: typo
97a8d5a qa/workunits/cephtool/test_daemon.sh: allow local ceph command
9686312 atomic: fix read() on i386, clean up types
6d89a99 ceph.in: Pass global args to ceph-conf for proper lookup
0190df5 (origin/wip-8714) osd: prevent old clients from using tiered pools
605064d (origin/wip-cli-integration) test/cli-integration/rbd: fix trailing space
d700076 (origin/wip-double-pc) mon: s/%%/%/
0f8929a (origin/wip-8972) cls_rgw: fix object name of objects removed on object creation
061c8e9 (origin/wip-rbd-flush) librbd: enable rbd cache by default; writethrough until flush
4e1405e (origin/wip-erasure-code-profile-default) erasure-code: create default profile if necessary
5f65b4d os/FileJournal: When dump journal, using correctly seq avoid misjudging joural corrupt.
7b169a0 rocksdb backend optimization
708b5b8 add --with-librocksdb-static configure options
101954c get a stable rocksdb (3.0)
6eea02c add rocksdb submodule
cbd0043 add rocksdb support
5d5902a (origin/wip-filestore-omap) os/KeyValueStore: rename osd_keyvaluedb -> keyvaluestore_backend
1a5dea7 os/FileStore: use generic KeyValueDB::create(); store omap_backend in superblock
a2a3619 mon/MonitorDBStore: use generic KeyValueDB::create()
86a0b9d os/KeyValueDB: make compaction interface generic
4bf929e os/KeyValueDB: generic create(), test_init()
e141872 config: allow unsafe setting of config values
2f9fe02 mailmap: Red Hat names normalization
3cfda57 doc/release-notes: v0.83
18ea2a8 (origin/wip-8586) rgw: fix crash in swift CORS preflight request
6bb3aea mds: remove some rogue "using namespace std;"
c283ad4 mds: handle replaying old format journals
07665ec mds: introduce explicit DaemonState instead of int
6b004f1 mds: refactor MDS boot
6832ec0 mds: make MDS::replay_done clearer
e587088 mds: remove unused purge_prealloc_ino
6be8087 mds: separate inode recovery queue from MDCache
0d70989 python-ceph: require libcephfs.
78ff1f0 (tag: v0.83) 0.83
06c4736 Remove reference from mkcephfs.
4045b2e doc/release-notes: typo
df1bad8 doc/release-notes: v0.80.5 release notes
e99acf9 (origin/wip-8880) OSD: add require_same_peer_inst(OpRequestRef&,OSDMap&) helper
e179e92 OSD: introduce require_self_aliveness(OpRequestRef&,epoch_t) function
f36cffc unittest_crush_wrapper: fix build
eb2f1ea OSD: use OpRequestRef& for a few require_* functions
1526546 Remove reference from mkcephfs.
9b03752 Fix some style and checking issue
5773a37 (origin/wip-upstart-nfile) upstart/ceph-osd.conf: bump nofile limit up by 10x
d3e5961 (origin/wip-undump) tools/cephfs: fuller header in dump/undump
e183a4d (origin/wip-fsx-overlap) test_librbd_fsx: clone/flatten probabilities
bb095ff test_librbd_fsx: randomize_parent_overlap
f6d1a92 test_librbd_fsx: introduce rbd_image_has_parent()
eb697dd librbd: make rbd_get_parent_info() accept NULL out params
04d0526 PGMonitor: fix bug in caculating pool avail space
b08470f (origin/wip-libs) configure.ac: link libboost_thread only with json-spirit
9d23cc6 configure: don't link blkid, udev to everything
de9cfca (origin/wip-flush-set) Only write bufferhead when it's dirty
1c26266 ObjectCacher: fix bh_{add,remove} dirty_or_tx_bh accounting
727ac1d ObjectCacher: fix dirty_or_tx_bh logic in bh_set_state()
5283cfe Wait tx state buffer in flush_set
d858fdc Add rbdcache max dirty object option
b8a5668 Reduce ObjectCacher flush overhead
288908b Revert "Merge pull request #2129 from ceph/wip-librbd-oc"
0553890 (origin/wip-8937) rgw: call processor->handle_data() again if needed
d3de69f mds: fix journal reformat failure in standbyreplay
8fb761b (origin/wip-8931) osd/ReplicatedPG: requeue cache full waiters if no longer writeback
36aaab9 osd/ReplicatedPG: fix cache full -> not full requeueing when !active
ba9d52e (origin/wip-librbd-snap-meta) librbd: store and retrieve snapshot metadata based on id
c5f766b (origin/wip-8932) ceph_test_rados_api_tier: do fewer writes in HitSetWrite
f360920 common/RefCountedObject: fix use-after-free in debug print
14cad5e (origin/wip-rgw-align) rgw: object write should not exceed part size
fc83e19 rgw: align object chunk size with pool alignment
1f9c732 doc: Add additional hyperlink to Cache Tiering defaults.
4047660 doc: Update doc from user feedback.
d1dfb9b osd: fix bad Message* defer in C_SendMap and send_map_on_destruct
5740266 test: catch a straggler still using 'data' pool
4eb18dd (origin/wip-journal-header) os/FileJournal: Update the journal header when closing journal
63c1711 msg/SimpleMessenger: drop local_conneciton priv link on shutdwon
2545e80 librbd: fix crash using clone of flattened image
4fe0792 doc: Updated mon doc per feedback. Fixed hyperlinks.
c511822 doc: update radosgw man page with available opts
e259aca rgw: list all available options during help()
99e80a5 rgw: format help options to align with the rest
95aaeb6 osd: use Connection::send_message()
be91daf common/LogClient: use con-based send_message
694ced9 client: use con-based send_message
2c28548 msgr: remove Messenger::mark_disposable()
8b49b3a mds: use Connection::mark_disposable()
2970396 msgr: add Connection::mark_disposable()
3ca533e msgr: kill mark_down_on_empty()
637ada2 msgr: kill addr-based send_keepalive()
322908b msg: drop Messenger::mark_down() and send_keepalive() con-based calls
f048102 osdc/Objecter: use Connection::mark_down()
841d5ac osd: use Connection::mark_down()
774481b mon/MonClient: use Connection::send_keepalive()
c42922a mon/MonClient: use Connection::mark_down()
92c46a7 mon: use Connection::mark_down()
54eca56 mds: use Connection::mark_down()
d60e8a2 client: use Connection::mark_down()
f0fef07 mon: use send_message instead of lazy_send_message
e184ef8 msgr: remove Messsenger::send_message(..., Connection*)
2bb9ab2 osdc/Objecter: use Connection::send_message()
05bf6cf mds: use Connection::send_message()
aeee097 client: use Connection::send_message()
f413bc8 mon: use Connection::send_message()
3d57e39 osd: use Connection::send_message
531073f msgr: add convenience Connection methods
afb4c37 msg: factor policy handling out of SimpleMessenger
6597c20 mon: clean up ref counting for forwarded messages' sessions
29e04c8 msgr: move PipeConnection out of Connection.h; make anon
ea14d7b Refactor Messenger class family.
63abf11 (origin/wip-8882) osd/ReplicatedPG: observe INCOMPLETE_CLONES in is_present_clone()
4136471 osd/ReplicatedPG: observed INCOMPLETE_CLONES when doing clone subsets
956f287 osd/ReplicatedPG: do not complain about missing clones when INCOMPLETE_CLONES is set
54bf055 osd/osd_types: add pg_pool_t FLAG_COMPLETE_CLONES
67d13d7 mon/OSDMonitor: improve no-op cache_mode set check
d4faf74 (origin/wip-8701) ceph_test_objectstore: clean up on finish of MoveRename
3ec9a42 os/LFNIndex: use FDCloser for fsync_dir
6fb3260 os/LFNIndex: only consider alt xattr if nlink > 1
ec36f0a os/LFNIndex: remove alt xattr after unlink
a320c26 os/LFNIndex: FDCloser helper
b2cdfce os/LFNIndex: handle long object names with multiple links (i.e., rename)
cf98805 ceph_test_objectstore: fix warning
6aa48a4 store_test: add long name collection_move_rename tests
c0cb56f ceph.spec.in: add bash completion file for radosgw-admin
1ad4cd3 ceph.spec.in: rhel7-related changes:
c57811f Fix/add missing dependencies:
793e05a ceph.spec.in: whitespace fixes
dae6ecb ceph.spec.in: split out ceph-common as in Debian
a05a0da common/random_cache: fix typo
5efdc62 common/RandomCache: Fix inconsistence between contents and count
356af4b (origin/wip-8889) osd/ReplicatedPG: debug obc locks
6fe2782 osd/ReplicatedPG: greedily take write_lock for copyfrom finish, snapdir
0962650 osd: allow greedy get_write() for ObjectContext locks
ccd0eec OSD: introduce require_up_osd_peer() function for gating replica ops
253ca2b (origin/wip-8897) os: make name/attr max methods unsigned
daac750 os/KeyValueStore: make get_max_object_name_length() sane
e311a08 uncomment cleanup command
c264774 init: add systemd service files
d87e5b9 powerdns: RADOS Gateway backend for bucket directioning
b551ae2 (origin/wip-8851) mon: AuthMonitor: always encode full regardless of keyserver having keys
1518fa2 osd: init local_connection for fast_dispatch in _send_boot()
34b0efd (origin/wip-librbd-oc) ObjectCacher: fix bh_{add,remove} dirty_or_tx_bh accounting
8a05f1b ObjectCacher: fix dirty_or_tx_bh logic in bh_set_state()
d358741 Wait tx state buffer in flush_set
3c7229a Add rbdcache max dirty object option
5cb4b00 Reduce ObjectCacher flush overhead
9061988 osd: init local_connection for fast_dispatch in _send_boot()
b6f3aff Fix mismatched tags (struct vs. class) inconsistency
2aa3edc (origin/wip-8174) os/FileStore: fix max object name limit
f4bffec ceph_test_objectstore: test memstore
6f312b0 os/MemStore: copy attrs on clone
8dd6b8f os/MemStore: fix wrlock ordering checks
a2594a5 osd/MemStore: handle collection_move_rename within the same collection
3467110 (origin/wip-dencoder) ceph-dencoder: don't link librgw.la (and rados, etc.)
b1a641f rgw: move a bunch of stuff into rgw_dencoder
1c17077 libosd_types, libos_types, libmon_types
58cc894 Revert "ceph.spec: move ceph-dencoder to ceph from ceph-common"
f181f78 Revert "debian: move ceph-dencoder to ceph from ceph-common"
ad4a4e1 unittest_osdmap: revert a few broken changes
d7209c1 (origin/wip-8858) rgw: dump prefix unconditionally
dc417e4 rgw: list extra objects to set truncation flag correctly
82d2d61 rgw: account common prefixes for MaxKeys in bucket listing
924686f rgw: add NextMarker param for bucket listing
4a63396 rgw: fix decoding + characters in URL
09a5974 crushtool: Send output to stdout instead of stderr
e6cf618 rgw: improve delmited listing of bucket
49fc68c utf8: export encode_utf8() and decode_utf8()
bd3367e osd: add config for osd_max_attr_name_len = 100
7c0b2a0 os: add ObjectStore::get_max_attr_name_length()
7e0aca1 osd: add config for osd_max_object_name_len = 2048 (was hard-coded at 4096)
e60dd0f (origin/wip-8811) osdc: refactor JOURNAL_FORMAT_* constants to enum
8eef89e doc: fix example s/inspect/journal inspect/
5438500 mds: fix journal reformat failure in standbyreplay
ed3bc4c osdc/Journaler: validate header on load and save
18ca6b6 test: add a missing semicolon
0cd0268 (origin/wip-vstart-existing-mds) qa: generalise cephtool for vstart+MDS
bb5a574 mon: carry last_failure_osd_epoch across `fs new`
b936a27 mon/MDSMonitor: fix msg on idempotent `fs rm`
06a8f7b configure: do not link leveldb with everything
0193d3a AUTHORS
14a9ca6 (origin/wip-logrotate) logrotate.conf: fix osd log rotation under upstart
7b342ef doc: Add Note about European mirror in Quick Start
0f11aae (origin/wip-8849) remove suse service restarts
e3a5756 remove ceph restarts on upgrades for RPMs
4d6899c qa/workunits/cephtool/test.sh: fix erasure_code_profile get test
ce9f12d qa/workunits/cephtool/test.sh: test osd pool get erasure_code_profile
e8ebcb7 mon: OSDMonitor: add "osd pool get <pool> erasure_code_profile" command
5ccfd37 vstart.sh: default to 3 osds
5f6b11a (origin/wip-8857) mon/MDSMonitor: make legacy 'newfs' command idempotent
b89ab5f rgw: don't try to wait for pending if list is empty
19e68ac (origin/wip-rbd-defaults) rbd: respect rbd_default_* parameters
e891a93 rbd: remove accidental repeated option
0f87c55 librbd: use order-agnostic default stripe parameters
f9f2417 (origin/wip-8846) rgw: don't try to wait for pending if list is empty
420f0a4 (origin/wip-8813) set the default log level to WARNING
3e0d980 init-ceph: wrap daemon startup with systemd-run when running under systemd
99dfaf7 doc/release-notes: v0.80.4
80ea606 Fix size of network protocol intergers.
2f43cef doc: Extended discussion for building docs on CentOS / RHEL.
124f97f doc: Added a script to build docs on CentOS / RHEL.
6c48d07 (origin/wip-set_layout) doc: add cephfs layout documentation
af740ec cephfs: pool safety & print deprecation warning
d915ceb update hadoop-wordcount test to be able to run on hadoop 2.x. The hadoop and mapreduce library are no longer hard coded so they can be specified to point to the right path. The relative paths hdfs are changed to absolute paths. A sample command to run the test on hadoop 2.x is TESTDIR=/home/test HADOOP_HOME=/usr/lib/hadoop HADOOP_MR_HOME=/usr/lib/hadoop-mapreduce sh workunits/hadoop-wordcount/test.sh starting hadoop-wordcount test
cceab2b qa: retire kclient-specific layout test
95f5a44 ceph.spec: move ceph-dencoder to ceph from ceph-common
b37e3bd debian: move ceph-dencoder to ceph from ceph-common
01cd3cd (origin/wip-8830) XfsFileStoreBackend: default to disabling extsize on xfs
fc597e5 doc/release-notes: some additional warnings and recommendations against adjusting tunables
e17e9d8 (origin/wip-8823) ceph_test_rados_api_tier: fix [EC] HitSet{Read,Write,Trim} tests
a4ed336 (origin/wip-mds-session-asok-squash) mds: add `session ls` and `session evict` to asok
0e0be07 client: include ID in mds_sessions asok
52a2bc5 mon: remove unused attribute notified_global_id
b120a48 common/admin_socket: remove dead code
bb47ff3 osd: fix confusing debug output for op_applied
586d3ee doc: Fixes a broken link on the rados deploy osd page.
447f849 doc/release-notes: v0.80.3
29f20b7 (origin/wip-test-post-file) qa/workunits/post-file.sh
c9e1e82 rbdmap: per-device post-map/pre-unmap hooks
c93da05 (origin/wip-8815) osd/osd_types: be pedantic about encoding last_force_op_resend without feature bit
712d5d1 osd/osd_types: remove useless encode_compat local var for pg_pool_t::encode
50e93c2 (origin/wip-8696) qa/workunits: cephtool: adjust pool name where missing as it has changed
cf94cf3 (origin/wip-dump-new-crush) crush: include CRUSH_V3, v2/v3 rules checks in dump_tunables()
daadff4 doc: minor format fix for radosgw admin docs
b844ec9 rbdmap: per-device mount (Closes: #8538)
02683ac rbd.cc: Check io-size avoid floating point exception.
6cd3457 qa/workunits: cephtool: cleanup after pool creation
704b0a3 qa/workunits: cephtool: pool needs to be a tier to be used as such
49db676 qa/workunits: cephtool: test erroneous 'tier remove'
9fea033 qa/workunits: cephtool: test get/set on both tier and non-tier pools
df59449 qa/workunits: cephtool: split get/set on tier pools from get/set tests
8e5a8da mon: OSDMonitor: be scary about inconsistent pool tier ids
64bdf6c osd: pg_pool_t: clear tunables on clear_tier()
f131dfb mon: OSDMonitor: limit tier-specific pool set/get on non-tier pools
026b127 doc/changelog/v0.80.2: include tag
59c00e5 (origin/wip-kinetic-os) os: add prototype KineticStore
74f5e5e PG::op_must_wait_for_map: pass the epoch rather than the map
98f92d8 doc: Added CentOS/RHEL install for git.
115c078 rgw: modelines
c4afaf9 rgw: fix RGWObjManifestRule decoder
0839e2a doc: Added keyring location note to resolve pull abandoned pull request #1946.
4692257 (origin/wip-nuke-dlist) nuke dlist
a3e5c6d Add random_cache.hpp to Makefile.am
f51f162 test: fix make_pair() for c++11
79e3761 Remove some not-resolving make_pair() invocations.
ebbdb3c Add required spacing after string literals (PRIu64).
16ef1ed Convert ConnectionRef explicitly to bool.
c930a1f Work around an apparent binding bug (GCC 4.8).
228760c Fix the PG listing issue which could miss objects for EC pool (where there is object shard and generation). Backport: firefly Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
bd6ba10 doc: Clean up formatting, usage and removed duplicate section.
15d5b51 doc/release-notes: v0.80.2
29c2bb2 Revert "qa: add an fsx run which turns on kernel debugging"
c15e524 Revert "qa: add an fsx run which turns on kernel debugging"
2217f2b doc: fix a typo in quickstart doc
7a0ea79 doc: fix a few typos in radosgw docs
d089283 doc: fix a few typos in rados docs
cc5c33f doc: fix a few typos in the dev docs
e23ed9b doc: fix a few typos in rbd docs
d693d7b doc: Fix a few typos in the install docs
bb881e5 doc: fix a few typos in architecture page
fcbdd2f doc: Fix a typo in the rbd man page
ef117fe Use submit_transaction_sync to make change durable
6ff5fed Add random cache and replace SharedLRU in KeyValueStore
c0dc245 (origin/wip-7891) osd: cancel agent_timer events on shutdown
ef40737 osd: s/applying repop/canceling repop/
cafceae osd: clear PGBackend state on shutdown
e299357 osd: separate cleanup from PGBackend::on_change()
b16b64e Support for READFORWARD in the caching tier
b927c0d (origin/wip-8523) qa/workunits: cephtool: test for 'osd pool {get,set}-quota'
714a9bb mon: OSDMonitor: add 'osd pool get-quota' command
c92feeb (origin/wip-8727) messages: MForward: fix compat version
0bf4f65 osd: clear sessions_waiting_on_map on shutdown
aefbac5 osd: fix session leak when waiting on map
17ad083 osd: clear Sessions for loopback Connections on shutdown
231fe1b Revert "OSD: move waiting_for_pg into Session"
aa1be2e OSD: fix debug logging output
b700963 (origin/wip-8306-rebase) ceph.spec.in: add bash completion file for radosgw-admin
235e4c7 ceph.spec.in: rhel7-related changes:
7cf8132 Fix/add missing dependencies:
ec8af52 ceph.spec.in: whitespace fixes
e131b9d ceph.spec.in: split out ceph-common as in Debian
08fa16b common: seq_read_bench argument order changed The argument order for seq_read_bench in src/common/obj_bencher.h has been changed to match the argument order in obj_bencher.cc
cca5841 (origin/wip-8751) test: generalise default_pools in test_rados
a7a631d (origin/wip-8754) tests: don't depend on 'data' pool in rbd test
cf5f535 doc/release-notes: clarify CRUSH notes about tunables
d84d720 decrement WBThrottle perfcounters in clear_object
16df4c3 (origin/wip-8745) mds: use client-provided time stamp for user-visible file metadata
73b2928 Remove exclusive lock on GenericObjectMap
d104979 Add Header cache to KeyValueStore
c0806bb doc: mention kernel support for rbd format 2
c7937ff doc: Fix a typo regarding requiretty for RHEL based platforms
54af810 (origin/wip-8738-next) mon: check changes to the whole CRUSH map and to tunables against cluster features
2280c0e OSDMonitor: fix quorum_features comparison in check_cluster_features
c0ba58c (origin/wip-refs) msg: debug refs on incoming Messages
c0dcf3b common/RefCountedObject: make nref, cct private
b0da92b msg/Message: use RefCountedObject ctor to set initial ref count
e621856 msg/Pipe: debug Pipe refs
242ee89 msg: debug Connection refs
fc8d198 osd: debug Session refs
45991c0 common/RefCountedObject: assert nref == 0 in dtor
ff1521f common/RefCountedObject: optionally take initial ref count to ctor
0547417 common/RefCountedObject: optionally debug
2226b91 qa: support running under non privileged user
f7086d3 Automagically setup submodules on first run.
0c7c722 ceph_argparse_flag has no regular 3rd parameter.
909850e [werror] Fix c++11-compat-reserved-user-defined-literal
fde99e6 OSD: adjust share_map() to handle the case that the osd is down
ddc04c8 (origin/wip-8670) mon: OSDMonitor: 'osd pool' - if we can set it, we must be able to get it
0392ddb ReplicatedPG: Removed the redundant register_snapset_context call
2f089d8 OpTracker: The optracker enabled/disabled check is added
63be0f2 OpTracker: use mark_event rather than _mark_event
bb3e1c9 (origin/wip-8728) qa/workunits/rest/test.py: make osd create test idempotent
7e1deb6 (origin/wip-async-log) mds: defer encoding/submitting log events to separate thread
44199d6 mds: use mutex to protect log segment list
6d8ccdd mds: add thread to encode/submit log events
70c0723 (origin/wip-osd-dumpres) osd: add dump_reservations asok command
6483710 common/AsyncReserver: add dump()
9ce5ff9 (origin/wip-8692) mon: clear osd request queue latency info on down or up
f8c88a4 OSD: wake_pg_waiters after dropping pg lock
e2b151d (origin/wip-fs-cmds-oops) mds: Update default FS name
f62f7f5 qa: update cephtool EC pools test to respect IDs
710561c mon/MDSMonitor: EC check in 'fs new' like newfs
44eb259 qa: add a check for crash_replay_interval autoset
c0ffa01 mon: Set crash_replay_interval automatically
82d3fcc qa: Update data pool ID for vxattrs test
917ef15 test: use 0U with gtest to avoid spurious warnings
522174b (origin/wip-vstart-wrapped) qa: support running under non privileged user
8697d6a OSD: await_reserved_maps() prior to calling mark_down
6f97206 (origin/wip-osd-map-cache-size) osd: allow osd map cache size to be adjusted at runtime
bcc09f9 qa/workunits/cephtool/test.sh: sudo ceph daemon
959f2b2 (origin/wip-fix-pglog-unittest) PGLog: fix clear() to avoid the IndexLog::zero() asserts
e0d3b78 (origin/wip-8699) rgw: fix uninit ofs in RGWObjManifect::obj_iterator
73b929b osd: improve tests for configuration updates
2dec8a8 (origin/wip-8542) qa/workunits/suites/fsx.sh: don't use zero range
83f1906 (origin/wip-fs-cmds) mon/MDSMonitor: log warning while MDS up but no FS
b7f09c2 mon/MDSMonitor: fix incorrect comment
fc0f8bd mon/MDSMonitor: s/enabled/get_enabled()/
641b419 mds: Handle setting 'enabled' in upgrades
96f4e78 mds: journal-related debug messages
7294e8c test/qa: update for MDSMonitor changes
fd9c1fe vstart: update for newfs/rmfs changes
ae5f1db mon: add `ceph fs [new|rm|ls]`
1dfe913 erasure-code: add definitions to the glossary
5867464 mon: hide mdsmap in 'ceph status' if not enabled
6109cc9 mon: stop MDSMonitor when FS disabled
c442b0d mon: enable deleting pools when FS disabled
f6d029d mon: warn in newfs if crash_replay_interval=0
243963c mon: don't require 'sure' flag for new fs
90e6dae osdmap: Don't create FS pools by default
13305d5 mds: no initial filesystem
8f7900a mds: add 'enabled' flag to MDSMap
ef7d1bc doc: RPM instructions correction
fcdf273 (origin/wip-port-fixes) mds: avoid comparing MutationRef with 0
e473790 (origin/wip-krbd-settle) krbd: rework the unmap retry loop
59d18ac [RGW, memory leak] Memory leak in RGW has been fixed: deletion of allocated pointer to pointer to Log object has been added to "on_exit" handler.
8e5c921 [RGW, memory leak] Memory leak in RGW GC (losing pointer during allocating Ceph-context) has been fixed.
8706b74 [RGW, memory leaks] Memory leak in RGW initialization (Inserting new connection into connections map w/o check) has been fixed.
9bcc19d (origin/wip-map-unmap) map-unmap.sh: fail if 'rbd rm' fails
16b14ea map-unmap.sh: drop the get_id() logic
abdb168 (origin/wip-fsx-random-ctx) test_librbd_fsx: use private RNG context
9517cea os/FileStore: put SUPER usage in ifdef __linux__
b066e16 common: move #include syscall into ifndef DARWIN
2db500b client: handle missing O_RSYNC constant
4b36074 os/FileStore: move ZFS_SUPER_MAGIC in linux ifdef
656bc04 common/Thread: add missing #include for pid_t
b2bcf52 ceph.in: handle DYLD_LIBRARY_PATH on OS X
12079a7 doc: dev: cache-pool.rst: fix typo s/objets/objects/
4689467 PG: pass OpRequestRef by ref to avoid refcounting overhead
d48a737 osd/: in scrub, check for and remove obsolete rollback objs
953c33e osd/: plumb rollback_trim_to through interfaces and messages
ac11ca4 PGLog: add rollback_info_trimmed_to_riter to IndexedLog and use in PG
62027ec doc/release-notes: v0.82
7fae941 rgw: allocate enough space for bucket instance id
2207ed1 PGLog: fix logging whitespace in trim
af4970c OSDMap: avoid passing pg_t by value
d72eec0 PG: block outgoing peering messages until the last interval is durable
f9f89be PG: add machinery to temporarily buffer outgoing recovery messages
f749812 os/: add async flush_commit() method to Sequencer and implementations
0debfe1 OSD: pass param by ref to avoid copying overrhead
1f3fbc9 mds: print sequence number of log segment
55ed85b mds: introduce sequence number for log events
a17462c mds: add get_metablob() to log events
0690078 mds: pass finish context to MDlog::submit_entry()
21955d7 MOSDOpReply: Constructor initialization list is used to instantiate members
44db3d0 MOSDOpreply: The functions are returned by const ref and parameters passed by ref
1c93c61 MOSDOp: The functions are returned by const ref and parameters passed by ref
ad81a98 Revert "ceph-disk: Enable creating multiple osds per dev"
e02957d test: use (unsigned)0 with gtest to avoid spurious warnings
f8df9bd (origin/wip-da-SCA-20140623) scratchtool.c: cleanup do_rados_getxattrs()
4e9c2c1 (origin/wip-osd-ints) osd: fix pg_stat_t int -> int32_t
238b1a3 osd: fix pg_shard_t int -> int32_t
709f0c4 osd: fix pg_interval_t int -> int32_t
a5f9a09 Fixed build on 32 bits platforms
f5a72b7 Added a couple of ASSERTS for avoiding coverity to complain about the possibility of a division by 0
93df7da mds: set xattr_version to 0 if replay doesn't contain xattrs
046c976 common/fd.cc: fix possible out-of-bounds write
605d180 mount.ceph.c: fix strdup related memory leak
7f7e56c scratchtool.c: fix resource leak and error handling
bdb1346 scratchtool.c: fix resource leak
48e38ac (origin/wip-refactor-cephtool-test) qa/workunits: cephtool: fix 'osd bench' test
802290d osd: OSD: better explanation on 'max_count' calculation for 'osd bench'
4b0809a qa/workunits: cephtool: only run heap profiler test if tcmalloc enabled
5c4616e qa/workunits: cephtool: set +e for the tcmalloc tests
6725543 qa/workunits: cephtool: delete unnecessary function calls
946bd0d qa/workunits: cephtool: disable bash debug when not running tests
5d26575 qa/workunits: cephtool: allow running individual tests
f418408 qa/workunits: cephtool: cleanup state after erasure-code-profile test
780424d qa/workunits: cephtool: add/remove comments
3d14a96 qa/workunits: cephtool: split into properly indented functions
04658b7 qa/workunits: cephtool: move test line to where it's more appropriate
db6cc13 qa/workunits: cephtool: split into functions
3953053 (origin/wip-da-fix-make-check) test/ceph-disk.sh: fix for SUSE
be70c1f osdmaptool/test-map-pgs.t: fix escaping to fix run
dc1a4df Revert "Give meaningful error when submodules are not checked out"
9695535 Make <poolname> in "ceph osd tier --help" clearer.
76361b8 mon: simplify output
385fd6c (origin/wip-disable-static) do_autogen.sh: --disable-static
14085f4 (tag: v0.82) 0.82
152bbd6 osd: workaround race condition in tests
cb740b3 (origin/wip-mon-perf) mon: shut down perfcounters last
524700f doc: Fix malformed parameters in librados.h
56cad1a libcephfs/test.cc: fix use after free
a5c704b RadosStriperImpl.cc: catch exception by reference
6d79863 rgw/rgw_rados.h: use static_cast instead of c-style cast
0b3a398 (origin/wip-8654) osd/OSD.cc: parse lsb release data via lsb_release
d7350a3 (origin/wip-fix-rados-tool) rados.cc: fix pool alignment check
2b007c2 (origin/wip-8624) mon: MDSMonitor: print pool name along with id during 'newfs' errors
378b5ad qa/workunit: cephtool: test mds newfs and add_data_pool with ec pools
d6f6813 mon: MDSMonitor: do not allow ec pools to be used for data or metadata
20a1664 (origin/wip-mon-sanity-checks) common: LogClient: output to derr (i.e., dout(-1)) on CLOG_ERROR
9804360 mon: Monitor: observe conf changes and report on unsage option values
ec73888 mon: Monitor: sanitize options at start
87f9dba Give meaningful error when submodules are not checked out
58212b1 osd: Only normalize extent if op uses extent
4225e2f (origin/wip-leveldb-stress) osd: remove OSD-specific leveldb options
52b147c ceph-mon: override 'leveldb_*' config options for the monitor
d42d19d mon: MonitorDBStore: remove mon-specific leveldb options.
9844885 mon: DataHealthService: s/mon_leveldb_size_warn/mon_data_size_warn/
57c5d05 (origin/wip-8610) osd: ignore CRUSH_ITEM_NONE in compat_must_dispatch_immediately
d9073f4 (origin/wip-disk-ioprio) osd: allow io priority to be set for the disk_tp
dd6badc common/WorkQueue: allow io priority to be set for wq
1b87410 common/Thread: allow io priority to be set for a Thread
a2b4911 common/io_priority: wrap ioprio_set() and gettid()
8700aa0 test/libradosstriper/striping.cc: fix potential memory leak
2a8c1e2 MDCache.cc: init 'umaster::ls' with NULL in contructor
da03e9e MDCache.h: init 'umaster::safe' in constructor
2210ee3 test/objectstore/store_test.cc: prefer ++operators for iterators
3e93d4a osd: tests for osd bench
74be320 Use sized integer.
66a5f3b doc: Fixed Typo in pools documentation - replaced '-' with '_' in example set-quota comands.
e189a66 (origin/wip-8603) log the command that is being run with subprocess
78cbac4 mailmap: Dmitry Smirnov name normalization
efefbfd mailmap: koleosfuscus affiliation
1cdea98 mailmap: Walter Huf name normalization
a58fbf7 mailmap: Colin Mattson affliation
41c536f mailmap: Dominik Hannen affiliation
1f96cb7 mailmap: Harpreet Dhillon affiliation
3716f58 mailmap: Lluis Pamies-Juarez affiliation
4222f29 mailmap: Wei Luo affiliation
009f01d mailmap: Sahid Orentino Ferdjaoui name normalization
06734f1 mailmap: Stephen F Taylor affiliation
4344295 mailmap: Sushma Gurram affiliation
2eddee7 mailmap: Sylvain Munaut affiliation
22c028d mailmap: Red Hat acquires InkTank
c270172 mailmap: Sebastien Ponce affiliation
39a4b78 mon: test that pools used in tiers cannot be removed
1de9071 (origin/wip-misc-fixes) osd/osd_types.cc: dump correct pg_log_entry_t member variable
363496a osd: use appropriate json types instead of stream when dumping info
97772c2 (origin/wip-tiermsg) mon: name instead of id in "has tiers" message
4d5469a osd: ECMsgTypes: dump json bools instead of strings
3f0ea95 osd: have 'tid' dumped as a json unsigned int where appropriate
debaf61 mon: dump 'epoch' as json unsigned instead of int
1a120e9 mon: PGMonitor: dump 'epoch' as json int instead of string
317cf95 mon: OSDMonitor: dump 'up' as json array instead of string
b7ff393 mon: OSDMonitor: dump 'acting' as json array instead of string
78f94a9 mailmap: Ailing Zhang affiliation
d2e852e doc: Fixed an incorrect flag in radosgw admin docs.
741ad3f (origin/fix_ut) autotools: avoid check_SCRIPTS duplication
c0d78c6 Fix dist package run unit test failed.
b3ace76 tests: prevent gitbuilder trigger in test-erasure-code.sh
3a9c0fc test: fix -Wsign-compare warnings
b46c405 erasure-code: verify that rados put enforces alignment
c35ceef ReplicatedPG: 'ajusted' typo
de2c085 rgw-admin: Fix the 'show log' command
304b08a enforce rados put aligment
8d9201f tests: remove spurious and harmless find command
cdca7b7 (origin/wip-osd-stats) osd: move osd_stat into OSDService
4afffb4 osd: fix filestore perf stats update
0985ae7 (origin/wip-backfill-priority) osd: prioritize backfill based on *how* degraded
d20da8d osd: add osd_min_recovery_priority tunable
b65ceb6 common/AsyncReserver: add a min_priority knob
0e7a979 osd: fix word sizes in MBackfillReserve
c4e8451 (origin/wip-scrub-sleep) osd: introduce simple sleep during scrub
7b580a2 mon: Monitor: complex code deduplication algorithm applied to tick()
0ed1fe6 mon: Monitor: rework tick() so we don't calculate the same thing over and again
ef8a128 (origin/wip-6703) support dmcrypt partitions when activating
7dc93a9   Fix EINVAL err when use "ceph tell osd.* bench"
3ed7f2d (origin/wip-8593) mon: ensure HealthService warning(s) include a summary
82e47db mon: refactor check_health()
98883f6 mon: fix typos, punctuation for mon disk space warning(s)
55a9778 mon/OSDMonitor: make down osd count sensible
c5b5ed6 (origin/wip-ec-hitset) ceph_test_rados_api_tier: disable LibRadosTierECPP::HitSetWrite
0bb0095 Revert "erasure-code: create default profile if necessary"
f53bed1 mon/OSDMonitor: fix build error
1c72465 osd: verify osd config sanity checks
4bd1b5e PendingReleaseNotes: note about keyvaluestore-dev on-disk format change
d93e74e common: Enforces the methods lru_pin() and lru_unpin()
d48ed68 common: Fixes issue with lru_clear() + add new test
62aa5c5 common: Adds simple tests to verify good behavior
64f6232 (origin/wip-ceph-isatty) ceph: output prompt only if stdin is tty
8d1cb8b (origin/wip-vstart-conf) vstart.sh: echo CEPH_{CONF,KEYRING} exports if necessary
2eb1f55 vstart.sh: rename conf variable to conf_fn
18f5807 Make KeyValueStore not use expected_write_size
360de6a erasure-code: create default profile if necessary
f3ec7d0 (origin/wip-osd-configs) osd: add sanity check/warning on a few key configs
4786a48 osd: remove non const get_erasure_code_profile
a1c13c5 tests: prevent kill race condition
5c1f9aa osd: improve osd pool create error message readability
6bf8183 erasure-code: consistent argument parsing for profiles
3c63811 erasure-code: OSDMonitor::get_erasure_code is a const
ff2eb23 erasure-code: pool create must not create profiles
0d63cf2 (origin/wip-import-purge) qa: extend cephfs_journal_tool_smoke
acd6ebb qa: set +x on cephfs_journal_tool_smoke
ee487b4 tools/cephfs: Purge trailing objects during import
ac05799 tools/cephfs: error handling in journal_export
381163c tools/cephfs: Clean up waits in Dumper
3fe1699 osd/OSDMap: do not require ERASURE_CODE feature of clients
250677c osd/OSDMap: make get_features() take an entity type
e29beff (origin/wip-8071) erasure-code: remove jerasure internals dependencies
e720314 (origin/wip-doc-os-recommendations) doc: Updated the OS Recommendations for Firefly.
2e3302c doc: Updated the example configuration.
5a31df2 doc: Updated doc for more recent versions.
2eab1c1 Update RBD doc for OpenStack
a290d34 (origin/wip-fsx-sizeof) test_librbd_fsx: fix sign-compare gcc warning
40c48bc qa: add script to test krbd setting ro/rw ioctl
b2542f8 (origin/wip-8585) rgw: set a default data extra pool name
94c8f70 doc: Made mention of "incomplete" status.
29c33f0 qa: add an fsx run which turns on kernel debugging
f978722 (origin/wip-xattr-spillout) FileStore: remove the user_only param from _fgetattrs
bb4e3a9 FileStore: remove user_only options from getattrs through the ObjectStore stack
fbe6009 FileStore: do not use user_only in collection_getattrs
7267a37 FileStore: remove dead code
e3b995e FileStore: set XATTR_NO_SPILL_OUT when creating new files.
239476a FileStore: make _clone() copy spill out marker
af8052b Add xattr test to ceph_test_objectstore
d9fac9c (origin/wip-7774-3) rgw: chain to multiple cache entries in one call
c616358 rgw: chain binfo_cache to multiple cache entries
7e81185 rgw: bucket info uses cache chaining
a2f6709 rgw: user info uses cache chaining
ab764f3 rgw: an infrastructure for hooking into the raw cache
7fb6a3d rgw: cache bucket info
eaff42f rgw: cache decoded user info
0bbeeee PG: Added a const spg_t member to the PG class The const spg_t member is been insantiated from constructor and now get_pgid() can reference this to return a spg_t instance without the need of pg_info (thus not requiring to acquire pg_lock).
85e491f doc: Added a tip to install NTP when running multiple monitors.
d37ef6a doc: Added additional background to address additional states.
b7f6147 doc: Added background discussion to clock settings.
ecbb005 OSD: The thread pool variable name changed The variable names are more meaningful now. op_tp -> osd_tp and op_sharded_tp -> osd_op_tp
2a5d83d ShardedTP: The config option changed The config option for sharded threadpool is changed to osd_op_num_threads_per_shard instead of osd_op_num_sharded_pool_threads. Along with osd_op_num_shards this will be much more user friendly while configuring the number of op threads for the osd.
a0e48b8 ShardedTP: Changes related to conforming to Ceph coding guidelines
2e3f4bc doc: Fixed typo.
6733947 Fix for bug #6700
a4923f5 fix compilation warnings
63cc7f9 Add test for objectstore
50c8fee Fix write operation on a deleted object in the same transaction
737c13e Remove SequencerPosition from KeyValueStore
ef06515 doc: fix typo in erasure coding section
1080e7a Add upper limit to the write size of set_alloc_hint in KeyValueStore
6a7e201 (origin/wip-8554) init-ceph: continue after failure doing osd data mount
1f99cda (origin/wip-mon) mon: gather perf stats on elections
8f36d96 mon: gather perf stats on session adds, removes, counts
ecda2fe OSD: move waiting_for_pg into Session
1f40c35 Add set_alloc_hint test to ceph_test_objectstore
5dd9b2a Make KeyValueStore support set_alloc_hint op
b0c66a7 doc: Fixes spelling errors on README
910d73c Added RPM and debian packaging for libradosstriper, creating a new package called libradosstriper1
fa01ca6 Added unit test suite for the Rados striping API.
d160ce2 Implementation of the radosstriper interface.
a6c34e4 (origin/wip-flag-known-redirs) osdc/Objecter: mark all ops as known-if-redirected
bc3b30e (origin/wip-set-extsize-fix) XfsFileStoreBackend: call ioctl(XFS_IOC_FSSETXATTR) less often
750b1db XfsFileStoreBackend: nuke redundant goto in set_extsize()
524a155 (origin/wip-rgw-manifest-iter) rgw: reduce calls to rgw_obj.set_obj()
e31d3fe doc: Descrption => Description Correct spelling error.
0ca43d8 doc: Use write_full for C++ example Latest version of librados uses write_full when writing entire object.
0bd6f67 OSD::calc_priors_during: handle CRUSH_ITEM_NONE correctly
2081c99 (origin/wip-i386-atomic) include/atomic: make 32-bit atomic64_t unsigned
64e99d8 ceph-objectstore-test: fix warning in collect_metadata test
e1ad0bf Added a striper interface on top of rados called radosstriper.
7ceeb9f Completed librados documentation of rados_write_op_cmpxattr and rados_read_op_cmpxattr concerning their error reporting
62064f3 Added const qualifiers for the layout argument of file_to_extents and object_truncate_size
8c12491 Fixed usage of rhel_version in spec file : it should have been rhel
f92d7bb Fixed missing include of assert.h in RWLock interface
b9a35b3 Extracted RadosXattrIter from librados.cc into independent .h anc .cc files. This makes this interface usable by clients of librados.
aede832 (origin/wip-os-rename) os: rename get_*() -> decode_*()
5bb078f (origin/wip-sahid-dist) Populate ChangeLog when distribute
b22cc85 Populate AUTHORS when distribute
d76936b OSD::calc_priors_during: fix confusing for loop bracing (cosmetic)
59d727d (origin/wip-da-SCA-20140604) kv_flat_btree_async.cc: remove consecutive break after return
82f5df4 JournalScanner.cc: catch exception by reference
53533ee KeyValueStore.cc: silence gcc -Wunused-variable
e24213e MemStore.cc: silence gcc -Wunused-variable
51abf20 Revert "Remove unused variables in MemStore.cc"
a325e3e Revert "Remove unused variables in KeyValueStore.cc"
cac902e os/KeyValueStore.cc: fix possible null pointer deref warning
3ee3e66 librbd/internal.cc: check earlier for null pointer
f17a963 test/librbd/fsx.c: fix gcc warning
f31e4c8 (origin/wip-da-update-libs3) libs3: update to latest git master of ceph/libs3
18c07ec common/addr_parsing.c: fix realloc memory leak
5f86652 daemon_config.cc: add some more asserts
703d0eb (origin/wip-8452-2) rgw: set meta object in extra flag when initializing it
23b657c Remove unused variables in KeyValueStore.cc
307ba48 Remove unused variables in MemStore.cc
5185a36 (origin/wip-autotools-dummy) automake: add dummy.cc to fix 'make tags'
35509d2 bloom_filter, add test to validate assignement operator
c50f85e bloom_filter, remove unecessary operators
90cc6dd bloom_filter, add assertion to test validate element_count()
c323c5b Fix keyvaluestore fiemap bug
3ec32a6 (origin/wip-8447) librados: simplify/fix rados_pool_list bounds checks
5569d40 documentation: add osd erasure-code-profile {set,rm,get,ls}
8ff4edd documentation: update osd pool create erasure
22bc886 (origin/wip-rbd-doc-fix) doc: fix 'rbd map' example
4f834fa doc/release-notes: v0.81
f4e81d3 librbd: clarify license header
884a6b3 RadosClient: Avoid the DispatchQueue for OSD responses.
0cc9ade doc: Updated monitor output and added usage calc explanations.
9c32cb2 doc: Added usage for pool quotas.
86754cc doc: Added more discussion of new CRUSH types.
cabb8f0 doc: Added a section for ceph df.
8de9501 (tag: v0.81) 0.81
4bc5aef doc: Updated packages to reference firefly.
c18cbef (origin/wip-runxfstests) qa: add run_xfstests_krbd.sh wrapper
cd65246 qa: catch up with xfstests changes
703166c qa: cp run_xfstests.sh run_xfstests-obsolete.sh
601e25e erasure-code: Ceph distributed storage system
9bac31b scripts/run-coverity: don't explicitly specify tool version
e158ad9 erasure-code: make decode_concat virtual
6aa45b1 common: s/stringstream/ostream/ in str_map
319cb50 Make KeyValueStore support "ceph osd perf" command
06c0a42 Update INSTALL to mention the submodules/recursive
2dbd85c (origin/wip-sharded-threadpool) WorkQueue: The variable name is corrected. Modified the variable name from shardedpol_cond->shardedpool_cond
3e3632e WorkQueue: Removed the unused in_process variable
b05da1c WorkQueue: Taking care of potential race condition during pause() Introduced two variables to keep track of number of threads paused and drained during threadpool pause/drain. The pause()/drain() call is waiting till number of pause/drain threads equals to toral number of thread pool threads.
b15bf6b OSD:Derived sharded queue implementation is changed All the threadpool related stuff like stop/pause/drain etc. are not handled by sharded queue anymore. All it is implementing are related to processing,enqueue , signaling of waiting threads and shard queue status. The pg ordering is been taken care of by introducing a map <pg,op> in each shard.
c24ef00 ceph-common: The Sharded threadpool worker logic changed Now, the _process() of the derived queue is processing one request at a time and the outer loop is controlled by the sharded threadpool. The stop/pause/drain functionalities are controlled by the sharded TP.
06845d0 OSD: Sharded Op worker queue implementation for handling OSD ops This is the implementation for the client of the sharded thread pool/sharded workQ. Removed the op_wq class and now OSD ops are going through sharded workqueue model which is used by the sharded threadpool. Derived ShardedOpWQ implementation has a data structure called ShardData which has it's own lock/cond and storage. ShardedOpWQ holds a vector of that and the size of the vector is a config option. During enqueue operation on the queue, the ops are sharded across these ShardData based on pg hash % number of shards. Similarly, in the _process function the sharded thread pool threads are divided across ShardData based on thread index % number of shards
8369c08 ceph-common: Implementation of the sharded threadpool. Threadpool will only be having a single work queue and internally the work queue will be having multiple storage data structures. Based on some logic (which is derived class implementation specific) the work queue will shard the requests among these storage structures. Each storage will be guarded by finer grained sunchronization objects. Sharded threadpool threads will be assigned to work on a shard based on some algorithm which is again derived class implementation specific.
83ccba3 (origin/wip-sock-cmp) msg: remove comparison operators for sockaddr_storage
70afaaa (origin/wip-8452) rgw: fetch object attrs on multipart completion
669b605 PGLog: initialize complete_to
b300318 (origin/wip-8311) rgw: if extra data pool name is empty, use data pool name instead
38405d3 (origin/wip-8265) qa/workunits/cephtool: test setting options using SI units
5500437 common/config.cc: allow integer values to be parsed as SI units
40587d4 test/strtol.cc: Test 'strict_strtosi()'
67dc575 common/strtol.cc: strict_strtosi() converts str with SI units to uint64_t
9c56c86 rgw: calc md5 and compare if user provided appropriate header
cae085b (origin/wip-8472) msg_types.h: Don't use strncmp for comparing sockaddr_in.
00b9211 doc: Improve man page for rados bench
2da2699 doc: update pools documentation
ab59a10 doc: Improve man page for bench
0fd6e12 osd: replace shard_t usage with shard_id_t
dedd8e2 osd: explicit shard_id_t() and NO_SHARD
20e66d1 osd: loop over uint8_t instead of shard_id_t
d723cac osd: factorize shard_id_t/shard_t into a struct
dcf9568 doc: Define RADOS in glossary
e52b9c6 doc: Added osd pool default size setting example.
20a04c6 doc: Moved redundant text out of quick-common.
6786d60 common: WRITE_{EQ,CMP}_OPERATORS_1
8679cdb osd_types: add pg_log_t::rollback_info_trimmed_to
f1b890e (origin/wip-8465) osd: fix bad is_active() assert in share_map()
f153bc1 doc: Made additional changes s/CRUSH/Ceph for pull request #1855
c08f481 doc: alter doc CSS for the removal of Apex Sans
7f46b7b doc: removed Apex Sans font, replace with font from GFE
692f998 doc: Fixes broken hyperlinks
93a61df (origin/wip-8259) Makefile: make install-deps rule
6fe7564 debian: improve package dep list
e06c58c (origin/wip-smart-df) mon: set min_size to data chunk count for erasure pools
7a9652b mon: include 'max avail' in df output
2f63a30 mon: right justify df values
2339d4a vstart.sh: -e to create an ec pool called 'ec'
297f616 crush: add get_rule_weight_map
0b5a674 rest-api: key missing for per "rx" and "rwx"
634780a (origin/wip-8321) remove unused variables, gets all tox envs passing
23b75b5 add backport of collections.Counter for python2.6
59b7113 intial take on ceph-brag-client and tox. Python 2.7 passes
bc85b5d mailmap: Aristoteles Neto affiliation
0b88659 mailmap: Chris Glass affiliation
7582fa9 mailmap: Christian Theune affiliation
b2cb36f mailmap: Shawn Edwards affiliation
e65b7e2 mailmap: Ilya Dryomov name normalization
e4928c5 mailmap: Stuart Longland affiliation
dbc66d7 mailmap: Walter Huf affiliation
6338542 mailmap: Michael Riederer affiliation
831b2c9 mailmap: Stefan Eilemann affiliation
1f22590 mailmap: Stephen F Taylor affiliation
be9f743 mailmap: Daniel J. Hofmann affiliation
c758584 mailmap: Kevin Dalley affiliation
7d1a493 mailmap: Florent Flament affiliation
2815e4d (origin/wip-tier-doc) doc: Fix cache tier docs
08b3cff os: FileStore::create_backend unit tests
3081652 os: ObjectStore::collect_metadata unit tests
97023dc (origin/wip-reweight-tree) mon/OSDMonitor: simplify 'osd crush reweight ...' flow
576315a mon/OSDMonitor: add 'osd crush reweight-subtree ...'
2916148 crush: add adjust_subtree_weight()
4021fb6 osd/: move split_list and split_request into OSD
26862ca Fix Documentation Typo
d4e8119 doc: Added primary affinity. Some minor rewrap edits.
1ac3a50 (origin/wip-8292) better error reporting on incompatible device requirements
c2225f8 mon: fix set cache_target_full_ratio
4c22c6f (origin/wip-pybind-timeout) pybind/rados: Fix timeouts for small t
1e0a82f (origin/wip-map-advance) osd: fix map advance limit to handle map gaps
641732d documentation: update pid file description
c9ff481 Improvements to radosgw docs - Correct a typo (`rados-admin`) in admin docs - Reorder sections in config so "above example" is in expected position
e741ea4 os/FileStore: include filestore backend, f_type in osd metadata
827df7d Fix Doc Typo
9312c5e os/FileStore: refactor backend instantiation
3cf723c os/FileStore: fix journal-less operation
200d0ae (origin/wip-multipartition) ceph-disk: Enable creating multiple osds per dev
2ceb13a (origin/wip-8428) rgw: check appropriate entity permission on put_metadata
ab0db34 documentation: adapt PG formula for erasure coded pools
d3af8fa Update architecture.rst:Calculating PG IDs
99b9682 documentation: update osd pool default size from 2 to 3.
4d4b77e (origin/wip-java-build) cephfs-java: build against older jni headers
6069ff0 doc/release-notes: v0.67.9
f51e33b (origin/wip-librbd-flush) Avoid extra check for clean object
9235dcb (origin/wip-mon-get-version) mon: set MMonGetVersionReply tid
ba53889 README: move package dependencies into separate files
77066a2 README: clean up some whitespace
c08adbc Fix set_alloc_hint op cause KeyValueStore crash problem
d04b386 (origin/wip-8342) init-ceph: if we fail to set an OSD's crush position, continue
46f1eb6 init-ceph: continue loop immediately on daemon start failure
3bbe29e common/Finisher: add queue(list<Context*>&)
c2644b2 Update manual-deployment.rst
74218f3 Define AO_REQUIRE_CAS (fixes FTBFS on 'hppa')
fb504ba (origin/wip-8373) mon: Fix check of ruleset id on pool update
1d9e4ac mon: Fix default replicated pool ruleset choice
799f76a (origin/wip-client-time) mds: remove unused Mutation::now
8768857 mds: use mds_stamp for mksnap
d4bfa39 mds: reset mds_stamp for readdir, rename, link
a09547b mds: use real timestamp for readdir leases
9c86a11 mds: use client-provided time stamp for user-visible file metadata
4a6596e mds: do the balancer and propagation timers based on mds_stmap
fd1f9bd mds: do rstat timestamps (rctime, fragstat mtime) in terms of op stamp
29c6844 mds: make sure mds_stamp is set when we journal
3569e80 mds: set mds_stamp on lock acquisition
e4c9c34 mds: add {mds,op}_stamp to Mutation
401319a (origin/wip-buildroot) ceph.spec.in: remove BuildRoot
93a5b88 (origin/wip-journal-tool) tools/cephfs: error handling in EventOutput
3207c50 osdc/Journaler: fix obj count in Journaler:erase
2621b5d tools/cephfs-journal-tool: handle --help cleanly
d66fa53 tools/MDSUtility: fix crash on bad config
708c4ed tools/JournalTool: update usage()
3bef125 qa: Add smoke test for cephfs-journal-tool
b76e64b tools/JournalTool: Fix 'header set' corner case
5d913e2 mds: Create JournalPointer in MDLog::create
bac434d mds: Make EMetaBlob::dirlump::_decode_bits const
1c2bb37 osdc: new style encoding for Journal::Header
f609a0a osdc: Simplify JournalStream::read
f12b9e8 osdc: make JournalStream::readable const
778b785 osdc/JournalStream: DRY envelope size calc
45c319e doc: Update ceph-mds manpage
423dafe osdc/Journaler: use pointers for out params
fc1d6da tools/cephfs: Update for JournalPointer
d52eeab Fix JournalStream::read length assertion
5c2a640 osdc/Journaler: include stream_format in dump()
68b2009 mds: Introduce mds_journal_format config setting
aec4c93 tools: update Dumper to use JournalPointer
1612677 mds: Generalize JournalPointer functionality
8b0383e dencoder: add JournalPointer to types.h
a4ae168 mds: add atomic log rewrite on format change
dba721f osdc: Add Journaler.erase
c73902b osdc/Journaler: privatize members
405cb85 osdc: fix redundant branch
e7fa5be osdc: Clean up journalstream readable check
79a1e58 mds/CDir: remove redundant inode enc/dec
49add98 docs: Add cephfs-journal-tool
5011945 gitignore: Add cephfs-journal-tool
7e4da00 debian: add cephfs-journal-tool to ceph-mds
403e028 rpm: add cephfs-journal-tool to RPM build
f7e9ff1 tools: Create cephfs-journal-tool
107821f Fix formatting of header
ad2e20f client: set timestamp in MDS requests
a91e072 mds: include timestamp in MClientRequest
d71839a (origin/wip-doc-openstack) doc: clarify openstack cow sentence
0f7f1e8 doc: note cinder multi-backend restriction
e92f2d9 doc: link to ephemeral rbd patches
13d6c3c doc: quick-ceph-deploy cleanup Improve documentation in quick-ceph-deploy.rst Use admin-node consistently. ceph should be installed on admin-node for the following reasons:  "ceph-deploy admin admin-node" assumes that /etc/ceph exists.  "ceph health" requires the use of ceph
d40ba05 doc: mention admin-node in common documentation
29f615b (origin/wip-8334) ReplicatedPG::start_flush: fix clone deletion case
5ff95db (origin/wip-8332) HashIndex: in cleanup, interpret missing dir as completed merge
bc897b8 rados.py: clarify recent change on write return value
6372118 doc: Clean up pre-flight documentation Mention recent Ceph releases. Move important message about sudo and ceph-deploy closer to the use of ceph-deploy. Mention files created by ceph-deploy comment Separate apt-get from yum command
06d05fd doc: fix link to FAQ The location of the ceph wiki FAQ has changed. Now, the link from ceph documentation matches the current FAQ location
03e3ccd doc: Restored glance_api_version=2 setting.
e8756be (origin/wip-8380-b) osdc/Objecter: flag ops that have been redirected
cf2b172 (origin/wip-8380) osd: skip out of order op checks on tiered pools
e47049b erasure-code: fix URL in developer notes
23787ba mailmap: Sahid Orentino Ferdjaoui affiliation
30ae96a Ensure autogen.sh to be executed at the top-level
fb8f469 mds: add getter for ESession.client_inst
730a011 mds: Add getter for EMetablob.client_name
220f9c9 mds: Add EMetaBlob::get_dentries
f4927f0 mds: switch __u32 with LogEvent::EventType typedef
c1b185b mds: Add LogEvent::str_to_type
e7f4b9e mds: Fix Dumper::undump (missing lock)
96720b6 mds: Add EMetaBlob::get_inodes
b3e57ba mds: Publicize some EMetaBlob members
2282739 mds: Refactor CINode encoding into CInodeStore
bf7b84c mds: Add get_metablob to LogEvent
e56b88f mds: Add ENoOp for padding journals
74ac6e4 mds: Add get_paths method to EMetaBlob
3fa825c osdc: Revise Journaler format
928d0f5 mds: Fix typo 'Sesion'
e3a9f66 objecter: Don't warn on multiple admin sockets
d4a250c common: Add write_stream(ostream) to bufferlist
5b20deb mds: Add LogEvent::get_type_str()
d776ec4 (origin/wip-multimds) mds: queue waiters in MDCache::force_dir_fragment()
b223055 mds: fix remote auth pin race
57c89bf mds: fix Server::submit_mdlog_entry()
f19cd4f mds: drop locks after removing import/export state
0bd4fa2 mds: try trimming exported objects
affce7a mds: journal rename source inode when rollback rename
0c14878 mds: allow early reply when there is no journaled slave update
6fe7d17 mds: skip journaling slave rename when possible
3783653 mds: include all of directory inode's replicas in rmdir witnesses
08b79ea mds: journal EImportFinish after adjusting subtree auth
c18da04 (origin/wip-osd-refs) osd: fix narrow session refcount race
2c4391b osd: fix session leak in ms_handle_fast_connect
15350de Add header cache to DBObjectMap
ee92a39 MDS: add admin socket cleanup on shutdown
a78b14e (origin/wip-osdmon-pa-wait) OSDMonitor: set next commit in mon primary-affinity reply
6dfc544 sample.ceph.conf: minor update
290ac81 (origin/wip-osdmap-sub-bug) OSD: fix an osdmap_subscribe interface misuse
6ec3c46 (origin/osd-metadata) osd: include osd_objectstore in metadata reported to mon
405063b workunits: provide some output in the dirfrag.sh test
aec5634 (origin/wip-8104) osd_types: remove the pool_id argument from (is|check)_new_interval
f47c160 PG: replace is_split, acting_up_affected with should_restart_peering
2ee3551 osd_types: factor out is_new_interval from check_new_interval
c48a4ef (origin/wip-perf-atomic) common/perf_counters: use second atomic to make counters safe to read
ab907c5 doc: Clarified Debian uses sysvinit.
c71c292 doc: Added rgw print continue guidance.
b082fd6 doc: Minor edit.
ca833bd doc: Added clarifying text to CRUSH add command.
48337e0 doc: Omitted glance_api_version=2 to fix creating images from volumes.
17930a1 doc: Changed example to use virtio and put key usage into one line.
8dd1190 Improve Bash completion for various tools
00225d7 test: fix some templates to match new output code
20aad8f doc: update instructions for RPM distros
26151ec mds: lower IO priority of storing backtrace
019483f mds: reduce verbosity of handle_client_file_{readlock,setlock}
ca313c2 mds: add a Server::submit_mdlog_entry() to provide event marking
9f0825c (origin/wip-8338) OSD: verify that client ops are targeted correctly in the current epoch
7411477 (origin/wip-8011) ReplicatedPG: block scrub on blocked object contexts
2ec2182 ReplicatedPG::start_flush: send delete even if there are no snaps
ca91743 Locker: mark_event in acquire_locks() when blocking or succeeding
2df68b6 Server: mark events when journaling and replying
a6aa812 MDCache: mark ops at various finish points
87f6cd4 MDS: add an OpTracker and use it
b277802 Mutation: add an MDRequestParams struct and use that when building MDRequests
ae80a1f MDS: add stubs for an AdminSocketHook
0d89e5c MDCache: pass the causative message to request_start_slave()
06d6d32 mds: remove a couple leftover declarations of MDRequest
428319e doc/release-notes: v0.80.1
19f8849 doc: Improvements to qemu installation.
6e4455d doc: Added note on Default requiretty for CentOS and others.
8b682d1 (origin/java-gcj) prioritise use of `javac` executable (gcj provides it through alternatives).
89fe035 pass '-classpath' option (gcj/javah ignores CLASSPATH environment variable).
0f4120c look for "jni.h" in gcj-jdk path, needed to find "jni.h" with gcj-jdk_4.9.0
2001572 mds: deny reconnect for closed session
59f539c mds: revert EMetaBlob::{fullbit,remotebit,nullbit} encoding optimization
f35648b mds: properly clear new flag for stale client cap
58ee556 mds: propagate inode rstat if it has never been propagated
54a9037 mds: avoid journaling unnecessary dir context
1f92f55 mds: cleanup usage of MDCache::predirty_journal_parent()
3d7f527 (origin/wip-da-SCA-20140510) BtrfsFileStoreBackend.cc: fix ::unlinkat() result handling
5f89128 TestLFNIndex.cc: remove unused variable 'mangled_name'
a445529 rgw_user.cc: remove dead assignment in generate_key()
b119679 rgw_user.cc: cleanup RGWAccessKeyPool::check_op()
b731c47 rgw_rados.cc: remove dead assignment / unused variable 'obj_name'
10e6d6e rgw_main.cc: remove dead assignment and unused variable
d2d6b0f PGMap.cc: remove dead assignment
cd611b4 MDBalancer.cc: remove some since 2009 unused code
6cda1e1 chain_xattr.cc: fix memory leak, free 'expected'
1d39b11 confutils.cc: remove unused variable 'val'
1cac491 SyntheticClient.cc: remove double check for "getdir"
5e05aca rgw_op.cc: reduce scope of 'int r' in execute()
f45a50f rgw_op.cc: use static_cast instead of c-style cast
8f90cd2 rgw_quota.cc: remove unused variable 'key'
4753ae8 test_rgw_admin_log.cc: prefer ++operators for iterators
218b6d8 test_cls_rbd.cc: use 'delete []' if 'new char[len]' was used
20455a6 test_rgw_admin_log.cc: prefer empty() over size() for emptiness check
d69fd90 test_rgw_admin_opstate.cc: prefer ++operators for iterators
0f899c8 test_rgw_admin_meta.cc: prefer ++operators for iterators
f523d64 TestErasureCodePluginJerasure.cc: prefer ++operators for non-primitive types
014f050 test/ObjectMap/KeyValueDBMemory.cc: use empty() instead of size()
d9fff40 (origin/wip-old-out) mon: restore previous weight when auto-marked out osd boots
87722a4 mon: remember osd weight when auto-marking osds out
45281d9 common/perf_counters: use atomics instead of a mutex
bf3ba60 atomic_t: add atomic64_t
b24b77a FileStore.cc: remove some dead assignments
39c071f (origin/wip-update-gitignore) .gitignore: ignore files generated by ctags on topdir
e847d56 add gitignore for wireshark subdir to track *.patch only here
b9cf708 .gitignore: add some patch/diff related files
f067013 .gitignore: add no longer used mkcephfs
ea69f6b cls_kvs.cc: return 'r' from get_idata_from_key()
574a940 cls_kvs.cc: remove dead assignment
36c1c97 rgw_user.cc:
a121d01 libcephfs.cc: fix possible NULL pointer deref
76568aa (origin/wip-8305) Objecter::_op_submit: only replace the tid if it's 0
94773ac osd/OSD.cc: fix possible NULL pointer deref in share_map()
0d67f9b osd/ReplicatedPG: do not queue NULL dup_op
79c6491 mds/flock.cc: remove dead initialization of 'new_lock_end'
e8b4789 mds/flock.cc: remove dead initialization of 'new_lock_start'
5199c14 mds/Server.cc: remove unused initialization of 'destdnl'
63d92ab mon/OSDMonitor: force op resend when pool overlay changes
45e79a1 osd: discard client ops sent before last_force_op_resend
dd700bd osdc/Objecter: resend ops in the last_force_op_resend epoch
b3203e5 rbd.cc: remove used parameter from set_pool_image_name()
fe75075 test_librbd.cc: fix sizeof() in malloc call
eb2def8 CrushWrapper.cc: fix sizeof() call in calloc
11e5eef (origin/wip-5021) client: fix whitespace in stat relpath
cdbe6cf client: use __func__ instead of incorrect function name in insert_readdir_results
3eb2a77 client: make less noise when unlinking during readdir
d1c872d client: invalidate dentry leases when unlinking
d852a69 client: audit unlink() callers
3b867d3 TrackedOp: create an "initiated" event on construction
bdee119 msg: Fix inconsistent message sequence negotiation during connection reset
b5e4cd1 osd: fix MOSDMarkMeDown name
6b858be (origin/wip-8319) osd: handle race between osdmap and prepare_to_stop
b640301 osd: fix state method whitespace
ba01445 Fixed missing initializers issues
60b1071 Removed extra semicolons
5986f74 :doc Ceph OSD is standard name This is a method of standardizing the usage of OSD so that "Ceph OSD" is the daemon, and OSD maintains its industry standard usage of Object Storage Device.
ddc2e1a (origin/wip-8169) rgw: calculate user manifest
589b639 (origin/wip-7588) osd/ReplicatedPG: carry CopyOpRef in copy_from completion
db4ccb0 ReplicatedPG: block scrub on blocked object contexts
3152faf osd/osd_types: add last_force_op_resend to pg_pool_t
0f19626 (origin/wip-6966) ceph-disk: partprobe before settle when preparing dev
5690232 (origin/wip-da-sca-20140507) rbd-fuse.c: remove ridiculous linebreak
7a3724b rbd-fuse.c: fix indentation
8101f98 rbd-fuse.c: fix -Wmissing-field-initializers
65ca867 (origin/wip-krbd-fixes) krbd: fix sysfs path in the comment
f1d953e krbd: match new with delete, not free()
082367e rbd.cc: init 'snap_protected' to fix -Wconditional-uninitialized
0d01563 rbd-fuse.c: init 'rbd' in open_rbd_image()
cfc885f ObjectCacher::_wait_for_write(): init 'bool done'
8322878 Objecter::calc_target(): init best_locality with 0
13750a1 (origin/wip-jcsp-clang) rgw: Remove trailing ; from fn definitions
447335a os/FileJournal: remove unused attribute
f0231ef mon: Fix % escaping (\% should be %%)
d85b8fa mds: Remove redundant 'using namespace std'
3fd8712 encoding: make .size() to __u32 cast explicit
6b15ce1 fragtree: remove unused and broken verify()
8584b40 fragtree: remove dead code
b4b79eb remove superfluous second semicolons at end of lines
1214257 msg: fix some -Wextra-semi warnings
9ad6042 crush/builder.c: remove some unreachable return statements
34e27e4 mds: remove unused MMDSCacheRejoin::{MISSING,FULL}
1f60060 mds: properly wake up dentry waiters after fragmenting dirfrag
5fa2bae mds: choose MIX state if replica of scatterlock is in MIX state
3ca0d01 mds: switch flushing ScatterLock to dirty ScatterLock after cache rejoin
8f3409d client: unlink dentry on traceless rmdir, unlink reply
627e644 client: do not manually clean up on unlink/rmdir
727ad64 client: refactor _lookup; fix NULL dentry case
635607f client: skip insert_trace on safe requests
f1d412c doc: Common graph used in 2 quick start files
d130763 vstart.sh: fix client admin socket path
0ee409b (origin/wip-7553) osd: Remove classic scrub code since Argonaut osd can't join
81c7418 ECUtil.h: clarify calculation with braces
13f54b7 PG::start_peering_interval: use check_new_interval for same_interval_since
5752d76 rgw_acl_swift.h: fix #define header guard
8059c9f rgw_rest_metadata.cc: fix -Wparentheses-equality
8a0c016 ReplicatedPG.cc: fix -Wparentheses
a0f59df test_rgw_manifest.cc: fix VLA of non-POD element type
817985b (origin/wip-fsx-krbd) test_librbd_fsx: align temporary buffers allocated in check_clone()
ab9de9c test_librbd_fsx: wire up O_DIRECT mode
c4a764c test_librbd_fsx: fix a bug in docloseopen()
421e6c5 test_librbd_fsx: add krbd mode support
d5daf71 test_librbd_fsx: add a flag to disable randomized striping
fef984b test_librbd_fsx: add holebdy option
d63808e test_librbd_fsx: make resizes sector-size aligned
3513ba0 test_librbd_fsx: use posix_memalign() to allocate aligned buffers
7df50ec test_librbd_fsx: align temp_buf by readbdy instead of writebdy
d13e32e test_librbd_fsx: move prterrcode() and simple_err()
8d41f86 test_librbd_fsx: update usage
99400f8 (origin/wip-da-cleanup-includes) osdmaptool.cc: cleanup included headers
a5e0d80 monmaptool.cc: cleanup included headers
537385c ceph_osdomap_tool.cc: cleanup included headers
d57561a ceph_monstore_tool.cc: cleanup included headers
e2e3d1d ceph_filestore_tool.cc: remove not needed includes
ea6df88 ceph_kvstore_tool.cc: cleanup includes
8620609 ceph_filestore_dump.cc: cleanup includes
16e86ae mon_store_converter.cc: remove not needed includes
2c33ace dupstore.cc: remove not needed include of <iostream>
b1f4cd4 rest_bench.cc: remove not needed includes, re-order includes
bc166f3 psim.cc: remove not used includes
de252c1 scratchtool.c: remove not needed include of <pthread.h>
4da8894 radosacl.cc: remove include of <iostream>, re-order includes
24a047e ceph_conf.cc: cleanup includes, remove not needed headers
c0dcd23 ceph_authtool.cc: remove not needed includes
e2b4d41 ceph_monstore_tool.cc: remove not needed includes
8ab3232 rgw_admin.cc: remove twice included header, resort includes
ddb9ce0 MDSMonitor.cc: remove twice included header, resorted includes
a8a2b56 AuthMonitor.cc: remove twice included header, resorted includes
71b340a ceph_osdomap_tool.cc: remove some twice included headers
e66aec6 ceph_monstore_tool.cc: remove twice included headers
f9a91f2 Update doc to reflect the bahavior change for filestore_merge_threshold setting.
0d3cdb9 test/libcephfs/test.cc: free cmount structure before return
8fa5408 client: handle traceless rename in insert_trace, not verify_reply_trace
334c43f client: avoid blindly removing dentries
25d2469 client: leave NULL dentry in place on ENOENT during lookup
cc65c39 client: add debugging around traceless reply failures
545d8ad (origin/wip-8269) rgw: extend manifest to avoid old style manifest
9968b93 (origin/wip-8299) rgw: fix stripe_size calculation
6c2b173 mds: handle export freezen race
a09070a mds: allow negetive rstat
22abd7b mds: cancel fragmenting dirfrags when cluster is degraded
6e3501b mds: fix _rollback_repair_dir()
da17394 mds: fix root and mdsdir inodes' rsubdirs
5283d80 mds: ignore stale rstat/fragstat when splitting dirfrag
4e844c9 mds: encode dirfrag base in cache rejoin ack
f754106 mds: fix-up inode's fragstat/rstat according its dirfrags
a2caea7 mds: clear aborted flag before rollback slave requests
a85bf8c mds: remove mdsdir in the final step of shutdown MDS
c4f0f05 mds: tolerate bad sessionmap during journal replay
f386e16 mds: pre-allocate inode numbers less frequently
6d6d188 mds: fix frozen inode check in MDCache::handle_discover()
7a066f8 mds: include authpinned objects in remote authpin request
5b86a13 mds: send dentry unlink message to replicas of stray dentry
7d1fd66 mds: maintain auth bits during replay
09beebe (origin/wip-7157) ceph-disk: fix list for encrypted or corrupt volume
bd8e026 rgw: don't allow multiple writers to same multiobject part
03b0d1c (origin/wip-8289) rgw: cut short object read if a chunk returns error
2d5d309 Pipe: wait for Pipes to finish running, instead of just stop()ing them
6ec99f7 (origin/wip-rbd-clang) librbd: check return value during snap_unprotect
6f2edda ObjectCacher: remove useless assignment
3e387d6 (origin/wip-8296) osd/ReplicatedPG: fix whiteouts for other cache mode
5cc5686 (origin/wip-8170) rgw: send user manifest header field
e65a9da Revert "Fix installation into user home directory, broken by d3f0c0b"
b78644e (tag: v0.80) 0.80
cdbbf86 doc: Fixed artifacts from merge.
a31b9e9 doc: Added sudo to setenforce. Restored merge artifact.
5158272 doc: Added erasure coding and cache tiering notes. Special thanks to Loic Dachary.
08a4e88 Variable length array of std::strings (not legal in C++) changed to std::vector<std::string>
ae434a3 (origin/wip-8290) client: check snap_caps in Incode::is_any_caps()
4bf20af SimpleMessenger: Don't grab the lock when sending messages if we don't have to
b038f0c OSD: rename share_map_incoming and share_map_outgoing
e1277ba OSD: move the peer_epoch and map sharing infrastructure into OSDService
938feb4 OSD: move the {boot,up,bind} epochs into OSDService
2ec92c7 OSD: scan for dropped PGs in consume_map instead of advance_map
fccf1c7 OSD: do not take the pre_publish_lock in connection utility functions
fd2b57e OSD: enable ms_fast_dispatch
62b2d43 OSD: remove dead comment
9028f95 OSD: Juggle the locking when resurrecting a PG
5268e51 OSD: don't share_map_incoming() directly from handle_replica_op()
ebdc097 OSD: use the async workqueue to send OSDMap updates on dropped ops
6c98e36 OSD: add an op threadpool GenContext workqueue
9fba69a OSD: allow build_incremental_map_msg to fail on lookups
0ffdeab OSD: fix a few map sharing bugs
0fbaa16 OSD: move should_share_map and share_map_incoming to OSDService
399e67f OSD: pass a pointer to last_sent_epoch instead of the whole Session
c97f968 OSD: share map updates in the op_tp threads instead of the main dispatch thread
d78988b OSD: refactor handle_op error handling cases
276a4fe OSD: change Session handling around _share_map_incoming
1e3c495 OSD: add a Session::sent_epoch_lock
667769c OSD: simplify _share_map_incoming based on _should_share_map()
b53cec4 OSD: add _should_share_map function
b2187ac OSD: use an OSDMapRef& and require the Session* in _share_map_incoming
9835866 OSD: use safe params in map-sharing functions
b199194 OSD::send_incremental_map: use service superblock so we can avoid locking osd_lock
812c672 OSD::_share_map_incoming: pass osdmap in explicitly
2f97f47 OSD: protect state member with a Spinlock
a94a64d OSD: protect access to boot_epoch, up_epoch, bind_epoch
767e94a OSD: shard heartbeat_lock
9d8c797 OSD: Push responsibility for grabbing pg_map_lock up to callers of _remove_pg()
00d36f6 OSD: wake_pg_waiters atomically with pg_map update
3755318 OSD: remove wake_all_pg_waiters
eb30f88 OSD: add session waiting_for_map mechanisms
6d53349 OSD: pass osdmap to handle_op and handle_replica_op
475d831 OSD: add a RWLock pg_map_lock
5abbbfe OSDService: add osdmap reservation mechanism
09bf5e8 msgr: change the delay queue flushing semantics
69fc6b2 msgr: enable fast_dispatch on local connections
4e20ce1 Messenger,DispatchQueue: add ms_fast_dispatch mechanism
a62db61 DispatchQueue: factor out pre_dispatch and post_dispatch
1379c03 OSD: remove never-activated while loop from send_incremental_map
dd3d023 OSD: rename gen_wq, schedule_work, and PG_QueueAsync to include "recovery"
e0ac34a OSD: remove unused push_wq
ec16357 OSD: replace handle_pg_scan, handle_pg_backfill with handle_replica_op
63cc1ec OSD: add handle_osd_map debug output
37fac29 OSD::_share_map_incoming: line wrap debug output
78f310d PG: constify the init() function params
816b10e RWLock: assert pthread function return values
e2b62bc (origin/wip-messageless-tracker) TrackedOp: do not require a Message when creating new Ops
95fc551 TrackedOp: do not track a Message
5a3efda TrackedOp: introduce an _unregistered() function to let implementations clean up
2e674de TrackedOp: rename arrived_at to initiated_at, specify when constructed
6a559a5 TrackedOp: introduce a _dump_op_descriptor function
d7e04cc TrackedOp: remove the init_from_message function
fc3318e (origin/wip-doc-radosgw-80) doc: Fix hyperlink.
a7e7219 doc: Index update and librados.
fcbc5fa doc: Quotas for Admin Ops API.
e97b56e doc: New Admin Guide for Ceph Object Storage.
7539281 Fix installation into user home directory, broken by d3f0c0b
24c5ea8 osd: check blacklisted clients in ReplicatedPG::do_op()
f92677c (origin/wip-blacklist) osd: check blacklisted clients in ReplicatedPG::do_op()
c64b67b ceph-object-corpus: rebase onto firefly corpus
077e6f8 ceph-object-corpus: v0.80-rc1-35-g4812150
8bd4e58 Fix out of source builds
3aee1e0 Fix clone problem
fd970bb (origin/wip-8155) mon: OSDMonitor: disallow nonsensical cache-mode transitions
72fdd55 (origin/wip-8283) osd/ReplicatedPG: fix trim of in-flight hit_sets
8472805 Revert "ReplicatedPG: block scrub on blocked object contexts"
f47f867 (origin/wip-8113) osd: Prevent divide by zero in agent_choose_mode()
b7d31e5 osd, common: If agent_work() finds no objs to work on delay 5 (default) secs
fe0031d (origin/wip-da-SCA-fixes-20140501) rados.cc: fix typo in help output
8bf039d Dumper::dump_entries(): reduce scope of 'got_data'
296b8ed PG::read_info(): pass 'const coll_t coll' by reference
8fad144 PGBackend::be_compare_scrubmaps(): pass pgid by reference
1e7eb1a osd_types.h: pass eversion_t by reference to operator<<
be5a99d SimpleLock.h: remove unused private function clear_more()
70a4a73 SimpleLock.h: remove twice included osd_types.h
4fe31c1 linux_fiemap.h: remove twice included int_types.h
b05e04e Dumper::dump_entries(): remove not needed variable
9a716d8 rgw_bucket.cc: return error if update_containers_stats() fails
89044a6 mon/PGMonitor: set tid on no-op PGStatsAck
4e0eaa9 mon/OSDMonitor: share latest map with osd on dup boot message
5a6ae2a mon/PGMonitor: set tid on no-op PGStatsAck
2e6b248 mon/OSDMonitor: share latest map with osd on dup boot message
77a6f0a mon/MonClient: remove stray _finish_hunting() calls
d024594 mailmap: Florent Bautista affiliation
61a2f06 mailmap: Warren Usui name normalization
7b192f7 mailmap: Guang Yang name normalization
4662890 sample.ceph.conf update:
9cf470c osd/ReplicatedPG: agent_work() fix next if finished early due to start_max
9f1a916 (origin/wip-snapmapper-debug) osd/SnapMapper: pass snaps set by const ref
6105c35 osd/SnapMapper: debug
f065809 (origin/wip-7576) mon/OSDMonitor: do not reply to MOSDMarkMeDown if ack is not requested
58ace1a osd: fix 'ack' to be 'request_ack' in MOSDMarkMeDown
49a3b22 osd: ignore MarkMeDown message if we aren't in PREPARING_TO_STOP state
cf25bdf osd: prevent pgs from getting too far ahead of the min pg epoch
81e4c47 osd: track per-pg epochs, min
c879e89 doc: Include links from hardware-recommendations to glossary Included :term: in parts of hardware-recommendations so that glossary links appear. Signed-off-by: Kevin Dalley <kevin@kelphead.org>
cc04322 (origin/wip-fix-master) mds: note MDiscoverReply encoding change in corpus
e597068 (origin/wip-mds-shutdown) mds: remove mdsdir in the final step of shutdown MDS
1f4a3e1 mds: bump protocol
1ac05fd doc/release-notes: changelog link
ffef20f doc/release-notes: final v0.67.8 notes and changelog
0454962 Fixes a very minor typo in the release notes
78b3c93 doc: documenting links to get-involved Create a link from documenting-ceph so that it is easy to find the github repository used for ceph.
0f3235d ReplicatedPG: block scrub on blocked object contexts
e66f2e3 ReplicatedPG: block scrub on blocked object contexts
4bac8c7 rados.h,ReplicatedPG: add CEPH_OSD_FLAG_ENFORCE_SNAPC and use on flush
d9106ce ECBackend::continue_recovery_op: handle a source shard going down
87195d5 ReplicatedPG: we can get EAGAIN on missing clone flush
d700d99 ReplicatedPG: do not preserve op context during flush
aafed10 rgw_common.cc: reduce scope of 'fpos' variable
49b810f rgw_admin.cc: remove unused string variable
b9e612c PGBackend.cc: remove unused to_remove variable
5fec86e KeyValueStore.cc: remove unused variable
7928fe7 rgw_op.cc: remove unused map variable
074161f rgw_main.cc: remove unused variable
ae9a7d0 rgw_main.cc: use static_cast instead of c-style
e624085 ObjectStore.h: pass const string parameter by reference
3ebbd99 CDentry.cc: fix bool comparison using relational operator
5da8e0e rados.cc: reduce scope of variable
b99f636 buffer.cc: catch exception by reference
022e705 SimpleLock.h: fix bool comparison using relational operator
46442ea hitset.cc: fix format string to unsigned int
ef0de7a OSDMap.cc: prefer prefix ++operator for non-trivial iterator
5562428 OSDMonitor.cc: prefer prefix ++operator for non-trivial iterator
e4b3109 KeyValueStore: rename s/logger/perf_logger/
a84fed6 crush/mapper.c: fix printf format for unsigned variable
21bbdf5 (origin/wip-early-reply) mds: avoid adding replicas of target dentry to rename witnesses
3a7d668 mds: allow early reply when request's witness list is empty
41d93aa mds: include authority of the source inode in rename witnesses
68b440d (origin/wip-8147) osd: automatically scrub PGs with invalid stats
d01aa5b mon: OSDMonitor: return immediately if 'osd tier cache-mode' is a no-op
f689e5f (origin/wip-no-anchor) mds: remove discover ino
913a5dd mds: remove anchor table
8217600 (origin/wip-doc-radosgw) doc: Ensure fastcgi socket doesn't clash with gateway daemon socket.
9c9b92f doc: Verified RHEL configuration.
ec11bf7 doc: Fixed inconsistent header.
63b2964 doc: Added rhel-6-server-optional-rpms repo.
f674f36 Copy range using fiemap not entire length
3920f40 rbd-fuse: fix unlink
5d340d2 librbd: add an interface to invalidate cached data
e08b8b6 librbd: check return code and error out if invalidate_cache fails
b1df2c3 Changed the -i parameter to -r in order to avoid a conflict with a generic flag interpreted by the common code.
a027100 rgw: fix url escaping
9e3b860 (origin/wip-7500-wusui) Fix s3 tests in the rgw workunit.
3ec0040 Added a new command line parameter (-i or --image=) that allows rbd-fuse to specify a single image to be made available within the mount directory. The purpose of this is to allow a single RBD to be "mounted" in userspace without opening (and locking) the other RBDs in the pool.
060105c (origin/wip-8086) ReplicatedPG: we can get EAGAIN on missing clone flush
d83b8f5 ReplicatedPG: do not preserve op context during flush
a60e15a doc/release-notes: v0.67.8 notes
bcf92c4 (origin/wip-8202) rgw: fix url escaping
27ec495 Added Java Example
8f64b5c Update librados-intro.rst
3e41f92 (origin/wip-client-sleep) client: cleanup unsafe requests if MDS session is reset
70ab079 client: wake up cap waiters if MDS session is reset
b8aa58a client: drop dirty/flushing caps if auth MDS' session is reset
09a1bc5 client: add asok command to kick sessions that were remote reset
998b365 Changed the java code example
5d49782 (origin/wip-7966) mds: terminate readlink result in resapwn
d0f1806 (origin/wip-8193) ceph_test_rados_api_tier: increase HitSetTrim timeouts
9ac264a Skipping '_netdev' Debian fstab option
499adb1 (origin/wip-7941) rados.h,ReplicatedPG: add CEPH_OSD_FLAG_ENFORCE_SNAPC and use on flush
ddf37d9 (origin/wip-uselocalgithubforqemu-wusui) Use new git mirror for qemu-iotests
1885792 (origin/wip-8161) ECBackend::continue_recovery_op: handle a source shard going down
c0c2361 brag : implement --verbose on client
7009211 brag : document the zero argument behavior
2b16a81 brag : meaningfull error messages
83f8934 (origin/wip-8168) ReplicatedPG::do_osd_ops: consider head whiteout in list-snaps
39c1bfc ReplicatedPG::do_op: don't return ENOENT for whiteout on snapdir read
a83aff5 test_rbd.py: ignore children in cache pools
aae16ab mon: add ceph osd pool set <pool> auid
606e725 (origin/wip-7882-wusui) Support latest qemu iotest code
f631854 (origin/wip-libkrbd) rbd: deprecate --no-settle option
0c2b0fb doc: 'rbd showmapped' doesn't need privileges
4238ffd doc: do not mention modprobe in rbd docs
0ba3960 rbd: switch to libkrbd for 'rbd {map,showmapped,unmap}' operations
2521e73 mount.ceph: switch to module_load()
2651750 rbd: add libkrbd convenience library
bad34e9 (origin/wip-fs-client) client: check cap ID when handling cap export message
383d21d client: avoid releasing caps that are being used
d726251 (origin/wip-doc-cache-tier) doc: Fix hyperlink to CRUSH maps.
6902e22 doc: Added cache tiering settings to ceph osd pool set.
0d964bc doc: Added new cache tiering doc to index/TOC.
44e4e3d doc: Added new cache tiering doc to main docs.
2182815 (origin/wip-7439) ReplicatedPG: handle ec pools in mark_all_unfound_lost
6769f4d (tag: v0.80-rc1) 0.80-rc1
245923e ReplicatedPG: enable mark_unfound_lost delete for ec pools
009e874 qa/workunits/rbd/copy.sh: skip some tests when tiering is enabled
c0bff43 qa/workunits/rbd/copy.sh: fix test
5daf538 ECBackend: use std::swap for boost::optional
ac9b461 common: add module_{load,has_parameter}()
944dd1c Makefile: build common/secret.c with libtool
070a820 configure: check for blkid/blkid.h header
9004049 rbd: use stringify() in options parsing routines
be081db stringify: use ostringstream instead of stringstream
cac15c7 (origin/wip-coverity-respawn) mds: make strncpy in ::respawn safer
b4eb502 (origin/wip-coverity) osd/osd_types: RWState: initialize snaptrimmer_write_marker
4e5f442 osdc/Objecter: drop unused field
124a663 doc/release-notes: a bit of prose about firefly
18aded2 (origin/wip-8139) osd/osd_types: pg_interval_t: include primaries in operator<<
931ae6b osd/osd_types: pg_interval_t: include up_primary in pg_interval_t
66170f3 osd/osd_types: pg_interval_t: dump primary
000233f osd: change in up set primary constitutes a peering interval change
5562e26 osd: use parent pgid (as appropriate) in generate_past_intervals()
025ab9f doc/release-notes: v0.80
a80e66f qa/workunit/rbd/import_export.sh: skip list-objects tests with tiering
9d64ac6 qa/workunit/rbd/copy.sh: do not delete/recreate rbd pool
c3833d7 doc: Fixed syntax to include 'pool'.
8620bd2 PG::PriorSet: consider lost osds in up_now for pcontdec
95394b6 ReplicatedPG::do_op: check for blocked snapset obj
8259d87 ReplicatedPG: in trim, grab w locks on obc and snapset_obc
0d5a539 ReplicatedPG: if we get ENOENT on clone, remove clone from snapset
f3df501 ReplicatedPG: do not create whiteout clones
caa6356 ReplicatedPG,rados: add CEPH_OSD_[COPY_FROM]_MAP_SNAP_TO_CLONE
2cb0bac qa/workunits/cephtool/test.sh: make set pg_num test non-racy
506dce8 (origin/wip-8124) ReplicatedPG: do not use shard for hit_set object names
f7e7588 ReplicatedPG::agent_load_hit_sets: take ondisk_read_lock
16eccdd PG,PGLog: update hit_set during peering
5821cc7 osd/: propogate hit_set history with repop
7bb2011 encoding: use unqualified name for encode/decode in boost::optional encoding
e4a048c ECMsgTypes::ECSubWrite: fix at_version indentation
ddf1e98 osd: track the number of hit_set archive objects in a pg
1fb90c9 ReplicatedPG::hit_set_persist: clean up degraded check
95d0278 ReplicatedPG::mark_all_unfound_lost: delete local copy if necessary
61b6564 Simple mechanical cleanups
7a61cdb buffer: adjust #include order
f9e9365 (origin/wip-8153) Revert "ReplicatedPG::get_snapset_context: assert snap obj is not missing"
4413670 (origin/wip-throttle-snap-master) osd: throttle snap trimmming with simple delay
82edda2 test: handle the create-pg delay when testing cache split syntax
b2112d5 (origin/wip-7784) mon: OSDMonitor: HEALTH_WARN on 'mon osd down out interval == 0'
09985d2 (origin/wip-7997) mon: wait for PaxosService readable in handle_get_version
8fb2388 osd_types: pg_t: add get_ancestor() method
7e697b1 (origin/wip-8091) ReplicatedPG::recover_replicas: do not recover clones while snap obj is missing
3ad51c8 (origin/wip-num_objects_omap) osd_types::object_stat_sum_t: fix add/sub for num_objects_omap
3d0e80a (origin/wip-8048) osd/ReplicatedPG: check clones for degraded
93c0515 (origin/wip-8130) osdc/Objecter: fix osd target for newly-homeless op
881680e (origin/wip-8132) mon: set leader commands prior to first election
40e8dbb (origin/wip-poolset-noblock) mon: EBUSY instead of EAGAIN when pgs creating
f22e2e9 spelling corrections
18caa1c OSD: split pg stats during pg split
5e4a5dc osd_types::osd_stat_sum_t: fix floor for num_objects_omap
a3d452a common/obj_bencher: Fix error return check from read that is negative on error
4db1984 osd/ReplicatedPG: add missing whitespace in debug output
924064f (origin/wip-mds-op-prio) mds: dynamically adjust priority of committing dirfrags
0640a08 (origin/wip-8092) mds: fix cap revoke confirmation
8c7a5ab Use string instead of char* when saving arguments for rest-bench
0d2177a ReplicatedPG::get_snapset_context: assert snap obj is not missing
015df93 (origin/wip-8043) mon/OSDMonitor: require force argument to split a cache pool
c252345 (origin/wip-8108) osd: OSDMap: have osdmap json dump print valid boolean instead of string
aa6df59 (origin/wip-7699) mds: Fix respawn (add path resolution)
f6db1bc mds: share max size to client who is allowed for WR cap
358bde5 Add clone test on store_test
308758b Make rados/rest bench work for multiple write instances without metadata conflict. Signed-off-by: Guang Yang <yguang@yahoo-inc.com>
9b7fa38 ReplicatedPG::process_copy_chunk: don't check snaps if we got head
43b7c3a ReplicatedPG::finish_promote: soid.clone may have been trimed, fix assert
3f7861e ReplicatedPG::agent_work: skip if head is missing
d39e003 ReplicatedPG::cancel_flush: requeue dup_ops even if !op
edda6f7 ReplicatedPG::_rollback_to: fix comment, clone certainly could be missing
37ed4b6 (origin/wip-stress-watch) ceph_test_stress_watch: test over cache pool
d0a7632 (origin/wip-strerror) Use cpp_strerror() wherever possible, and use autoconf for portability
502cc61 ReplicatedPG::agent_work: skip hitset objects before getting object context
0d4aed8 mon: fix Session ref leak in handle_get_version
d563434 doc: Distro specific rgw.conf example.
bd22cac doc: Distro specific rgw.conf example.
75606e9 doc: Created standalone doc for Keystone Integration.
6650c0e doc: Added new docs to index.
1310af2 doc: Reworked the simple configuration guide to be more generic.
6853d21 doc: New admin guide for Ceph Object Gateway. Needs some clarification (todo).
e02b845 doc: Admin API usage for quotas. Needs additional clarification on syntax.
d0d162a (origin/wip-8097) buffer: use Mutex instead of Spinlock for raw crcs
7c17fc4 mds: don't modify inode when calculating client ranges
65ec24e (origin/wip-client-debug) client: print inode max_size
d6c71b7 osd/ReplicatedPG: add missing whitespace in debug output
171d5c5 (origin/wip-librados-tests) ceph_test_rados_api_*: fix build warnings, memset ranges
8905e3e (origin/wip-8089) osd/ReplicatedPG: handle dup ops earlier in do_op
26659a5 mds: don't issue/revoke caps before client has caps
bd8aa6f mds: do file recover after authpin inode
a72bcdd (origin/wip-8085) osd/ReplicatedPG: handle misdirected do_command
4ccc845 (origin/wip-mds-typo) mds: fix typo in Server::do_rename_rollback()
809d0fa (origin/wip-hitset-missing) osd/ReplicatedPG: handle missing hit_set on HITSET_GET rados op
53a4b71 ceph_test_rados_api_watch_notify: test over cache pool
b31107b test/librados/TestCase: add Param option that can set up a cache pool
3ce4078 (origin/wip-7940) test: Add --pool-snaps option to ceph_test_rados
09b5538 test: Fix ceph_test_rados to not core dump with invalid arguments
b6b0c3b librados: Add ObjectWriteOperation::snap_rollback() for pool snapshots
6e0496b librados: Rollback interface additions
6ff645f (origin/wip-8008) osd/PG: fix repair_object when missing on primary
19acfeb (origin/wip-8063) ceph_test_librados_tier: tolerage EAGAIN from pg scrub command
39b9d9d (origin/wip-osd-boot) mon/OSDMonitor: fix osd epoch in boot check
78df66f (origin/wip-8077) osd/ReplicatedPG: skip missing hit_sets when loading into memory
7077438 (origin/wip-8054) mds: finish table servers recovery after creating newfs
052519e Revert "mds: finish table servers recovery after creating newfs"
82d8397 (origin/wip-5170-firefly) rgw: update bucket / object rewrite
6f2ee99 radosgw-admin: add some conditions for bucket rewrite
9130e7d radosgw-admin: new 'bucket rewrite' command
f12bccc radosgw-admin: check params for object rewrite
ad40356 Included the total cluster size in components_count object
78fcb1a Fetching the date from ceph osd dump as that is more reliable across ceph versions
99d74ee doc: Add additional information over CloudStack and RBD
db3e0b5 erasure-code: document the ruleset-root profile parameter
6d42bd9 While generating crush_types, avoiding item parsing, and calculating type count by just iterating thorugh buckets list
1987832 Bug fix in the way crush_type is extracted from osd crush dump
072d371 (origin/wip-lockdep) RWLock: make lockdep id mutable
da0d382 Revert "RWLock: don't assign the lockdep id more than once"
632098f common_init: remove dup lockdep message
3c54a49 Wordsmith the erasure-code doc a bit
f6c2073 mds: finish table servers recovery after creating newfs
3db7486 mds: issue new caps before starting log entry
07e8ee2 (origin/wip-7437) test: Add EC testing to ceph_test_rados_api_aio
69afc59 test: Add multiple write test cases to ceph_test_rados_api_aio
d99f1d9 test, librados: aio read *return_value consistency, fix ceph_test_rados_api_aio
3d290c2 test: Add EC unaligned append write test to ceph_test_rados_api_io
39bf68c pybind, test: Add python binding for append and add to test
d211381 pybind: Check that "key" is a string
9812720 librados, test: Have write, append and write_full return 0 on success
008663a (origin/wip-7499) rgw, radosgw-admin: bucket link uses bucket instance id now
6ce7116 (origin/wip-7786) civetweb: update subproject
43d837d rgw: radosgw-admin object rewrite
4c99e97 (origin/wip-8062) mon/OSDMonitor: ignore boot message from before last up_from
a8f0953 osd/ReplicatedPG: adjust obc + snapset_obc locking strategy
86b8594 (origin/wip-6789) mon: Monitor: suicide on start if mon has been removed from monmap
02048dc mds: guarantee message ordering when importing non-auth caps
ac51fca mds: include truncate_seq/truncate_size in filelock's state
808ba13 mds: remove wrong assertion for remote frozen authpin
860d727 osdc/Objecter: move mapping into struct, helper
18642ed (origin/wip-8042) mon: tell peers missing features during probe
39ca440 mon: move required_features back into Monitor
c8039ab mon: ignore sync clients without required_features
50ed65f (origin/wip-6480) auth: remove unused get_global_id() method
b297689 auth: make AuthClientHandler::validate_ticket() protected
3ccef66 auth: AuthClientHandler const cleanup
9af10b2 auth: CephxProtocol const cleanup
7594835 utime: declare is_zero(), ceph_timespec(), and sleep() as const
3119022 auth: separate writes of build_request() into prepare_build_request()
970d53f RWLock: make read locking methods const
957ac3c RWLock: don't assign the lockdep id more than once
4d3d89b auth: remove unused tick() method
2cc76bc auth: add rwlock to AuthClientHandler to prevent races
2e8035f osd: Fix appending write to return any error back to caller
3371a25 test: Fix Seg fault in ceph_test_rados
edd542e tools: Improve ceph_scratchtoolpp
34d69cd mon: refresh elector required_features when they change
b3b502f mon/Elector: ignore ACK from peers without required features
f1c6b65 (origin/wip-8028) ceph.spec.in: require redhat-lsb-core
ae09361 mailmap: Yan, Zheng name normalization
5ee0b7b mailmap: Nikola Kotur affiliation
02aedbc (origin/wip-8004) client: wake up umount waiter if receiving session open message
409999c rbd: Prevent Seg fault by checking read result in snap_read_header()
9c6733e librados: Allow rados_pool_list() to get NULL buffer if len == 0
1848a23 librados: Fix typo for read functions documentation
a8330f5 (origin/wip-5469) librbd: fix zero length request handling
22a0c1f (origin/wip-8045) osd: do not block when updating osdmap superblock features
43f0519 doc: Made minor changes to quick start preflight for RHEL.
ab7a25c doc: Notes and minor modifications to gateway installation doc.
1d74170 pipe: only read AuthSessionHandler under pipe_lock
084db49 (origin/wip-die-mkcephfs) remove mkcephfs
277e7ac (origin/wip-5835) debian: update ceph description
72dc732 ceph.spec: update ceph description
79ac2f7 (origin/wip-8001) osd/PG: set CREATING pg state bit until we peer for the first time
4de49e8 (origin/wip-8019) os/FileStore: reset journal state on umount
1cdb738 vstart.sh: make crush location match up with what init-ceph does
d2edd9c (origin/wip-8031) osd: drop unused same_for_*() helpers
5d61161 osd: drop previous interval ops even if primary happens to be the same
d3833dd osd: make misdirected checks explicit about replicas, flags
55cfb14 (origin/wip-8026) mds: fix shared_ptr MDRequest bugs
2ba00bd (origin/wip-7914) erasure-code: thread-safe initialization of gf-complete
0022d91 mailmap: Paul Meserve affiliation
f261ad1 mailmap: Michael Nelson affiliation
89a5ec7 mailmap: Sandon Van Ness name normalization
010dff1 osd_types: fix pg_stat_t::encode, object_stat_sum_t::decode version
22894c3 (origin/wip-4354-shared_ptr) SimpleLock: Switch MutationRef& for MutationRef in get_xlock()
5f2ccab MDCache: use raw MutationImpl* instead of MutationRef in a few places
6c3fc3e Locker: use raw MutationImpl* instead of MutationRef in several places
920fd6c Locker: use a null_ref instead of NULL
099d1d6 Locker: Use MutationRef instead of raw pointers
e800bfa Locker: remove Mutation param from xlock_import
1294e55 MDCache: fix users of active_requests for use of shared_ptr
a5c7b27 MDCache: use a null_ref instead of NULL in a few places
6b76998 MDCache: use MutationRef instead of raw pointers
a6a0800 Server: use MutationRef instead of raw pointer
4dedab6 MDS: switch cache object classes to use MutationRef instead of raw pointers
9a4a429 ceph_test_rados_api_misc: print osd_max_attr_size
4b66868 doc: Removed --stable arg and replaced with --release arg for ceph-deploy.
7273d9e (origin/wip-7975) osd/ReplicatedPG: warn if invalid stats prevent us from activating agent
02d7e84 osd/ReplicatedPG: dump agent state on pg query
fa46aec osd/ReplicatedPG: kickstart the agent if scrub stats become valid
07099ec (origin/wip-8003) ReplicatedPG: do not evict head while clone is being promoted
67b2342 ReplicatedPG::trim_object: account evicted prev clone for stats
6ff6c19 ReplicatedPG::make_writeable: check for evicted clone before adjusting for clone_overlap
a8a49a0 ReplicatedPG: use get_clone_bytes on evict/promote
3286283 ReplicatedPG::_scrub: account for clone_overlap on each clone
4d5db06 ReplicatedPG::find_object_context: check obs.exists on clone obc before checking snaps
d0e2c98 ReplicatedPG::finish_promote: add debugging assert for clone_size
e213ee1 (origin/wip-7919) qa: workunits: mon: auth_caps.sh: test 'auth' caps requirements
85a1cf3 mon: MonCommands: have all 'auth' commands require 'execute' caps
4c2d73a (tag: v0.79) 0.79
51da3bb mds: fix uninit val in MMDSSlaveRequest
09586ec (origin/wip-shrink-icache) client: pin parent dentry of inode who has ll_ref > 0
76cbd5d mds: fix uninit MMDSSlaveRequest lock_type
4ea9e48 (origin/wip-8002) osd: fix map subscription in YOU_DIED osd_ping handler
2f7522c msgr: add ms_dump_on_send option
87e6a62 mds: fix uninitialized fields in MDiscover
67fd421 mon: wait for quorum for MMonGetVersion
a75af4c client: try shrinking kernel inode cache when trimming session caps
82015e4 (origin/wip-7958) client: release clean pages if no open file want RDCACHE
9484daf osd: disable agent when stats_invalid (post-split)
232ac1a (origin/wip-7994) OSD: _share_map_outgoing whenever sending a message to a peer
6f40b64 (origin/wip-7993) ceph-post-file: use getopt for multiple options, add longopts to help
2f6a62b (origin/wip-7992) ceph-post-file: fix installation of ssh key files
e02b7f9 (origin/wip-7983) osd/ReplicatedPG: do not hit_set_persist while potentially backfilling hit_set_*
4aef403 doc/release-notes: note about emperor backport of mon auth fix
db266a3 mon: MonCommands.h: have 'auth' read-only operations require 'x' cap
9caf3db Migrator: use a null ref instead of NULL when calling into path_traverse
0c9af93 Migrator: use MDRequestRef and MutationRef instead of raw pointers
3429dc5 SimpleLock: use MutationRef instead of raw pointers
c09878e Mutation: move self_ref into MutationImpl instead of MDRequestImpl
3be138f Mutation: rename to MutationImpl and define MutationRef
f41a2f8 Locker: use MDRequestRef instead of MDRequest*
5872c2d MDCache: use MDRequestRef instead of MDRequest*
565b2c8 Server: Use MDRequestRef instead of raw pointers
90ceb7c MDS: Convert the request_start* functions and their immediate callers
f773307 mds: MDRequest: rename to MDRequestImpl, and declare MDRequestRef
fd235cd include/memory: add static_pointer_cast
d121678 client: fix null pointer dereference in Client::unlink
f68e60e ObjectCacher: assert no waiter when remove buffer head
4be0b6b client: cleanup Client::_invalidate_inode_cache()
abc19dd client: drop Fr cap before gettattr CEPH_STAT_CAP_SIZE
954007e client: properly retain used caps
2d5bd84 client: assign implemented caps to caps field of MClientCaps
1538a98 client: hold Fcr caps during readahead
701c22a client: implement RDCACHE reference tracking
b219c8f (origin/wip-cache-create-fix) ReplicatedPG: fix CEPH_OSD_OP_CREATE on cache pools
be8b228 (origin/wip-7922) osd: Send REJECT to all previously acquired reservations
18201ef doc/release-notes: v0.79 release notes
4dc6266 Fix byte-order dependency in calculation of initial challenge
6cb50d7 (origin/wip-7964) ReplicatedPG::_delete_oid: adjust num_object_clones
0f2ab4d ReplicatedPG::agent_choose_mode: improve debugging
0552ecb (origin/wip-7978) rgw: only look at next placement rule if we're not at the last rule
eb23ac4 ReplicatedPG::agent_choose_mode: use num_user_objects for target_max_bytes calc
cc9ca67 ReplicatedPG::agent_choose_mode: exclude omap objects for ec base pool
a130a44 osd/: track num_objects_omap in pg stats
9894a55 ReplicatedPG: handle FLAG_OMAP on promote and copyfrom
a11b3e8 (origin/wip-7858) ReplicatedPG::do_op: use get_object_context for list-snaps
78e9813 ReplicatedPG: do not create snapdir on head eviction
31df91e (origin/wip-backfill) osd: add 'osd debug reject backfill probability' option
d323634 (origin/wip-test-alloc-hint-ec-fix) qa: test_alloc_hint: set ec ruleset-failure-domain to osd
8e46fe0 (origin/wip-vstop-unmap) stop.sh: unmap rbd images when stopping the whole cluster
afc5dc5 stop.sh: do not trace commands
0110a19 stop.sh: indent 4 spaces universally
e4a8535 (origin/wip-vstart-erasure-code-default) vstart: set a sensible default for ruleset-failure-domain
c43822c (origin/wip-7965) lockdep: reset state on shutdown
7a49f3d lockdep: do not initialize if already started
6bf46e2 (origin/wip-7915) OSDMap: bump snap_epoch when adding a tier
01445d5 (origin/wip-7937) ReplicatedPG::_scrub: don't bail early for snapdir
5f680f9 (origin/wip-7659) ReplicatedPG::_verify_no_head_clones: missing implies that the clone exists
7909262 (origin/wip-init) debian: fix control to allow upgrades
17732dc debian: move rbdmap config and sysvinit/upstart scripts into ceph-common
1d42de5 init.d: correcting rbdmap init order:
771e88a (origin/wip-dirfrag) mds: fix check for merging/spliting dirfrag
43bc39b (origin/wip-largedir2, origin/wip-largedir) mds: ignore CDir::check_rstats() when debug_scatterstat is off
5a9b99a mds: initialize bloom filter according to dirfrag size
16af25f mds: add dentries in dirfrag to LRU in reverse order
06ecb2c mds: handle freeze authpin race
d1967f3 mds: treat cluster as degraded when there is clientreplay MDS
b65a818 mds: don't start new segment while finishing disambiguate imports
ff44a99 mds: trim non-auth subtree more aggressively
c09f58e (origin/wip-7450) radosgw-admin: don't always generate access key for subusers
e1783a6 rgw: subuser creation can be idempotent
f54c684 radosgw-admin: fix subuser modify
e095b1d debian: make ceph-common own etc/ceph, var/log/ceph
d4d39a0 (origin/wip-7907) osd/ReplicatedPG: mark_unrollbackable when _rollback_to head
1acd547 debian: move ceph-rest-api from ceph-common to ceph
a76a129 (origin/wip-7939) PG: set role for replicated even if role != shard
ef94fcd test: Add EC testing to ceph_test_rados_api_snaphots
1871fe7 test: Add EC testing to ceph_test_rados_api_lock
759878c test: Add EC testing to ceph_test_rados_api_tier
38b9fe7 test: Add EC to ceph_test_rados_api_watch_notify
6cedfac test: Add EC testing to ceph_test_rados_api_stat
7ccf412 test: Add EC testing to ceph_test_rados_api_list
ea26e13 test: Add EC testing to ceph_test_rados_api_io
9bd5821 test: Add EC test classes RadosTestEC and RadosTestECPP
a4da24d test: Fix ceph_test_rados_list_parallel to clean up test pool
966480b test: Fix ceph_test_rados_api_aio to clean up all test pools
74ed448 test: Cleanup pools when FlushWriteRaces is done
c106976 librados: Add missing C variants for alignment
2d7da1d librados: Add missing rados_wait_for_latest_osdmap()
dde1c91 osd/ReplicatedPG: continue scrub logic when snapset.head_exists doesn't match
c2e5a42 osd/ReplicatedPG: handle snapdir properly during scrub
ed5a5e0 (origin/wip-7935) rgw: reverse logic to identify next part
48fbce9 (origin/wip-7916) ReplicatedPG: improve get_object_context debugging
5c9b8a2 osd/PG: debug cached_removed_snaps changes
824da20 librbd: skip zeroes when copying an image
e44f85c qa/workunits/cephtool/test.sh: test 'osd pg-temp ...'
2d4ec6a mon/OSDMonitor: clear primary_temp on osd pg_temp updates
255f840 OSDMonitor: add 'mon osd allow primary temp' bool option
63ac079 OSDMonitor: add 'osd primary-temp ...' command
07dcffa OSDMonitor: add 'osd pg-temp ...' command
d3183e3 java/test: ceph.file.layout xattr is still not there now
cd1a9c4 Add ceph-client-debug and jerasure shared objects to RPM spec file.
81853c6 (origin/wip-7912) mon/PGMap: clear pool sum when last pg is deleted
8c761c4 (origin/wip-ec-profile-idempotent) mon: make 'ceph osd erasure-code-profile set ...' idempotent
7d321d8 qa/workunits/rados/test_alloc_hint: fix erasure syntax
2826fda doc: fix typos in glossary
7fa025e .gitignore: add examples/librados files
14418a2 autotools: s/ssse3/sse3/ typo
1c92453 erasure-code: update jerasure / gf-complete submodules
ff51d3f doc: pgbackend dev doc outdated notice
d5973aa doc: update jerasure plugin
402e104 doc: erasure code developer notes updates
74fa3a7 (origin/wip-fuse-access) fuse: implement 'access' low level function
e672c52 osd/ReplicatedPG: fix cache tier scrub again
ea47b4a ceph_test_rados_api_tier: improve promote+scrub test
fc1a424 (origin/wip-7849) ceph-conf: use global_pre_init to avoid starting logging
98551fc global: separate first half of global_init into global_pre_init
c3292e4 (origin/wip-cache-scrub) ceph_test_rados_api_tier: improve cache tier + scrub test
cfd6f23 osd/ReplicatedPG: tolerate trailing missing clones on cache tiers
b8ea656 java/test: ceph.file.layout xattr is not there now
4f9f7f8 qa/workunits/fs/misc/layout_vxattrs: ceph.file.layout is not listed
b71e64d mds: find approximal bounds when adjusting subtree auth
fd28ad5 doc: erasure-code development complete
399de24 (origin/wip-sse-i386) erasure-code: do not attempt to compile SSE4 on i386
07ccc4e mds: commit new dirfrag before splitting it
bd6e35c rbd.cc: yes, cover formatted output as well.  sigh.
780fa91 Revert "ceph-conf: do not log"
b5a6320 Revert "ceph-conf: no admin_socket"
44afc23 init: fix OSD startup issue
fd76fec rbd.cc: tolerate lack of NUL-termination on block_name_prefix
056151a (origin/wip-7888) mon/MonClient: use keepalive2 to verify the mon session is live
d747d79 msgr: add KEEPALIVE2 feature
1aa1d93 (origin/wip-7904) ReplicatedPG: hit_set_setup, agent_setup, skip if !active
f1c7b4e (origin/wip-7867) client: pin Inode during readahead
032d4ec osdc/ObjectCacher: call read completion even when no target buffer
68dc0c6 (origin/wip-7903) rgw: move max_chunk_size initialization
a6be1d6 PG: always clear agent_state in clear_primary_state
dfd3cb5 rgw: only look at prefetched data if we actually prefetched
d78e678 (origin/wip-7902) osd/PG: fix choose_acting revert to up case
0bb911c mds: don't trim non-auth root inode/dirfrag
90b4e53 mds: include authority of the overwrited inode in rename witnesses
367987f mds: don't increase nlink when rollback stray reintegration
79aa26f mds: allow sending MMDSFindIno to MDS who is in clientreplay state
34ef91a mds: fix negative dirstat assertion
ce93616 mds: fix stack overflow caused by nested dispatch
71fa779 mds: don't clear scatter dirty when cache rejoin ack is received
fbf4fbc mds: explicitly set nonce for imported dirfrag
d14ec95 mds: skip non-opened session when flushing client sessions
fb19100 mds: fix null pointer dereference in MDCache::rejoin_send_rejoins()
ed49d5e mds: journal EFragment::OP_COMMIT before drop locks
1bd575e mds: fix CInode::get_approx_dirfrag
a1f5c64 mds: don't trim ambiguous import dirfrags
598c5f1 mds: trim empty non-auth dirfrags
3c6c712 mds: trim non-auth inode with remote parents
e811b07 mds: properly journal fragment rollback
6a548a9 mds: fix CDir::WAIT_ANY_MASK
e535f7f mds: avoid journaling non-auth opened inode
ffcbcdd mds: handle race between cache rejoin and fragmenting
6963a8f mds: handle interaction between slave rollback and fragmenting
72eaa5e doc: fix typos in tiering dev doc
1b5e8f4 (origin/wip-7880) mds: properly propagate dirty dirstat to auth inode
38d4c71 Pipe: rename keepalive->send_keepalive
c64d03d mon/OSDMonitor: require OSD_CACHEPOOL feature before using tiering features
69321bf mon/OSDMonitor: prevent setting hit_set unless all OSDs support it
eb71924 osd/ReplicatedPG: tolerate missing clones in cache pools
6508d5e osd/ReplicatedPG: improve clone vs head checking
9e2cd5f osd/ReplicatedPG: do not assert on clone_size mismatch
7f026ba ceph_test_rados_api_tier: scrub while cache tier is missing clones
7cb1d3a (origin/wip-fix-pools) qa/workunits/mon/pool_ops.sh: fix test
233801c qa/workunits/mon/pool_ops.sh: use expect_false
72715b2 (origin/wip-7849-b) ceph-conf: no admin_socket
fb20823 jerasure: fix up .gitignore
acc31e7 ceph-conf: do not log
ffd69ab (origin/wip-7876) rgw: use s->content_length instead of s->length
501e31d logrotate: do not rotate empty logs (2nd logrotate file)
91176f1 erasure-code: test encode/decode of SSE optimized jerasure plugins
b76ad97 erasure-code: test jerasure SSE optimized plugins selection
30e7140 osd: increase osd verbosity during functional tests
10fd6b3 erasure-code: SSE optimized jerasure plugins
e9878db arch: add SSE3, SSSE3, SSSE41 and PCLMUL intel features
c07aedb autotools: intel cpu features detection
cc0cc15 erasure-code: gf-complete / jerasure modules updates
12d4f38 erasure-code: allow loading a plugin from factory()
506d2bb logrotate improvement: do not rotate empty logs
dc3ce58 osd: do not make pg_pool_t incompat when hit_sets are enabled
92859ed (origin/wip-7837) ReplicatedPG: include pending_attrs when reseting attrs in WRITEFULL
b6a431b (origin/wip-7874) ReplicatedPG: disable clone subsets for cache pools
56974b9 (origin/wip-7860) test: Wait for tier removal before next test starts
7999bc9 (origin/wip-7828) ReplicatedPG:: s/_delete_head/_delete_oid, adjust head_exists iff is_head
9865409 rgw: configurable chunk size
832c007 (origin/wip-7871) RadosModel: allow --no-omap to be specified seperately from --ec-pool
555ae12 (origin/wip-7870) ReplicatedPG::do_osd_ops: only return ENOTSUP on OMAP write ops
6cb8595 (origin/wip-7835) ReplicatedPG::make_writeable: fill in ssc on clone
21fc535 (origin/wip-7823) osd: trim copy-get backend read to object size
18c3e9e osd: fix tests due to no default erasure-code ruleset
29f7420 Revert "osd: create the erasure-code ruleset in OSDMap::build_simple"
4cf9a73 fix bug in 'defaultweight' calculation on OSD start.
2779e2a (origin/wip-7863-wusui) Make sure s3_utilities are found.
38bcd3c osd: start_flush() should check for missing clones and return if requested
bf87562 osd: Error from start_flush() not checked in agent_maybe_flush()
ed43aa0 osd: Add logging of missed l_osd_agent_skip cases
d1d99df osd: Improve logging output including pg_shard_t as osd#(shard)
4ac7808 minor corrections to package descriptions
012bb5f minor init.d scripts lintianisation:
14b743b (origin/wip-7676-firefly) rgw: don't modify rgw_bucket for data extra pool
7989cbd rgw: multipart meta object uses extra data pool
f023f90 rgw: zone placement info includes extra data pool
3677076 rgw: add data_extra pool to bucket
58ef0da mailmap: Inktank jenkins bot
286131e mailmap: Huang Jun name normalization
0160d19 mailmap: Tyler Brekke name normalization
a310ea2 mailmap: Guang Yang affiliation
14921c7 mailmap: James Ryan Cresawn affiliation
2faf271 mailmap: Mohammad Salehe affiliation
27c28ad mailmap: Sharif Olorin affiliation
9fd61c7 mailmap: Stephan Renatus affiliation
01b9966 (origin/wip-dz-watch-test) qa: Add ceph_multi_stress_watch for rep and ec
6ec28fd (origin/wip-6465) ensure pybind is in the PYTHONPATH
37899fa be nitpicky about missing references
4186916 Revert "erasure-code: gf-complete detects SSE at runtime"
3f014da (origin/wip-status-function-names) mon: Monitor: s/_mon_status()/get_mon_status()/
ed780ad mon: Monitor: s/get_status()/get_cluster_status()/
08a3d6b (origin/wip-listxattr) client: don't include ceph.{file,dir}.layout vxattr in listxattr()
1bc680e erasure-code: deactivate SSE optimizations
8116394 (origin/wip-7827) msg: set recv stamp for local delivery
3ebeb8e mailmap: Allen Samuels affiliation
a217cd6 mailmap: Warren Usui is with Inktank
a4c652c document adding dev key for custom Apache/FCGI install
fb72330 (origin/wip-7810) mds: reset connection priv after connection's session is removed
e4f2d9f doc/release-notes: 0.78 final notes
185bcc4 doc/release-notes: final 0.78
1817c23 rgw: get rid of a memory allocation
1e7cd10 rgw: remove memory allocation
f6c746c (tag: v0.78) 0.78
28d8e7f Revert "ReplicatedPG: disallow trans which atomically create and remove an object"
49a0190 doc/release-notes: 0.78 notes
dbcf447 erasure-code: gf-complete detects SSE at runtime
8c7f6c1 autotools: AX_SSE detects the compiler SSE capabilities
5a3f6c7 (origin/wip-7438) test: Add erasure coding to stress watch test
6fb6588 test: Reorg multi_stress_watch to prepare for ec option
b110275 test: Fix ceph_filestore_dump.sh test for new EC pool creation
dad0faf tests: use ^ instead of ! as invalid char
d4d77d7 doc/release-notes: stop confusing sphinx
78ede90 (origin/wip-7780) objecter: waive OSDMAP_FULL check for MDS
a4849fb (origin/wip-flush-journal-asok) qa: test_alloc_hint: flush journal before prodding the FS
9d31c1b osd: add flush_journal admin socket command
b444e88 (origin/wip-multimds-fixes) mds: fix typo in MDCache::handle_cache_rejoin_strong
ddbb2f7 (origin/wip-jerasure-submodules) erasure-code: add gf-complete / jerasure submodules
5c34a0f erasure-code: remove copy of gf-complete / jerasure
0d167d2 mds: fix NULL pointer dereference in Server::handle_client_rename
272b53b mds: avoid infinite loop in MDLog::submit_entry()
3cadbfb mds: fix potential invalid pointer dereference
91c88c1 mds: rdlock dirfragtree lock when renaming directory
a867166 mds: don't mark scatter locks dirty when dirfrag is dirty
5150fe6 mds: trim other MDS' mdsdir during recovery
150c6ce mds: remove wrong assertion
de461a9 fragtree_t: fix get_leaves_under()
cbd1c44 mds: improve success rate of subtree exporting
3c39d6f mds: cleanup CInode::decode_import()
4973560 mds: export file locks together with inode
dc54b7b mds: re-issue caps after importing caps (rename)
b225ca9 mds: fix open remote dirfrag deadlock
dc52581 mds: properly initialize MDCache::fragment_info_t
ed30b83 mds: avoid issuing zero caps to client
e909eaf mds: drop auth pins before waiting for dir unfreeze
bc3325b mds: fix stack overflow caused by nested dispatch
63a597b mds: rollback slave request after slave prepare is journalled
a1ff489 mds: treat flushing as dirty when rejoining scattered locks
1268dbb (origin/wip-tid_t) Change tid_t to ceph_tid_t to avoid conflicts with a popular type
b227426 (origin/wip-no-version) Add NO_VERSION to avoid rebuilding ceph_ver.h and relinking
cfb04b2 (origin/wip-limit-libkeyutils) Makefiles: remove libkeyutils from every binary except two
e9eb641 remove gf-complete / jerasure sub modules
fdcf3eb (origin/wip-7777) ReplicatedPG::do_op: delay if snapdir is unreadable
7f7a998 (origin/wip-7708) mds/Locker: fix null deref on cap import
4221e0d build: add gf-complete/jerasure to gitmodule_mirrors
25d04fb (origin/wip-pq) osd: dump priority queue state on dequeue at level 30
ff11965 osd: fix OpWQ dump locking
4a3464c common/PrioritizedQueue: include first item's cost in dump
de576d5 common/PrioritizedQueue: constify a few things
8bd8944 common/PrioritizedQueue: fix remove_by_class() corner case
f1e3bc9 doc/dev/cache-pool: describe the tiering agent
d728426 (origin/wip-7733) PG::start_peering_interval: always send_notify if !primary
b4420ff (origin/wip-7755) PG::find_best_info: fix log_tail component
1ddae7e erasure-code: jerasure and gf-complete moved to ceph namespace
01a0f2d (origin/wip-6806) mon: OSDMonitor: don't rely on client-side validation for command arguments
074c880 mon: Monitor: handle invalid 'quorum' command argument
652056e mon: Properly handle errors from 'cmd_getval()' when needed
543c642 erasure-code: disable SSE extensions
1c5411a erasure-code: update gf-complete v1 submodule
d5e38d4 erasure-code: update jerasure v2 submodule
eac224a doc: update the erasure-code dev documentation
b273011 osd,mon: use profile instead of properties
8cf85f0 mon: add osd crush create-erasure functional tests
b85330e osd: create the erasure-code ruleset in OSDMap::build_simple
5c1db3b osd: create erasure_code_profile in OSDMap::build_simple
f8aa1ed mon: set the profile and ruleset defaults early
5774344 mon: add crush ruleset name to osd pool create
4f1b372 osd: use erasure code profile when building the PGBackend
173e958 mon: OSDMonitor use erasure_code_profile instead of properties
063de51 osd: obsolete pg_pool_t properties with erasure_code_profile
04d2fd1 mon: add the erasure-code-profile {set,get,rm,ls} MonCommand
fa1d957 mon/Paxos: commit only after entire quorum acks
aed0744 (origin/wip-7738) os/FileJournal: return errors on make_writeable() if reopen fails
c31f38c (origin/wip-7728) ReplicatedPG: if !obc->obs->exists, lock snapdir obc if exists
9ee1084 ReplicatedPG: disallow trans which atomically create and remove an object
f094400 Add file to store mirror location of module's.
a9f8a9e (origin/wip-cli-err) ceph.in: Better error on bad arg to 'tell'
1a451f2 mon: functional tests teardown must be run on error
514b5e3 mon: add helper to selection functions implementing tests
e4b4b1f osd: OSDMap::erasure_code_profile accessors
c4f8f26 osd: add OSDMap::erasure_code_profile
2b9bd26 (origin/wip-tmap2omap-warn) mds: avoid spurious TMAP2OMAP warning
e39c213 (origin/wip-7611) ceph.in: do not allow using 'tell' with interactive mode
b2af217 (origin/wip-remotebit-dump) mds: Fix remotebit::dump for less common types
9d77ce1 (origin/wip-rados-outfile) tools/rados: Allow binary file output of omap data
be31998 erasure-code: make libcommon include liberasure-code
e6d9066 erasure-code: add ostream to factory()
de62572 erasure-code: remove dependency to the global context
bcc7487 common,erasure-code,mon: s/erasure-code-//
d4d6ff0 mon,osd,erasure-code: update copyright notices
29862f6 mon: tests for pool create erasure implicit ruleset creation
b7db487 mon: pool create erasure implicit ruleset creation
32e122b mon: add pool name to prepare_pool_crush_ruleset
cf25946 mon: create-erasure uses crush_ruleset_create_erasure
9850ab2 mon: crush_ruleset_create_erasure s/_map//
3bc607a mon: crush_ruleset_create_erasure indent
9622488 mon: crush_ruleset_create_erasure s/rule/err/
370e000 mon: crush_ruleset_create_erasure set ruleset
8e07dbc mon: crush_ruleset_create_erasure error codes
402e646 mon: crush_ruleset_create_erasure reduce verbosity
6a16eac mon: create crush_ruleset_create_erasure helper
1ae3314 (origin/wip-7684) client: force getattr when inline data is missing
04de781 (origin/wip-7740) OSD::handle_pg_query: on dne pg, send lb=hobject_t() if deleting
9e21840 mds: include inline data in lock messages
5b3422a mds: fix corner case of pushing inline data
b2fcc6e (origin/wip-s3pm-wusui) Remove code duplication from s3 tests.
979e8b4 (origin/wip-7732) PG::build_might_have_unfound: check pg_whomai, not osd whoami
0f75c54 (origin/wip-7712) osd/ReplicatedPG: fix enqueue_front race
ef1d7c9 rados.py: Fixed docstring syntax warnings.
02b746d doc: Fixed release notes syntax warnings.
9cd67bb doc: Fixed hyperlink.
599a8d7 (origin/wip-7698) test: Add ceph_filestore_dump.sh to test ceph_filestore_dump
31a6679 tools: Fix ceph_filestore_dump to fully operate on EC pools
f633a03 tools: Cleanups in ceph_filestore_dump
bbc0d6d (origin/wip-7718) PG::issue_repop: only adjust peer_info last_updates if not temp
35f1b04 RGWListBucketMultiparts: init max_uploads/default_max with 0
ab91b80 mon/OSDMonitor: fix fall-thru case
fc85075 (origin/wip-cache-last-epoch-clean) mon/PGMap: only recalculate min_last_epoch_clean if incremental touches old min
208959a mon/PGMap: cache min_last_epoch_clean
6f9db6c unittest_mon_pgmap: fix warnings
e941fef unittest_ceph_argparse: fix warnings
f2c6ff3 tools/: make filenames consistent
e330097 (origin/wip-7719) PG: clear want_pg_temp in clear_primary_state only if primary
da159f8 doc/release-notes: note that radosgw's should be upgraded together
f1bd59f (origin/wip-7692) mon: only do timecheck with known monmap
fba88de ceph-mon: be a bit more verbose on error
62af51c (origin/wip-7696) PG::activate: handle peer contigious with primary, but not auth_log
70d87df (origin/wip-7489) ceph_mon: output error message if unable to bind.
5ad9c16 ceph_mon: all output after initial fork go to dout/derr
c95234a ceph_mon: split postfork() in two and finish postfork just before daemonize
ceac36b doc/release-notes: 0.78 draft nodes; firefly draft notes
87c911c (origin/wip-7709) osd/ReplicatedPG: release op locks on on commit+applied
c5b557e qa/workunits: misc -> fs/misc
8c8b3e9 PGLog: remove unused variable
282497e osd: add tunables for cache_min_{flush,evict}_age
fa6887b osd: set default cache_target_{dirty,full}_ratios based on configurable
a72b636 mds: fix empty fs rstat
f2124c5 (origin/wip-7705) ceph_test_rados: wait for commit, not ack
dd946e0 MOSDOp: include reassert_version in print
73f6b4c (origin/wip-7706) config_opts: raise ms_pq_max_tokens_per_priority to 16MB
2722a0a PrioritizedQueue: cap costs at max_tokens_per_subqueue
88cb1c4 (origin/wip-3863) tools: Create ceph-client-debug
d2ce029 libcephfs: add ceph_ll_lookup_inode
724f30e client: Add lookup_parent & lookup_name
f1f2826 mds: Return EINVAL for parent lookup on root ino
a19ef01 (origin/wip-7703) rgw: manifest hold the actual bucket used for tail objects
33b889f rbd-fuse: fix signed/unsigned warning
c973e46 (origin/wip-coverity-20140312) mds/Mutation.h: init export_dir with NULL in ctor
fd383a9 mds/Migrator.h: init some members of import_state_t in ctor
5a53aa8 mds/Migrator.h: init some export_state_t members in ctor
b10692f CInode::encode_cap_message: add assert for cap
58e35a4 test_filejournal.cc: use strncpy and terminate with '\0'
a2784ba Add unit test for race condition in libnss
44aaaaf Work around race condition in libnss
fe8a715 Make the configuration "filestore merge threshold" can be negative which prevent it from merging, this could help:   1. We are trying to create the PG folder up to several levels with a standalone tool to prevent it from runtime splitting, we need a configuration which prevent it from merging even there is no file within the folder.   2. As runtime split / merge could bring latency issues, customer can use a negative merge threshold to prevent merging but only splitting. This change is backward compatbile. Signed-off-by: Guang Yang (yguang@yahoo-inc.com)
27f0634 doc: fix formatting on PG recommendation
7cf81ce libcephfs/test.cc: shutdown cmount at end of MountNonExist
269cf13 libcephfs/test.cc: shutdown cmount
94acb6b test_librbd.cc: add missing va_end() to test_ls_pp
fb4ca94 mailmap: Danny Al-Gaaf name normalization
fb8ff44 doc/release-notes: note that WATCH can get ENOENT now
2cbad1b (origin/wip-7671) test/librados/watch_notify: create foo before watching
9d549eb test/system/st_rados_watch: expect ENOENT for watch on non-existent object
b23a141 RGWListBucketMultiparts: init max_uploads/default_max with 0
4057a30 AbstractWrite: initialize m_snap_seq with 0
90a2654 (origin/wip-7682) ReplicatedPG::already_(complete|ack) should skip temp object ops
72bc1ef AdminSocket: initialize m_getdescs_hook in the constructor
f7529cf RGWPutCORS_ObjStore_S3::get_params: check data before dereference
5334d5c mds/Server.cc: check straydn before dereference
047287a doc: Add "nearest power of two" to PG rule-of-thumb
7bb0359 OSDMonitor::prepare_pool_op: add missing break in case
a4a91cc (origin/wip-7649) PG: do not wait for flushed before activation
a576eb3 PG: do not serve requests until replicas have activated
980d2b5 (origin/wip-7681) ECBackend: when removing the temp obj, use the right shard
dc00661 osd_types: print lb if incomplete even if empty
8e76e4e (origin/wip-7695) build-doc: fix checks for required commands for non-debian
dc82cd7 (origin/wip-7641) debian: make ceph depend on ceph-common >= 0.67
d573710 (origin/wip-7687) rgw: don't overwrite bucket entry data when syncing user stats
2fbd772 qa/workunits/cephtool/test.sh: fix thrash (more)
64a6b26 doc/release-notes: fill in some firefly history
f4196cc doc/release-notes: firefly draft release notes
24774a8 osd/ReplicatedPG: fix typo
3d5a4b5 ReplicatedPG: CEPH_OSD_OP_WATCH return -ENOENT if !obs.exists
00bf3b5 (origin/wip-7674) osd/ReplicatedPG: do not include hit_set objects in full calculation
1836b6c (origin/wip-7592-final) osd: hit_set_persist(): Verify all objects aren't degraded
42ef8ba (origin/wip-6889) rgw: don't log system requests in usage log
406ff0b (origin/wip-is_down-boolean) OSDMap: clarify is_{down,in}() definitions
fe4ad29 (origin/wip-rbd-fuse-enumerate) rbd-fuse: fix enumerate_images() image names buffer size issue
377c919 rados_connect not thread-safe when using nss (documentation)
861e62a Update Python hashbang to respect environment
fa30eb5 rados.py: fix typo in Ioctx::read() docstring
1249b0b Use pgrep radosgw to determine if rados gateway is running.
745f72c Fixed get_status() to find client.radosgw fields inside of ps output.
880bc3a Fix get_status() to find client.rados text inside of ps command results.
fbd9c15 osd: Remove unused checkpoint code
d3e3df7 (origin/wip-flock) mds: fix owner check of file lock
8a72de3 (origin/wip-7663) ReplicatedPG: adjust pending_attrs correctly in copy_from
6669e4d ReplicatedPG: _delete_head should adjust pending_attrs
60c1b9a ReplicatedPG: use pending_attrs in rollback
d7c4d6a doc: Added init caps to Signed-off-by: and Fixes:
2b28407 (origin/wip-doc-prereq) doc: update build prerequisites
7ac98b2 doc: Updated sign-off by to sign-off-by
2e420f9 (origin/wip-build-doc) doc: rm duplicate info from release-process
52a2d69 doc: fix reST formatting in release-process
bb73711 doc: update release-process for packages
dd5a378 doc: misc updates for release-process
e272f74 (origin/wip-coverity-20140409) rgw_rados.h: RGWRegion: initialize cct and store with NULL
8de8819 (origin/wip-7672) PG::choose_acting: filter CRUSH_ITEM_NONE out of have
c7c9ae3 RadosModel.h: initialize CopyFromOp::snap
d7af7eb RadosModel.h: TestOp: initialize comp with NULL
9df9f4c ReplicatedPG.h: CopyResults() initialize final_tx with NULL
2daabc1 scratchtoolpp.cc: check return value of getchar()
0f7d954 doc: Updated pull request with suggested changes.
a9df888 AioTestData: initialize m_ioctx with NULL
6732c02 rgw_rados.h: generator class: initialize manifest with NULL
61f640c IoCtxImpl: initialize last_objver with 0
b6947c0 ECSubWrite: pass some parameter by reference
200f747 test/bench/distribution.h: pass rngen_t by reference
d61fcfa ceph-filestore-dump.cc: pass OSDSuperblock by reference
7e43823 doc: Fixed typo.
6cd797b osd/Watch.cc: pass entity_addr_t by reference
40095ee watch_item_t: pass entity_addr_t by reference
62763d5 watch_info_t: pass parameter by reference
246564b pg_t::get_split_bits: add assert to silence coverity
aba5b7c rbdmap: bugfix upstart script
2e342d6 (origin/wip-libxfs-flag) FileStore: support compiling without libxfs
2626604 erasure-code: LARGEST_VECTOR_WORDSIZE is always 16
2beb2a5 erasure-code: upgrade to jerasure version 2
b74115a autotools: set SIMD_FLAGS with SSE flags
4105ab8 erasure-code: use jerasure as submodules
eb6ffdb erasure-code: remove jerasure version 1
18506ad Removed all regular expression parsing and used '-f json' instead
4cb6b2a Modified num_bytes attribute in components_count to be a raw integer
18bdee6 MDSMonitor::prepare_command: fix "mds set"
7884780 osd_types.cc: add missing break in operator<< case handling
83731a7 ReplicatedPG::finish_ctx: clear object_info if !obs.exists
a7afa14 config.cc: add debug_ prefix to subsys logging levels
55c23a1 (origin/wip-hint-tests) qa: add script for testing rados allocation hint
54ffdcc (origin/wip-da-fix-doc) get-involved.rst: update information
d1a888e swift/containerops.rst: fix some typos
93b95a2 radosgw/troubleshooting.rst: s/ceph-osd/OSD/
2223a37 radosgw/config-ref.rst: fix typo
87618d4 session_authentication.rst: fix some typos
682c695 release-process.rst: fix some typos
72ee338 doc: s/osd/OSD/ if not part of a command
e666019 doc/dev/logs.rst; fix some typos
bbd1c4b filestore-filesystem-compat.rst: fix typo
ae123a6 corpus.rst: fix typo
cf9f017 config.rst: fix typo
5aaecc7 cephx_protocol.rst: fix typo
2cbb0a4 architecture.rst: fix typos
f581bda rados: add set-alloc-hint command
a4cbb19 rados/operations/control.rst: fix typo
9bf39e2 Broke down sysinfo's format into a histogram with a value and count so that we just see how many of each version/distro/kernel/os/arch/cpu/etc are running
2591668 (origin/wip-div) PGLog::proc_replica_log: select divergent log entries correctly
3befb93 PGLog::_merge_object_divergent_entries: handle missing.have == prior_version
7c77ff6 TestPGLog: add a test case verifying case where we have the prior_version
e830f9f TestPGLog: check on last_update in run_test_case
4d6a74d TestPGLog::proc_replica_log: call doesn't adjust olog
71b4474 (origin/wip-nfs-export) client: fix Client::getcwd()
617ce67 mds: introduce LOOKUPNAME MDS request
1c8c618 qa/workunits/cephtool/test.sh: fix 'osd thrash' test
b62f9f0 (origin/wip-7642) mon/OSDMonitor: feature feature check bit arithmetic
8d52fb7 (origin/wip-7652) mon/PGMap: send pg create messages to primary, not acting[0]
c8b34f1 mon/PGMonitor: improve debugging on PGMap updates slightly
819cce2 mon/OSDMonitor: make osdmap feature checks non-racy
b9bcc15 mon/OSDMonitor: prevent set primary-affinity unless all OSDs support it
5f7efec (origin/wip-7650) tools/rados/rados.cc: use write_full for sync_write for ec pools
38fd666 (origin/wip-7210) qa: workunits/mon/rbd_snaps_ops.sh: ENOTSUP on snap rm from copied pool
c13e1b7 mon: OSDMonitor: don't remove unamanaged snaps from not-unmanaged pools
135c27e (origin/wip-7575) osd: Add hit_set_flushing to track current flushes and prevent races
3dd09e3 Removed nw_info from sysinfo
09a317f Made crush_types to be a map of type to count, so we can tell how many racks/rows/hosts/etc are there
e53aed2 SubmittingPatches: clarify "github fork" in preference to "clone"
c9eaa65 Changed Availability section of ceph-mds.rst to reference ceph-mds, not ceph-mon. Signed-off-by: James Ryan Cresawn <jrcresawn@gmail.com>
09668a4 (origin/wip-7637) osd: fix agent thread shutdown
7411c3c logrotate: copy/paste daemon list from *-all-starter.conf
b6872b2 (origin/wip-7638) ReplicatedPG::trim_object: use old_snaps for rollback
b5b67d1 (origin/wip-7634) ReplicatedPG: use hobject_t for snapset_contexts map
b436930 (origin/wip-firefly-misc) qa/workunits/rest/test.py: do not test 'osd thrash'
237f0fb os/ObjectStore: dump COLL_MOVE_RENAME
f888ab4 (origin/wip-7632) ReplicatedPG: consistently use ctx->at_version.version for stashed object
eca7e63 (origin/wip-7393) ReplicatedPG: clean up num_dirty adjustments
173116f (origin/wip-scrub-lock) osd: only register for scrub if we are the PG primary
d379b1f osd: bracket role changes with scrub reg/unreg
c8c2f54 Client: fix build issue (lost semicolon)
d171418 (origin/wip-7610) obj_bencher: allocate contentsChars to object_size, not op_size
bafd76a (origin/wip-7624) ReplicatedPG: ensure clones are readable after find_object_context
90f5a68 1. Removed name of the pool from pool_metadata 2. Included pool type in pool_metadata 3. Renamed rep_size attribute to size in pool_metadata
da97fee 1. simplified the 'bytes' info to just be bytes 2. prefix all the members of the components_info with 'num_'
2adc534 (origin/wip-pool-delete) mon/OSDMonitor: fix pool deletion checks, races
d9e8806 (origin/wip-7618) ReplicatedPG::wait_for_degraded_object: only recover if found
a222e7a ReplicatedPG::recover_replicas: do not assume that missing objects are unfound
3f59f02 Revert "c_read_operations.cc: fix resource leak"
a71ddb0 (origin/wip-7562) mon: make quorum list (by name) be in quorum order
240446e (origin/wip-7487) test: merge unittest_crushwrapper and unittest_crush_wrapper
772968e mon/OSDMonitor: disallow crush buckets of type 0
8b3934f (origin/wip-7616) PGBackend::rollback_stash: remove the correct shard
1ddec86 FileStore::_collection_move_rename: propogate EEXIST
ca12e0d qa/workunits/mon/crush_ops: use expect_false
e016e83 (origin/wip-7608) test: Fix tiering test cases to use ---force-nonempty
0592368 (origin/wip-cache-warn-full) mon: warn when pool nears target max objects/bytes
f6edcee (origin/wip-pgmap-stat) mon/PGMap: return empty stats if pool is not in sum
640ff98 (origin/wip-vstart-paths) test: Use non-default out/ dev/ paths in vstart
1685c6f (origin/wip-crush-json) crush: revise JSON format for 'item' type
d4950a1 mailmap: Danny Al-Gaaf affiliation
0eac1ba mailmap: Bjørnar Ness affiliation
fdb644a mailmap: Ron Allred affiliation
a85d0ef mailmap: Steve Stock affiliation
076bec8 mailmap: Christopher O'Connell affiliation
4cb1cbf (origin/wip-7607) ReplicatedPG::fill_in_copy_get: fix omap loop conditions
11393ab ReplicatedPG::fill_in_copy_get: remove extraneous if statement
8fdfece ReplicatedPG::fill_in_copy_get: fix early return bug
364fed8 (origin/wip-debian-files) packaging: use wildcard for test files in Debian
65f3354 (origin/wip-7293) Make symlink  of librbd to qemu's folder so it can detect it.
d0b1094 (origin/wip-7447) ECBackend,ReplicatedPG: delete temp if we didn't get the transaction
f2a4eec PGBackend/ECBackend: handle temp objects correctly
308ea1b ECMsgTypes: fix constructor temp_added/temp_removed ordering to match users
3e21996 ReplicatedPG::finish_ctx: use correct snapdir prior version in events
a7057e1 doc: Improve CloudStack RBD documentation
31eb533 (origin/wip-da-SCA-firefly-20140304) librados.cc: remove unused variable cpp_category
c2cc178 ECBackend.cc: use !empty() instead of size()
35ae7ed ceph_argparse.cc: prefer prefix ++operator for non-trivial iterator
39fc1db KeyValueStore: use !empty() instead of size()
8c2b2d3 PG.h: use !empty() instead of size() > 0
9e52695 PG::generate_past_intervals: reduce scope of variable
3a786ca test_o_trunc.c: fix indentation to kernel style (tabs, 8 spaces)
e4c4aae ErasureCodePlugin.cc: reduce scope of local variable
35f2080 SyntheticClient::play_trace: reduce scope of local variable
f836909 test_o_trunc.c: reduce scope of some variables
c2f3f2b close file descriptor in error case
8f63fdb Formatter::new_formatter(): pass const function parameter by reference
724ad02 doc: update the operator create pool reference
7461410 doc: erasure coded pool developer documentation
6d323c0 mailmap: Mike Lundy affiliation
49e54ab (origin/wip-cache-add) mon/OSDMonitor: fix race in 'osd tier remove ...'
241b9e8 mon/OSDMonitor: fix some whitespace
c029c2f mon/OSDMonitor: add 'osd tier add-cache <pool> <size>' command
62e0eb7 mon/OSDMonitor: handle 'osd tier add ...' race/corner case
0e5fd0e osd: make default bloom hit set fpp configurable
eddf7b6 osd/ReplicatedPG: fix agent division by zero
08efb45 (origin/wip-tier-add) OSDMonitor: do not add non-empty tier pool unless forced
12909bb (origin/wip-2288) mds: check projected xattr when handling setxattr
20fe162 (origin/wip-7563) TestPGLog: tests for proc_replica_log/merge_log equivalence
9a64947 TestPGLog::proc_replica_log: adjust wonky test
6b6065a TestPGLog::proc_replica_log: adjust to corrected proc_replica_log behavior
97f3596 TestPGLog::proc_replica_log: add prior_version to some entries
200e296 PGLog::proc_replica_log: _merge_divergent_entries based on truncated olog
b0357ab PG.h:PGLogEntryHandler: remove silly cant_rollback logic
c99b7e1 PG,PGLog: replace _merge_old_entry with _merge_object_divergent_entries
86b21e0 TestPGLog::merge_old_entry: ne.version cannot be oe.version
3dc4f10 TestPGLog::merge_old_entry: we no longer use merge_old_entry this way
ff329ac TestPGLog:rewind_divergent_log: set prior_version for delete
9e43dd6 TestPGLog: ignore merge_old_entry return value
3cc9e22 TestPGLog: not worth maintaining tests of assert behavior
a234053 (origin/wip-osd-verbosity) OSD,config_opts: log osd state changes at level 0 instead
68890b2 osd: be a bit more verbose on startup
4e06dfd (origin/wip-messenger-shutdown) msg: Make SimpleMessenger shutdown safer
371a80c librbd: prefix rbd writes with CEPH_OSD_OP_SETALLOCHINT osd op
8e49bc3 FileStore: add option to cap alloc hint size
1f5b796 FileStore: introduce XfsFileStoreBackend class
391257c FileStore: refactor FS detection checks a bit
6456802 osd: add SETALLOCHINT operation
8982734 common: -- support for env_to_vec
28c29c1 Revert "ObjectCacher: remove unused target/max setters"
d00a927 Revert "librbd: remove limit on number of objects in the cache"
195d53a rgw: off-by-one in rgw_trim_whitespace()
37e7817 In database delete Session.flush() has to be called appropriately, to avoid foreign key conflicts in delete() request to the database
f3d6491 Following changes are made 1. Increased the String length for distro, version and os_desc columns in osds_info table 2. Corrected version information extraction in client/ceph-brag 3. Removed the version_id json entry when version list returned for UUID 4. Updated the README to reflect point 3
3cc8b27 Modifed the String variables in db.py to be of fixed length to support databases which doesn't have VARCHAR support
30a5bdb Added an instruction in 'How to deploy' field in README.md
aca6ac3 (origin/wip-7248) qa: workunits: cephtool: test 'osd bench' limits
09099c9 (origin/wip-osd-status) osd: 'status' admin socket command
25a9bd3 osd: OSD: limit the value of 'size' and 'count' on 'osd bench'
ef25135 erasure-code: test rados put and get
0b612d1 mon: prepend current directory to PATH for tests
eb21bc8 osd: helper to create an OSD for functional tests
cababd9 mon: add mon-test-helpers.sh to EXTRA_DIST
927153f osd: do not attempt to read past the object size
9dd6e34 mailmap: Mouad Benchchaoui affiliation
e782051 mailmap: Andrey Kuznetsov affiliation
7b6d417 mailmap: Wang, Yaguang affiliation
855edc6 Fix typo ceph-disk
43b7b0b mailmap: The Linux Box affiliations
62fd382 (origin/wip-7539) osd_types,PG: trim mod_desc for log entries to min size
d4118e1 MOSDECSubOpWrite: drop transaction, log_entries in clear_buffers
718cda6 TrackedOp: clear_payload as well in unregister_inflight_op
59ff572 OpTracker: clarify that unregister_inflight_op is only called if enabled
fc9b8ef MOSDOp: drop ops vector in clear_data()
1ea59f6 ReplicatedPG: delete mark_all_unfound_lost transactions after completion
e19dffb (origin/wip-7572) mon: fix 'pg dump' JSON output
1a4657a (origin/wip-fix-coverity-20140228) req_state: fix uninitialized bool var
605e645 Objecter::recalc_op_target: fix uninitialized scalar variable
754a368 PGMonitor: fix uninitialized scalar variable
1747c58 MDCache: fix potential null pointer deref
93c0983 MDCache::handle_discover: fix null pointer deref
249e210 FileStore: fix resource leak in queue_transactions() blackhole case
3cd751b c_read_operations.cc: fix resource leak
ad9b6d2 c_write_operations.cc: fix some ioctx resource leaks
e8533ee ReplicatedBackend: check result of dynamic_cast to fix null pointer deref
8d6b25a mds: use "lookup-by-ino" helper to handle LOOKUPPARENT request
dc20c7d OSDMonitor: enable getting hit set parameters We would like to get the hit set parameters: hit_set_type | hit_set_period | hit_set_count | hit_set_fpp via OSDMonitor
5b88856 (origin/wip-s3radoscheck-wusui) Use pgrep radosgw to determine if rados gateway is running. Fixes: 7528 Signed-off-by: Warren Usui <warren.usui@inktank.com>
0ed63fd (origin/wip-libcephfs-fixes) client: fix Client::trim_caps()
cdbe413 client: update dirfragtree/fragmap according to mds request reply
214977a client: choose hash function according to dir layout
23de48b client: check inode's cap when looking up dentry
0638d61 client: add flushing inode to proper list when auth mds changes
4bdecf1 client: add imported caps when handling cap export message
1ddc951 client: remove exported caps when handling cap import message
a7b7c31 client: use ceph_seq_cmp() to compare cap seq/mseq
3dd323e client: don't send cap release when removing exported cap
0bf5f86 store_test.cc: fix unchecked return value
7eefe85 histogram.h: fix potential div by zero
500206d ReplicatedPG.cc: fix ressource leak, delete cb
fbb1ec8 (origin/wip-7542) ECBackend: don't leak transactions
b0d4264 OSD::handle_misdirected_op: handle ops to the wrong shard
123ff9e (origin/wip-7458) osd: stray pg ref on shutdown
448fc0e (origin/wip-pg-msg) mon/OSDMonitor: missing space in string
799cde0 Fix python-requests package dependencies.
bfad17b (origin/wip-librados-end-iterator) librados: fix ObjectIterator::operator= for the end iterator
a850a38 (origin/wip-doc-cache-pool) doc/dev/cache-pool: fix notes
f0241c8 (origin/wip-cache-pool) mon/OSDMonitor: make default false-positive-probability 5%
30aa2d6 client: clear migrate seq when MDS restarts
c1e40c6 client: fix race between cap issue and revoke
5c55eb1 client: check mds_wanted for imported cap
9476f84 client: allow revoking duplicated caps issued by non-auth MDS
6797d30 client: call handle_cap_grant() for cap import message
154efb1 client: don't update i_max_size when handle reply from non-auth MDS
9a0ef6a (origin/wip-requests-dependencies) Fix python-requests package dependencies.
c07a758 (origin/wip-mds-dumper) mds: Add dump-journal-entries
7a985df mds: Create MDSUtility as base for Dumper/Resetter
410c507 mds: Fix Dumper shutdown
7ba3200 mds: fix nested_anchors update during journal replay
1040d1b (origin/wip-primary-temp-fix) osd/OSDMap: respect temp primary without temp acting
8020dcf (origin/wip-7375-wusui) Fixed get_status() to find client.radosgw fields inside of ps output. Fixes: 7375 Signed-off-by: Warren Usui <warren.usui@inktank.com>
8200b8a (origin/wip-7374-wusui) Fix get_status() to find client.rados text inside of ps command results. Added port (fixed value for right now in teuthology) to hostname. Fixes: 7374 Signed-off-by: Warren Usui <warren.usui@inktank.com>
be2748c (origin/wip-7537) OSDMap::_pg_to_up_acting_osds: use _acting_primary unless acting is empty
dc079eb OSDMonitor: when thrashing, only generate valid temp pg mappings
891343a rados.py: add aio_remove
9f7f4ed (origin/wip-dz-scrub-fixes) Revert "osd/PG: fix assert when deep repair finds no errors"
728e391 osd: Don't include primary's shard in repair result message
3ee71a5 (origin/wip-mon-docs) doc: troubleshooting-mons.rst: better document how to troubleshoot mons
69082a6 (origin/wip-7485) mds: add mds_kill_create_at for testing
27968a7 ceph_test_objectstore: fix i386 build (again)
14ea815 (origin/wip-osdmap-inc) mon/OSDMonitor: fix osdmap encode feature logic
7357b6e (origin/wip-7517) PG: skip pg_whoami.osd, not pg_whoami.shard in scrub feature check
696fa36 (origin/wip-7512) OSD::project_pg_history needs to account for acting_primary/up_primary
0442b45 Objecter/OSDMap: factor out primary_changed() into static OSDMap method
d0359f7 PG: clarify same_primary_since updates regarding primary rank
73c59a0 (origin/wip-last-epoch-clean) mon/PGMap: fix osd_epochs update
df3ba72 mon/PGMap: add unit test for min_last_epoch_clean
8913ab4 ECBackend: skip canceled xattr reads as well
0e376ee (origin/port/temp-failure-retry) compat: avoid unused warn with TEMP_FAILURE_RETRY
23e538e (origin/wip-create-null) client: fix possible null dereference in create
bcc18d4 osd: increase default leveldb write buffer, cache size
c4a3a86 ceph_test_objectstore: fix i386 build error
b25c22a ceph_test_objectstore: fix signed/unsigned warning
9651b18 os/ObjectStore: fix rebase errors
cfafa0b README: add build dep
1340b36 erasure-code: test that changing the pool size is not allowed
d74f128 os/ObjectStore: document interface
6d8cb22 unittest_ecbackend: fix signed/unsigned warnings
fed655e (origin/wip-scrub-primary) mon/PGMonitor: fix primary osd check on deep-scrub
7b0f3d9 (origin/wip-7513) PGLog::activate_not_complete: fix log.complete_to increment typo
e3e3328 (origin/wip-repair) osd/PG: fix assert when deep repair finds no errors
9da4d40 (origin/wip-ec-bugs) PGLog: test for missing using the correct shard value
ace65fe OSD: fix query for ec pgs
93983c9 Objecter: make is_pg_changed static and const for old/newacting
8b4cf1c OSDMap: make calc_pg_rank/role const for acting
005b4fa Objecter: resend op if primary role changed
b7de0fd ECTransaction: require hash_infos for deleted objects
ab4c9a6 ECUtil: clear() should reset hashes to -1, not 0
8593ad7 ReplicatedPG::cancel_pull: ECBackend might cancel_pull on a non-missing object
9b85241 ECBackend::filter_read_op: clean up read state properly
70d23b9 (origin/wip-subscribe) osd: fix off-by-one is boot subscription
90ebdcc Rename keyvaluestore_check_backend to keyvaluestore_debug_check_backend
a52d7cd Add KeyValueStore op thread options
62c1631 Remove eio inject codes in KeyValueStore
8c4d865 Add config tracker to KeyValueStore
697411c Add backend check option to KeyValueStore
9543664 Remove filestore_inject_stall
dcfe098 Remove m_eio in KeyValueStore
4b3bf3e Make SequencePosition sync by each transaction
ec8a419 Implement collection_rename interface in KeyValueStore
6314350 Remove unnecessary "check_coll" check
88bec06 Optimize write call add enhance error detect
2a363d6 Unify object level lock in GenericObjectMap
a9fa341 Fix incorrect read and truncate
9ed2958 Return 0 when the offset of read exceed the length of object
3e6a1fc Add read/write operation to store_test.cc
4e7f1de Adjust some interfaces to optimize caller codes
024a120 Use rename operation to make colection_move atomic
d7be540 Add get_*_with_header to StripObjectHeader
c9fdcee Add test for omap interface
2b9e893 Move perf counter and add op queue reserve throttle
5eb7592 Fix deadlock caused by hold collection obj
c278269 Added a note that the ceph-osd command requires the cluster option.
0da25e6 (origin/wip-librados-object-iterator) librados: implement ObjectIterator copying and assignment
d9bedb9 Added evaluation of cluster and fixed evaluation when setting initial weight on start in verbose mode
8a0017a librados: don't destroy ObjListCtx when iterator reaches the end
d8a7bef librados: remove extra advance from objects_begin(position)
a9677e1 (origin/wip-6685-firefly) Revert "ReplicatedPG::recover_backfill: adjust last_backfill to HEAD if snapdir"
133ddb7 packaging: match all test files
1c129df packaging: add missing file
bd59db2 (origin/wip-corpus) ceph-object-corpus: prune some old releases
76046cf (origin/port/updates) dencoder: check for radosgw build option
5373ee2 osd: use ceph scoped shared_ptr
0ebb1f8 mon/MDSMonitor: Cope with failures during creation
c6e6ced (origin/wip-copyget) PG::build_might_have_unfound: skip CRUSH_ITEM_NONE
1f30d1a ECBackend: deal with temp collection details in handle_sub_write
c703a89 ReplicatedPG::on_global_recover: requeue degraded, then unreadable
caf2edf rgw: minor cleanup
1307ba9 mds: Table read failure should log at error level
81bcf43 mds: Don't create the /.ceph directory
2762ede mds/CDir: Remove a few lines of cruft
a4d0eb1 mds: Remove some unused #defines
5fb90a2 Fix generate keystone token from credentials
541beb8 (origin/wip-mds-dencoder) mds: Add encode/decode/dump for use with dencoder
ebd4397 RadosModel: copyfrom should result in a dirty object
68184d4 PG: fix scrub feature check
67d1f36 ReplicatedPG: assert no omap for ec pool in _write_copy_chunk and skip
4441792 ECBackend: handle short reads
715cbd3 ReplicatedPG: ensure that ec appends are aligned
78d9c00 ReplicatedPG::fill_in_copy_get, use getattr_maybe_cache
c337f63 ReplicatedPG: fix stat uses to use the correct shard
aa110af OSDMap::_apply_primary_affinity: skip CRUSH_ITEM_NONE in non-default check
b3bb9ef doc/release-notes: v0.77
fa96de9 doc/release-notes: v0.67.7
1bca9c5 (tag: v0.77) v0.77
40bdcb8 osd/,mon/: add (up|acting)_primary to pg_stat_t
0427f61 (origin/wip-7099) rgw: fix swift range response
2b3e3c8 (origin/wip-6830) rgw: fix etag in multipart complete
859ed33 (origin/wip-6951) rgw: reset objv tracker on bucket recreation
53de641 (origin/wip-6936) radosgw-admin: don't generate access key if user exists
9e8882e (origin/wip-da-SCA-20140218) BackedUpObject::get_xattr()  pass function parameter by reference
53b3689 TestRados.cc: use !empty() instead of size()
86b0879 ErasureCodeBench: prefer prefix ++operator for non-trivial iterator
200ebb9 ceph_erasure_code.cc: prefer prefix ++operator for non-trivial iterator
e6772c7 RGWObjManifest: prefer prefix ++/--operator for non-trivial iterator
42e6da7 ReplicatedPG: prefer prefix ++operator for non-trivial iterator
29c4abd OSD: use !empty() instead of size() > 0
be85727 PG: use !empty() instead of size() > 0
f23ab4a RPCRecPred: use !empty() instead of size() >= 1
0626df9 KeyValueStore: prefer prefix ++operator for non-trivial iterator
76c1723 KeyValueStore: use !empty() instead of size()
ede614a FileStore: use !empty() instead of size()
eaf6696 DBObjectMap: use !empty() instead of size()
0bf0ec0 OSDMonitor: prefer prefix ++operator for non-trivial iterator
31b4107 OSDMonitor: use !empty() instead of size() > 0
a1412bd MDCache: prefer prefix ++operator for non-trivial iterator
4a48d8e CrushWrapper::is_valid_crush_loc(): pass function parameter by reference
3f68a5c CrushWrapper: prefer prefix ++operator for non-trivial iterator
dd71051 PGLog.h: prefer prefix ++operator for non-trivial iterator
8488e71 Client: remove a std::string::c_str() calls
1099e25 common/config.cc: prefer prefix ++operator for non-trivial iterator
c7dfdfd str_map.cc: prefer prefix ++operator for non-trivial iterator
7da714a Client.cc: use !empty() instead of size()
fd08b09 ceph_argparse.cc: prefer prefix ++operator for non-trivial iterator
1d1392d Monitor: pass function parameter by reference
ab45d44 BarrierContext: prefer prefix ++operator for non-trivial iterator
4adcfa5 BarrierContext: reduce scope of 'done' variable
19dad03 MonClient: pass function parameter by reference
314116e PG: insert into stray set if !us_up() && !is_acting()
a5c5d92 (origin/wip-agent) osd/ReplicatedPG: EOPNOTSUPP on hit_set_get on non-replicated pools
a40cd50 osd/ReplicatedPG: load older HitSets into memory
0af7375 osd/ReplicatedPG: strengthen agent_work assertions
1d907c6 OSD: consider up/acting primary for new intervals
afbd58e (origin/wip-7064) rgw: don't try to read bucket's policy if it doesn't exist
3ed68eb rgw: return error if accessing object in non-existent bucket
b0dcc79 radosgw-admin: gc list --include-all
609f4c5 Throw a Timeout exception on timeout.
1975441 (origin/wip-rgw-manifest-2) dencoder: fix for new rgw manifest code
b3ce188 cls/rgw: fix debug output
3fb6e25 test/rgw: manifest unitest
da64bf7 rgw: scalable manifest object
db88e7f (origin/wip-7463) ceph_rest_api.py: don't fail if no up OSDs found on startup
7a019b3 (origin/wip-librados-ops-and-rvals) test/librados: remove unused lines and fix return code for cmp guards
bfbfcd6 ReplicatedPG: fix successful write condition
18f08cd ReplicatedPG: clear osd op reply output for writes
1d661ca ReplicatedPG: set individual osd op rvals
7743698 ReplicatedPG: don't copy the ops vector into OpContext
e550ad7 ReplicatedPG: avoid undefined behavior in xattr comparison
4b229f7 qa: add librados c object operations tests to librados test script
7a76033 packaging: add test programs for librados c object operations
bac7bb6 librados: bump version number
995fea9 librados: add omap object operations to the c api
242a6c8 librados: add read xattr functions for c object operations
f68b706 Objecter: add a way to chain callbacks
2543cde librados: add exec to the c object operations api
0dc4309 librados: add read to c object operation api
6503f21 Objecter: add a context argument to ObjectOperation::read()
6094e43 librados: add simple atomic read operations to c api
770942a librados: add exec to the c write operations api
bc03fbb librados: add individual op flags for c write operations
4f4121a librados: add global op flags to the c api
7f1f0b5 librados: remove constant for CMPXATTR_NOP
50ca88a librados: add some comments about constants in librados.h
e255bf5 librados: add section docs for object operations
c61ba41 test/librados: add ObjectReadOperation tests
5276e3c test/librados: refactor setup/teardown in tiering tests
ae072ac test/librados: use standard rados test case for snapshot tests
5497e1c test/librados: use a test case instead of duplicating code everywhere
c6d8d0e test/librados/cmd: remove unnecessary pool creation
d3c6f17 test/librados: use connect_cluster_pp() instead of duplicating it
8d4a5fd test/librados: add a connect_cluster() helper
9630f2f test/librados: create general test case classes
6273ba4 test/librados: move test.cc into its own library
abca34a Objecter: keep ObjectOperation rval pointers for writes
4bee6ff (origin/wip-cache-perf) osd/ReplicatedPG: clean up agent skip debug output
d1a185b osd: l_osd_agent_{wake,skip,flush,evict}
dbec109 osd: l_osd_tier_[dirty|clean]
150e87a osd: l_osd_tier_whiteout
2d5371d osd: l_osd_tier_evict
c45a477 osd: l_osd_tier_[try_]flush[_fail]
4b0a0a1 osd: l_osd_copyfrom
5e727bf (origin/wip-ecbackend-for-review, origin/wip-ecbackend-12) RadosModel: only output if missing header is actually a problem
11f288e Objecter: track primary explicitly to detect changing primaries
bc31c4b ReplicatedPG: add some debugging if waiting_for_commit is non-empty
b90584a osd/: instantiate the right backend based on pool
792f0a8 ECBackend: flesh out ECBackend implementation
45b6c59 osd/ECTransaction: add type encapsulating EC transaction
33c3830 osd/ECUtil: add ec encode/decode util helpers
7731a94 ObjectStore: add bufferlist/string getattr
258af5e buffer: allow caller to initialize bufferhash state
ae827cf osd_types: add swap, claim_append to ObjectModDesc
7772014 OSD,PG: pass through EC messages
6cd64a5 messages,osd: add EC messages and associated types
e8820ac src/osd/: add ECBackend stubs
0661d80 PGBackend: make getattrs virtual
ca323ff ReplicatedPG: fix size checking for ECBackend pools
510585b PGBackend/ReplicatedBackend: factor out logical to ondisk size mapping
26745ca PGBackend/ReplicatedBackend: move the backend agnostic code into PGBackend for scrub
1835c29 ReplicatedBackend: factor out be_deep-scrub
f0b69b3 osd/: replace bufferptr with bufferlist for attrs in recovery
0b180e6 PG::discover_all_missing: request a FULLLOG
84e2f39 PG,ReplicatedPG: Generalize missing_loc for ECBackend
8b33d60 PG: allow PGBackend to set criteria for PG up-ness
facec76 PGBackend: add some additional helpers.
74b8a0c PG,PGBackend: expose acting and backfill_targets
5a8c0bb os/: allow objects with NO_GEN but non-NO_SHARD shard
2d3205f PG: skip CRUSH_ITEM_NONE in acting set in various places
5db3b2d osd/: extend pg_interval_t to include primary
9d8be1b Objecter: handle primary other than acting[0]
904704a OSDMap: handle CRUSH_ITEM_NONE in acting sets
109b3c9 OSDMap: fill in get_primary_shard
285cf77 PG: introduce calc_ec_acting
41e1945 PG: refactor calc_acting to handle pg_shard_t changes
035d6cc osd/: refer to pg by spg_t and replica by pg_shard_t
8b46dd1 messages/: include shard information in various pg messages
fa98064 ReplicatedBackend: excise OSDService*
31b7937 PGBackend/ReplicatedBackend: move temp handling into PGBackend
761f0b1 PGBackend: use whoami_shard().shard in rollback*, objects*
5d01f88 ReplicatedBackend/PGBackend: move objects_* methods into PGBackend
8ca875b PGBackend/ReplicatedBackend: move rollback methods into PGBackend
4a25951 osd_types: introduce spg_t, pg_shard_t
44b43df ObjectStore: use ghobject_t for setattrs
f2826fa src/osd: pass in version to recover to recover_object
1c93e03 osd/: Add a shard parameter to SnapMapper to handle multiple pg shards
f678aef TestPGLog: remove test with DELETE op with prior_version = eversion_t()
09d611d PGLog::merge_old_entry: simplify the oe.version > ne.version case
e6a1122 osd: l_osd_tier_promote
d116e55 PG: just ignore rollbacks on objects we have already failed to rollback
0e7b10a PG::remove_snap_mapped_object: use pg_whoami.shard
fd9da00 ReplicatedPG: take snapset_obc write lock where appropriate
da4652c ReplicatedPG: release backfill state on_global_recover not peer recover
d687ed9 ReplicatedPG: take clone write lock as well in make_writeable
643b6a5 ReplicatedPG,osd_types: seperate require_rollback from ec_pool
f020ce9 ReplicatedPG:: remove_snap_mapped_object already removes the object
17e6ecc ReplicatedPG: find_object_context debugging: output oi
b3b2bab ReplicatedPG: handle xattr cache on rollback and delete_head
d8b6d4c ReplicatedPG: release_op_ctx_locks in all-applied, not all-committed
13a41e1 FileStore: permit NULL onreadable callback
3650da6 ErasureCodeJerasure: fill in decoded if all shards are included
44f5d4d ErasureCodeJerasure: fix alignement issues in encode/decode
06ec9bd ObjectStore: fix OP_COLL_ADD dump output
541a7e2 TestRados: send aligned appends on erasure pools
e0b0508 ReplicatedPG: reject unaligned writes on ec pools
211fc4e librados: add calls to expose required write alignment
4c1338f SimpleMessenger: init_local_connection whenever my_inst changes
bd8fcd2 osd: improve whiteout debug prints
63f5a79 osd/ReplicatedPG: make agent skip blocked obcs
7997646 ReplicatedBackend: print char ack_type as int
a71d829 (origin/wip-barrier) client: disable barrier support
747002c client: fix barrier interval
d7457f7 client/barrier: drop unused active_commit_interval
ce643e0 client: don't populate Client::barriers from read accesses
a1dbc9c qa/workunits/suites/pjd: use test suite with acl tweak
623748e (origin/wip-dirfrags) mds: bump the protocol version
2a19a1b osd/ReplicatedPG: allow is_degraded_object() to be called outside of backfil
e5457df mds: open sessions for rejoin imported caps
c54b3ce mds: fix slave rename rollback
9e8dbf9 mds: remove failed MDS from export bystanders list
21d209d mds: wake up dentry waiters when handling cache rejoin ack
74ef370 mds: fix negative rstat assertion
2253534 mds: avoid race between cache expire and pushing replicas
cc77ef2 mds: fix scattered wrlock rejoin
3b90c78 mds: fixes for thrash fragment
5b1de69 mds: force fragment subtree bounds when replaying ESubtreeMap
4d5ceba mds: fix 'force dirfrags' during journal replay
f3666ed mds: journal dirfragtree change
ee7ac6f mds: allow fragmenting subtree dirfrags
98105b2 mds: preserve dir_auth when spliting/merging dirfrags
3dc51de mds: minor cleanup for EFragment and MMDSFragmentNotify
9df6861 mds: freeze dir deadlock detection
9a47913 mds: improve freeze tree deadlock detection
8079939 mds: handle frag mismatch for cache expire
305d16f mds: handle frag mismatch for cache rejoin weak
0eb311d mds: fix open undef dirfrags
6e013cd mds: properly set COMPLETE flag when merging dirfrags
ee0ab2b mds: fix CInode::get_dirfrags_under()
1080fa4 mds: fix MDCache::adjust_subtree_after_rename()
e0e2565 mds: fix MDCache::get_force_dirfrag_bound_set()
ffe7151 mds: handle frag mismatch for discover
b88034e mds: use discover_path to open remote inode
1ff7766 mds: introduce fine-grained discover dirfrag wait queue
2c909cd mds: revert commit 15a5d37a
5faa313 mds: acquire scatter locks when exporting dir
3154ee8 mds: acquire locks required by exporting dir
3fb408e mds: introduce nonlocking auth pin
d0df841 mds: allow acquiring wrlock and remote wrlock at the same time
1dae27c (origin/wip-7371) ReplicatedPG: return no data if read size is trimmed to zero
774125c osd: set client incarnation for Objecter instance
0dd1e07 osd: schedule agent from a priority queue
a812982 osd/ReplicatedPG: simplify agent_choose_mode
905df2e osd/ReplicatedPG: block requests to cache PGs when they are full
85e06f9 osd/ReplicatedPG: redirect reads instead of promoting when full
b92c79d osd/ReplicatedPG: use reply_ctx in a few cases
7f85421 osd/ReplicatedPG: do not flush omap objects to an EC base pool
8c7bc2e osd/ReplicatedPG: do not activate agent unless base pool exists
11e4695 osd: add OMAP flag to object_info_t
6581ce9 osd/ReplicatedPG: ignore starvation potential when taking write lock during promote
f617eba osd/ReplicatedPG: do not choke on op-less flush OpContexts (from flush)
dd3814f osd/ReplicatedPG: do not flush|evict degraded objects
90457b1 ceph_test_rados_api_tier: fix osd pool set json syntax
230aad7 osd: clear agent state when PG becomes a replica
c2d16d7 osd/ReplicatedPG: do not flush or evict hitsets
e07f987 osd/ReplicatedPG: fix evict mode selection for large target
c9daf8e osd/ReplicatedPG: add slop to agent mode selection
3bc3127 osd/ReplicatedPG: initial agent to random hash position inside pg
f693045 osd: add pg_pool_t::get_random_pg_position()
7bb0aa5 osd: only enable tier agent when osd is in active state
cb4aa3a osd: observe 'notieragent' osdmap flag
dcf20b9 osd: add 'notieragent' flag to OSDMap
a5dabb5 histogram: fix histogram::get_position_micro overflow
199bdb1 mon: test dirty stats in ceph df detail
18bc151 osd/ReplicatedPG: decay tier agent histograms over time
da9ed08 osd/ReplicatedPG: basic flush and evict agent functionality
a54f819 osd: agent worker thread
9ac03ef osd/ReplicatedPG: fix finish_flush
34fcf42 osd/HitSet: add HitSetRef
6950212 osd/ReplicatedPG: factor clone check out of evict op code
fc28a99 osd/ReplicatedPG: add on_finish to OpContext
a57052c mon: include dirty stats in 'ceph df detail'
bc94524 osd: rename test/test_osd_types.cc -> test/osd/types.cc
e65c280 osd: add pg_pool_t::get_pg_num_divisor
95f25ce mon/OSDMonitor: allow new pool policy fields to be set
0988c84 osd/osd_types: add cache policy fields to pg_pool_t
297d54e histogram: add decay
fb4152a histogram: move to common, add unit tests
85a8272 histogram: rename set -> set_bin
8b68ad0 histogram: calculate bin position of a value in the histrogram
d921d9b qa: do not create erasure pools yet
4560078 common: ping existing admin socket before unlink
c673f40 (origin/wip-primary-affinity) osd/OSDMap: include primary affinity in OSDMap::print
87be7c1 osd/OSDMap: remove bad assert
ba3eef8 mon/OSDMonitor: add 'mon osd allow primary affinity' bool option
c360c60 ceph_psim: some futzing to test primary_affinity
f825624 osd/OSDMap: add primary_affinity feature bit
8ecec02 osd/OSDMap: apply primary_affinity to mapping
871a5f0 (origin/wip-brag) ceph.spec: add ceph-brag
4ea0a25 debian: add ceph-brag
57d7018 ceph-brag: add Makefile
cf4f702 (origin/wip-7212-sage-b) mon/Elector: bootstrap on timeout
4595c44 mon: tell MonmapMonitor first about winning an election
7bd2104 mon: only learn peer addresses when monmap == 0
3c76b81 (origin/wip-7395) OSD: use the osdmap_subscribe helper
6db3ae8 OSD: create a helper for handling OSDMap subscriptions, and clean them up
5b9c187 monc: new fsub_want_increment( function to make handling subscriptions easier
7d398c2 doc/release-notes: v0.67.6
0ed6a81 (origin/wip-osdmaptool-pool-fix) osdmaptool: add tests for --pool option
f98435a osdmaptool: add --pool option for --test-map-pgs mode to usage()
eedbf50 osdmaptool: fix --pool option for --test-map-object mode
e44122f test: fix signed/unsigned warnings in TestCrushWrapper.cc
64cedf6 (origin/wip-7394) OSD: disable the PGStatsAck timeout when we are reconnecting to a monitor
794c86f monc: backoff the timeout period when reconnecting
60da8ab monc: set "hunting" to true when we reopen the mon session
1a8c434 monc: let users specify a callback when they reopen their monitor session
589e2fa mon: ceph hashpspool false clears the flag
7834535 mon: remove format argument from osd crush dump
020e543 mon: do not goto reply if a ruleset exists in pending
0c9c157 mon: osd crush rule create-simple functional tests
c248e7c mon: osd crush rule functional tests
4784a68 mon: add ruleset name to crush rule dump
fce4d68 mon: add missing format argument to crush dump
cec1893 mon: add missing format argument to crush rule dump
7ff2756 mon: osd create pool test refactor
fd13307 mon: minor improvement to test-helpers.sh
4b687ba mon: if crush rule create-simple exists return
a7e9a7b crush: display item name in CrushWrapper::dump_rule()
e5b6eb4 crush: cosmetic changes to CrushWrapper::dump_rule()
dcfeee6 crush: add the dump_rule(int ruleset) method
f77e8ea crush: add CrushWrapper::dump_rules() unit test
462ad76 crush: fix leaks in TestCrushWrapper.cc
6ad6b09 mon: remove racy tests from osd-pool-create.sh
8dea588 mon: add osdmonitor_prepare_command to the admin socket
07c494b mon: add --mon-advanced-debug-mode
5ea156a mon: Monitor::send_reply gracefully handles no connection
53e92f6 mon: split prepare_command in two
d012119 (origin/wip-null-xattr) mds: remove xattr when null value is given to setxattr()
6e6a333 (origin/wip-open-truncate) mds: properly replay dentry trace for open truncate.
9035227 doc/release-notes: do not downgrade from v0.67.6
7533b3b doc/release-notes: note about dumpling xattr backport
cc1e844 PendingReleaseNotes: note about cephfs backtrace updates
74951ca osd/OSDMap: pass pps value out from _pg_to_osds
e107938 osd/OSDMap: fix _raw_to_up_osds for EC pools
1cc8c25 mon/OSDMonitor: add 'osd primary-affinity ...' command
cee9142 osd/OSDMap: add osd_primary_affinity fields, accessors, encoding
af4c142 mon/OSDMonitor: fix legacy tunables warning
a0b2c74 (origin/wip-moncap) osd/OSDCap: handle any whitespace (not just space)
824dd52 mon/MonCap: handle any whitespace (not just space)
5a6c950 packaging: do not package libdir/ceph recursively
840e918 tests: fix packaging for s/filestore/objectstore/
b64f1e3 tests: fix objectstore tests
f34eb1b (origin/wip-update-backtrace) mds: force update backtraces for previously created FS
b5c10bf Fix bad dealloctor
a4b3b78 correct one command line at building packages section
33692a2 osdmaptool: fix cli test
fed8396 tset_bufferlist: fix signed/unsigned comparison
8ca3d95 (origin/wip-7346) rgw: multi object delete should be idempotent
bf38bfb (origin/wip-7271) rgw: set bucket permissions, cors on swift creation
2682b64 (origin/wip-doc-librados-intro) doc: Incorporated feed back from Loic and Dan.
0da9621 doc: Adds additional terms for use with librados.
e1a49e5 ObjectCacher: remove unused target/max setters
0559d31 librbd: remove limit on number of objects in the cache
db034ac ObjectCacher: use uint64_t for target and max values
bf8cf2d ObjectCacher: remove max_bytes and max_ob arguments to trim()
d136eb4 (origin/wip-crush) mon: allow firefly crush tunables to be selected
e3309bc doc/rados/operations/crush: describe new vary_r tunable
525b2d2 crush: add firefly tunables baseline test
37f840b crushtool: new cli tests for the vary-r tunable
e88f843 crush: add infrastructure around SET_CHOOSELEAF_VARY_R rule step/command
f944ccc crush: add SET_CHOOSELEAF_VARY_R step
e20a55d crush: add infrastructure around new chooseleaf_vary_r tunable
ac16fd6 mailmap: Derek Yarnell is with University of Mississippi
9e43f93 mailmap: Dmitry Smirnov is with Debian GNU/Linux
0869fcb mailmap: Eric Mourgaya is with Credit Mutuel Arkea
165e76d common: admin socket fallback to json-pretty format
e98e344 client ownership info validation corrected
f2f4eb5 Updated client code to complete PUT and DELETE requests
69682ad1 memstore: fix touch double-allocation
9292cc2 doc: highlight that "raw" is the only useful RBD format for QEMU
9e62beb qa: add script for testing rados client timeout options
79c1874 rados: check return values for commands that can now fail
8e9459e librados: check and return on error so timeouts work
d389e61 msg/Pipe: add option to restrict delay injection to specific msg type
671a76d MonClient: add a timeout on commands for librados
3e1f7bb Objecter: implement mon and osd operation timeouts
9bcc42a (origin/wip-7334) alert the user about error messages from partx
42900ff use partx for red hat or centos instead of partprobe
6926272 (origin/wip-fsetpipesz-fix) common/buffer: fix build breakage for CEPH_HAVE_SETPIPE_SZ
a5f479c configure: fix F_SETPIPE_SZ detection
450163e configure: don't check for arpa/nameser_compat.h twice
c1d2a99 libcephfs: fix documentation for ceph_readlink
dbaf71a mailmap: Moritz Möller is with Bigpoint.com
4cf2c72 Server changes to deploy in a production env 1. Added the wsgi entry point app.wsgi 2. Updated client code to mandate the update-metadata to have url to publish and unpublish 3. Updated the README to describe a bit about the server operations as well.
575566b (origin/wip-7329) ceph_test_rados_api_tier: try harder to trigger the flush vs try-flush race
a8e6c9f crush: add chooseleaf_vary_r tunable
f17caba (origin/wip-7370) crush: allow crush rules to set (re)tries counts to 0
795704f crush: fix off-by-one errors in total_tries refactor
ed32c40 crushtool: add cli test for off-by-one tries vs retries bug
75c5525 qa/workunits/rest: use larger max_file_size
a2dae0d mailmap: Somnath Roy is with SanDisk
17c8a23 mailmap: Yan, Zheng name normalization
5d20c8d mailmap: Ray Lv is with Yahoo!
1a588f1 Rename test/filestore to test/objectstore
3d65660 script to test rgw multi part uploads using s3 interface
5d59dd9 script to test rgw multi part uploads using s3 interface
0bac064 added script to test rgw user quota
8cb3dad doc: Added Python doc.
22afd6c doc: Added inline literal tag.
aaa2799 doc: Adds Python to index and sets maxdepth to 2.
0f2386a script to test rgw user quota functionality
16ae4f8 fuse: fix for missing ll_ref on create
c1b0714 client: For rebase need to fix ll_readlink() call in Synthetic client
349b816 client, libcephfs: make readlink sane
afcc7eb mds: include requested caps (namely, xattrs) on getattr reply
77047ee libcephfs: add an xattr ll test
55a20c0 libcephfs: add ceph_ll_listxattr
acf2e49 libcephfs: add ceph_ll_lookup_root()
e2dc1b6 libcephfs: expose new client ll_ interface
935f8b3 client/fuse_ll: adapt to new ll_ interface
9ad8f57 client/SyntheticClient: adapt to new ll_* interface
dad91b5 client: direct read/write methods that bypass cache, cap checks
b700768 client: expose layout information
e08210d client: switch ll_* methods to Inode* arguments
3752660 client/Client: make open fhp argument optional
23577c8 client/Client: return 1 from readdir cb on full
ff04629 client: add barrier and types
7f6d755 client: whitespace
7f9fdc3 osdc/Objecter: whitespace
548ccd9 mds/Server: whitespace
3a5fa87 (origin/wip-osdmap-primary) osd/OSDMap: populate *primary when pool dne
5b7e2b2 rgw: initialize variable before call
45d31f0 osdmaptool: tests for --test-map-pgs
b98eaa5 osdmaptool: test --import/export-crush
7c31036 osdmaptool: s/simple.t/missing-argument.t/
362825c osdmaptool: fix cli tests
9caaef7 osdmaptool: allow a completely random placement
7f1b12f osdmaptool: add --test-map-pgs mode
bb6d3f8 rest/test.py: use larger max_file_size for mds set test
f584de5 With functionality test cases. Test it using 'python setup.py test'
302fc92 mon: s/ENOSYS/ENOTSUP/
e1e6c45 Completed model and controller code 1. GET, PUT and DELETE request are added 2. Removed public folder as it will never be used
42a64e1 Revert test case of "mon: OSDMonitor: do not allow changing an erasure-coded pool's size"
0aa25b1 Some suggested changes, both errors and rewordings
30fd0c5 Intial version of the server code. 1. Database modelling is done 2. PUT request is completed
fc963ac (origin/wip-erasure-code-directory) erasure-code: move test files to a dedicated directory
7baa62f erasure-code: move source files to a dedicated directory
9ecf3467 (origin/wip-rgw-vg) rgw: initialize variable before call
ce0e3bd qa/workunits/snaps: New allow_new_snaps syntax
22b0057 mon: test osd pool create pg_pool_t::stripe_width behavior
dfc90cf mon: osd pool create sets pg_pool_t::stripe_width
33b8ad8 common: add osd_pool_erasure_code_stripe_width
798b56a unittests: update osdmaptools with stripe_width
11c11ba mon: add erasure-code pg_pool_t::stripe_width
922e5cf (origin/port/fixes) osd: fix type mismatch warning
6fda45b os/kvstore: remove used var
994bdea os/kvstore: trivial portability fixes
377a845 common: simpler erasure code technique
04b1ae4 (origin/wip-7336) rgw: fix rgw_read_user_buckets() use of max param
fdeb18e (origin/wip-7109) mon: MDSMonitor: Forbid removal of first data pool
c7d265a mon: OSDMonitor: Refuse to delete CephFS pools
e80b084 (origin/wip-erasure-code-command) erasure-code: add ceph_erasure_code debug command
68e6dad (origin/wip-mds-cluster) mds: avoid sending duplicated discovers during recovery
bec1209 erasure-code: benchmark moves to a dedicated directory
ad8c666 mon: check cluster features before rule create-erasure
c8c4cc6 (origin/wip-7146) mon: OSDMonitor: do not allow changing an erasure-coded pool's size
7b15cb1 mon: osd-pool-create test no longer use hardcoded ruleset
428c75e mon: osd-pool-create test EAGAIN when pending
59ba03b mon: test erasure code pool creation
d40841c mon: osd-pool-create test enforce -e
d8d747d mon: osd-pool-create test must kill -9
0ca7ed8 mon: osd-pool-create test initialization
9cb2215 mon: osd-pool-create shows logs on error
5bb4ca4 vstart: load erasure code plugins from sources
5f9f300 unittests: reduce paxos propose interval to increase speed
3370973 pybind: osd crush rule create-erasure tests
fdc967d pybind: cosmetic changes to tests
ad09023 pybind: fix tests that do not fail as expected
cb39b13 mon: osd crush rule create-erasure
1acc73b mon: compute the ruleset of erasure-coded pools
8259e51 mon: compute the size of erasure-coded pools
caefb8a mon: erasure code plugin loader helper
61c45fe mon: pool create helper for crush ruleset
6caac92 mon: pool creation helper for size
9d766ca mon: no default ruleset except for replicated pools
0cac202 mon: helper for pool properties parsing
cc66c6a erasure-code: test ErasureCodeJerasure::create_ruleset
02869f8 erasure-code: implement ErasureCodeJerasure::create_ruleset
f019c90 erasure-code: implement example create_ruleset
6ca9b24 erasure-code: add crush ruleset creation API
2dca737 erasure-code: the plugin is in a convenience library
e47e49d doc/release-notes: v0.77 draft notes
2c504ea doc/release-notes: v0.76
60ca6f6 client: fix warnings
1829d2c librados: add timeout to wait_for_osdmap()
0dcceff conf: add options for librados timeouts
a23a2c8 os/KeyValueStore: fix warning
8e30db8 rest: add a few rest api tests
eb9ffd5 mon: use 'mds set inline_data ...' for enable/disable of inline data
408b0c8 mon: fix 'mds set allow_new_snaps'
e5ed1b2 mon: do not force proposal when no osds
3b99013 (tag: v0.76) v0.76
7ff2b54 client: use 64-bit value in sync read eof logic
2f85b8c doc: Incorporated feedback.
684e5c4 (origin/wip-performance-configs) Pipe, cephx: Message signing under config option
5fde828 cmp.h: boost tuple comparison is replaced by regular comparison
8e19488 TrackedOp: optionally disable the actual tracking operations
98ae059 Throttle: Turn off throttle based on max bytes
03f7f77 Throttler: optionally disable use of perfcounters
ee48c87 common/shared_cache.hpp: compact to a single lookup where possible
27b5f2b common/shared_cache.hpp: avoid list::size()
ee4cfda doc: rgw: el6 documentation fixes
48fbcce (origin/wip-5997) osd: Change some be_compare_scrub_objects() args to const
ce1ea61 osd: Change be_scan_list() arg to const
e1bfed5 common: buffer::ptr::cmp() is a const function
34eb549 osd: Move the rest of scrubbing routines to the backend
f9128e8 osd: Move PG::_scan_list() to backend as ReplicatedBackend::be_scan_list()
37447e7 osd: Add scrub_supported() backend interface
560f5f1 OSDMap: fix deepish_copy_from
d508079 OSDMonitor: use deepish_copy_from for remove_down_pg_temp
61914d8 OSDMap: deepish_copy_from()
802692e os/KeyValueStore: fix warning
0389f1d (origin/wip-osdmap-features) mon/OSDMonitor: encode full OSDMap with same feature bits as the Incremental
b9208b4 OSDMap: note encoding features in Incremental encoding
e4dd1be (origin/wip-pybind-enverr) pybind: improve EnvironmentError output
754ddb1 rgw: fix build on centos
1628423 mailmap: Rutger ter Borg affiliation
3a1a8c3 mailmap: Laurent Barbe affiliation
5b5bc0b mailmap: anonymous contributions are unaffiliated
b0fe2a9 mailmap: Andras Elso affiliation
93a62d7 mailmap: Ma Jianpeng affiliation
74d5bf5 mailmap: Simon Leinen is with SWITCH
f9132e0 mailmap: John Spray is with Inktank
49842db mailmap: Alan Somers affiliation
79563e1 mailmap: Jonathan Dieter affiliation
a28f1fa mailmap: Christian Marie affiliation
aa7fc3b mailmap: Dan Chai is unaffiliated
cb9792e mailmap: Kai Zhang affiliation
30f4969 mailmap: Ron Allred name normalization
b5d22eb mailmap: Thomas Bechtold affiliation
c8c103b mailmap: Xihui He affiliation
f7b000e mailmap: Adam Twardowski affiliation
47a5122 mailmap: Huang Jun is unaffiliated
0dbf44f mailmap: Kun Huang affiliation
ad515bf ceph-disk: support and test the absence of PATH
3f5e4f5 ceph-disk: larger timeout in the test script
d70efe9 FileStore: avoid leveldb check for xattr when possible
6d1daea unittest_striper: fix warning
f9071a7 doc: cls moved to subdirectory
e78f756 (origin/wip-rbd-rm-watchers) run-rbd-tests: run remove_with_watcher test
4ebc32f rbd: don't forget to call close_image() if remove_child() fails
0a553cf rbd: check for watchers before trimming an image on 'rbd rm'
dcbe872 pybind: work around find_library() not searching LD_LIBRARY_PATH
47dcddc Corrected the sample output in README.md
9006777 1. Updated README.md with sample output 2. Remove 'osd_hosts' entry from json and added that information as part of sys_info 3. In the 'num_components' entry, 'bytes' entry is replaced to contain an object with 'count' and 'scale' members
70c7c9e pybind/rados.py: improve error output
456c727 doc: Removed extraneous character from path.
f32bfa5 ceph_test_object_map: fix build
5476b4b keyvaluestore: name to keyvaluetore-dev for now
cfdfb98 Make ObjectStore unit tests shared with KeyValueStore
972d4b2 Add KeyValueStore implementation
03da035 docs: Typo in CloudStack user creation
f0f4b8d docs: Improve CloudStack documentation.
8fb366f Add a new KV wrapper GenericObjectMap
b31c0f0 civetweb: fix warning
1e85bc9 cls_user: init cls_user_list_buckets_op fields
fd260c9 cls_user: init cls_user_stats fields in ctor
d0f13f5 OSDMap: fix deepish_copy_from
d7b0c7f ceph-disk: run the right executables from udev
318e208 (origin/wip-7190) OSD: don't assume we have the pool in handle_pg_create
2a737d8 leveldb: add leveldb_* options
11cf9bb (origin/wip-7169-2) rgw: fix multipart min part size
12ba8a3 Add a virtual interface init, open, create_and_open to KeyValueDB
2e7bd83 rgw: fix multipart upload listing
f1b5309 osd: OSDMonitor: ignore pgtemps from removed pool
ff5abfb buffer: make 0-length splice() a no-op
86c3c5a test/Makefile.am: update test_cls_rgw* rules
26ace1e test_rgw_admin_opstate: get it compiled
28c7388 osdc/Striper: test zero-length add_partial_result
f513f66 (origin/wip-7116-joao) osd: OSDMonitor: ignore pgtemps from removed pool
3c77c4c (origin/wip-7060) OSDMap: use deepish_copy_from in remove_redundant_temporaries
368852f OSDMap: fix damaging input osdmap from remove_down_temps
bd54b98 OSDMap: deepish_copy_from()
9e52398 packaging: apply udev hack rule to RHEL
64a0b4f packaging: apply udev hack rule to RHEL
9265d76 client: Avoid uninline empty inline data
b99e9d3 mds: Handle client compatibility
ddbaa5c mds: Shutdown old mds when inline enable
e3c4c4c mds: Add inline switch
81c4f54 client: Make inline size tunable
40a6939 client: Fallocate inline data path
47e6a78 client: Write inline data path
a0cb524 client: Read inline data path
4a5c099 client: Add inline data migration helper
165ddb9 client: Push inline data to mds by send cap
3c05e80 client: Receive inline data pushed from mds
be3db0b client: Add inline fields to Inode
45c2ab4 mds: Receive updated inline data from client
1280d99 mds: Push inline data to client in inodestat
7af7a5e ceph: Add inline fields to InodeStat
cf63f7e mds: Push inline data to client in cap message
3aa7f0b mds: Add inline fields to Capability
0f00f07 osdc: Add write method with truncate parameters
ac5c9dd ceph: Add inline fields to MClientCaps
eff9f02 If 'ceph osd metadata' isn't working, inform the user about it via stderr
fffbfc9 mon: test for MForward messages
d9a689d mon: shell test helpers to run MONs from sources
c06eca2 unittests: fail early when low on disk
9413a51 (origin/wip-user-quota-2) rgw: simplify a code path
1b0567b radosgw-admin: add usage for user stats [--sync-stats]
97edd2f doc: Switched logging to true. Now required for sync agent.
9a55fa1 cls_user: add generate_test_instances() implementation
e5dc8d6 rgw, cls_user: handle error cases related to response decoding
8a69ac8 rgw: implement restful set user quota request
92cabd4 rgw: new restful api for retrieving user quota info
0f7b3c7 rgw: quota thread for full user stats sync
51ffede (origin/wip-7215-quorum-features) mon: do not use CEPH_FEATURES_ALL for things that touch the disk
3d4a673 Elector: send an OP_NAK MMonElection to old peers who support it
687b570 Elector: ignore messages from mons without required feature capabilities
41796c0 Monitor: add a function to get the required quorum features from the local compatset
f8e4af2 OSDMonitor: do not allow creation of EC pools if the quorum can't handle it
e79e1d2 Monitor: introduce a function that translates quorum features into disk features
2f9a93d rgw: round bytes to the next 4k for quota use
6f34df4 rgw: sync bucket stats thread
7545177 rgw, cls_user: fix bucket creation
d992043 radosgw-admin: dump header when requested for user stats
5976bfc radosgw-admin: update stats sync completion
ba39512 cls_user: op to keep track of sync completion time
a68b52a cls_user: keep time info about stats update
0b7968c cls_user: header cleanup
45b2229 rgw: user quota should rely on cached info
c59a98e rgw: more quota fixes
12f5801 rgw: configure user quota also through region map
a6fae68 rgw: more rgw_quota fixes
04b5a71 rgw: some quota fixes
cfb9553 rgw: enable user quota
15c0189 radosgw-admin: user quota interface
a854d89 rgw: some fixes
c1c40df rgw: implement quota handlers for user stats
c13634e rgw: extend infrastructure to handle user stats read
364f7c5 rgw: move some code around, no actual changes
92a87b3 rgw: refactor quota cache
4aee3fa rgw: rename RGWBucketStats to RGWStorageStats
5612ded rgw: pass bucket owner all around
cbe1da8 radosgw-admin: bucket stats --sync-stats [--bucket=...]
c8793fb cls/user: some fixes + handle old buckets case
eef7ba4 rgw, radosgw-admin, cls/user: retrieve user stats
edcf9fe cls/user: a new op to retrieve user header
438aea7 cls/user: accounting functionality
c7b4d00 rgw: move bucket add / remove to new user objclass
23aa65f rgw: replace user bucket listing with objclass call
248c4ae rgw: new user objclass
b90570f Fix 404 broken links to logging and debug configuration
4553e6a Fix trailing space
7bed2d6 called sysinfo.append(meta) in get_sysinfo within the while loop
ef3fe7b Updated README with How-to-use instructions
faae5b9 (origin/use-ceph-sharedptr) libc++: convert tr1 uses
ea026c6 doc: Added domain pool, and changed zone configs to use domain tool so they don't clash.
0303f0f doc: Change zone domain to include "domain" so it is clear.
95e63ac doc: Added space between {Query_String} and [E=HTTP ... to solve for 500 error.
6f6b1ee ReplicatedBackend: fix uninitialized use warning/bug
df4df46 Monitor: use a single static accessor for getting CompatSet features off disk
6915053 doc: Adding more information on style and usage for documenting Ceph.
2216afd doc: Fixed omission of a comma in zone configuration.
55ab35b (origin/wip-7207) FileStore: perform LFNIndex lookup without holding fdcache lock
1560cc0 (origin/wip-rgw-civetweb-2) mongoose: git rm src/mongoose
bd089b1 civetweb: md5.inl -> md5.h
1a2bed1 civetweb: add include to makefile
287ea5c rgw: modify the civetweb rule
d26e766 civetweb: fix module uri
3f20a41 civetweb: update submodule
f2f7475 rgw: switch mongoose to civetweb
08fa34d (origin/wip-erasure-rule) osd/OSDMap: do not create erasure rule by default
6f8541c (origin/use-unordered-map) osd: use ceph:: scoped hash_map
289a400 Corrected ownership info which was presented as string, added stub code for unpublish
ecbdeb1 PGBackend: clarify rollback_stash name and method comments
4fc4573 PG: drop messages from down peers
e73a9f7 ReplicatedPG: make STARTSYNC a noop
96d4a0c PG::calc_acting: consider newest_update_osd when choosing backfill peers
7e3ccfe ReplicatedPG: take ReplicatedPGRef in BlessedContext
167f852 RadosModel: RollBack dirties the object
6e74123 RadosModel: undirty with update_object_undirty
ca37d08 ReplicatedPG::trim_object: remove unused int r; declaration
d0eda79 common/hobject: print shard as unsigned, not as char
9273177 ReplicatedPG::_process_copy_chunk: use append
183f41c ReplicatedPG: fill in mod_desc for hitset repops
9fd7a80 ReplicatedPG: use append for write and writefull
7c9425c ReplicatedPG: fill in mod_desc in finish_copyfrom
e8a08ff ReplicatedPG::finish_copyfrom: check new_obs.exists, not obs.exists
eb8f66d ReplicatedPG: handle removing the old object in finish_copy_op
f238441 ReplicatedPG: EOPNOTSUPP on ec_pool if there are omaps in the COPY_GET
b3c2ef2 ReplicatedPG: make COPY_GET async read friendly
a382ab8 ReplicatedPG: requeue in_progress_async_reads on_change
0bba79b ReplicatedPG: support async reads on ec pools
647e75a src/: add CEPH_OSD_OP_READ_SYNC
3ef6282 ReplicatedPG: use pgbackend->objects_read_sync() as appropriate
2fe5e1f osd/: add sync/async read methods to PGBackend
66bc91c ObjectStore: _collection_move_rename needs to increment ops
a3e4a84 PGLog,PG: reset can_rollback_to when we get a log entry without a transaction
347d968 PGLog: we cannot rollback past a recovered object entry
25eced5 PGLog: create interface allowing interface user to cleanup/rollback
c98cb1c ReplicatedPG: Fill in rollback info for log events
ecae37c osd/: introduce xattr caching for ec pools
155b4b0 PGBackend,ReplicatedBackend: add support for rolling back log entries
0528974 osd_types: add a can_rollback_to line to pg_log_t
63f64de osd_types: add ObjectModDesc into pg_log_entry_t
a7a6a2f osd_types: ObjectModDesc
53c26bc osd/: move client op handling into ReplicatedBackend
c58c899 PGBackend: allow queue_transaction to specify an op
1a4694f ReplicatedPG: factor out should_send_op
26b804f ReplicatedPG: split out op_applied_replica
09717e6 PG/ReplicatedPG: move snap map management into append_log
5732f0c ReplicatedBackend: implement RPGTransaction
bf9390f hobject_t/ReplicatedPG: tempness is now an hobject thing
c60185c PGBackend: add PGTransaction
d3c8e85 ReplicatedBackend: update the collection_list mechanisms to skip stashed objects
4d56e3c test/osd/: verify length of buffer returned in read
0885880 test/osd/TestRados.cc: skip 0 weight ops
d0933ee test/osd: add append support to WriteOp
ca91fb4 test/osd: adapt RadosModel to not do omap ops on ec_pools
7fe22da test/osd: restructure Object/RadosModel in prep for append
69ad880 test/osd/Object: create encoders for ContDesc
8494aa8 src/test/osd: remove tmap test
03c5344 PGLog: allow for empty pg log in update_range if log_tail == eversion_t()
1b0335e common: add option to disable filestore sharded object check
1b5992b FileStore::lfn_link: handle link within a collection
6d05fa2 PG: prefer older last_update for ec_pool
393a035 OSDMonitor: add debug_fake_ec_pool
a1ee1ee PGLog::rewind_divergent_log: we can rewind to tail, fix assert
a200650 PGLog: don't move up log.tail
1f9457c ReplicatedBackend: remove pushing entry for each object as it completes
b7d100b FileStore::_collection_move_rename: remove source before closing guard
06f7a98 ReplicatedBackend.h: don't need to be active for pushes
518774d ObjectStore: improve name of the queue_transaction which cleans up the transaction
c03d027 hobject: admit that gen_t is actually version_t
8060afd (origin/wip-osdmapenc-fix) MOSDMap: reencode maps if target doesn't have OSDMAP_ENC
9792500 doc: add-or-rm-mons.rst: better explanation on number of monitors
9eac5e3 Added update_metadata, clear_metadata, and usage description code
dcca413 added perl script for rgw bucket quota tests
28c75f8 removing rgw_tests.sh
54caa01 removing rgw_tests.sh
8b8ede7 modified the port to 7280 in the script instead of the default 80
850b4f4 script for rgw bucket quota testing
339bed1 (origin/wip-cache-mode-fix) mon/MonCommands: 'invalidate+forward' -> 'forward'
b88c8ea doc: Added Documenting Ceph (draft) document.
90aea59 doc: Added documenting Ceph to the toc tree.
ed2decb doc: Fixed end string from '' to `` to stop warnings. Enforced 80 char line.
584c2dd (origin/wip-stray-mdsmaps) mon/MDSMonitor: do not generate mdsmaps from already-laggy mds
4c96853 packaging: ship libdir/ceph
6bee188 Docs: Add backfill_toofull to list of PG states
199e614 Initial version of the source code. Statistics extraction is done
78150bd osd: Add op_process_latency in perf counter
67d8b72 common: fix bufferlist::append(istream) test
fdf3b55 Fix #7187: Include all summary items in JSON health output
c78c300 Remove some almost-duplicate COMMAND definitions
20cf41d Missing a key for perm 'w' in permmap (src/pybin/ceph_rest_api.py:277) It leads to a 500 error when getting mds help info via rest api. Changed "w" to "rw" in MonCommands.h
586ad1f rgw: Use correct secret key for POST authn
52a9154 rgw: Fix signature variable naming/failure print
6dcf462 rgw: Document fields for access/secret key
7314cde (origin/wip-7184) osd: ignore num_objects_dirty for old pools
1b308b6 (origin/port/libc++) libc++: fix null pointer comparison
1fcbddc libc++: avoid hash re-definitions
aae4700 libc++: use ceph::shared_ptr in installed header
4c4e1d0 libc++: use ceph:: namespaced data types
8e86720 libc++: create portable smart ptr / hash_map/set
7e7eda4 (origin/wip-osdmap-7177) OSDMap: Populate primary_temp values a little more carefully
47bc71a fixed the syntax for test maxmds=2
a13ebd3 fix for the test maxmds=2
ad203d5 doc: Fixed ruleset typo.
6b7f27c (origin/wip-rgw-contention) librados: use rwlock for lookup pool, cache results
4b31456 rgw: add .h file to Makefile rule
d1de32c doc: Added default-placement to list of placement targets. Added SSL commentary.
80212ea doc: Added additional comment about port number.
0215342 (origin/wip-rgw-loadgen) rgw: loadgen, configurable num of objs, buckets
7c86764 rgw: loadgen shutdown, error out on failures
85267cf rgw: sign loadgen requests
e8a4b30 rgw: loadgen frontend read uid, init access key
57137cb rgw: add a load generation frontend
f01202d Fixes: #7172
b1a853e (origin/wip-rbd-mount_timeout) rbd: expose mount_timeout map option
8ec7fa8 PendingReleaseNotes: note ceph -s fix
6e93132 doc: Removed Calxeda example.
dd4a9e1 doc: Removed saucy salamander reference.
e7d28a7 doc: Added host resolution commentary.
22e9a75 doc: Added comments from #6682.
6e37b7a doc: Added modification to quick start.
742d425 doc: Changed file name.
f7f9bed doc: Added source file for graphic.
26aa602 doc: Added source file for graphic.
c30b138 doc: Added third monitor icon.
add59b8 doc: Added additional monitor icon.
4b03326 doc: Removed old file. Changed file name.
86c1548 (origin/wip-7168) rgw: handle racing object puts when object doesn't exist
5c24a7e rgw: don't return -ENOENT in put_obj_meta()
a84cf15 rgw: use rwlock for cache
790dda9 osd: OSDMap: fix output from ceph status --format=json for num_in_osds num_up_osds returns as an int value, while num_in_osds returns as a string. Since only an int can be returned from get_num_in_osds(), num_in_osds should should also be an int to remain consistant with num_up_osds.
3194d66 doc: Fixed keyring command and updated for current conventions.
ec5f7a5 client: ceph-fuse use fuse_session_loop_mt to allow multithreaded operation if "fuse multithreaded = 1". Signed-off-by: Moritz Moeller mm@mxs.de
e1fd0e8 first commit
ac5a9fe mon: larger timeout for mon mkfs.sh test
50808af ceph-disk: larger timeout in the test script
1aa2601 (origin/wip-7166) osd: OSDMap: build reverse name->pool map upon decoding
f97264d (origin/wip-rgw-expose-bucket) 6748: rgw: Optionally return the bucket name in a response header.
2d0d48b (origin/wip-7117-redhat) packaging: ship libdir/ceph
8b09a43 doc/release-notes: v0.76 draft notes
2b36761 mon: favor 'mds set max_mds' over 'mds set_max_mds'
e60dcfa packaging: add missing test files
5ed7865 (origin/wip-7073) rgw: use configurable prime number for gc hash
e7b3236 (origin/wip-temp-primary) OSDMonitor: make sure we don't send out maps with a primary_temp mapping
28e0b76 test: add an OSDMap unittest
b183115 OSDMap: move temp manipulation functions out of OSDMonitor
fafc8e9 OSDMap: pay attention to the temp_primary in _get_temp_osds
12122b1 OSDMap: add primary out params to _pg_to_osds and _raw_to_up_osds
0c30509 OSDMap: add primary out params to internal _pg_to_up_acting_osds function
1c750c6 OSDMonitor: implement remove_down_primary_temp()
412afea OSDMonitor: make remove_redundant_pg_temp clear primary, too
e2db4ae OSDMonitor: remove primary_temp entries when you remove their pool
a246039 OSDMap: expose the primary_temp in print()
1f81fda OSDMap: dedup the primary_temp
e9e615c OSDMap: add primary_temp to apply_incremental()
74bdcb6 OSDMap: add [new_]primary_temp to the map and Incremental
b55c45e OSDMap: update Incremental encode/decode to match the full map's
3d7c69f OSDMap: add a CEPH_FEATURE_OSDMAP_ENC feature, and use new encoding
2646d5e OSDMap: add primary out param to pg_to_raw_up, and use pointers instead of refs
045e1d7 OSDMap: add primary-specifying pg_to_acting_osds
93d481a mon, osdmaptool: switch to primary-specifying pg_to_up_acting_osds
9749f30 OSDMap: implement pg_to_up_acting_osds with primary interface
5b69978 OSDMap: switch pg_to_osds to have an explicit primary param
5367d92 OSDMap: rename _raw_to_temp_osds() -> _get_temp_osds()
69a2ec2 OSDMap: unify the pg_to_acting_osds and pg_to_up_acting_osds implementations
c1a95f8 OSDMap: remove get_pg_primary() function
7a9c171 OSDMap: doc the different pg->OSD mapping functions
268ae82 osd: do not misuse calc_pg_role
a09d4f1 PG: do not use role == 0 as a determinant of primacy
644afd6 (origin/wip-3454) radosgw-admin: add temp url params to usage
fdf1a41 (origin/fix-configure-rerunning) autogen: re-run aclocal after libtoolize
970f938 doc: Updated paths for OSDs using the OS disk.
4425f9e librados: Add C API coverage for atomic write operations
1ffe422 mailmap: add athanatos <sam.just@inktank.com>
4b5f257 common: fix bufferlist::append(istream) test
e55a089 doc/release-notes: v0.75
08c17b7 qa: cleanup cephtool/test.sh tmp files
5cf6908 mds: Add inline encode/decode to inode_t
caf7971 mds: Add inline fields to inode_t
b67e9ef ceph: Add inline state definition
978ec18 ceph: Add inline data feature
e268e95 updated "sample.ceph.conf":
91b8c78 (origin/wip-tier-bits) mon/OSDMonitor: simplify and make 'osd pool set ...' output consistent
413fc23 osd/ReplicatedPG: no HitSet on non-primary
be8db8c (origin/wip-cache-snap) osd/ReplicatedPG: use get_object_context in trim_object
b5ae76e ceph_test_rados: do not delete in-use snaps
8b39719 osd/OSDMonitor: fix 'osd tier add ...' pool mangling
d41a1d3 osd/ReplicatedPG: update ObjectContext's object_info_t for new hit_set objects
10547e6 osd/ReplicatedPG: always return ENOENT on deleted snap
8cab9e7 ceph_test_rados_api_tier: partial test for promote vs snap trim race
8221a2a osd/ReplicatedPG: cleanly abort flush if the object no longer exists
f3ce254 osd/Replicated: mark obc !exists on snap trim
48306e4 mon: debug propagate_snaps_to_tiers
6719d30 osd: fix propagation of removed snaps to other tiers
7e80fa0 osd/ReplicatedPG: handle promote that races with snap deletion
cd42368 osd/ReplicatedPG: simplify copy-from temp object handling
1a7335d ceph_test_rados_misc: test bad version for copy-from
7daab5a osd/ReplicatedPG: adjust flow in process_copy_chunk
0b816c3 osd/ReplicatedPG: make CopyResults inline in CopyOp
d00116c ceph_test_rados: flush can also fail due to snap trimming
7eede85 osd/ReplicatedPG: handle promotion of rollback, src_oids, etc.
ac446b5 osd/ReplicatedPG: preserve clean/dirty state on clone
27eb4c5 ceph_test_rados: improve read debug output
627bdea osd/ReplicatedPG: infer snaps from head when promoting oldest clean clone
21f3dcb osd: include snap_seq in copy-get results
c6b73eb osd/ReplicatedPG: always set obc->ssc SnapSetContext for clones
934de77 osd/ReplicatedPG: do not promote nonexistent clones
55b83f1 ceph_test_rados: is_dirty on non-flushing objects only
af5a407 ceph_test_rados: assert on read error
b70c476 ceph_test_rados: make flush clean correct snap in model
ac63551 ceph_test_rados: IsDirty on random snaps
6f4f651 ceph_test_rados: test flush/evict on snaps
9688642 ceph_test_rados: don't update any state on successful cache-evict
fc9f8ad ceph_test_rados_api_tier: test flush on snaps/clones
b2f752a osd/ReplicatedPG: construct appropriate snapc for flush/writeback
5b8d957 osd: add pg_log_entry_t event type CLEAN
c91166e osd/ReplicatedPG: refuse to flush when older dirty clones are present
6bff648 vstart.sh: allow MDS=0
de8e8b5 osd/ReplicatedPG: make cache-[try-]flush CACHE instead of WR ops
4e8259d osd/ReplicatedPG: allow cache-evict on snaps
90e352c osd: add rados CACHE mode (different from RD and WR)
1f4350e ceph_test_rados_api_tier: test promotion of clones
c05765e osd/ReplicatedPG: update snap_mapper for promoted clones
5c94d53 osd/ReplicatedPG: only encode SnapSet on head objects in finish_ctx
38fe575 osd/ReplicatedPG: always encode snaps in finish_ctx
bfd4530 osd/ReplicatedPG: mirror SnapSet info when promoting head
0554735 osd/osd_types: SnapSet::from_snap_set
c70edf3 osd/ReplicatedPG: add PROMOTE log entry type
b840aae osd/ReplicatedPG: adjust clone stats when promoting clones
6dd0a1f osd/ReplicatedPG: include snaps in copy-get results
d22ecf3 osd/ReplicatedPG: using missing_oid to decide which object to promote
c3c1541 osd/ReplicatedPG: make find_object_context() pass missing_oid
33b5ef4 (origin/wip-mon-pgmap) mon/PGMap: make decode version match encode version
a5aaab3 ceph-dencoder: include offset in 'stray data' error message
1308225 buffer: do not append trailing newline when appending empty istream
946d603 (tag: v0.75) v0.75
9034370 doc: Added comment and example for SSL enablement in rgw.conf
9615645 doc: Added python example of handle, and closing session examples.
c0d92b6 (origin/wip-5858-rebase) osd: Implement multiple backfill target handling
a657fad osd: Interim backfill changes
54e588c doc: Modified doc examples to use rados_create2.
4c92dc6 (origin/wip-7141) DBObjectMap::clear_keys_header: use generate_new_header, not _generate_new_header
93a9b68 (origin/wip-vector-op) erasure-code: use uintptr_t instead of long long
0082d88 doc: format man pages with s/2013/2014/
b4054fc doc: copyright s/2013/2014/
efbdd16 doc: update the crushtool manual page
283793a doc: crushtool man page nroff format
d3393e9 crush: tests for crushtool --build
26f7fa9 crush: crushtool copyright notice update
b705e52 crush: crushtool emacs compile helper
d3d75a2 crush: crushtool --build informative messages
5b28405 crush: crushtool --build uses OSDMap helpers for rulesets
1368229 crush: print --build debug information when verbose 2
5b95d18 crush: display args on crushtool failure
2765f81 crush: parse CEPH_ARGS in crushtool
cf9a764 osd: factorize build_simple_crush_map* rulesets creation
7676550 osd: ostream is enough for build_simple*
cec8d85 (origin/wip-omapdirfrag2) mds: require CEPH_FEATURE_OSD_TMAP2OMAP
1d8429d osd/OSDMap: get_up_osd_features()
b8dfcc1 mds: use OMAP to store dirfrags
0f0dd74 osd: introduce TMAP->OMAP conversion operation
90d6cec (origin/wip-7135) src/test/ObjectMap: test clear_keys_header() call
617a50c src/test/librados/misc.cc: verify that omap_clear doesn't blast xattr
0c81849 os/DBObjectMap, FileStore: omap_clear should not remove xattrs
6225f2c mailmap: fix typo in Alexandre Maragone
d429ab5 (origin/wip-tier-snap) osd/OSDMonitor: fix 'osd tier add ...' pool mangling
f49d9cd osd: fix propagation of removed snaps to other tiers
3b3511c mon: debug propagate_snaps_to_tiers
631d0c7 erasure-code: erasure code decode interface helper
d2b2f5d erasure-code: jerasure implementation of chunk size helpers
eb2374e erasure-code: refactor the example to use chunk size helpers
1f3c1bd erasure-code: add chunk size calculation helpers
fa43d9c organizationmap: joe.buck@inktank.com is Inktank
8604e76 organizationmap: match authors with organizations
ce95cef mongoose: fix warning
af0269d mailmap: make roald@roaldvanloon.nl primary
f18b310 mailmap: remove company name from Pascal de Bruijn name
39db90f mailmap: add Andrew Leung, Carlos Maltzahn and Esteban Molina-Estolano
176cec8 mailmap: add David Moreau Simard alias
29da2ec FileStore: detect XFS properly
8c5c55c mon: set next commit in mon command replies
9395e0d rgw: fix temp url restful apis and support multiple keys
7ccb513 rgw: support multiple temp url keys
56e4015 rgw: handle temp url key authorization
0e43ac9 rgw: add optional tenant name for swift urls
2626101 rgw: can set temp url key on user
efb4cf6 doc: Removed extraneous comment from snapshot text.
5070597 (origin/install-erasure-headers) osd: add missing header to install list
a5f8cc7 (origin/wip-7110) rgw: convert bucket info if needed
029b9ef remove spurious executable permissions on files
995a3cc (origin/wip-max-file-size) mds/MDSMap: include max_file_size in plaintext print output
2de2148 mailmap: add Yan Zheng fixes for Reviewed-by:
62fbcac mailmap: add Loic Dachary fixes for Reviewed-by:
3fe5f11 mailmap: add Gary Lowell fixes for Reviewed-by:
17e0a5e mailmap: add Noah Watkins fixes for Reviewed-by:
43fa055 mailmap: add João Eduardo Luís fixes for Reviewed-by:
96d9b99 mailmap: add Dan Mick fixes for Reviewed-by:
7aac350 mailmap: add Samuel Just fixes for Reviewed-by:
6d0ba4d mailmap: add Greg Farnum fixes for Reviewed-by:
a3eb935 mailmap: add Yehuda Sadeh fixes for Reviewed-by:
f6b52fd mailmap: add Sage Weil fixes for Reviewed-by:
ca9acb9 mon: implement 'mds set max_mds|max_file_size'
0940d8f osd: Change waiting_on_backfill to a set<int>
695255e osd: Interim working version with backfill reserve state changes
a07d682 osd: Recovery reservations need to include backfill peers
25a798e messages, os, osd: Clean-up g/hobject_t MAX handling
f89d410 osd: Return false for func that returns bool
7837490 osd: Fix problems in ReplicatedPG::do_op() logic
f9a11ef osd: Determine if compatibility is required due to back level OSDs
ba19006 osd: Config OSD when CEPH_FEATURE_OSD_ERASURE_CODES feature first seen
09d021b doc: Updated for hostname -s and resolving to non-loopback IP address.
ed605f0 doc: Fixed hyperlink.
b780f4b osd: Remove redundant incompat feature
294cdfb erasure-code: relax zero copy requirements in tests
656de1b erasure-code: ensure that coding chunks are page aligned
9ba6599 EC-JERASURE: rewrite region-xor function using vector operations to get ~ x1.5 speedups for erasure code and guarantee proper 64-bit/128-bit buffer alignment
31f3745 mailmap: Adds Christophe Courtaut
7d5674c doc: Added librados introduction doc. Still wip.
33e78a4 doc: Updated terminology. Added librados intro to index.
7acb0a1 (origin/port/onexit) on_exit: remove side effects from asserts
e3d0b0a common: fix large output in unittest_daemon_config
822ad58 configure: support Automake 1.12
b1976dd (origin/wip-7083) radosgw-admin: fix object policy read op
3f34dc7 common: unit tests for config::expand_meta
9485409 common: recursive implementation of config::expand_meta
87db534 common: cosmetic inversion of tests arguments
5bb1545 common: multiple variable occurence expansion test
98ed9ac (origin/wip-7093) mon: only send messages to current OSDs
f68de9f osd: ignore OSDMap messages while we are initializing
35da8f9 osd: do not send peering messages during init
7aa9805 log: use on exit manager to flush logs on exit
2181d25 onexit: add an on exit callback utility
3d19f7c (origin/port/misc) test: disable cross process sem tests on non-Linux
6342d05 pipe: handle missing MSG_MORE and MSG_NOSIGNAL
26c07d9 ipaddr: use IN6_ARE_ADDR_EQUAL for comparison
ef6a56a keyutils: handle non-linux platform
ab2b2bb doc: Fixed typo.
bb8b750 add autotools-generated files to .gitignore
f2e33e8 mon: get rid of --keyring /dev/null hack
d110c91 doc: Removed dash from --dmcrypt option.
c772b6d ceph-disk: fix false positive for gitbuilder
e2ee528 (origin/wip-objectcacher-backoff) osdc/ObjectCacher: back off less during flush
daefe81 Be more explicit how to discover available API calls
de8522f ceph-disk: tests for the --data-dir code path
a71025d ceph-disk: implement --sysconfdir as /etc/ceph
ca713f4 ceph-disk: implement --statedir as /var/lib/ceph
51ee3c0 ceph-disk: add copyright notice
306b099 ceph-disk: create the data directory if it does not exist
0fcc081 ceph-disk: run ceph-osd when --mark-init=none
e773b68 ceph-disk: implement --mark-init=none
b65eb37 ceph-disk: fsid is a known configuration option
97f516a ceph-disk: use CalledProcessError.returncode
d09af0f ceph-disk: display the command output on OSD creation failure
2b935bb ceph-disk: which() uses PATH first
ad6b4b4 ceph-disk: add --prepend-to-path to control execution
908348b ceph-disk: make exception handling terse in main_activate_journal
55ca7bb ceph-disk: do not hide main_activate() exceptions
324804a ceph-disk: fix activate() indent
de00505 ceph-disk: remove noop try:
b82ccfb ceph-disk: fix Error() messages formatting
830583f osd: Correction to #6690 change
6b8d418 init-ceph: pass config file path when adjust crush position
2ba6930 ceph-disk: cannot run unit tests
24417f9 test/cli-integration/rbd: silence stderr
8220549 (origin/port/bitsandints) inttypes: detect and define missing integer types
8f91cac endian: check byte order on OSX
46a5674 doc/release-notes: fix bobtail version
f6bbcf4 mon: tests for ceph-mon --mkfs
41987db doc/release-notes: v0.74
229740f ceph-conf: display arguments when an option cannot be parsed
07f5399 common: CEPH_ARGS should trim whitespaces
2b848a9 osdc: = is not a delimiter in --crush-location
7dfe550 ceph-disk: prepare --data-dir must not override files
4c8a313 mon: implement --key for --mkfs
ab6203f mon: fix indentation
e946df1 mon: do not use the keyring if auth = none
f12abbf (origin/wip-6914) mds: don't allow changing layout for non-regular file
f292992 mds: always store backtrace xattr in the default pool
cae663a osd/ReplicatedPG: improve debug output from check_local
ac547a5 (origin/wip-empty-rbd-ls) rbd: return 0 and an empty list when pool is entirely empty
e91fb91 librbd: better error when unprotect fails on unprotected snap
42e98ac Be more explicit how to discover available API calls
eeba294 mon: remove fixture directory between runs
1eafe8d mon: make ceph-mon --mkfs idempotent
f0ae4ab mon: create mon-data directory on --mkfs
d443841 mon: add flags argument to common_init_finish
403f777 mon: fix indentation
a194513 mon: do not daemonize if CINIT_FLAG_NO_DAEMON_ACTIONS
10aa220 mon: set CINIT_FLAG_NO_DAEMON_ACTIONS when appropriate
e0bae95 Fix typos in erasure code documents
2b0a435 osd_types: add missing osd op flags
f8e413f msgr: fix rebind() race stop the accepter and mark all pipes down before rebind to avoid race
8fcfc91 (origin/wip-listomapvals) qa: test rados listomapvals with >512 keys
be5afa2 rados: allow listomapvals to list all k/v pairs
c165483 (tag: v0.74) v0.74
b4fc16c make: conditionally build filestore backends
9d41fd2 test_cls_rbd: avoid warning -Wno-unnamed-template-args
fdd8562 test_cls_rbd: avoid shift overflow
ce8b26e erasure: add dummy symbol to avoid warnings
5b77533 make: avoid symbol exporting for C++ libs on non-Linux
8c8be16 json_spirit: don't build json_spirit_value.cpp
da5a082 make: add top-level libcommon dependency
f7a66d6 make: restrict use of --as-needed to Linux
87db89e librados: read into user's bufferlist for aio_read
0b40bbd common: evaluate --show-config* after CEPH_ARGS
b5c17f6 vstart: set fsid in [global]
d7d7ca8 Fix qa/workunits/rados/test_cache_pool.sh typos
cc67b7b Fix test/filestore/store_test.cc error
e8e174e (origin/port/public-hdrs) rados: include struct timeval definition
356d71a inttypes: use portable types in public headers
76ad85d test: include headers for struct statfs
93c125c test: remove platform specific header
a625b28 test: print warning about missing fs features
9a7a33e test: only build some tests on linux
a48d038 test: fix VLA of non-POD type
424d7c7 gtest: disable tr1/tuple
0c09abd make: use c++ flags for building librados
891801e warning: fix typo and -Wmismatched-tags
c7e1c4b c++11: fix std::lock naming conflicts
bbcb022 kvstore: only build on linux
1fec818 (origin/port/spinlock) spinlock: add generic spinlock implementation
12f4631 qa/workunits/rest/test.py: rbd pool ruleset is now 0
b286e4f ceph_test_rados_api_tier: retry EBUSY race checks
b88af07 libcephfs: get osd location on -1 should return EINVAL
250ecf6 qa/workunits/mon/crush_ops.sh: fix in-use rule rm test
d4f07cd crush: fix get_full_location_ordered
fd57d99 Fix rbd bench-write improper behavior
30078e6 autoconf: trim duplicated headers
f9f5c37 (origin/wip-rgw-leak) rgw: fix leak of RGWProcess
96fe80d (origin/wip-snaps) osd: preserve user_version in snaps/clones
80b5487 ceph_test_rados: test read from snapshots
2f8b602 osd/OSDMap: observe 'osd crush chooseleaf type' option for initial rules
9b7364d rbd: expose options available to rbd map
b3bda08 Lack of "start" member function declare in WBThrottle.h
4a9c770 messages: add tid to string form of MForward
67f99f3 packaging: make check needs argparse and uuidgen
4cea789 (origin/wip-rbd-tinc-5426) librbd: call user completion after incrementing perfcounters
f8a4001 osd: create default ruleset for erasure pools
8b2b5a3 mon: implement --osd-pool-default-crush-erasure-ruleset
dd81858 mon: implement --osd-pool-default-crush-replicated-ruleset
2a7fcc3 osd: use CrushWrapper::add_simple_ruleset
a10fc02 osd: build_simple creates a single rule
15b6959 crush: set min_rep and max_rep depending on mode
da67f7c crush: add rule_type argument to  add_simple_ruleset
2ae9c1c partially rename rule to ruleset
8b0b32b doc: Add OpenStack Havana documentation
6e92ed1 osd: factorize build_simple and build_simple_from_conf
5cf2cdc qa: remove osd pool create erasure tests
c6d876a mon: osd-pool-create must not loop forever on kill
272eed3 client: SyntheticClient uses the first available pool
20b3da0 mon: MDS data and metadata pool numbers are hardcoded
bf24317 Fix WBThrottle thread disappear problem
87b8e54 (origin/wip-argparse-fix) ceph_argparse: kill _daemon versions of argparse calls
ea4724d rados: deprecated attribute has no argument
e7bf5b2 (origin/wip-librados-lock) librados: lockless get_instance_id()
771da13 objecter, librados: create Objecter::Op in two phases
5ff30d6 crush/CrushWrapper: note about get_immediate_parent()
0cdbc97 librados: mark old get_version() as deprecated
006449d librados: deprecate aio_operate() read variant that takes snapid
909f8a4 librbd: localize or distribute parent (snap) reads
22df773 osdc/Objecter: use crush location and distance for LOCALIZE_READS
ac14d4f osdc/Objecter: maintain crush_location multimap
746069e crush/CrushWrapper: simplify get_full_location_ordered()
dcc5e35 crush/CrushWrapper: add get_common_ancestor_distance()
0903f3f mon/OSDMonitor: use generic CrushWrapper::parse_loc_map helper
8f48906 crush/CrushWrapper: add parse_loc_[multi]map helpers
8fc66a4 (origin/wip-7056) osd/ReplicatedPG: fix copy-get iteration of omap keys
0c9acf1 ceph_test_rados: s/tmap/omap/
3b0d9b2 vstart/stop: do not loop forever on kill
4ce6400 config: add 'crush location' option
19213e6 doc: Fix caps documentation for Admin API
ac10aa5 (origin/wip-fix-mon-fwd) mon: fix forwarded request features when requests are resent
2e4c61b osd/ReplicatedPG: include omap header in copy-get
537a7c3 (origin/wip-crush-shrink-diff) crush: misc formatting and whitespace fixes
fa6a99a crush: use kernel-doc consistently
6e36794 crush/mapper: unsigned -> unsigned int
d8512f1 mon: use kill instead of pkill in osd-pool-create
c030569 (origin/wip-7051) osd: OSDMap: dump osd_xinfo_t::features as an int
b4fbe4f mon: Monitor: Forward connection features
93c44cb mon: unit test for osd pool create
59941b1 mon: erasure code pool properties defaults
29d1fcd mon: add error message argument to prepare_new_pool
2d01da6 mon: do not include = in pool properties values
a44a57a common: implement get_str_map to parse key/values
df1704e osd: pool properties are not an array
df0d038 mon: osd create pool must fail on incompatible type
af22b0a packaging: erasure-code plugins go in /usr/lib/ceph
203c5d6 mon: s/rep/replicated/ in pool create prototype
d192062 ceph_test_rados: update in-memory user_version on RemoveAttrsOp
750da11 osd/ReplicatedPG: clear whiteout on successful copy-from
37eac2b ceph_test_rados: check existence on is_dirty completion
173b060 mon/OSDMonitor: propagate snap updates to tier pools on update
baa74d5 osd/OSDMap: implement propapage_snaps_to_tiers()
cf34af8 rgw: add -ldl for mongoose
9b182c7 ceph_test_rados_api_tier: more grace for HitSetTrim
2bb90b3 ceph_test_rados: update in-memory user_version on RemoveAttrsOp
a0d1521 replace pool type REP with REPLICATED
45449b8 doc/release-notes: missed a name
b0e42d8 doc/release-notes: v0.72.2
c10ba91 pipe: add compat for TEMP_FAILURE_RETRY symbol
f13709d linux_version: build on all platforms
79c5a2e make: add libcommon for missing symbols
ab19c5f buffer: remove darwin portability cruft
cf9569f statfs: include headers for statfs structs
3510400 compat: enable lseek64 alias
9d72c4f libcephfs: ignore missing offset64 definition
d9a1ff3 rgw: add some debug output
cf53d8a rgw: abstract RGWProcess
cdc178f Revert "Enable libs3 support for debian packages"
1e238e6 mon: pool create will not fail if the type differs
5f1957d doc/release-notes: v0.67.5
98a1525 unittests: fail if one test fail
9ab947c (origin/port/buffer) buffer: use int64_t instead of loff_t
03693ac osd: git ignore erasure code benchmark binary
42b4fe1 osd: erasure code benchmark is installed is part of ceph-test
81dee1b osd: erasure code benchmark workunit
a619fe9 osd: erasure code benchmark tool
a36bc5f osd: set erasure code packet size default to 2048
c7d8ba7 osd: better performances for the erasure code example
ff9455b osd: conditionally disable dlclose of erasure code plugins
8879e43 osd: Fix assert which doesn't apply when compat_mode on
0bd5cb6 Add backward comptible acting set until all OSDs updated
8d31f71b osd/ReplicatedPG: fix promote cancellation
923bff1 osd/ReplicatedPG: drop RepGather::ondone callback
2a9c6fc vstart.sh: go faster
bc893f5 osd/ReplicatedPG: fix undirty on clean object
c561d5e osd/ReplicatedPG: track dirty, whiteout stat counts
028bb0d osd/osd_types: include num_objects_dirty, num_whiteouts in object_stat_sum_t
1403798 osd/ReplicatedPG: EBUSY on cache-evict when watchers are present
9ed6679 ceph_test_rados: test cache_flush, cache_try_flush, cache_evict
1dcbb66 ceph_test_rados_api_tier: fix HitSet* test names
99cee55 osd/osd_types: debug: include size in object_info_t operator<<
1af6723 osd/ReplicatedPG: debug: clean up oi printout
0d2d6a5 osd/ReplicatedPG: debug: add an assert for copy-get
2fda4c0 osd/ReplicatedPG: fix locking for promote
927b0e6 osd/ReplicatedPG: fix user_version preservation for copy_from
bc05104 osd/ReplicatedPG: handle ECANCELED in C_CopyFrom, C_Flush
2d5a7e2 osd/ReplicatedPG: uninline CopyFromCallback, PromoteCallback
54f0c60 osd/osd_types: make object_info_t::dump() dump user_version
ba2f9e2 osd/osd_types: include user_version in operator<< object_info_t
ffdaa5f vstart.sh: --cache <pool> to set up pool cache(s) on startup
57e9145 qa/workunits/rados/test_cache_pool.sh: fixes
1bde88f qa/workunits/rados: rename cache pool tests
ea519b4 qa/workunits/rados: test cache-{flush,evict,flush-evict-all}
71cd4a2 rados: add cache-flush, cache-evict, cache-flush-evict-all commands
ad3b466 osd/ReplicatedPG: implement cache-flush, cache-try-flush
edaec9a osd: Fix assert which doesn't apply when compat_mode on
ac16a9d (origin/wip-kill-raid4) osd: remove remaining instances of raid4 pool types (never implemented)
40a48de mds: fix Resetter locking
087fe57 packaging: revert adding argparse and uuidgen
8272538 packaging: make check needs argparse and uuidgen
f193925 autogen: test compare strings with != not -ne
98af37d Fix segmentation fault when handler is NULL pointer
44aacae (origin/wip-mds-coverity2) mds: fixes for coverity scan
8b38f10 crush/mapper: fix crush_choose_firstn comment
ea3a0bb crush/mapper: attempts -> tries
0497db4 crush/mapper: finish adding choose_local_[fallback_]tries
99f41de (origin/sage-valgrind) vstart.sh: NOTE, not WARNING, to make gitbuilder happy
b3ee598 (origin/wip-6028) qa: workunit: cephtool: test osd pool create with erasure type
250b446 pybind: test_ceph_argparse: test 'ceph osd pool create' with pool type
c996f66 mon: OSDMonitor: add optional 'pool type' arg to 'osd pool create'
bdeaa84 osd: OSDMap: add 'get_up_osds()' function
5756c05 ceph_osd: add EC to OSD's supported features used by the messenger
59ad6da osd: OSD: reflect OSDMap EC flag being set by setting on-disk feature
8ac84db mon: OSDMonitor: handle osd features on boot
31743d5 osd: OSDMap: add 'features' bit mask field to osd_xinfo_t
73992d2 osd: OSDMap: check for erasure pools when getting features
178f684 osd: OSD: add binary compat feature for Erasure Codes
bfc86a8 include/ceph_features: add CEPH_FEATURES_OSD_ERASURE_CODES
fe13684 added execute permission to the script
d9e33ea rgw workunit to test bucket quota
c8890ab rgw: fix use-after-free when releasing completion handle
d6a4f6a rgw: don't return data within the librados cb
e6ad4d4 osd: make obc copyfrom blocking generic
8dec2b2 librados, osd: add flags to COPY_FROM
e624e16 crush: silence error messages in unit tests
9414970 ARCH: adding SSE2 flag to arch-test
7e0c84b (origin/wip-crush-2) mon/OSDMonitor: 'osd crush show-tunables'
88365c2 crush: expand info about tunables that we dump
d0f14df mon: warn if crush has non-optimal tunables
d129e09 crush: add set_choose_local_[fallback_]tries steps
30f8aa1 vstart: Update apache conf to run against apache 2.4
b86d450 upstart: add rbdmap script
e4537d3 ARCH: add variable for sse2 register
0d217cf qa/workunits/cephtool/test.sh: clean up our client.xx.keyring
7e4a800 (origin/wip-7026) osd/ReplicatedPG: fix hit_set_setup() on_activate()
19cff89 (origin/wip-6990) Add backward comptible acting set until all OSDs updated
b153067 erasure-code: tests must use aligned buffers
f5d32a3 mds: drop unused find_ino_dir
c60a364 Fix typo in #undef in ceph-dencoder
9e45655 qa: add ../qa/workunits/cephtool/test.sh to unittests
c1eb55c qa: vstart wrapper helper for unittests
0edbda2 (origin/wip-rbd-coverity) rbd: make coverity happy
d93881f vstart/stop: use pkill instead of killall
ae56cef qa: recursively remove .gcno and .gcda
b082c09 crushtool: reorg test-map-* cli tests
41d5186 crush/CrushWrapper: minor cleanup on tunables helpers
685c695 crush/mapper: generalize descend_once
6f43120 ceph_test_rados_api_tier: fix HitSetTrim vs split, too
c5bccfe ceph_test_rados_api_tier: fix HitSetRead test race with split
7e618c9 (origin/wip-7009) mon: move supported_commands fields, methods into Monitor, and fix leak
deded44 (origin/wip-rgw-standalone-2) mongoose: update submodule
ef10a5c rgw: fix memory leak
824b3d8 (origin/wip-linux-version) FileJournal: use pclose() to close a popen() stream
6696ab6 FileJournal: switch to get_linux_version()
fcf6e98 common: introduce get_linux_version()
a2babe2 configure: break up AC_CHECK_HEADERS into one header-file per line
fae569d Rename filestore_perf_t to objectstore_perf_t
015e981 Move PerfCounter from ObjectStore.h to FileStore.h
4526d13 (origin/wip-mds-cluster2) mds: fix stale session handling for multiple mds
43f7268 mds: properly set dirty flag when journalling import
802df76 mds: properly update mdsdir's authority during recovery
b6d1d8f mds: finish opening sessions even if import aborted
80005f1 mds: fix discover path race
a680ea7 osd/ReplicatedPG: update pg stat fields when they are queried
ebb3ad9 osd/PG: move some pg stat update into a helper
05274f3 osd: include peer_info in pg query
5fdcc56 mds: fix bug in MDCache::open_ino_finish
71d1eb3 mds: add CEPH_FEATURE_EXPORT_PEER and bump the protocal version
d0b744a1 client: handle session flush message
05b192f mds: simplify how to export non-auth caps
9dc52ff mds: send cap import messages to clients after importing subtree succeeds
6a56588 mds: re-send cap exports in resolve message.
4fdeb00 mds: include counterpart's information in cap import/export messages
ef902ee mds: send info of imported caps back to the exporter (rename)
85171fd mds: send info of imported caps back to the exporter (cache rejoin)
ff8b9ac mds: send info of imported caps back to the exporter (export dir)
d00ec79 mds: flush session messages before exporting caps
77515b7 mds: increase cap sequence when sharing max size
6525979 mds: include inode version in auth mds' lock messages
f134c77 mds: avoid allocating MDRequest::More when cleanup request
e6c4d32 mds: waiting for slave reuqest to finish
1536e81 mds: check lock state before eval_gather
e181869 mds: don't request CEPH_CAP_PIN from auth mds
87ca260 mds: fix sending resolve message
b7d7891 mds: keep dentry lock in sync state
d8440c4 mds: avoid leaving bare-bone dirfrags in the cache
b2a1370 mds: re-issue caps after importing inode
3ac0886 mds: avoid issuing caps when inode is frozen
31f5b02 mds: fix rename notify
bd56177 mds: re-send discover if want_xlocked becomes true
913f7fd mds: fix empty directory check
2fea08b mds: merge delayed cache expire
498d5c4 mds: process delayed expire if exporting dir cancelled in warnning state
0aed0d4 mds: handle cache rejoin corner case
5a902a0 mds: unify nonce type
0344d9a mds: rework stale import/export message detection
9471fdc mds: put import/export related states together
ab93aa5 mds: freeze tree deadlock detection.
f192a60 Revert "common/Formatter: add newline to flushed output if m_pretty"
c7b44d6 Revert "common: fix perf_counters unittests for trailing newline in m_pretty"
31507c9 qa: test for error when ceph osd rm is EBUSY
31b60bf rgw: Fix CORS allow-headers validation
4b9a41a qa: make cephtool test imune to pool size
f9cfa24 qa: add function name and line number to cephtool output
cb35248 qa: silence cephtool tests cleanup
15b8616 mon: set ceph osd (down|out|in|rm) error code on failure
6a7edab rgw: Clarify naming of case-change functions
2abacd9 rgw: Look at correct header about headers for CORS
e37467b Add -n option to mount.ceph.  Required by autofs when /etc/mtab is a link to /proc/mounts (e.g. Debian Wheezy), otherwise automounting a ceph file system fails.  Also useful when /etc is read-only.  feature 7006
aa365e4 mon: typo s/degrated/degraded/
5741bfe osd: format test_osd_types.cc to 80 columns
07888ef ceph-disk: zap needs at least one device
e57239e common: fix rare race condition in Throttle unit tests
938f22c common: format Throttle test to 80 columns
ba55723 common: fix perf_counters unittests for trailing newline in m_pretty
0dc59af osd/ReplicatedPG: fix promote: set oi.size
697151e osd/osd_types: fix operator<< on copy-get operation
f50389d ceph_test_rados_api_tier: test undirty on non-existent object
f86d6e7 osd/ReplicatedPG: debug: improve maybe_handle_cache() handling
81279e3 osd/ReplicatedPG: rename invalidate_forward
87547bd ceph_test_rados: debug: include exists|dne in update_object_version
d1e63b3 ceph_test_rados: test is_dirty, undirty
14f76cc ceph_test_rados: fix CopyFromOp locking
41be4fe librados: seek during object iteration
330a130 osdc/Objecter: remove honor_cache_redirects global flag
42d6af1 osd/ReplicatedPG: use IGNORE_OVERLAY flag for copy-from
067536c osdc/Objecter: add CEPH_OSD_FLAG_IGNORE_OVERLAY flag
3d9c499 osd: rename IGNORE_OVERLAY -> IGNORE_CACHE
ea088fa osd/osd_types: operator<< for ObjectContext::RWState
c0e4ed3 osd/ReplicatedPG: more verbose heading for process_copy_chunk
90eb1ec osd/ReplicatedPG: set ctx->obc in simple_repop_create
ca86656 osd/ReplicatedPG: use finish_ctx for finish_promote
66263bb osd/ReplicatedPG: use get_next_version() in finish_promote
56ad14e osd/ReplicatedPG: split off finish_ctx from execute_ctx
3ef7310 osd/ReplicatedPG: add SKIPRWLOCKS flag
5e547f8 osd/ReplicatedPG: be consistent about ctx->obs vs ctx->obc->obs
36bbcf8 osd/ReplicatedPG: drop unnecessary temp vars in execute_ctx()
10c9be3 osd/ReplicatedPG: allow osds to issue writes to osds
20d149e osd/ReplcatedPG: maybe_handle_cache style
0b81ff6 osd/ReplicatedPG: skip promote for DELETE
4c014ed osd/ReplicatedPG: implement cache_evict
8b9b713 librados: add an aio_operate that takes a write and flags
8528231 osd/osd_types: introduce helper for osd op flags -> string conversion
181cb8e librados, osd: add IGNORE_OVERLAY flag
387e224 librados: add cache_flush(), cache_try_flus(), cache_evict() methods
78df1c3 osd/ReplicatedPG: set object_info and snapset xattrs on promote
dd079e2 osd/ReplicatedPG: handle is_whiteout in do_osd_ops()
fd8f7d2 osd/ReplicatedPG: clear whiteout when writing into cache tier
fabc6ba osd/ReplicatedPG: set whiteout in cache pool on delete
2aea631 ceph_test_rados_api_tier: verify delete creates whiteouts
e0a4969 osd/ReplicatedPG: ENOENT when deleting a whiteout
0b085b1 osd/ReplicatedPG: create whiteout on promote ENOENT
0b7b16d ceph_test_rados_api_tier: add simple promote-on-read test
be29f47 ceph_test_rados_api_tier: rename tests
66f2e74 osd/ReplicatedPG: use simple_repop_{create,submit} for finish_promote
654d8c3 osd/ReplicatedPG: UNDIRTY is not a user_modify
4a29b22 osd/ReplicatedPG: move r<0 handling into finish_promote()
920c0bf workunits: break down cache pool tests to be more precise; expand some
0caa02c5 workunits: check errors propagate on cache pools in caching_redirects.sh
5fa08fb ReplicatedPG: promote: handle failed promotes
d15aedb ReplicatedPG: promote: add the OpRequest to the Callback
b371dd8 ReplicatedPG: promote: first draft pass at doing object promotion
0699fc5 ReplicatedPG: copy: don't return from finish_copyfrom
325aae3 ReplicatedPG: copy: switch out the CopyCallback interface
a3e50b0 rgw: rework framework configuration
b7946ff doc: Added additional comments on placement targets and default placement.
902f19c doc: Updates to federated config.
29cc722 (origin/wip-hitset) test_ipaddr: add another unit test
026b724 osd/ReplicatedPG: drop unused hit_set_start_stats
3d768d2 osd/ReplicatedPG: maintain stats for the hit_set_* objects
9814b93 osd/ReplicatedPG: set object_info_t, SnapSet on hit_set objects
dabd5d6 vstart.sh: --hitset <pool> <type>
5bb0476 test/libcephfs: release resources before umount
897dfc1 (origin/wip-6979) use the new get_command helper in check_call
eae8531 (origin/wip-rbd-single-major) rbd: modprobe with single_major=Y on newer kernels
8a473bc rbd: add support for single-major device number allocation scheme
784cc89 rbd: match against both major and minor on unmap on newer kernels
462b389 rbd: match against whole disks on unmap
a421305 rbd: switch to strict_strtol for major parsing
24a048b Document librados's rados_write's behaviour in reguards to return value.
a865fec osd/ReplicatedPG: debug: improve hit_set func banners
b6871cf osd/ReplicatedPG: do not update current_last_update on activate
bcde200 (origin/wip-vstart-memstore) vstart.sh: add --memstore option
a9334a1 use the absolute path for executables if found
43561f7 remove trailing semicolon
a33c95f radosgw: increase nofiles ulimit on sysvinit machines
71cefc2 doc/release-notes: sort
ee3173d doc/release-notes: fix indentation; sigh
3abc189 doc/release-notes: v0.73
03429d1 PendingReleaseNotes: note CRUSH and hashpspool default changes
bb50276 Revert "Partial revert "mon: osd pool set syntax relaxed, modify unit tests""
0cd36e0 mon/OSDMonitor: take 'osd pool set ...' value as a string again
e19e380 replace sgdisk subprocess calls with a helper
4b6d721 (origin/wip-hashpspool) osd: enable HASHPSPOOL by default
fb47d54 (origin/wip-mon-api) mon: if we're the leader, don't validate command matching
2bfd34a mon: by default, warn if some members of the quorum are "classic"
e620057 add apt-get install pkg-config for ubuntu server
b8884e0 MemStore: update for the new ObjectStore interface
8ac1da8 crush: remove crushtool test leftover
ec609ca Elector: use monitor's encoded command sets instead of our own
e223e53 Monitor: encode and expose mon command sets
420a2f1 man: update man/ from doc/man/8
8d60cd1 man: Ceph is also an object store
faaf546 os/MemStore: do on_apply_sync callback synchronously
d8ad51e (tag: v0.73) v0.73
990b2b5 ceph_test_rados_api_tier: make HitSetWrite handle pg splits
a6f4d71 Elector: keep a list of classic mons instead of each mon's commands
a888a57 crush: implement --show-bad-mappings for indep
20263dd crush: add unitest for crushtool --show-bad-mappings
fbc4f99 crush: remove scary message string
472f495 crush: document the --test mode of operations
ea86444 Monitor: Elector: share the classic command set if we have a classic mon
f1ccdb41 Elector: share local command set when deferring
ba673be Monitor: import MonCommands.h from original Dumpling and expose it
3cb58f7 Monitor: validate incoming commands against the leader's set too
cb51b1e Monitor: disseminate leader's command set instead of our own
d33df28 Elector: transmit local api on election win, accept leader's on loss
8025fb3 messages: make room for passing supported monitor commands in MMonElection
f932903 Monitor: pull command mapping out of _allowed_command()
b8bdbd9 doc: update erasure code development doc
41152a6 crush: --show-utilization* implies --show-statistics
dcb0a4f Monitor: add a separate leader_supported_commands
4cd5c3b Monitor: expose local monitor commands to other compilation units
dca5383 MonCommand: add operator== and operator!=
ac69a01 MonCommand: support encode/decode
3dcbf46 encoding: fix [encode|decode]_array_nohead
7482d62 crush: add CrushTester accessors
c928f07 crush: output --show-bad-mappings on err
5e0722f crush: fix map->choose_tries boundary test
ef4061f librbd: remove unused private variable
ad3825c TrackedOp: remove unused private variable
3b39a8a librbd: rename howmany to avoid conflict
539fe26 (origin/port/fdatasync) wbthrottle: use feature check for fdatasync
663da61 rados_sync: fix mismatched tag warning
60a2509 rados_sync: remove unused private variable
43c1676 mon: check for sys/vfs.h existence
c99cf26 make: increase maximum template recursion depth
e2be099 (origin/port/compat) compat: define replacement TEMP_FAILURE_RETRY
3b3cbf5 (origin/wip-fix-tunables) crush/CrushCompiler: make current set of tunables 'safe'
8535ced crushtool: remove scary tunables messages
4eb8891 crush/CrushCompiler: start with legacy tunables when compiling
e8fdef2 crush: add indep data set to cli tests
564de6e (origin/wip-fix-3x) osdmaptool: fix cli tests for 3x
6704be6 osd: default to 3x replication
8d0180b (origin/wip-objecter-full-2) objecter: don't take extra throttle budget for resent ops
38647f7 Revert "osd: default to 3x replication"
cbeb1f4 crush: detach_bucket must test item >= 0 not > 0
2cd73f9 crush: remove obsolete comments from link_bucket
e00324b crush: remove redundant code from move_bucket
8ef80a4 crush: unittest CrushWrapper::move_bucket
a6d66f9 common/bloom_filter: fix copy ctor
638b274 ceph_test_rados_api_tier: add HitSetRead
01cbbfa ceph_test_rados_api_tier: HitSetRead -> HitSetWrite
456daf2 ceph_test_rados_api_tier: add HitSet trim test
3ea9230 osd/HitSet: fix sealed initialization in Params ctor
f0cfd22 ceph_test_rados_api_tier: make HitSetRead test less noisy
bf96a7e osd/HitSet: fix copy ctor
01f3ff7 osd/HitSet: fix dump() of fpp
c941e82 test/encoding/check-generated: test copy ctor, operator=
1c107d3 ceph-dencoder: add 'copy' command to test operator=
c0eb95b mds/Capability: no copying
1d0af14 test: add a HitSet unit test
c365cca osd/HitSet: track BloomHitSet::Params fpp in micros, not as a double
146e6aa osd/ReplicatedPG: archive hit_set if it is old and not full
737533f osd: prevent zero BloomHitSet fpp
a72094d osd/HitSet: take Params as const ref to avoid confusion about ownership
68c44cb mon/OSDMonitor: non-zero default bloom fpp
41e0f97 osd/HitSet: make pg_pool_t and Params operator<< less parenthetical
5da1285 osd/ReplicatedPG: apply log to new HitSet to capture writes after peering
fa76d5e ReplicatedPG: do not seal() HitSets until we're done with them
3c2d2d7 pg_hit_set_info_t: remove unused size, target_size members
1e94e27 ceph_test_rados: hit hit_set_{list,get} rados operations
4a743fb osd/ReplicatedPG: trim old hit_set objects on persist
916313c osd/ReplicatedPG: put hit_set objects in a configurable namespace
a0cfbfd librados: create new ceph_test_rados_api_tier target
0c43b77 librados, osd: list and get HitSets via librados
904859e osd/ReplicatedPG: use vectorized osd_op outdata for pg ops
a97129f osd/ReplicatedPG: add basic HitSet tracking
b92f431 mon/OSDMonitor: set hit_set fields
db3fd11 osd: add hit_set_* parameters to pg_pool_t
e8ef724 osd/osd_types: include pg_hit_set_history_t in pg_info_t
a430525 osd/osd_types: add pg_hit_set_{info,history}_t
b5ea470 common/bloom_filter: fix operator=
c01b183 osd_types: add generic HitSet type with bloom and explicit implementations
0b9874c osd/ReplicatedPG: factor out simple_repop_{create,submit} helpers
9776e97 osd/PG: factor out get_next_version()
0b0d1e8 librados: add wait_for_latest_osdmap()
8285906 librados: expose methods for calculating object hash position
4b5ab3f osdc/Objecter: expose methods for getting object hash position and pg
92879f7 osd: capture hashing of objects to hash positions/pgs in pg_pool_t
76e0b88 osd/OSDMap: use new object_locator_t::hash to place object in a pg
d692da3 osd/osd_types: add explicit hash to object_locator_t
0d4ea9f encoding: allow users to specify a different compatv after encoding
d2963c0 librados: add mon_command to C++ API
468fffa librados: document aio_flush()
bc7ace2 librados: constify inbl command args
a29d4fc osdc/Objecter: constify inbl command args
fb49065 mon/MonClient: constify inbl command args
ef0f255 osdc/Objecter: reimplement list_objects
d2e6cc6 librados: add get_pg_hash_position to determine pg while listing objects
eff932c osdc/Objecter: stick bl inside ListContext
8e5803a osdc/Objecter: factor pg_read out of list_objects code
dd8c939 osdc/Objecter: separate explicit pg target from current target
9381b69 osdc/Objecter: drop redundant condition
bffcca6 osd/osd_types: make pref optional in pg_t constructor
3caf3ef rbd: check write return code during bench-write
e32874f objecter: resend all writes after osdmap loses the full flag
4111729 osd: drop writes when full instead of returning an error
384f01d crush/mapper: dump indep partial progression for debugging
e632a79 PendingReleaseNotes: note change of CRUSH indep mode in release notes
c853019 crush: add feature CRUSH_V2 for new indep mode and SET_*_TRIES rule steps
caa0e22 crush: CHOOSE_LEAF -> CHOOSELEAF throughout
431a13e osd/OSDMap: fix feature calculation for CACHEPOOL
03911b0 crush/CrushCompiler: [de]compile set_choose[leaf]_tries rule step
09ce7a2 crush/CrushWrapper: set chooseleaf_tries to 5 for 'simple' indep rules
d1b9746 crush/mapper: add SET_CHOOSE_TRIES rule step
64aeded crush/mapper: apply chooseleaf_tries to firstn mode too
cb88763 crush/mapper: fix up the indep tests
4e26cc0 crush: unittest CrushWrapper::get_immediate_parent
09938e6 crush: unittest CrushWrapper::update_item
16ac590 crush: unittest s/std::string/string/
b819018 crush: unittest use const instead of define
dc09521 crush: unittest CrushWrapper::check_item_loc
000c59a crush: unittest remove useless c->create()
7a9a088 (origin/wip-6940) rgw: fix reading bucket policy in RGWBucket::get_policy()
cb26fbd (origin/wip-3x) osd: default to 3x replication
aedbc99 crush: check for invalid names in loc[]
fe03ad2 osd: queue pg deletion after on_removal txn
aa63d67 os/MemStore: implement reference 'memstore' backend
47ee797 (origin/wip-mon-mds-trim) mon: ceph-kvstore-tool: get size of value for prefix/key
c98c104 tools: ceph-kvstore-tool: output value contents to file on 'get'
00048fe mon: Have 'ceph report' print last committed versions
cc64382 mon: MDSMonitor: let PaxosService decide on whether to propose
5823146 os/ObjectStore: make getattrs() pure virtual
11e26ee s/true/1 and s/false/0
cf09941 mon: MDSMonitor: implement 'get_trim_to()' to let the mon trim mdsmaps
3e845b5 mon: MDSMonitor: print map on encode_pending() iff debug mon = 30+
62fb475 mon: MDSMonitor: consider 'debug level' parameter on 'print_map()'
032a00b mon: MDSMonitor: remove reference to no-longer-used encode_trim()
ccc6014 crush: CrushWrapper unit tests
b9bff8e crush: remove redundant test in insert_item
8af7596 crush: insert_item returns on error if bucket name is invalid
3b8371a os/ObjectStore: prevent copying
a70200e os/ObjectStore: pass cct to ctor
35011e0 Call --mbrtogpt on journal run of sgdisk should the drive require a GPT table.
cae1083 ObjBencher: add rand_read_bench functions to support rand test in rados-bench
e829859 doc/rados/operations/crush: fix more
7709a10 doc/rados/operations/crush: fix rst
68fdcfa (origin/wip-6922) FileSTore: do not time out threads while they're waiting for op throttle
7ff7cf2 (origin/wip-doc-build-cluster) doc: Partially incorporated comments form Loic Dachary and Aaron Ten Clay.
5e34beb init, upstart: prevent daemons being started by both
c43c893 crush/mapper: new SET_CHOOSE_LEAF_TRIES command
2731d30 crush/mapper: pass parent r value for indep call
1b567ee crush/mapper: clarify numrep vs endpos
d51a219 osd/osd_types: pg_pool_t: fix /// -> ///< comments
1413837 mon, crush: add mode to "osd crush rule create-simple ..."
6dc68f4 osd/OSDMap: do not shift result when removing nonexistent osds
9085286 osd, crush: add 'erasure' pool/pg type
9435099 crush/mapper: strip firstn conditionals out of crush_choose, rename
0b9bb54 crush: add a few unit tests for INDEP mode
4551fee crush/mapper: add note about r in recursive choose
7967ae0 crush/CrushWrapper: add dump_tree()
86e9780 crush: use breadth-first search for indep mode
b1d4dd4 crush: return CRUSH_ITEM_UNDEF for failed placements with indep
1cfe140 crush: eliminate CRUSH_MAX_SET result size limitation
858a21b (origin/wip-filestore-remount) common/WorkQueue: allow start() after stop()
36505e8 os/FileStore: allow mount after umount
cd6be29 common/Finisher: allow finisher to be restarted
941875d doc: Partially incorporated comments from Aaron Ten Clay.
d8ccd73 OSDMonitor: use a different approach to prevent extreme multipliers on PG splits
dc06e23 test/mon/workloadgen: added check of return value for statfs()
0fd3cbf rgw/rgw_op: added check of return value for rgw_unlink_bucket()
9c8df34 os/WBThrottle: added check of return value for posix_fadvise()
de09778 test/filestore: add check of return values in StoreTest::SetUp
2884c81 test/filestore/workloadgen: added check of return value for mkdir
602d5d5 osd: include CPU info
f502530 pybind: syntax check osd metadata
6570197 ceph-disk: blacklist /dev/fd0
bcb6bfd test/ceph_decoder: add return value check for read_file()
20507b5 (origin/wip-crush-tunables) crush/CrushWrapper: default to the "new" bobtail-era tunables
07978bb crush/CrushWrapper: explicitly set tunables on create, decode
3f1352f doc/rados/operations/crush-map: describe crush locations, hook
396ee0d add script/run-coverity
01ab8e6 OSDMap: use unsigned instead of int for OSD counts
a5eda4f doc: Updated scrub defaults and added note about deep scrubbing.
f11b380 osd: read into correct variable for magic string
f57dad6 OSDMonitor: prevent extreme multipliers on PG splits
26c00c5 OSDMonitor: return EEXIST if users try to do a PG merge
4fdc5d9 workunits: use integers instead of true/false for hashpspool command
c77ce90 doc: Fixed hyperlink to the manual installation section.
648f3bc doc: Added a link to get packages.
16b7576 osd/OSDMap: fix typo and crush types helper
6298a57 (origin/wip-crush-chassis) osd/OSDMap: add region, pdu, pod types while we are at it
3a6707a osd/OSDMap: add 'chassis' to default type hierarchy
5e1fc14 README: update a list of build deps for rpm-based systems
e80ab94 Partial revert "mon: osd pool set syntax relaxed, modify unit tests"
fd175ab (origin/wip-6699) sysvinit, upstart: use df -P when weighting new OSDs
4d140a7 os/ObjectStore: add {read,write}_meta
6bb42a0 osd: move peek_journal_fsid() into ObjectStore (from OSD)
bf5a7b2 os/ObjectStore: generalize the FileStore's target_version
e0f2089 osd: construct ObjectStore outside of OSD
41056e5 osd: use ObjectStore::create() helper to create ObjectStore impl
237d6b8 os/ObjectStore: add static create() method
6d92a8e osd: drop obsolete 'filestore' bool option
2974eb5 osd: include misc osd config info in metadata sent to the mon
ea9dabf mon/OSDMonitor: include osd metadata in 'ceph report'
c4f817f mon/OSDMonitor: move osd metadata dump into a helper
838b6c8 PG: don't query unfound on empty pgs
964c8e9 PG: retry GetLog() each time we get a notify in Incomplete
14cf4ca (origin/wip-6892) rgw: don't error out on empty owner when setting acls
7ec21ed Mark libcls_kvs as a module
e5357c0 test: remove zero-copy read_fd test temporarily
bafb5c3 doc: clarify crush rule create-simple and fix typos
371dc71 doc: fix formatting typo in mon configuration
00ee9a5 doc: improve ceph-mon usage, fix ceph tell examples
4fa8f68 README: add yum command line
b0dce8a (origin/wip-mds-assert) mds: Add assertion to catch object mutation error
09a4c1b (origin/wip-5871) mds: remove superfluous warning of releasing lease
c409e36 mon: osd dump should dump pool snaps as array, not object
03d63c4 buffer: turn off zero-copy reads for now
784d188 mds: Release resource before return
524f666 rbd: Release resource before return
66f51f8 osd: Remove bogus assert(active == acting.size())
5ccc2ec SubmittingPatches: describe github pull-request process
ab05580 Add missing stuff to clean target
ae46c38 Correctly mark library modules
94ca1cc ceph-object-corpus: revert accidental revert
75d4a72 (origin/wip-zero-copy-bufferlist-last) buffer: enable tracking of calls to c_str()
445fb18 buffer: try to do zero copy in read_fd
be29b34 buffer: attempt to size raw_pipe buffers
3f6fa05 buffer: add methods to read and write using zero copy
5021b43 buffer: create raw pipe-based buffer
eb94b8f buffer: add an exception with an error code
30bc0e2 safe_io: add functions for handling splice
b8518fe buffer: remove unused raw::length() method
ebb261f buffer: abstract raw data related methods
740d406 doc: Clarified description on scrub load threshold.
8a3ed9b doc: Fixed instruction.
fc5789d doc: Added commentary to configure pg defaults. Clarified size commentary.
dceaef4 doc: PG splitting added to docs.
d39676b doc: Took out "future" reference to namespaces.
9a55d89 doc: Clarification of terms.
b35fc1b (origin/wip-6804) rgw: lower some debug message
561e7b0 (origin/wip-6829) rgw: initialize RGWUserAdminOpState::system_specified
b2ee935 (origin/wip-6796) PendingReleaseNotes: mention 6796 and 'ceph osd pool set' behavior change
7c6d43c doc: rados: operations: pools: document 'osd pool set foo hashpspool'
49d2fb7 mon: OSDMonitor: don't crash if formatter is invalid during osd crush dump
337195f mon: OSDMonitor: receive CephInt on 'osd pool set' instead on CephString
7191bb2 mon: OSDMonitor: drop cmdval_get() for unused variable
50868a5 (origin/wip-6705) qa: workunits: mon: ping.py: test 'ceph ping'
6b5aaf3 doc: Minor updates to manual deployment document.
3502d4f init: fix typo s/{$update_crush/${update_crush/
29178d8 doc: Cleanup of Add/Remove OSDs.
634295d doc: Cleanup on Add/Remove monitor.
de2bcd5 doc: Added a manual deployment doc.
10b4bf6 doc: Added manual deployment section to index.
f753d56 test: use older names for module setup/teardown
72bba1f doc: Added fixes to osd reporting section.
86e4fd4 (origin/wip-flush-5855-review) osd: Backfill peers should not be included in the acting set
19dbf7b osd: Simple dout() fix
82e1e7e PG: remove unused Peering::flushed
9ff0150 PG: don't requeue waiting_for_active unless flushed and active
41272e7 ReplicatedPG/PGBackend: block all ops other than Pull prior to active
6c1aaa4 PG: call start_flush in Active() instead of using do_pending_flush()
e657369 PG,ReplicatedPG: allow multiple flushes to be in progress
da77553 ReplicatedPG,PG: move duplicate FlushedEvt logic info on_flushed()
68e0e06 doc: warn about #6796 in release notes
574cb61 man: re-generate changed man pages
0de0efa RBD Documentation and Example fixes for --image-format
40a76ef (origin/wip-osd-bench-size) osd: fix bench block size
703f9a0 Revert "JounralingObjectStore: journal->committed_thru after replay"
f0c8931 release-notes: clarify that the osd data directory needs to be mounted
ba67b9f doc/release-notes.rst: v0.72.1 release notes
96d7a2e doc: Fix wrong package names on Debian Wheezy for building Ceph
878f354 ceph-filestore-tool: add tool for fixing lost objects
bf7c09a osd_types: fix object_info_t backwards compatibility
1212a21 CephContext: unregister lockdep after stopping service thread
dd9d8b0 ReplicatedPG: test for missing head before find_object_context
d8d27f1 JounralingObjectStore: journal->committed_thru after replay
a7063a1 (origin/wip-6768) Use clearer "local monitor storage" in log messages
dcef9fb (origin/po-pr838) automake: replaced hardcoded '-lboost_program_options' with a macro
125582e autoconf: add check for the boost_program_options library
cfb82a1 (origin/port/fallocate) filejournal: add journal pre-allocate for osx
d39ff4c mon/OSDMonitor: 'osd metadata N' command
ea16435 mon/OSDMonitor: record osd metadata key/value info
6d40e94 osd: send host/kernel metadata to mon on boot
aef3402 doc/release-notes: fix dup
21637cc doc: Updated Emperor reference to 0.72.
8b5719f doc: Added Emperor upgrade.
7f45e72 doc: Added dumpling to the sequence.
efe55b1 doc: Remove redundant command for quick start preflight
fbdfe61 (origin/port/unused-headers) trace: remove unused header
762acec mon: Monitor: make 'quorum enter/exit' available through the admin socket
01f7b46 (origin/port/stat) client: use platform-specific stat time members
2f76ac3 (origin/wip-da-SCA-master) mon/MDSMonitor.cc: remove some unused variables
91627f2 test_seek_read.c: remove unused variable 'off64_t so'
0da5a01 rgw: remove unused variables
6566dfb osd/ReplicatedPG.cc: remove unused variable
ace35f2 Client.cc: remove unused variable from Client::CommandHook::call()
9226a97 rgw/rgw_user.cc: use static_cast<>() instead of C-Style cast
548fc13 rgw/rgw_http_client.cc: use static_cast<>() instead of C-Style cast
fbdfd87 remove unused variable from Objecter::RequestStateHook::call()
d0cf2bf ErasureCodeExample.h: prefer prefix ++operator for non-primitive types
36ae9eb osd/osd_types.cc: use !p.tiers.empty() instead of size()
6b5a96b ErasureCodeJerasure.cc: prefer prefix ++operator for non-primitive types
23f7bfc osd/ErasureCodePlugin.cc: prefer prefix ++operator for non-primitive types
a8e10d3 os/ObjectStore.cc: prefer prefix ++operator for non-primitive types
555e717 mon/OSDMonitor.cc: prefer prefix ++operator for non-primitive types
0803d60 common/buffer.cc: prefer prefix ++operator for non-primitive types
5832e26 (tag: v0.72) v0.72
84fb1bf rgw: deny writes to a secondary zone by non-system users
d8f0502 doc/release-notes: note crush update timeout on startup change
1ee112f osdmaptool: fix cli tests
082e7c9 Ceph: Fix memory leak in chain_flistxattr()
c7a30b8 ReplicatedPG: don't skip missing if sentries is empty on pgls
5fe3dc6 objecter: clean pause / unpause logic
98ab7d6 (origin/wip-objecter-full) objecter: set op->paused in recalc_op_target(), resend in not paused
afb3566 (origin/port/detect-clang) conf: use better clang detection
ac04481 (origin/port/func-name) assert: choose function-var name on non-gnu
1d030d1 (origin/port/gtest-death-tests) test: Only build death tests on platforms that support them
c6826c1 (origin/wip-6719) PG: fix operator<<,log_wierdness log bound warning
f4648bc PGLog::rewind_divergent_log: log may not contain newhead
25b7349 osd/ErasureCodePlugin: close library before return on error
c3d20f2 osd/erasurecode: free allocated memory before return NULL
bfd5b90 mon/MDSMonitor: remove unnecessary assignment
89d5396 osd/erasurecode: correct one variable name in jerasure_matrix_to_bitmatrix()
2aaed99 Revert "doc: radosgw workaround for OpenStack Horizon bug"
c5c399d objecter: don't resend paused ops
5a44e17 (origin/wip-6677) rgw: add compatibility for MultipartUpload
a3ccd29 RadosModel: use sharedptr_registry for snaps_in_use
c22c84a osdmaptool: don't put progress on stdout
81a3ea1 (origin/port/rgw) rgw: add compat file for name service macros
5dc6419 rgw: avoid sighandler_t in favor of sig_t
e9880cf (origin/port/missing-headers) crush: add mising header for count
a10345a auth: add missing header for list
01a5a83 mon: add missing header for std::find
e71a2f0 auth: add missing header file for std::replace
0209568 (origin/port/utime) utime: use to_timespec for conversion
4c3b6d6 rgw: allow multiple frontends of the same framework
e25d32c rgw: clean up shutdown signaling
6d737ce rgw: clean up front end configuration
abc2177 rgw: more flexible frotnend handler config
bbcddef Add a verbose argument and some verbosity
c4b0431 Verify that radosgw started, return appropriate exit code
0c61091 We should exit 1 if radosgw is not executable
1cc8558 (origin/port/detect-libresolv) autoconf: check for res_nquery explicitly
ea725d3 (origin/port/bootstrap) autogen.sh: use glibtoolize when available
00734ec autogen: set exit on error
154ee0b FileStore::_collection_move_rename: handle missing dst dir on replay
1fe762c rgw: refactor request handling processing
6818795 rgw: support http/1.0 keep-alive response (mongoose)
fc7c196 rgw: update code to handle mongoose v4.1
e065b71 rgw: add SERVER_PORT to mongoose environment
4779e66 rgw: configurable mongoose port
d0bd7f3 rgw: support for mongoose keepalive
fe6cd9b rgw: rebase mongoose prototype
ed3caf7 mongoose: submodule, v4.1
2fcaa1f pdatedoc: Added index link to new install doc. Requires merge of wip-doc-install to work.
917dd71 doc: Deleted old manual install doc.
195e861 (origin/wip-doc-install) doc: Mentioned that install procedure is for manual deployments, not ceph-deploy or others.
2aa6cde doc: Changed text for ceph-extras. Made it required. Mentioned newer versions.
d03924c (origin/wip-da-fix-galois-warning) galois.c: fix compiler warning
6821a6e (origin/wip-static-cast) assert: use feature test for static_cast
330a6a7 wbthrottle: use posix_fadvise if available
2bf8ff4 doc: Added DNS and SSL dialog.
cd0d612 OSD: allow project_pg_history to handle a missing map
9ab5133 OSD: don't clear peering_wait_for_split in advance_map()
545135f ReplicatedPG::recover_backfill: adjust last_backfill to HEAD if snapdir
324dd54 (origin/wip-blkdev) test: test helper for get_block_device_size
268785f blkdev: support blkdev size query on osx
75b4b47 doc: Implemented changes suggested from feedback.
41e052d (origin/revert-struct-init) Revert "fix -Wgnu-designator warnings"
96f4607 test/libcephfs: free cmount after tests finishes
c0bcdc3 osd/erasurecode: correct one variable name in jerasure_matrix_to_bitmatrix()
09e1597 (origin/wip-pgmap) mon/PGMap: use const ref, not pass-by-value
fb0f198 rbd: omit 'rw' option during map
2db20d9 qa: don't run racy xfstest 008
1bb5aad (origin/wip-6698) upstart: fix ceph-crush-location default
c3c962e doc: radosgw workaround for OpenStack Horizon bug
cbc15bf doc: fix typo in openstack radosgw integration
4032501 mon/OSDMonitor: refix warning
9834ab9 (origin/wip-6673b) OSDMonitor: be a little nicer about letting users do pg splitting
59a55fd (origin/wip-pipe) pipe: use pipe2 feature test; check fcntl retval
5d0d0a9 fix -Wmismatched-tags warnings
6efc2b5 fix -Wgnu-designator warnings
382149c OSD: remove unused private var [-Wunused-private-field]
cf29574 CrushTester: remove unused private var [-Wunused-private-field]
cc08a4a auth: remove unused private var [-Wunused-private-field]
306ec71 rgw: don't turn 404 into 400 for the replicalog api
cd30e5f (origin/master-new) common/buffer.cc: fix rebuild_page_aligned typo
ffdd30e test: add gcc compile test for installed headers
12238d0 libcephfs: Fix compilation for C compiler
b3b1650 ceph: Fix compilation with GCC compiler
524aee6 Really use the hostname, otherwise ambiguous
f2622a4 ceph-object-corpus: revert accidental revert
df3af6c docs: Fix a typo in RGW documentation
588ed60 (origin/next-new) Wrap hex_to_num table into class HexTable
148023d [rgw] Set initialized to true after populating table in hex_to_num()
28e4271 sharedptr_registry.hpp: removed ptrs need to not blast contents
4402898 prio-q: initialize cur iterator
353813b PGLog: remove obsolete assert in merge_log
ca4c166 test/osd/RadosModel.h: select and reserve roll_back_to atomically
99c5319 test/rados/list.cc: we might get some objects more than once
4a41d3d os/chain_listxattr: fix leak fix
a8c3373 doc: Updated rewrite rule.
ba153ea doc: Incorporated feedback.
c66beb6 doc: Created new zone sync image.
d6a6cf5 doc: Modified image.
698df04 doc: Removed references to OpenSuse and SLES.
5c9f322 doc: Retitled document. Made example generic. Fixed link.
29dfb79 doc: Retitled document.
5df3024 docs: Fix a typo in RGW documentation
a2090ba doc: Removed the Folsom reference.
c9aa708 doc: Restored show_image_direct and added a link to older versions.
8193bad doc: Removed nova-volume, early Ceph references and Folsom references.
dd14013 doc: Removed install yum priorities. Duplicated where relevant.
c254da5 doc: Added quick ceph object store with links to manual install and config.
16e25cd doc: Restored Object Store Quick Start entry for parallelism.
98603d4 doc: Changed install to ceph-deploy install.
a62d7c0 doc: Added note for ARM support in quantal and raring.
3bc6e52 Removed add repositories, yum priorities, and consolidated index.
f33b118 doc: Added consolidated install of VM/Cloud software.
ea35f79 doc: Removed install qemu. Consolidated to install-vm-cloud.
fba056a doc: Removed install libvirt. Consolidated to install-vm-cloud.
7c4394d doc: Consolidated install object gateway and install Apache/FastCGI
0f87f15 doc: Removed. Consolidated into install-ceph-gateway.
68caa1b doc: Consolidated Add Repositories.
1bdd37f doc: Removed doc. Consolidated with Get Packages.
6b9104d doc/release-notes: formatting
04710b5 doc/release-notes: fix formatting
b605c73 doc/release-notes: fix indentation
1de46d6 (origin/next-fix) os/chain_listxattr: fix leak fix
6efd82c ceph: Release resource before return in BackedObject::download()
e22347d ceph: Fix memory leak in chain_listxattr
905243b Fix memory leak in Backtrace::print()
be12f7f (origin/wip-6683) mon: OSDMonitor: proper error msg on invalid epoch on 'osd getmap/dump'
e5efd88 mon: MonmapMonitor: support 'mon getmap [epoch]'
e11c975 (tag: v0.72-rc1) v0.72-rc1
a3119bc (origin/wip-crush-hook) upstart, sysvinit: use ceph-crush-location hook
9f6af8b ceph-crush-location: new crush location hook
1e2e429 Revert "ceph-crush-location: new crush location hook"
22ff717 Revert "upstart, sysvinit: use ceph-crush-location hook"
0c18609 (origin/wip-6605) mon: OSDMonitor: fix comparison between signed and unsigned integer warning
e02740a mon: OSDMonitor: only allow an osd to boot iff it has the fsid on record
42c4137 mon: OSDMonitor: fix some annoying whitespace
60264f9 doc: Fixed formatting. Fixed hyperlink.
46d897a doc: fix formatting.
111a37e upstart, sysvinit: use ceph-crush-location hook
fc49065 ceph-crush-location: new crush location hook
df229e5 (origin/wip-6673) mon/PGMonitor: always send pg creations after mapping
2181b4c mon/OSDMonitor: fix signedness warning on poolid
7a06a71 ReplicatedPG::recover_backfill: update last_backfill to max() when backfill is complete
e46d2ca (origin/wip-pr781)   fix the bug  ctypes.util.find_library to search for librados failed on Centos6.4.   Signed-off-by: huangjun  <hjwsm1989@gmail.com>
f8fa309 ReplicatedPG: src_obcs can now be empty
3b99cd0 (origin/wip-readdirend) mds: fix readdir end check
6eded8a doc: Fixes to normalize header hierarchy. Tweaked IA slightly.
bd507ef doc: Updated with a verified installation procedure and latest usage.
4e48dd5 (origin/wip-6585) osd/ReplicatedPG: use MIN for backfill_pos
4139e75 ReplicatedPG: recover_backfill: don't prematurely adjust last_backfill
ecddd12 ReplicatedPG: add empty stat when we remove an object in recover_backfill
9ec35d5 ReplicatedPG: replace backfill_pos with last_backfill_started
8774f03 PG::BackfillInfo: introduce trim_to
46dfd91 PG::BackfillInterval: use trim() in pop_front()
0a9a2d7 ReplicatedPG::prepare_transaction: info.last_backfill is inclusive
5939eac (origin/wip-5612) upstart: fail osd start if crush update fails
177e2ab init-ceph: make crush update on osd start time out
b28b64a (origin/wip-scripts) pybind: use find_library for libcephfs and librbd
d5d36d0 (origin/wip-6621) radosgw-admin: accept negative values for quota params
9d136a4 (origin/wip-obc) ReplicatedPG: no need to clear repop->*obc
f58396a doc/release-notes: emperor blurb
8db03ed ReplicatedBackend: don't hold ObjectContexts in pull completion callback
5a416da ReplicatedPG: put repops even in TrimObjects
420182a ReplicatedPG: improved on_flushed error output
ce33892 PG: call on_flushed on FlushEvt
6f975e3 PG,ReplicatedPG: remove the waiting_for_backfill_peer mechanism
3d0d69f ReplicatedPG: have make_writeable adjust backfill_pos
3de32bd ReplicatedBackend: fix failed push error output
807dde4 ReplicatedPG,osd_types: move rw tracking from its own map to ObjectContext
2cadc23 osd_types,OpRequest: move osd_req_id into OpRequest
9b003b3 OpRequest: move method implementations into cc
c4442d7 ReplicatedPG: reset new_obs and new_snapset in execute_ctx
8a62bf1    fix the bug if we set pgp_num=-1 using "ceph osd pool set data|metadata|rbd -1"    will set the pgp_num to a hunge number.
c7d975a (origin/wip-ceph-context) ceph_context: use condition variable for wake-up
e5efc29 test: Use a portable syntax for seq(1)
fbabd42 test: Change interpreter from /bin/bash to /bin/sh
0a1579d test: Use portable arguments to /usr/bin/env
b926930 pybind: use find_library to look for librados
19d0160 doc/release-notes: v0.72 draft release notes
bf198e6    fix the bug if we set pgp_num=-1 using "ceph osd pool set data|metadata|rbd -1"    will set the pgp_num to a hunge number.
5eb836f ReplicatedPG: take and drop read locks when doing backfill
058c74a PG: switch the start_recovery_ops interface to specify work to do as a param
87daef7 ReplicatedPG: implement the RWTracker mechanisms for backfill read locking
96ed5b8 ReplicatedPG: separate RWTracker's waitlist from getting locks
f0f6750 common: add an hobject_t::is_min() function
fe30ac6 rgw: Use JSONFormatter to use keystone API
5733f9c rgw: Use keystone password to validate token too
bd04a77 rgw: Adds passwd alternative to keystone admin token
8282e24 (origin/wip-6635) mon/OSDMonitor: make racing dup pool rename behave
66a9fbe common: rebuild_page_aligned sometimes rebuilds unaligned
c14c98d mon: OSDMonitor: Make 'osd pool rename' idempotent
284b73b packages: ceph.spec.in is missing make as a build dependency
aea985c Objecter: expose the copy-get()'ed object's category
06b5bf6 osd: add category to object_copy_data_t
61f2e5d OSD: add back CEPH_OSD_OP_COPY_GET, and use it in the Objecter
15c8267 OSD: rename CEPH_OSD_OP_COPY_GET -> CEPH_OSD_OP_COPY_GET_CLASSIC
b75b7ad ReplicatedPG: copy: move the COPY_GET implementation into its own function
80f3696 osd: Add a new object_copy_data_t, and use it in the OSD/Objecter
808fa9a ReplicatedPG: cache: don't handle cache if the obc is blocked
91b589f ReplicatedPG: copy: add a C_KickBlockedObject
ade8f19 ReplicatedPG: add a Context *ondone to RepGathers
b403ca8 ReplicatedPG: copy: rename CopyOp::version -> user_version
4e139fc ReplicatedPG: copy: do not let start_copy() return error codes
178f9a2 ObjectStore: add a bufferlist-based getattrs() function
e17ff19 osd/osd_types: init SnapSet::seq in ctor
d2b661d os/FileStore: fix getattr return value when using omap
3a469bb os/ObjectStore: fix RMATTRS encoding
847ea60 PGLog::read_log: don't add items past backfill line to missing
3c0042c (origin/wip-rbd-parent-info) rbd.py: increase parent name size limit
87d3f88 PGMap::dirty_all should be asserting about osd_epochs, not in.osd_epochs
0388b71 Update init-rbdmap
0d326c3 ceph: tolerate commands without any child args
cfe8451 rgw: eliminate one unnecessary case statement
80384a1 Update init-rbdmap
f9a6d71 (origin/wip-rgw-sync-next) radosgw-admin: remove unused function escape_str()
ec45b3b rgw: escape bucket and object names in StreamReadRequests
dd308cd rgw: move url escaping to a common place
e0e8fb1 rgw: update metadata log list to match data log list
c275912 rgw: include marker and truncated flag in data log list api
e74776f cls_log: always return final marker from log_list
ea816c1 rgw: skip read_policy checks for system_users
1d7c204 Add a configurable to allow bucket perms to be checked before key perms through rgw_defer_to_bucket_acls config option.  This configurable defaults to an empty string.  Option values include:
0e8182e (origin/wip-6620) mds: MDSMap: adjust buffer size for uint64 values with more than 5 chars
af1dee5 doc: clarify that mons must have qurorum during deploy
4c8be79    rename test_arch.c --> test_arch.cc to avoid undefined reference to `__gxx_personality_v0' error.    Signed-off-by: huangjun  <hjwsm1989@gmail.com>
7ba4bc4 (origin/wip-monc-ping) cli: ceph: add support to ping monitors
400cb18 pybind: rados: ping a monitor via librados
1a2e0eb pybind: rados: support ETIMEDOUT on make_ex()
2d7ccab librados: support pinging a monitor without auth via RadosClient
6a4b196 mon: MonClient: allow pinging a monitor without authenticating first
c521ba7 mon: MonClient: adjust whitespaces
5e4652e mon: Monitor: reply to ping messages, letting them know we're alive
4ca1407 mon: Monitor: do not flush formatter at end of _mon_status()
b8d54cd doc: Fixed typo, clarified example.
53486af doc: Updated docs for OSD Daemon RAM requirements.
828537c doc: Added ARM. Added Calxeda hardware example.
105fb61 doc: Added install for libvirt.
6c88d40 doc: Added install for QEMU.
fe6520b doc: Added install for ceph-deploy.
df4adef doc: Added install for Apache with 100-continue support.
1bf413e doc: Added install for storage cluster.
5a6412e doc: Added a consolidated build document. Prerequisites, build, build packages.
b88267b doc: Added guide for getting packages. Still needs work.
90487e3 doc: Added new guide for adding repositories.
dcbaec5 doc: Created new stepwise manual install section.
4e6a9a5 doc: Modified cloning source to include git steps. Consolidation.
314fd2c doc: Updated OS recommendations with an Emperor entry.
6369d96 doc: Updated Quick Block Device for kernel versions, and linked OS Recommendations.
df9315c doc: Removed RGW from quick start, since it is not ceph-deploy enabled.
8a36503 doc: Moved CPU Profiler docs to dev.
06ec0f6 doc: Removed Calxeda reference since it is now the same as normal install.
b422d4a doc: Removed old files. Consolidated contents into new IA.
1821ad7 (origin/wip-6242-b) pybind/rados: create InterruptedOrTimeoutError exception
1230886 ceph: move timeout
8baeac0 ceph: catch exceptions thrown during the rados handle init
d60e532 ceph: show basic help before initializing cluster connection
b33c315 ceph: default 5 second timeout for -h
15de2c4 ceph: add --connect-timeout option
e922475 ceph: print basic options before connecting
445e8c9 ceph: fixup do_help() function connection check
32a23c5 ceph.in: add emacs modeline
771b0c5 (origin/wip-6606) rgw: don't bother to call c_str() on strings passed to dump_string()
dff41cd (origin/wip-test-librbd) ceph_test_librbd: fix heap overrun
eb5dd55   test_ceph_argparse.py: No assert_not_in and assert_in in nose.tools   Signed-off-by: huangjun  <hjwsm1989@gmail.com>
ccaab2a rgw: init src_bucket_name, src_object in the S3 handler
db7eb77 rgw: get rid of req_state.bucket_name
cbf8f9a rgw: turn swift COPY into PUT
1f6b8b2 librbd: parse args to ceph_test_librbd
ad4553a librbd: fix build error
bd2eeb7 ceph-mon: add debug to ip selection
a107030 (origin/wip-5668-b) librbd: wire up flush counter
715d2ab (origin/wip-6603) common/BackTrace: fix memory leak
687ecd8 common/cmdparse: fix memory leak
9fa357d (origin/wip-backtrace) mds: update backtrace when old format inode is touched
34d0941 (origin/wip-6599) client: fix invalid iterator dereference in Client::trim_caps()
4f299ca autoconf: fix typo on AM_COMMON_CFLAGS
94080de common: get_command_descriptions use cout instead of dout
8586c75 (origin/wip-6582) ReplicatedPG: copy: conditionally requeue copy ops when cancelled
6dff926 PG: add a requeue_op() function to complement requeue_ops().
45d1846 doc: Removed references to Chef.
89995ef doc/release-notes: missed mds snaps
5905227 doc/release-notes: v0.71
5d2cf46 Update ceph-authtool.rst
7bcfe09 ceph.spec.in:  Add erasure-code related files. Signed-off-by: huangjun  <hjwsm1989@gmail.com>
533626c Add Redhat init script option
3cfe9f6 (origin/wip-cache-crc) common/buffer: invalidate crc on zero, copy_in
8ec3aed common/buffer: fix crc_map types
394ec17 common/buffer: drop unused fields
2edc04c (origin/wip-6475-gl) ceph.spec.in:  Need to cread radosgw log directory.
1f291f5 qa/workunits/rest/test.py: fix mds {add,remove}_data_pool test
11fc80d doc/release-notes: link ot the changelog
eb0a3b7 doc/release-notes: v0.61.9
d3f0c0b Makefile: fix /sbin vs /usr/sbin behavior
15ec533 OSD: check for splitting when processing recover/backfill reservations
08177f2 ceph: Remove unavailable option with clang
e509cb1 (tag: v0.71) v0.71
10b466e (origin/wip-6475) radosgw: create /var/log/radosgw in package, not init script
5c280a2 .gitignore: ceph-kvstore-tool
14e91bf debian, specfile: fix ceph-kvstore-tool packaging
fd6e2b8 (origin/wip-kvstore-tool) ceph-kvstore-tool: copy one leveldb store to some other place
85914b2 ceph-kvstore-tool: calc store crc
da69fa0 tools: move 'test_store_tool' to 'tools/ceph-kvstore-tool'
eafdc92 common/buffer: behave when cached crc stats don't start at 0
c5cdf4e crc32c: expand unit test
0620eea sctp_crc32c: fix crc calculation in the NULL buffer case
b96ee5c crc32c: add a special case crc32c NULL buffer handling
d9e3077 common/buffer: pass NULL buffer instead of a zero-filled one
9626aaf common/crc32c: document interface
36e18ae common/crc32c_intel_baseline: accept null data buffer
c545fc2 common/sctp_crc32: accept NULL buffer pointer
a3e9344 common/buffer: explicitly init zbuf to zeros
88ae8f6 common/buffer: add crc caching performance test
6464516 common/buffer: instrument utilization of cached crcs
0c23a56 common/buffer: cache crcs in buffer::raw
8757775 include: add Spinlock
72ce2ef (origin/wip-4047) cls_rbd: do not make noise in osd log on rbd removal
e550e3d test_ceph_argparse: fix typo
dbd6d97 test_ceph_argparse: fix mds {add,remove}_data_pool tests
5838c09 common: fix non-daemon init
1d4f501 test/filestore/run_seed_to.sh: avoid obsolete --filestore-xattr-use-omap
982511e MonCommands: note that pg dump options don't work in plaintext
c7acc2a (origin/wip-5716) rgw: gracefully handle bad root pool names
488678f ceph_test_rados: fix snap remove vs rollback fix
2701231 os/LevelDBStore: handle deletion race when checking store size
92ea0d1 test/librados/cmd: fix compile error
c69e76c (origin/wip-6059) ReplicatedPG: remove the other backfill related flushes
3469dd8 RadosModel: send racing read on write
0246d47 ReplicatedPG: block reads on an object until the write is committed
c658258 OSD: ping tphandle during pg removal
4f403c2 (origin/wip-6334) common: don't do special things for unprivileged daemons
5aa237e mon, osd: send leveldb log to /dev/null by default
ab8f9b1 doc: Update from user feedback. Needed to enable S3/Keystone.
4bb2a4b doc: Updated to ensure that socket name isn't static.
bd7a7dd os/FileStore: fix fiemap double-free(s)
26228ed ceph-dencoder: select_generated() should properly validate its input
8b43d72 vstart.sh: create dev/ automatically
8d7dbf8 rgw: change default log level
70cc681 mon/PGMonitor: set floor below which we do not warn about objects/pg
bebbd6c (origin/wip-6553) rgw: fix authenticated users acl group check
08327fe mon: osd pool set syntax relaxed, modify unit tests
02b5eb2 ceph.spec.in: do not list ceph-rest-api twice; add missing cls_hello files
dd33c98 osd/osd_types: generalize pg_pool_t::get_flags_string()
5abe5c2 (origin/wip-6147) mon: OSDMonitor: add 'osd pool stats' command
2cd5320 mon: PGMap: rework client IO rate calc and output
e3ba8e8 mon: PGMap: reuse existing summary functions to output pool stats
82e3317 mon: PGMap: keep track of per-pool stats deltas
e2602c5 (origin/wip-pool) mon: make 'mon {add,remove}_data_pool ...' take pool name or id
d6146b0 (origin/wip-formatter-newlines) common/Formatter: add newline to flushed output if m_pretty
f2645e1 rgw: swift update obj metadata also add generic attrs
6641273 SignalHandler: fix infinite loop on BSD systems
2cc5805 doc: Removed underscore for consistency.
4b8eb4f (origin/wip-rgw-quota) radosgw-admin: add --quota-scope param to usage
f568501 (origin/wip-5025) mds: flock: fix F_GETLK
3c6710b qa/workunits/misc/dirfrag: make it work on ubuntu
b0f49e0 ReplicatedPG.h: while there cannot be a read in progress, there may be a read blocked
bf82ba9 doc: disable cephx requires auth_supported = none
0f73f0a rgw: switch out param to a pointer instead of reference
8aa7f65 test: update cli test for radosgw-admin
91f0c82 radosgw-admin: clarify --max-size param
ad409f8 formatter: dump_bool dumps unquoted strings
c1acf9a rgw_quoa.{h,cc}: add copyright notice
8d8ae58 doc: Created new index to incorporate side-by-side deb/rpm installs.
bc50dbb doc: Created installation doc for Yum priorities. Ceph-specific packages need it.
05b2e44 doc: Created new QEMU install for RPMs with provision for Ceph-specific packages.
f37c75b doc: Created new QEMU install for debian.
869b721 doc: Added new libvirt install for RPM.
d466874 doc: Created new libvirt install for debian/ubuntu.
99fe31e doc: Removed Gatway from Ceph Object Storage. Added Yum repo information.
cdd851b doc: Moved installation portion to the installation section.
1dff92b doc: Moved installation portion to the installation section.
a182535 librados: add some clarifying comments
7ef5eb0 librados: drop reference to completion in container destructor
f13cc68 doc: Fixed hyperlinks. Cleanup of old references to Chef.
70250e8 (origin/wip-mon-pool-set) osd: osd_types: Output pool's flag names during dump
7113186 (origin/wip-objecter-errors) osdc/Objecter: clean up completion handlers that set *prval=0
82e9330 osdc/Objecter: only make handlers set *prval if EIO
1c28869 mon: OSDMonitor: allow (un)setting 'hashpspool' flag via 'osd pool set'
2fe0d0d mon: OSDMonitor: split 'osd pool set' out of 'prepare_command'
6bbb772 test/filestore/run_seed_to_range.sh: fix -d syntax
4e2ff53 (origin/wip-truncate2) mds: avoid leaking objects when purging file.
eb381ff (origin/wip-filerecover) mds: don't decrease file size when recovering file
1803f3b radosgw-admin: limit user bucket-level quota
18a271d mds: optimize map element dereference
d8faa82 ReplicatedPG: remove unused RWTracker::ObjState::clear
89d3f47 radosgw-admin: can set user's bucket quota
cb9ebd6 doc: Minor correction.
14eabd4 rgw: bucket quota threshold
34d0526 rgw: configurable bucket quota size
fc35807 rgw: protect against concurrent async quota updates
2e4ecc2 rgw: async quota update
5bc6327 doc: Merge cleanup.
c0c332c doc: minor clean up.
007f06e (origin/wip-4405) mds: fix infinite loop of MDCache::populate_mydir().
1f50750 (origin/wip-5992-3) ReplicatedPG: remove the other backfill related flushes
db6623f RadosModel: send racing read on write
2b216c3 ReplicatedPG: block reads on an object until the write is committed
e8a2992 rgw: rearrange includes
6ff9570 Go back to $PWD in fsstress.sh if compiling from source.
8e493ef Go back to $PWD in fsstress.sh if compiling from source.
768fb0a doc: fix openstack rbd installation command
e21e573 os: stronger assert on FileStore::lfn_open
0f323bc common: unintended use of the wrong bloom_filter prototype
4b911cf (origin/wip-rval) ReplicatedPG: copy: use aggregate return code instead of individual Op return
6da4b91 os/FileStore: fix ENOENT error code for getattrs()
71ee6d7 mon: allow MMonGetMap without authentication
f279641 mon: do not put() unhandle message
0cae3a1 common/bloom_filter: add a few assertions and checks for bit_table_ == NULL
cf34adb common/bloom_filter: simplify compressible_bloom_filter encode/decode/dump
f45c3b9 common/bloom_filter: fix compress; improve argument
055dc4c common/bloom_filter: fix estimated element count for compressed filters
16dec28 ceph.spec.in: Always depend on junit4 (fixes bug #6216)
82f6ec5 doc/release-notes: v0.70
aaabc65 common/bloom_filter: methods for density, approx unique element counts
04091f8 common/bloom_filter: remember original target size
d07f5f3 common/bloom_filter: drop raw_table_size_ member
ea2378e common/bloom_filter: make compressible_bloom_filter encodable
92a60a0 mon/PGMap: make generated test instances obey new invariant
e0be61e qa/workunits: Add large number of files in a directory test script
f82aefa mds: reduce verbosity of dir fragment logging
488ddad mds: fix bloom filter leaks
1d14d11 mds: stop propagating rstat if freezing/frozen dirfrag is encountered.
576da8e mds: don't scatter gather update bare-bones dirfrags
c7db090 fragtree_t: fix get_leaves_under()
c40c5dc client: handle dirfrag mismatch when processing readdir reply
4054651 client: use dir_result_t::END as flag
5074464 mds: handle dirfrag mismatch when processing readdir request
fe99882 mds: fix CInode::get_dirfrags_under()
473635a mds: fix MDCache::merge_dir()
a242201 mds: don't fragmentate stray directories
2eb863d mds: properly update rstat/fragstat when fragmentating directory
f989396 mds: properly store fragmenting dirfrags
7515335 mds: trim log segment after finishing uncommitted fragments
4014ba2 mds: delete orphan dirfrags during MDS recovers
a881c1d mds: journal original dirfrags for rollback
e927941 doc/release-notes: v0.67.4
3fc6cfb (origin/wip-optracker) Makefile: add include/histogram.h to noinst_HEADERS
bb9b9c8 (origin/wip-6143) common, os: Perform xattr handling based on detected fs type
b87bc23 (origin/wip-5992-2) ReplicatedPG: lock snapdir obc during write
0c2769d PGLog: on split, leave log head alone
391a885 FileStore: make _setattrs not return -ENOENT most of the time
0c1e251 ReplicatedPG: add debugging in recover_replicas for objects added for backfill
2ae9ece ReplicatedPG,PG: use PGBackend methods for getattr
8a919fb ReplicatedPG,PG: adapt collection_list* users to PGBackend interface
ff17e45 PG,ReplicatedPG: expose PGBackend to PG
9a10a80 PG.cc: remove leading empty space
4df481c PGBackend,ReplicatedBackend: add interfaces for scanning the pg
664b589 ReplicatedPG: don't rescan the local collection if we can avoid it
e73ec48 common/hobject: add is_degenerate method
c8a4411 PGMap: calc_min_last_epoch_clean() will now also use osd_epochs
091809b PGMap,PGMonitor: maintain mapping of osd to recent stat epoch
e3bb065 (tag: v0.70, tag: mark-v0.70-wip) v0.70
806725a (origin/wip-start-copy) ReplicatedPG: copy: add op progression output
639ff9f ReplicatedPG: copy: don't leak a ctx on failed copy ops
469d471 ReplicatedPG: assert that we have succeeded in do_osd_ops on copyfrom repeats
f3733a2 ReplicatedPG: copy: switch CopyCallback to use a GenContext
dc0dfb9 common,os: Remove filestore_xattr_use_omap option
10a1e9b rgw: update cache atomically
6ce762f lru_map: add find_and_update()
4634d3c mds: delete orphan dirfrags after fragmentating directory
cd4cd3f mds: start internal MDS request for fragmentating directory
55d279b ceph_test_rados: do not let rollback race with snap delete
b09a1ef ceph_test_rados: stop on read error!
03ba740 osd/ReplicatedPG: fix null deref on rollback_to whiteout check
aacd67e PendingReleaseNotes: fix typo
fea1e0e PendingReleaseNotes: make a note about K vs k
d6a1799 TrackedOp: specify queue sizes and warnings on a per-tracker basis
ea831e0 TrackedOp: give people an _event_marked() notifier instead of a virtual mark_event()
1033588 qa: fix rbd cli tests checking size
c19935c doc: Fixed typo.
0ce1046 doc: Added clarifying comments.
afb4d83 librados: drop #include of int_types.h from installed headers
f1e2393 mon: Monitor: reuse 'src_is_mon' bool on dispatch
29cf2ff mon: Monitor: only handle paxos msgs from a mon && if session has exec caps
b8a1488 mon: Monitor: dissociate msg handling from session & connection logic
d0d61b4 mon: Monitor: drop client msg if no session exists and msg is not MAuth
ed1a54e mon: Monitor: assert on absense of connection during dispatch
dce3d26 (origin/wip-5896) mon: MonmapMonitor: make 'ceph mon add' idempotent
8cfeb83 common/bloom_filter: note that uint32_t interface requires well-mixed values
9299f50 common/bloom_filter: speed up unit tests a bit
4b23b65 common/bloom_filter: test binning fpp behavior
0a69bae common/bloom_filter: disable sequential tests
0122ee9 common/bloom_filter: insert/contains methods for uint32_t
22f8325 Make fsid comparison case-insensitive
41a1345 TrackedOp: rework dump interface a little
80659cc rgw: init RGWBucketStats
29009b2 doc: Updated diagram for added clarity.
2c88910 rgw: handle negative quota as non-assigned values
07bb72a radosgw-admin: quota control api
69180d5 rgw: dump quota params even if disabled
a8761a5 TrackedOp: just make CephContext member public
2723a09 TrackedOp: template OpTracker on only T[::Ref] (ie, OpRequest[::Ref])
ebae077 rgw: bucket stats also dump quota info
7973d44 OpTracker: give TrackedOp a default dump() function
baf1d40 rgw: init quota
721f170 (origin/wip-fuse) client: remove requests from closed MetaSession
63f5814 ceph: Update FUSE_USE_VERSION from 26 to 30.
f8a947d client: trim deleted inode
563517d rgw: update quota stats when needed
65ae9b8 COPYING: fix URL
11461cb debian/copyright: sync up with COPYING
1a56fe9 COPYING: add Packaging: section
e70ea84 COPYING: add debian-style headers
fea12e2 COPYING: fix formatting
a2e175b COPYING: make note of common/bloom_filer.hpp (boost) license
f31d691 common/bloom_filter: fix whitespace
fdb8b0d common/bloom_filter: test behavior of sequences of bloom filters
f1584fb common/bloom_filter: unit tests
8835ef8 common, os, osd: Use common functions for safe file reading and writing
c0cbd9a osd: In read_meta() leave an extra byte in buffer to nul terminate
238a303 ErasureCode: update PGBackend description
ff48873 ErasureCode: doc updates
d1c1f3e common: document ghobject sort order rationale
16fbdcd common: ghobject get_filestore_key* use hobject counterpart
2d7dced mon/PGMap.cc: don't output header for pg dump_stuck if nothing stuck
d29be45 ReplicatedPG: rename finish_copy -> finish_copyfrom
a96b12f ReplicatedPG: copy: use CopyCallback instead of CopyOp in OpContext
d2cb2bf mds: return -EAGAIN if standby replay falls behind
fbeabcc os/FileStore: report errors from _crc_load_... and _crc_save
dfea81e ceph_test_store_tool: add 'set prefix key' feature
398249a test: test_store_tool: optionally output value crc when listing keys
18fcd91 test: test_store_tool: add 'crc <prefix> <key>' command
84c0286 rados: add 'tmap-to-omap' command
20974dc rados: make 'tmap dump' gracefully handle non-tmap data
a9e5323 osd: remove magical tmap -> omap conversion
0d61092 osd: add ISDIRTY, UNDIRTY rados operations
da1b9b6 ReplicatedPG: copy: implement CopyFromCallback::finish, remove CopyOp::ctx
613841a ReplicatedPG: copy: add CopyCallback pointer to CopyOp, and set it up
0b47276 ReplicatedPG: copy: start defining CopyCallback structures
dcd475d osdc/Objecter: fix return value for copy_get
1784ef9 ReplicatedPG: copy: split up the transaction generation from the PG management
010ff37 ReplicatedPG: copy: specify the temp_oid in the caller
1ae8ef2 ReplicatedPG: copy: take an ObjectContextRef in start_copy and use that
3257bb4 doc: Incorporated some feedback.
7e3084e osd/ReplicatedPG: mark objects dirty in make_writeable()
d42d2b9 osd/osd_types: object_info_t::get_flag_string()
a0ed9c2 osd/osd_types: add object_info_t::FLAG_DIRTY
9b7a2ae crush: invalidate rmap on create (and thus decode)
482938a doc: Fixed a few typos.
011bff3 osd/osd_types: bump encoding from 11 -> 12
62cc398 rbd: be helpful with invalid command
8e33d33 rados: do not dump usage on invalid command
0d2a2c9 doc: Minor caps change.
584a6d2 doc: Updated text for more specific region/zone example.
d421b66 osd/osd_types: convert object_info_t::uses_tmap to a flag
1aa6067 osd/ReplicatedPG: update all find_object_context() users to handle whiteouts
ea65b5a osd/osd_types: add WHITEOUT flag to object_info_t
a1b82f2 osd/osd_types: replace bool lost with a flags field
5bebf1a doc: Updated diagram.
6fcea1a rgw: also check quota before starting write
76284fa rgw: check quota before completing write op
81aa478 rgw: fix qutoa check
6ed8b7a ReplicatedPG: copy: add an ObjectContextRef to CopyOp
5307703 ReplicatedPG: follow the same finish path for failed copy ops
6658f3c ReplicatedPG: copy: remove most references to OpContext from process_copy_chunk
4f5b317 ReplicatedPG: copy: do not use an OpContext in _copy_some
dbfd478 ReplicatedPG: update pg stats correctly when doing a copy
1bdc3f7 Add unit_to_bytesize test for 'k' on input; continues fix for #4612
334f655 ReplicatedPG: don't bless C_OSD_SendMessageOnConn
a9df335 msgr: debug delay_thread join
bc98013 rgw: higher level quota check functionality
b43bc1a Use 'k' when printing 'kilo'; accept either 'K' or 'k' as input
3d062c2 rbd: fix cli test
cce990e osdc/ObjectCacher: limit writeback IOs generated while holding lock
055e313 rgw: quiet down warning message
75b94ba osd/ReplicatedPG: fix iterator corruption in cancel_copy_ops()
3452aad ceph_argparse.py: clean up error reporting when required param missing
409aba6 rbd.cc: add readonly option for "rbd map"
b032931 PendingReleaseNotes: update regarding librados change
b245ca1 os/FileStore: add sloppy crc tracking
8912462 rgw: drop async pool create completion reference
4605792 librados: pool async create / delete does not delete completion handle
7d1dc55 (origin/wip-doc-quickstart) doc: Diagram update and clarification on ceph-deploy admin results.
b23718a doc: Diagram update from feedback.
245296a doc: Diagram updates from feedback.
71ba833 doc: Updated block device quick start to use ceph-deploy. OS neutral.
b9000b3 Invoke python with /usr/bin/env python instead of directly
c8054ac ReplicatedPG: remove unused CopyOp::waiting member, rename function for accuracy
7bf8cb7 ReplicatedPG: remove useless pcop param from start_copy
7f3165b ReplicatedPG: use our already-found iterator instead of going back into map
8dd7ea3 rgw: fix leak in RGWMetadataManager::remove()
3923874 common/SloppyCRCMap: add type to sloppily track crcs
481fbbf doc: Added Dumpling to OS Recommendations.
94478e0 OSD: unset_honor_cache_redirects() on Objecter
35cdd89 Objecter: add "honor_cache_redirects" flag covering cache settings
1fc24ff rbd.cc: propagate some errors to user-space when they're available
b6f278c ceph.in: fix missing exception variable in failure to open -o file
1e9e34b rgw: don't append NULL char before json parsing
793d9d2 ceph_json: use different string constructor for parser buffer
c821da9 rgw: more quota implementation
434ad76 rgw: add bucket quota config to entities
4fe01b1 doc: changed journal aio default to true.
a3aa005 qa: workunits: mon: test snaps ops using rbd.
28949d5 Formatter: add dump_bool()
efc6b5e ceph_test_rados: remove useless snapc setup
37d7220 ceph_test_rados: update for copy_from in begin, not finish
b06c189 common/crc32c_intel_fast: avoid reading partial trailing word
e5fa6d1 rgw: more quota utility stuff
e6e8cb8 pybind: update osd blacklist tests for nonce
0bfda47 test/common/get_command_descriptions: null terminate c string
c5831fa ceph_test_rados: improve debug output
eec315f ceph_test_rados: fix update_object_full
1ba7e47 ceph_argparse.py, cephtool/test.sh: fix blacklist with no nonce
97f462b Revert "ceph: parse CEPH_ARGS environment variable"
30abe32 Add CEPH_ARGS at the end of sys.argv
cbf0ba2 qa/run_xfstests.sh: use old xfstests until we adapt to new org
bab72ed os: Simplify collection_list* funcs by removing dynamic_cast
db5bbdd rgw: quota utility class
9750965 os: Make write_version_stamp() private
55f4aa1 osd: Remove code for reading ancient unsupported logs
4a757eb os/ObjectStore: Interim collection_list* functions in ObjectStore
222f5aa osd: Cleanup init()/read_superblock()
aba6efd common, os, osd, test, tools: FileStore must work with ghobjects rather than hobjects
793ba9f include, test: Add CompatSet::merge() operation
c6b8318 os, osd, tools: Add backportable compatibility checking for sharded objects
bb195c2 osd: read_superblock() not outputing unsupported features when incompatible
4bc8f09 test: Adding unittest for CompatSet
acc47d2 include: Bug fixes for CompatSet
98b3cd3 os: Fix version_stamp_is_valid() and write_version_stamp() error return
a1f6b14 ReplicatedPG: take obc read lock prior to recovering an object to replicas
b29ac2a ReplicatedBackend::handle_pull_response: use list<ObjectContextRef>
07905af ReplicatedPG: remove noop C_OSD_CompletedPull
2bc1e38 ReplicatedPG: assert build_push_op succeeds on primary
aeadecd ReplicatedPG.h: remove temp_coll stub
3290065 OSD,ReplicatedPG: queue pushes in a op_tp workqueue
039da62 ReplicatedPG: don't proceed to backfill until recovering is empty
02e5c1f ReplicatedPG: correctly handle backfill
b06dce3 ReplicatedPG/Backend: fix up recalc_subsets
6cccef2 ReplicatedBackend: wire in start_pushes
a287167 ReplicatedBackend: handle stats properly
656d084 ReplicatedBackend: track object contexts in Push/PullInfo
e7a0b23 ReplicatedBackend: remove priority from Pull/PushInfo
9e8c3c3 ReplicatedPG/Backend: move prep_push and friends to ReplicatedBackend
3d6eb6e ReplicatedPG: remove pushing/pulling
31c6042 ReplicatedPG/Backend: handle down pull sources
4bc0eab ReplicatedPG/Backend: split recover_missing out of prepare_pull
273ac2b ReplicatedPG/Backend: shuffle over submit_push_*/build_push_op
fea30f5 ReplicatedPG/Backend: move over send_pushes/send_pulls/prep_push_op_blank
c1c2deb ReplicatedPG/Backend: move over _failed_push
f981079 ReplicatedPG/Backend: move handle_*
666a316 ReplicatedPG/Backend: shuffle do_pull/do_push_reply
3e73472 ReplicatedPG/Backend: move _do_push,_do_pull_response,do_push
8daaeba ReplicatedPG/Backend: convert sub_op_pull
0e16230 ReplicatedPG: make log_subop_stats static
d53fc89 ReplicatedPG/Backend: shuffle sub_op_push_reply
8d447be ReplicatedPG/Backend: shuffle sub_op_push over to ReplicatedBackend
087f708 osd/: allow dout for ReplicatedBackend methods to work in ReplicatedPG.cc
7da308b ReplicatedPG: extract PGBackend::Listener recovery callbacks
3148b12 PG,ReplicatedPG: handle do_request in ReplicatedPG,PGBackend
30ac934 ReplicatedPG: pass on dump_recovery_info to PGBackend
138ccbe OSD,ReplicatedPG: let PGBackend handle the temp collection
62a1eb6 osd/: add PGBackend interfaces and stubs
f94e6a3 ReplicatedPG: Allow get_object_context caller to provide attributes
5b7fa62 ReplicatedPG: send_push is unused
de4cc87 FileStore: ping tphandle between each operation within a transaction
5f44a94 WorkQueue: add a workqueue which simply runs queued GenContexts
179001b osd/ReplicatedPG: fix bl resize on write vs truncate race
bd0f29a mon: OSDMonitor: do not write full_latest during trim
6b435f5 mon: don't list "--yes-i-really-mean-it" options as required
9d5b724 do not quote the variable to loop over
f45675c msg/msg_types: use proper NI_MAXSERV when formatting an IP address
5584b37 reverse the order of the mons in the init script when stopping
ca97fae qa: update snaps workunits for allow_new_snaps flag
9771b1d MDS: lock out snapshots until after a flag has been set in the MDSMap
b144170 mds: properly return log replay error
1d67aeb common/crc32c_intel_fast: fix compile-time #ifdef
a65a867 autoconf: fix build out of tree
fde0f86 Context: add GenContext templated on the callback argument
3cffff2 mds/Server: fix LOOKUPSNAP
12aa53c common/bloom_filter: move header from include/
9df9155 common/bloom_filter: make bloom_filter encodable
8dcdeb2 common/bloom_filter: make optimal parameter calculation static
eda807e common/bloom_filter: make mode match formatting
4d8f78b mon/PGMonitor: fix segfault when osdmap and pgmap stats are out of sync
4799368 Makefile: don't use srcdir in TESTS
7bbadf1 mailmap: add Matthew Roy, Matthew Wodrich
c8cae87 qa/workunits/mon/crush_ops.sh: fix test
812234c ErasureCode: get rid of extra copy when encoding
2422b2a autoconf: remove get_command_descriptions  dependency to gtest
04c7207 git: consolidate mails in commit logs
ac0faaa doc: Removed service ops language and added reference to operations.
3de3256 mon/OSDMonitor: fix 'ceph osd crush reweight ...'
073732c doc: Refactored diagram and text.
99c10bc doc: Updated diagrams, refactored text.
1c12eef osd/ReplicatedPG: fix leak of RepGather on watch timeout
1d67e15 osd/ReplicatedPG: fix leak of RepGather on large-object COPY_FROM
afa2468 ceph_test_rados: order racing read wrt to the COPY_FROM
3faf08f librados: add OPERATION_ORDER_READS_WRITES flag
9322305 osd/ReplicatedPG: respect RWORDERED rados flag
f6510c7 osd: change warn_interval_multiplier to uint32_t
84e1f09 arch/intel: fix old comment
366b608 arch/intel: use intel probe instructions for x86_64 only
1bce1f0 osd: change warn_interval_multiplier to uint32_t
4bc1818 ErasureCode: fix plugin loading threaded test
e50343e rgw: fix rgw test to reflect usage change
abb88d7 osd: revert 'osd max xattr size' limit
73289b3 mds: be more careful about decoding LogEvents
c32c51a ErasureCode: optimize padding calculation
60e9e85 vstart: set 'mon pg min per osd'
befdcfd mon/PGMonitor: health warn if pool has relatively high objects/pg
a684ac8 mon/PGMonitor: health warn if pg_num != pgp_num
dc7114e mon: warn if pg to osd ratio is too low
97471e3 ErasureCode: coding style conformance
bfd4db2 ceph_argparse: unit tests for validate_command config-key
fa396d9 ceph_argparse: unit tests for validate_command osd
c09d01c ceph_argparse: unit tests for validate_command mon
0ff0030 ceph_argparse: unit tests for validate_command mds
00d1504 ceph_argparse: unit tests for misc validate_command
253e53f ceph_argparse: unit tests for validate_command auth
d3bf39e ceph_argparse: unit tests for validate_command pg
1d54754 pybind: ceph_argparse unit tests foundations
f9c7bc6 pybind: catch EntityAddress missing /
ccf2200 mon: validate mon dump epoch as a positive integer
8f0bb2f pybind: unit tests for ceph_argparse::parse_json_funcsigs
96067e0 .gitignore gtags(1) generated files
c16b54f mon: get_command_descriptions support program
e0b5697 mon: convenience function to convert commands to json
9c9d7e6 autotools: set noinst_PROGRAMS
ee33ff8 autotools: group test scripts in check_SCRIPTS
ed73e0a doc: Adding context to the federated configuration guide.
157754b common/config: include --cluster in default usage message
362dba1 os, ceph_osd: Rename on_disk_version to target_version
7b7e004 os: Prior version bump should have updated this
27fb44b (origin/automake-fix-common) make: build common/secret only on linux
8407669 os: Code conformance of os/LFNIndex.cc
0d47bf8 os: Fix typo in comment
c4bcb46 common: Fix get_namespace() definition in hobject_t
1c0aecb osd: Add assert() on collection_getattr() failure instead of later decode crash
0655cc1 tools: Fix ceph_filestore_dump usage again
991139b doc: When bootstrapping mon set the correct caps for client.admin
9dfac9e ErasureCode: minimum_to_decode unit tests and optimization
9442cfa os: fix TestLFNIndex test warnings
945eb3c mds: remove dirfrags when purging stray directory
7be9b92 mds: avoid fetching backtrace when purging stray
67386e4 mds: don't trim stray inode from the cache.
0f3ba29 mds: remove unnecessary MDCache::maybe_eval_stray() calls
cbf1f3c mds: evaluate stray when releasing inode/dentry's reference
0a43974 (origin/automake-flags) automake: add per-target AM_CPPFLAGS
11d8d75 makefile-env: separate cppflags and cflags usage
2b75abb ceph_test_rados: fix COPY_FROM completion
935eb22 ceph_test_rados: fix seq_num, improve error output
4d0ee0b ceph_test_rados: limit max_in_flight to objects/2
303bc68 ceph_test_rados: do not COPY_FROM self
59ee51a osd/ReplicatedPG: handle COPY_FROM self
5cb7b29 mon: fix wrong arg to "instructed to" status message
9e98620 rgw: destroy get_obj handle in copy_obj()
c28dd12 note that ceph-deploy should not be called with sudo on certain situations
2ade5b6 doc: Updated graphic. Removed bullet points. Cleaned up RPM/YUM example.
c55d7ac doc: Updated graphic to use same name as command line examples.
1075443 doc: Added Recommendations and Get Involved to Intro.
5eb4db1 doc: Removed Get Involved from Quick Start.
af7ad1d doc: Changed title, and removed recommendations sections.
dc19d24 doc: Moved recommendations sections to Intro.
b1eeadd (origin/wip-6361) qa: workunits: cephtool: check if 'heap' commands are parseable
296f2d0 osd: OSD: add 'heap' command to known osd commands array
238fe27 mds: MDS: pass only heap profiler commands instead of the whole cmd vector
c98b910 perfglue/heap_profiler.cc: expect args as first element on cmd vector
e112a83 FileStore: only remove the omap entries if nlink == 1
7c1d2de lru_map: don't use list::size()
532e41a common/lru_map: rename tokens to entries
ca984e3 bufferlist: don't use list::size()
0681971 Makefile: add extra cls DENCODER_DEPS in the cls makefile, not rgw
9e0b5ea OpTracker: get rid of TrackedOp::received_time for the Message
a2d633b OpTracker: demand that a TrackedOp gets to own its Message for life.
f7f3005 OpTracker: provide a default implementation of TrackedOp::state_string
e9bcd4c osd: use TrackedOp::get_req() instead of direct access to the request.
ef1d62b OpTracker: include a destructor for the TrackedOp base class.
c293465 osd: change how we work around an interface limitation.
06e1bca OpTracker: move OpTracker pointer and some init code into TrackedOp
a8bbb81 OpTracker: remove the references to "osd" in config variables
3cb6abe OpTracker: move the OpTracker and OpHistory into common/TrackedOp.[h|cc]
5fdaccd OpTracker: add an init_from_message() to the TrackedOp interface
24c3389 OpTracker: start making the OpTracker into a generic
0678dcd OpRequest: remove obsolete comment about ref-counting (use OpRequestRef!)
53e17c2 osd: move pow2_hist_t out of osd_types and into include/
16ebb25 mon: fix wrong arg to "instructed to" status message
5c46fc4 doc: Made some changes and incorporated a draft diagram.
5bb7417 doc: Added draft of region/zone diagram.
bcc1680 mon: fix inverted test in osd pool create
f3718c2 (origin/prctl-getname-test) code_env: use feature test for PR_GET_NAME support
08fe028 rgw: use bufferlist::append() instead of bufferlist::push_back()
fd6646f Makefile: fix unittest_arch
5421d6d Makefile: fix unittest_crc32c
4c9497f ErasureCode: complete plugin loader unit tests
7324931 ErasureCode: plugin loading in progress flag
def05f0 ErasureCode: improve API implementation example
d8b5583 ErasureCode: proofread abstract API documentation
c63b4ed mds: allow delay in evaluating stray
298c39f mds: touch dentry bottom recursively
e303b96 mds: re-integrate stray when link count >= 1
862e0f1 mds: fix MDCache::truncate_inode_finish() journal
9601092 os/FileStore: fix uninitialized var
b66ac77 osdc/ObjectCacher: finish contexts after dropping object reference
ce723b5 doc/release-notes: v0.69
6ca6f2f (tag: v0.69) v0.69
5541a1d doc: Updated link to Storage Cluster Quick Start.
6af8e3c doc: Updated link to Storage Cluster Quick Start.
b1d58fa doc: Updated link to Storage Cluster Quick Start.
a39de7b doc: Made sysvinit and service sections parallel to upstart for clarity.
0fed6ab doc: Updated for 3-node deployment. Leaner discussion. More use cases.
3a3ef33 doc: Removed introductory material. Renamed the page.
c054469 doc: Updated for 3-node deployment and multiple Linux distributions.
31fff93 doc: Added Intro to Ceph to Index.
fcd749f doc: Excised content from "Getting Started" and created Intro to Ceph.
a80f831 ceph_test_rados: identify write seq_num in output
3a00187 librados: test copy_from without src_version specified
045b902 osd: allow a copy_from without knowing the src_version
83f12e4 ceph_test_rados: submit a racing read with every COPY_FROM
d050596 ceph_test_rados: use get_version64() throughout
cdc637f osd: block requests on object during COPY_FROM
f97277c osd: add infrastructure to block io on an obc
df7c36a osd/ReplicatedPG: factor some bits into finish_copy
5921703 ceph_test_rados: more readable output
4e29e36 osd/ReplicatedPG: stage object chunks to replicas during COPY_FROM
1f80d63 doc: Replaced code-block with inline literal to fix auto numbering.
7d5dfa2 doc: Made s3gw.fcgi paths consistent.
0d20cae mon: OSDMonitor: multiple rebuilt full maps per transaction
59147be osd: compute full ratio from kb_avail
89e8b8b ErasureCode: improve API implementation example
3966e6e ErasureCode: proofread abstract API documentation
971bf60 (origin/wip-buck-centos-core) Remove unneeded junit4 check
e38bd8d Removing extraneous code
cd6f4bc Use a loop for testing jdk paths
3cef755 fix some comments
ae7912f doc: Added conf example.
e55d59f doc: Updated usage.
0be2c87 doc: Removed --fs-type option and text.
874186b doc: Updated the usage scenario and made a few syntax edits.
abd2fcd ErasureCode: fix uninitialized variable warning
81983ba mon: OSDMonitor: update latest_full while rebuilding full maps
4ac1570 mon: OSDMonitor: smaller transactions when rebuilding full versions
4216eac rgw: try to create log pool if doesn't exist
b86c068 hadoop: remove hadoop shim
e7f7483 rgw: NULL terminate buffer before parsing it
3f8c969 (origin/fix-no-tcmalloc-build) make: add tmalloc lib dep in tcmalloc guard
daf417f osd/ReplicatedPG.cc: Verify that recovery is truly complete
139a714 osd/OSD.cc: Use MIN() so that we don't exceed osd_recovery_max_active
4633729 mon/OSDMonitor: make busy creating pgs message more explicit
40613b7 mon/MDSMonitor: don't reset incarnation when creating newfs
31e3a51 rgw: don't call list::size() in ObjectCache
91375d0 common: fix Mutex, Cond no-copy declarations
626669a rgw: drain pending requests before completing write
25a608c osd/ReplicatedPG: allow RepGathers with no version
155cdd2 osd: flag new/old temp objects in MOSDSubOp
c4260fa osd/ReplicatedPG: drop unused issue_repop() arguments
27ca5d2 osd/ReplicatedPG: drop dead code from parallelexec issue_repop
c9885e7 osd/ReplicatedPG: generate one-off unique temp object names
6cecd0d osd/osd_types: move coll_t::META_COLL definition
17c5d76 os/FileStore: implement collection_move_rename
ef7cffc os/ObjectStore: add collection_move_rename
288bef3 rgw-admin: Adds --metadata-key option to help Signed-off-by: Christophe Courtaut <christophe.courtaut@gmail.com>
0499948 rgw: when failing read from client, return correct error
558d9fc osd: bind objecter messenger to cluster address
1d1bf41 osd: name the objecter's messenger "ms_objecter" instead of "hbclient"
14c71ea Objecter: rename cancel_op -> cancel_linger_op
ab2506d test: update cache test since OSDs support redirects
76c343b osd: implement basic caching policies in ReplicatedPG
fbbe3ad Objecter: follow redirect replies from the OSD
29133fd Objecter: write a helper function to clean up ops that need to be retried
ac1c921 MOSDOpReply: add a redirect member
a45612c Objecter: add an Op::target_oid, and use it when submitting Ops
79f02d6 Objecter: rename Op::oid -> Op::base_oid
aeec0c6 osd: create a new request_redirect_t
c24e170 mon: fix syntax error in osd pool create args
780954e autoconf: use $(UNITTEST_CXXFLAGS) in tests
647188c ErasureCodeJerasure: plugin
e9e5391 ErasureCodeJerasure: define technique Liber8tion
63867e9 ErasureCodeJerasure: define technique BlaumRoth
9a82010 ErasureCodeJerasure: define technique Liberation
530fb8a ErasureCodeJerasure: define techniques CauchyOrig and CauchyGood
b70cb93 ErasureCodeJerasure: define technique ReedSolomonRAID6
65f1970 ErasureCodeJerasure: define technique ReedSolomonVandermonde
c8def86 ErasureCodeJerasure: unit test common to all techniques
454c116 mon: add key[=value] ... to osd pool create
a786ad7 ceph-disk: make initial journal files 0 bytes
8c76f3a crushtool: do not dump core with non-unique bucket IDs
bde2772 doc/release-notes: v0.67.3
c56e039 buffer: uninline, constify crc32c()
397b4c2 osd: add empty() function to object_locator_t
0b24be2 MOSDOpReply: more const-correctness
82e40a7 ReplicatedPG: do not meaninglessly fill in the reqid on make_writeable() cloning
e435468 ErasureCodeJerasure: base class for jerasure ErasureCodeInterface
9b4048a ErasureCodeJerasure: fix jerasure compilation
8ab29e9 ErasureCodeJerasure: import jerasure-1.2A
661b377 os/FileStore: pass old + new object name to lfn_link
deea63f osd: expose bytes used/avail via perf / asok
3bc618b qa: workunits: mon: crush_ops: test 'ceph osd crush move'
7d3799f (origin/wip-6230) mon: MonCommands: expect a CephString as 1st arg for 'osd crush move'
132e403 autoconf: use $(LIBOSD) $(LIBCOMMON) instead of libosd.a libcommon.la
4c5b3c7 doc: Syntax fix to suppress gitbuilder errors.
8bf858f doc: Removed mkcephfs reference.
494aff6 doc: Syntax fixes to suppress gitbuilder warnings.
95c0c6c doc: Syntax fixes to suppress gitbuilder warnings.
1e54d83 doc: Syntax fixes to suppress gitbuilder warnings.
68659a6 doc: Syntax fixes to suppress gitbuilder warnings.
1bb7225 doc: Syntax fixes to suppress gitbuilder warnings.
a6a7140 doc: Syntax fixes to suppress gitbuilder warnings.
ac609a4 doc: Syntax fixes to remove gitbuilder errors.
3921794 ErasureCodePlugin: plugin registry tests and example
916901f ErasureCodePlugin: plugin registry
b61369c ErasureCodePlugin: plugin interface
640f2f2 ErasureCode: example implementation : K=2 M=1
95d61c1 Fix usage to include export and import --type options
dde21bd ErasureCode: abstract interface
ff9beb2 doc: Syntax fixes to stop gitbuilder warnings.
9c09701 doc: Syntax fixes to stop gitbuilder warnings.
5900b43 doc: Syntax fixes to stop gitbuilder warnings.
99c42e1 make sure we use a version of sphinx that we can handle
726fe73 rados: fix typo
6949d22 automake cleanup: implementing non-recursive make
99c6be2 automake cleanup: renaming buildtest
417f1f2 automake cleanup: moving rados tool to tools subdir
3daf6ea automake cleanup: moving misc tools to tools subdir
0b267b3 automake cleanup: moving tests to test subdir
bf6341f automake cleanup: moving code away from include to common
bb312b6 automake cleanup: moving hobject from os to common
09b42c0 automake cleanup: renamed inttypes.h
7845115 automake cleanup: adding vta support to configure
c17d134 fix: build tests need libcrc.la
b5137ba init-radosgw*: fix status return value if radosgw isn't running
55a5271 cleanup: state_name in NamedState init list
1387278 rgw: fix get cors, delete cors
39c89dc common/crc32c_intel_fast: avoid reading partial trailing word
c3529ed cleanup: passing context to NamedState for ceph_clock
159693d cleanup: globals from libosd
258396d doc: Added entry for federated configuration to the index.
da5ccf7 doc: Added draft of configuration guide for federated gateways.
8d0a1db cleanup: reduced number of pointer indirection in osd
5dd0a83 cleanup: removing globals from common/obj_bencher
cf93c83 cleanup: removing refs to globals from libosd
9c4e626 cleanup: removed last references to globals from client
dfcee0c osd/ReplicatedPG: set reply versions for pg ops (PGLS)
c4414a3 osd/ReplicatedPG: set reply versions on dup op ACK
9a55129 rgw: flush pending data when completing multipart part upload
16b24f1 librados: make note of which calls steal the bufferlist contents
c8ec532 rgw: check object name after rebuilding it in S3 POST
6af5a53 rgw: fix certain return status cases in CORS
6ae4049 rgw: add COPY method to be handled by CORS
8203b9b rgw: fix CORS rule check
b564db8 rgw: don't handle CORS if rule not found (is NULL)
c540798 rgw: tie CORS header response to all relevant operations
83eb5d6 rgw: add a generic CORS response handling
df4f712 rgw: OPTIONS request doesn't need to read object info
77c2a33 rgw: remove use of s->bucket_cors
3e90c2a common: unit test for crc32c
3233336 common/crc32c_intel_fast: fix compile-time #ifdef
cfb07f1 arch: add NEON cpu feature detection
83a4848 doc: Updated usage for --infile syntax. Added zone name for zone syntax.
df11247 mon/OSDMonitor: fix POOL_OP_DELETE_SNAP early return
e95e707 doc: Organized into sections. Added zone/region and pool details.
9f44de5 doc/release-notes: v0.68
b05f7ea osd/ReplicatedPG: set reply versions for pg ops (PGLS)
5148aac osd/ReplicatedPG: set reply versions on dup op ACK
f566102 doc: remove 'Unexpected indentation' from versions doc.
a9a516a Correct syntax for generate swift key
ab69d99 mon: fix typo and remove redundant sentence
7c09ede mon: fix typo in comment
3c9f849 doc: erasure code ghobject is made of gen_t + shard_t
b4cf0f2 (tag: v0.68) v0.68
dcbdeaf doc: Fix repo URL for Ceph cloning (dev/generatedocs)
996af2d ceph_test_rados: test COPY_FROM
ed68079 osd: initial COPY_FROM (not viable for large objects)
3a8adf5 objecter, librados: add COPY_FROM operation
746e78c doc: Updated manual install to include sync agent, ARM packages, and DNS configuration.
c367d6f ceph_test_rados: add missing kick for rollback
1d1f7f1 rgw: change watch init ordering, don't distribute if can't
087800e osd: provide better version bounds for cls_current_version and ENOENT replies
6019558 rgw: Allow wildcard in supported keystone roles.
f79b379 osd/ReplicatedPG: set user_version in waiting_for_commit replies
e8506b5 osd/ReplicatedPG: do not set ctx->user_at_version unless ctx->user_modify
99793d9 osd/ReplicatedPG: do not log a user_version on the snapdir object
72c6c30 osd/ReplicatedPG: log previous user_version on clone
cc8e901 osd/ReplicatedPG: do not log user_version on deletion events
7d72e55 osd/PG: only raise PG's last_user_version if entry is >
1610768 osd: debug user_versions a bit
1c5e58a osdc/Objecter: fix dereference of NULL pg_pool_t
a200e18 Validate S3 tokens against Keystone
e48d6cb mon: fix uninitialized Op field
a5d815d automake cleanup: uninitialized version_t
4f6c6b2 osd/ReplicatedPG: do not requeue if not primary
b0a30a5 osd: COPY_GET operation
8d74f41 osd/ReplicatedPG: factor {execute,reply}_ctx() out of do_op()
bc99437 osd: feed OSDMaps to the Objecter
3470944 osd: add an Objecter instance
a6b04c5 osd: discriminate based on connection messenger, not peer type
20b25c6 ceph-osd: rename msgr vars
a1dd98d osd: add a separate messenger for the Objecter
ea61aba osd/ReplicatedPG: add whitespace
0712d95 osd: less whitespace
36d6e6f osdc/Objecter: allow ops to be canceled
42b3d55 osdc/Objecter: only request map on startup if epoch == 0
c6d0b10 osd, objecter: clean up assert_ver()
8ba50c0 osd/ReplicatedPG: drop src_obc.clear() calls
6473060 os/ObjectStore: add bufferlist variant of setattrs
7ec0b4f unittest_lfnindex testing older HASH_INDEX_TAG
8a65ae8 doc/rados/operations/pools: remove experimental note about pg splitting
13aac48 workunits: add a test for caching redirects
3516996 mon/OSDMonitor: 'osd tier {set,remove}-overlay <pool> [tierpool]'
dae9a34 osd_types: note that write_tier wins if read_tier is different
efb7ab2 qa/workunits/cephtool/test.sh: test osd tier CLI
e3fb912 Objecter: respect read_tier & write_tier for initial op submission
4e43985 mon/OSDMonitor: 'osd tier cache-mode <pool> <mode>'
b76953c Objecter: be careful about precalculated pgids
665acc1 Objecter: add an Op::target_oloc and use it instead of base_oloc in send_op()
e2fcad0 Objecter: rename Op::oloc -> Op::base_oloc
64774e5 os: LevelDBStore: ignore ENOENT files when estimating store size
e60d4e0 ceph-post-file: use mktemp instead of tempfile
96aaa5e ceph_test_rados: rollback bumps user_version
42d65b0 PGLog: initialize writeout_from in PGLog constructor
af0a0cd mon/OSDMonitor: 'osd pool tier <add|remove> <pool> <tierpool>'
5e2c86a osd/OSDMonitor: avoid polluting pending_inc on error for 'osd pool set ...'
ed62c45 osd_types: add pg_pool_t cache-related fields
4f7fce5 osd/ReplicatedPG: drop dout from object_context_destructor_callback
00b6a94 osd/ReplicatedPG: remove debug lines from snapset_context get/put
7a7361d rgw: Fix S3 auth when using response-* query string params
91616ce ceph.spec.in:  remove trailing paren in previous commit
b03f241 ceph.spec.in:  Don't invoke debug_package macro on centos.
e20d1f8 ceph_test_rados: validate user_version
c8dcd2e osd/ReplicatedPG: set version, user_version correctly on reads
9374dc8 messages/MOSDOpReply: fix user_version in reply (add missing braces)
985a140 librados: add get_version64()
7e72224 rbd.cc: propagate some errors to user-space when they're available
b2b0f20 qa: workunits: mon: test snaps ops using rbd.
0e85074 mon: OSDMonitor: return earlier on no-ops over currently committed state
274b4b9 mon: OSDMonitor: don't propose on prepare_pool_op()
fab7954 mon: OSDMonitor: check if pool is on unmanaged snaps mode on mk/rmsnap
f808c20 PGLog: maintain writeout_from and trimmed
fd3fd59 doc/release-notes: v0.56.6 and .7 bobtail
c240285 mon: discover mon addrs, names during election state too
61b40f4 doc/dev/cache-pool: document cache pool management interface
b91c1c5 add CEPH_FEATURE_OSD_CACHEPOOL
1c0d75d PGLog: don't maintain log_keys_debug if the config is disabled
fe68b15 PGLog: move the log size check after the early return
6c432f1 doc: update to describe new OSD version support as it actually exists
c119afa ReplicatedPG: add OpContext::user_at_version
7db71fc MOSDOpReply: stop filling in replay_version from the MOSDOp to begin with
2c05b4f MOSDOpReply: switch to comprehensive instead of individual version setters
de20997 MOSDOpReply: add enough fields to be backwards compatible.
dc9d3fc osd: actually fill in user_version in pg_log_entry_t
cc1c4a7 osd: add last_user_version to pg_info_t
69280e2 ReplicatedPG: remove OpContext::reply_user_version
2e764a8 osd: switch object_info_t::user_version to be a version_t
57e346b ReplicatedPG: Fill in the MOSDOpReply's user_version
9b998a9 ReplicatedPG: set the replay version based on the at_version
e42ef0c Objecter: expose MOSDOp's new user_version instead of the replay_version
ff1a573 Objecter: librados: mass switch from eversion_t to version_t
931bf7e Objecter: rename Op::version to Op::replay_version
17e32f9 MOSDOpReply: add user_version field
295a84b doc: include plan for new user_version support
1f608bd ReplicatedPG: do not do a redundant set of ctx->new_obs.oi.version
37bba41 ReplicatedPG: remove long-dead branch
f400816 MOSDOpReply: rename *_version() -> *_replay_version()
7a7ae60 MOSDOpReply: rename reassert_version -> replay_version
b5ea74c docs: document how the current OSD PG/object versions work
37850e1 ceph.in: add to $PATH if needed regardless of LD_LIBRARY_PATH state
3266862 doc: Updated to accurately reflect that upstart applies to a single node.
8df504c ceph.spec.in:  radosgw package doesn't require mod_fcgi
a10ca4b librbd: fix debug print in aio_write
228510f cleanup: removed last references to g_conf from auth
ea2fc85 SharedPtrRegistry: get_next must not delete while holding the lock
14c31dd doc : erasure code developer notes updates
af5281e common: move SharedPtrRegistry test after t.join
c5b5ce1 osd: install admin socket commands after signals
76a38c3 mon/DataHealthService: preserve compat of data stats dump
f0805cb (origin/wip-6122) test/librados/cmd.cc: tolerate thrashing on pg_command tests
d571825 WBThrottle: use fdatasync instead of fsync
3528100 FileStore: add config option to disable the wbthrottle
ed712c1 fix nss lib name
378728e update the README with required RPM packages
c6a7377 Improve warning message when there are unfound objects, but probing hasn't finished yet.
96621bd mon: DataHealthService: monitor backing store's size and report it
46fb86a mon: mon_types: DataStats: add 'dump(Formatter*)' method
9a1badf mon: MonitorDBStore: rely on backing store to provide estimated store size
41149c4 test: ceph_test_store_tool: output estimated store size on 'get-size'
51fe5da rados-config: do not load ceph.conf
cc3249b osd/ReplicatedPG: require write payload match length
14a1e6e osd/ReplicatedPG: verify we have enough data for WRITE and WRITEFULL
2031f39 ceph_rest_api.py: create own default for log_file
83c8588 ReplicatedPG: mark stats invalid when marking unfound lost
60abe08 ReplicatedPG: make watch timeout configurable
7929228 osd/OSDCap: allow . for unquoted strings
1f573c8 mon/MonCap: allow . in unquoted string
e48ef9e librados: make safe and complete callback arguments separate
476e490 mds: remove waiting lock before merging with neighbours
a816060 doc: Fixed broken link by adding Transitioning to ceph-deploy to this doc.
99a2ff7 os: make readdir_r buffers larger
2df66d9 os: fix readdir_r buffer size
7a091d3 os: KeyValueDB: expose interface to obtain estimated store size
fe50103 mon/Paxos: fix another uncommitted value corner case
0373d74 rgw: bucket meta remove don't overwrite entry point first
f040020 ceph-disk: specify the filetype when mounting
f404023 doc/release-notes: v0.67.2
3a4f1ce rgw: Adds --system option help to radosgw-admin
5637516 osd: add 'osd heartbeat min healthy ratio' tunable
40f43a0 QA: Compile fsstress if missing on machine.
4b97fcb QA: Compile fsstress if missing on machine.
ab4e85d PGMonitor: pg dump_stuck should respect --format (plain works fine)
a0f3c64 init-ceph: behave if incompletely installed
309569a mon/MonClient: release pending outgoing messages on shutdown
226059e MOSDOpReply: set reassert_version for very old clients
98583b5 yasm-wrapper: more futzing to behave on fedora 19
3d55534 rgw: fix crash when creating new zone on init
5c5980b ceph.spec.in:  remove trailing paren in previous commit
9b667ce ceph.spec.in:  Don't invoke debug_package macro on centos.
02e14c7 Makefile: move all crc code into libcrc.la
e55809a crc32c: add intel optimized crc32c implementation
f008ac4 arch: add cpu probing
841a695 yasm-wrapper: hide libtool insanity from yasm
55fa2e8 mon: Monitor: remove lingering debug message from f087d84b
157f222 doc: fix erasure code formatting warnings and errors
d70fd35 mon/Paxos: ignore do_refresh() return value
617dc36 enable mds rejoin with active inodes' old parent xattrs
b419924 init-rbdmap: fix error on stop rbdmap
9242d01 ceph-monstore-tool: shut up coverity
123f79b store: fix issues reported by coverity
d980f58 ReplicatedPG: create ObjectContext with SharedPtrRegistry
bd9f73d ReplicatedPG: replace object_contexts.find with object_contexts.lookup
95349c0 ReplicatedPG: add Context to cleanup the PG after an ObjectContext deletion
833a225 ReplicatedPG: replace map iterators with SharedPtrRegistry::get_next
8c74594 ReplicatedPG: remove lookup_object_context method
13f6807 ReplicatedPG: remove reference counting logic
ff70e76 ReplicatedPG: ObjectContext * becomes ObjectContextRef
7e85c63 ReplicatedPG: ObjectContext is made compatible with SharedPtrRegistry
1688fb4 ReplicatedPG: add Mutex to protect snapset_contexts
e1be37a PG: remove unused PG::_cond
be04918 sharedptr_registry: add a variant of get_next() and the empty() method
8784564 objecter: fix keys of dump_linger_ops
38a0ca6 objecter: resend unfinished lingers when osdmap is no longer paused
d26ba3a rgw: change cache / watch-notify init sequence
576dce0 doc: Clarified quorum requirements.
deb43d9 doc: Fixed typo.
bebba3c doc: fix erasure code formatting warnings and errors
8437304 build-depend on yasm
33783e5 crc32c: note intel crc code copyrights
6ee1591 crc32c: add intel baseline algorithm
552bfe5 vstart.sh: Adds more ENV variables to configure dev cluster
2af59d5 ceph-disk: partprobe after creating journal partition
edf2c34 .gitignore: ignore test-driver
9833e9d fuse: fix warning when compiled against old fuse versions
6abae35 json_spirit: remove unused typedef
c9cdd19 gtest: add build-aux/test-driver to .gitignore
e8e50f6 crc32c: remove old intel implementation
a286090 common/crc32c: refactor a bit
981eda9 mon/Paxos: always refresh after any store_state
7e0848d mon/Paxos: return whether store_state stored anything
b9dee22 mon/Paxos: cleanup: use do_refresh from handle_commit
6ef1970 pybind: fix Rados.conf_parse_env test
eca53bb mon/PGMap: OSD byte counts 4x too large (conversion to bytes overzealous)
3a83129 erasure code : plugin, interface and glossary documentation updates
8e53301 Do not use some compilation flag invalid for clang
1f851cb PG: remove old log when we upgrade log version
6eee73c ceph-fuse: fallocate appears in fuse 2.9.1, not 2.9
1019274 client: do not mark_caps_dirty for generic fallocate
c339456 client: guard fallocate with #ifdefs
35b00c8 Ceph-fuse: Fallocate and punch hole support
c2548a5 mon: add 'pg dump delta' to get just the rate info
00080d7 PGLog: add a config to disable PGLog::check()
2398c1b doc: Title change.
220f7d6 osd/ReplicatedPG: remove broken AccessMode logic
823435c examples: add a librados/hello_world program
67a95b9 ceph: parse CEPH_ARGS environment variable
eef7cac rados pybind: add conf_parse_env()
9dda1cc doc/release-notes: v0.61.8
090e4c4 filestore-config-ref.rst: mark some filestore keys as deprecated
4e86be9 librados: synchronous commands should return on commit instead of ack
f5636be mon: make MonMap error message about unspecified monitors less specific.
a846294 auth-config-ref.rst: fix signature keys
4677041 objclass: move cls_log into class_api.cc
70790ab doc/dev/filestore-filesystem-compatibliity: remove outdated xattr notes
2f221fe doc: Updated upgrade doc to include dumpling and incorporate ceph-deploy.
060a463 Makefile: move objclass/*.cc to libosd.la
8ac1af8 doc/changelog: add missing file
d0a6ff9 os/FileStore: initialize blk_size on _detect_fs()
ed4fe32 doc/release-notes: v0.67.1
4fd34be mds: create only one ESubtreeMap during fs creation
6bb7c62 doc: quickstart: be more explicit that node == mon node
3cbf6a7 rgw: drain requests before exiting
d08e05e ceph-post-file: single command to upload a file to cephdrop
50cc2ef doc: Removed old mkcephfs references.
fa10c41 doc: Removed mkcephfs references.
31c1501 doc: Updated script for dumpling.
16f4bd5 doc: Updated APT script for dumpling.
e97100d doc: Removed mkcephfs references. Did a bit of clean-up work.
211aada ReplicatedPG: add osd_recover_clone_overlap_limit to limit clones
6f0a498 config_opts: add two ceph-rest-api-only variables for convenience
aee053c mon: MonitorDBStore: output to derr instead of std::cout
1c50c44 osdc/ObjectCacher: do not merge rx buffers
b59f930 osdc/ObjectCacher: match reads with their original rx buffers
93d8be2 osd: Add perf tracking for all states in RecoveryState
895d531 cls/hello: hello, world rados class
359850b osd: enforce RD, WR flags for class methods
f61698d cls_rbd: remove old assign_bid method
93ac92d librbd: remove mostly-useless assign_bid helper
610dc01 osd: do not return data payload for successful writes
681436a common/Preforker: shut up warning
266460e ceph.in: --admin-daemon was not returning EINVAL on bad command
12b012a PendingReleaseNotes: reflect 'osd crush set' behavior change
249c7f2 vstart.sh: s/osd crush set/osd crush add/ as it's supposed to be
9c624fb mon: OSDMonitor: don't expose uncommitted state on 'osd crush add/set'
995a316 mon: OSDMonitor: document 'prepare_command' wrt expected behavior of no-ops
88464a6 mon: OSDMonitor: don't expose uncommitted state on 'osd crush link'
97c3a9a mon: clarify 'osd crush add' vs 'osd crush set'
ed6233e mon/MonCap: remove useless 'osd crush add' perm from profile bootstrap-osd
0380475 mon: AuthMonitor: fix some >80 columns debug strings
737fe1f mon: AuthMonitor: fix whitespaces
cf189cf mon: AuthMonitor: remove dead code
35565ee mon: use str_join instead of std::copy
fc23cfe config: fix stringification of config values
ce3a094 common: add str_join helper
e7836e6 mon/PGMap: fix typo
3ba4dc3 Revert "config: fix stringification of config values"
fefe0c6 config: fix stringification of config values
9f1ad4d Document unstable nature of CephFS
3d7a949 Renamed filestore_backend test
5a15369 store: Add (experimental) ZFS parallel journal support
a25d73e store: Abstract the underlying filesystem functionality
24ec320 Ceph-qa: change the fsx.sh to support hole punching test
086abe4 doc: Fixed typo.
4422f21 rados.py: fix Rados() unicode checking
34da9cb rados.py: fix Rados() backwards compatibility
2cfcb77 mon/PGMap: degraded what?
49ddecd mon: status: client io, recovery io prefixes
94c3f29 OSDMonitor: add 'osd perf' command to dump recent osd perf information
ebde89d ObjectStore: add ObjectStore::get_cur_stats and impl in FileStore
16ed0b9 librados: fix async aio completion wakeup
7a52e2f librados: fix locking for AioCompletionImpl refcounting
4f31756 doc: Added dumpling to RPM installation.
d38a041 doc: Minor tweaks to debian install.
456a394 doc: Added dumpling installation for Debian/Ubuntu.
dfd5854 remove racy test assertions
90ccd26 qa/workunits/fs/multiclient_sync_read_eof.py
95f3353 osd_types: add osd_perf_stat_t type
d1a8165 client: add enclosing object for asok dumps
0c23633 pybind/ceph_argparse: GPL -> LGPL2
2206f55 rbd.cc: relicense as LGPL2
fbc65ea mon/PGMap: make pg state indentation cleaner
6d8d726 mon: status: only include mdsmap if epoch > 1
a9033eb mon: move recovery rate to a separate line
c926d08 mon: move mdsmap up
eeed33a mon/PGMap: make si modifiers look prettier
ef9c991 mon: make pg info in 'status' more informative and visually parseable
9b94f90 types: pretty_si_t
1860ed9 mon/PGMap: break out print_oneline_summary
054fd88 mon: expand osd summary (flags on separate line)
f417b10 osdmap: move oneliner summary to separate function
6f5d803 librados: fix MWatchNotify leak
810c52d rgw: do not leak handler in get_handler() error path
e3b7bc5 (tag: v0.67) v0.67
977b7f5 doc/release-notes: fix rst
f501ec7 doc/release-notes: upgrade sequence
de7bbdb doc/release-notes: roll-up of upgrade/compat notes from cuttlefish to dumpling
6df75da init-rbdmap: minor fix no rbd exist
d9cb2ea init-rbdmap: fix for recursive umount
c927f89 rgw: rgw-admin throw an error when invalid flag is passed
b9a5664 Makefile.am: fix libglobal.la races
c81edf1 tools: ceph-monstore-tool: allow copying store contents to a new location
2632846 rgw: fix multi delete
c566c03 doc: complete S3 features status from existing doc page
ef91c69 mon: mon_cluster_log_file_level
cb50b5a ceph-disk: fix mount options passed to move_mount
b66a3d6 config_opts.h: reduce osd_recovery_max_active and osd_recovery_max_single_start
b221a42 doc/release-notes: adjust whitespace
bec6f09 doc/release-notes: v0.67 release notes
44b093c ceph: retry new-style mon command if we get EINVAL from the old-style command
7ed6de9 common: pick_addresses: fix bug with observer class that triggered #5205
8bf3971 rearrange the documentation to be inserted and maintained in master
068baae rgw: return 423 Locked response when failing to lock object
9029555 rgw: make RGWHTTPClient callback methods pure virtual
71177fe rgw: rename read_header() to receive_header() where needed
1563613 rgw: rename data receive callbacks in swift token revocation
eade36d PendingReleaseNotes: note 'ceph daemon ...' argument behavior change
e1666d0 Fix compilation -Wmismatched-tags warnings
5082fec doc: Add a page about rgw S3 API compliance
fd06261 ant is missing from the list of packages to install
980a073 document the write / read path for erasure encoding
0aacd10 RadosClient: shutdown monclient after dropping lock
ca3987f mds: notify clients about deleted inode
b2515b9 buffer: change #include order
6cbe0f0 make sure we are using the mount options
34831d0 make sure we are using the mount options
fd19235 ceph.in: return EINVAL on daemon command error
0be1475 ceph.in: Re-enable ceph interactive mode (missing its output).
2e28087 mon: fix 'osd crush rule rm ...' dup arg
0c1fd62 qa/workunits/cephtool/test.sh: test set/unset of all osd flags
298e7d8 mon/MonCommands: fix typo nobackfile -> nobackfill
afa21e8 Add back the mistakenly removed "ceph osd set noscrub/nodeep-scrub"
6820390 OSD: suspend timeout on process_peering_events pg lock
da69756 test: mon: moncap: add 'allow command foo with arg="bar.baz"' tests
258135b qa: workunits: mon: workunit to stress the monitor's caps
5c6dc1c mon: AuthMonitor: change 'auth add' behaviour
94002c4 mon: drop old _allowed_command()
612444a mon: services: no longer needed to enforce caps on a per-service basis
2071af2 mon: Monitor: purge old permission checking format on handle_command()
f087d84 mon: Monitor: check caps considering command's requirements
944f3b7 OSD: only start osd_recovery_max_single_start at once
8b53a14 ReplicatedPG: ping tphandle between pushes
d0cbdde ReplicatedPG: ping TPHandle during scan_range
95b3604 OSD: also suspend timeout while grabbing recovery_tp lock
321f57d OpRequest: don't warn as quickly for slow recovery ops
0017010 mon, osd: Clean up "flush(stringstream)" continued
e904018 mon, osd: Clean up "flush(stringstream); bl.append(stringstream.str())
2e9c25f doc: fixing reported bug in CRUSH map example.
cafccfa doc: Added many new fields to config reference.
a5d8605 doc: Added trouble shooting entry. Fixed formatting.
e3d59a2 doc: Nomenclature update.
1db0f25 doc: Nomenclature update.
a38ab07 doc: Nomenclature update.
0f56e3e doc: Nomenclature update.
ea80532 doc: Nomenclature update. Added topic for monitor key caps. Added default pool steps.
db27c3f qa/workunits/cephtool/test.sh: add tests for 'pg dump ...'
42582f0 mon/PGMonitor: add 'pg dump pgs_brief' subcommand
a092995 mds: fix locking, use-after-free/race in handle_accept
9e88b1b rgw: only log (as in ops logging) certain operations
b165d33 rgw_admin: flush replicalog entries
6dd4ff8 cephtool/test.sh, rest/test.py: add tell command tests
28d58eb ceph.in, ceph_rest_api.py: import only used syms from ceph_argparse.py
55095d5 cephtool/test.sh: add a few tests for invalid command args
71ff794 ceph_argparse.py: add stderr note if nonrequired param is invalid
9466a0b Fix "too few args validate"
1cd6e2e fix invalid cluster naming in example
0304dfb Add links to OSD internals related tracker items.
0d1040d Add links to scrub related tracker items.
349e7900 Add links to peering related tracker items.
4236147 Add links to recovery related tracker items.
1286288 Add links to backfill related tracker items.
160fa71 fix typo
ac6f3b7 M+K means M data + K parity and implies M chunks necessary to recover
0c22dad mds: don't issue caps while session is stale
8f67adf mds: change LOCK_SCAN to unstable state
f86828d mds: handle "state == LOCK_LOCK_XLOCK" when cancelling xlock
63a21b4 mds: remove "type != CEPH_LOCK_DN" check in Locker::cancel_locking()
3c3b2ce mds: revoke GSHARED cap when finishing xlock
7555819 mds: fix cap revoke confirmation
e5d9ac6 qa/workunits/cephtool/test_daemon.sh: we should error on bad command
9e7d6d5 PG: set !flushed in Reset()
826478c dev/osd_internals,src/osd: add erasure_coding.rst and PGBackend.h
ae15381 rgw: only fetch cors info when needed
b139a7c rgw: don't read cors attrs if there's no bucket in operation
43c2712 rgw: rename sync-type to update-type
bbac69c rgw: only check version if meta object exists
6256d68 Add the definition of PG temp to the glossary
caaaf2c ceph.spec.in: merge back JUnit handling from SUSE spec
cbf3a11 ceph.spec.in: move junit BuildRequires to the cephfs-java subpackage
4a95796 ceph.spec.in: use snappy-devel only on RHEL derivatives
17b460c ceph.spec.in: add missing buildrequires for Fedora
ef20542 Fix for Swift key command
c70e59e mon/MDSMonitor: don't call all EINVALs "unrecognized command"
c9e8ff2 rest/test.py: retry mds setmap in case epoch has changed
dc1d95d rest/test.py: expect_nofail() to allow examination of reason
4a6eff8 Verify that deleting op never in check_latest_map_ops map
600e6ac osdc: op left in check_lastest_map_ops
175feb9 rgw_rados.cc: fix invalid iterator comparison
b4ed4e2 qa/workunits/cephtool/test_daemon.sh: sudo
d651658 osdc: Add asserts that client_lock is held
5bd061c test: Fix valgrind found "Mismatched free() / delete / delete []"
c48644d qa: Add workunit that hangs for manual thrasher testing
00dc634 ceph: developer mode: set PATH, too
e70e08c cephtool/test.sh: add tests for mon daemon command
47d0d64 Make all AdminSocket commands use argparse/cmdmap.
736d6a1 rgw: fix set_buckets_enabled(), set_bucket_owner()
0e125e0 Objecter: set c->session to NULL if acting is empty
16adb91 (tag: v0.67-rc3) v0.67-rc3
e747fa8 Revert "Use dh_installinit to install upstart job files"
ebab04e mon: add missing state name
b8af38b mon: allow others to sync from us across bootstrap calls
634dcf3 mon: drop useless sync_reset() calls
f7d1902 mon/Paxos: be more vocal about calling elections
eb6e6da rgw: keep a region connection map
f10c2e7 rgw: cors subresource needs to be in canonical auth header
b5e7448 rgw: set bucket attrs are a bucket instance meta operation
68730d8 rgw: track bucket instance oid
acd16d1 rgw: read / write bucket attributes from bucket instance
f3eda63 mon/PGMonitor: fix 'pg dump_[pools_]json'
099ac51 mon: fix xml element name
ee9f04c check_new_interval must compare old acting with old osdmap
1f13d8a OSD: suspend tp timeout while taking pg lock in OpWQ
f1bd4e5 WorkQueue: fix bracing on reset_tp_timeout
a6cd9fe osd: get initial full map after a map gap
e24b502 osd: fix off-by-one in map gap logic
251a6a4 Use dh_installinit to install upstart job files
b62845e doc/changelog/v0.61.7
a46f60a doc/dev/repo-lab-access: notes
12c1f11 ceph_test_rados: print version banner on startup
74c1bec ceph-authtool: fix cli tests
7b683f7 test/system/*: parse CEPH_ARGS environment
347b5a2 ceph-authtool.8: add missing commands to man page
86b2632 ceph_authtool.cc: update help/usage text
4b6c569 mon/DataHealthService: do not name xml key after mon
6881ab3 debian, rpm: make python-ceph depend on python-requests
2ec480b replace in_method_t with a counter
6b16cd1 unit tests for sharedptr_registry
09ee092 pybind/rbd.py: remove unused import of 'pointer'
2460118 cephfs.py: remove unused imports
865d5e9 rados.py: fix bad indentation
6eadb87 ceph_argparse.py: add missing spaces after comma
da4d23e ceph_argparse.py: remove unnecessary semicolons
a48b391 ceph_rest_api.py: fix bad indentation
2594831 rgw: fix leak of RGWDataChangesLog::renew_thread
a313563 rgw: free resolver on shutdown
59b13ce rgw: fix up signal handling
bd0e35f test/admin_socket: fix admin_socket unit tests
9486536 rgw: fix RGWFormatter_Plain
535d870 common/admin_socket: do not populate empty help strings
b4bde3c common/perf_counters: fix unit tests
2aa9afa common/perf_counters: fix missing decimal in time, quoting
a8c1a2a common/Formatter: add dump_format_unquoted()
0041e9f rados.py: missing parameter to make_ex()
8af4775 ceph-rest-api: clean up options/environment
629326a qa/fs/.gitignore
803a1fd ceph_test_admin_socket: fix unit test
a419354 message: Fix asserts that dont' trigger
a9ca623 librados: EINVAL on a negative osd id
3f93691 ceph.in: make osdids() (and mon, mds) work on old mons
4b73900 osd: humor coverity
323bdaa mon/MonCap: mds needs to subscribe to the osdmap
14a3e2d remove unused fiemap code
6faf8b6 PendingReleaseNotes: note on 'ceph tell <pgid> ...'
aa00ace ceph_rest_api.py: cleanup, more docstrings, unused vars
d75b6ea ceph_argparse.py: make find_cmd_target handle tell <pgid>
8985e1c ceph_argparse, mon: make "tell <pgid>" work (duplicating "pg <pgid>")
7b42dee ceph_rest_api.py: obtain and handle tell <osd-or-pgid> commands
6ac8aed mon/PGMonitor: reset in-core PGMap if on-disk format changes
de51aac rgw/rgw_metadata.cc: delete md_log (RGWMetadataLog) in destructor
a45e296 rgw/rgw_rest_log.cc: free 'handle' to prevent memory leak
94cefc7 test_cls_log.cc: fix resource leak, delete 'rop'
87f8e8f test_cls_log.cc: remove empty lines
44f43ff test_cls_statelog.cc: fix memory leak, delete 'rop'
143b843 test_cls_version.cc: close some memory leaks
a90a2b4 upstart: stop ceph-create-keys when the monitor stops
6f99622 osd: make open classes on start optional
c24e652 osd: load all classes on startup
bcbb807 PG: add formatted output to pg <pgid> query, list_missing
6e6ceff OSD: "tell <osd.n>" version, bench, dump_pg_recovery_stats: formatted
c9fcda8 OSD: provide newer command descs with module/perm/avail
cd16d73 ceph.in: clean up help, fix partial matching on all help
cb38762 ceph.in: admin_socket() now validates command and passes format
67eb7de ceph_argparse.py, ceph.in: validate_command: stop handling format
ba6ca58 In general, flush in caller of dump worker rather than worker
c562b72 FileStore: fix fd leak in _check_global_replay_guard
1e991ed add condrestart to the sysvinit script
c7c4c23 Formatter, admin_socket: make default formatter be json-pretty
3f598e8 AdminSocket users: use generic formatting
4aeb73a ceph_rest_api.py: reversed test for failed request
47d0937 rest/test.py: earlier versions of requests.py don't quote ' ' in params
6951d23 OSD: tolerate holes in stored maps
fbf74d9 ceph_rest_api.py: return error in nonformatted mode
8b3d7a1 ceph_rest_api.py: actually remove the trailing / on baseurl
dfabc61 mon/MonCap: match param for entity (not name)
ca8ac95 mon: translate caps=[k1,v1,k2,v2] into [caps_k1=v1, caps_k2=v2]
05b6c7e mon/Paxos: share uncommitted value when leader is/was behind
063c71f rgw: expose the version of synced items to the poster
81b62b5 rgw: return the update status on sync requests
8ffc4ca rgw: add sync state parsing code and REST interface
18eabd3 rgw: pass the sync mode into the RGWMetadataManager::put() calls.
4f9855e rgw: add preliminary support for sync update policies on metadata sync
176aa39 remove old push_to_kclient.pl
ebb9ace ceph-disk: use new dumpling-style osd caps if we can, or fall back to old-style ones
b46fb62 osd: Don't put functional code inside of an assert
27a0b86 ceph_argparse.py: wrong variable used if valid() fails for Ceph{Osd}Name
f653aa5 config_opts.h: increase xfs,btrfs wbthrottle defaults
78214af doc/release-notes: v0.61.7
870c474 FileStore::_collection_rename: fix global replay guard
0dc3efd HashIndex: reset attr upon split or merge completion
37a4c4a test/filestore/store_test: add test for 5723
cb3ee1e rgw/rgw_metadata.h: init prefix in initialization list
6bc0d04 test_rgw_admin_log.cc: remove unused variable 'creds'
dda1014 test_rgw_admin_log.cc: use static_cast<>() instead of C-Style cast
8f45a73 test_rgw_admin_opstate.cc: remove unused variable 'creds'
e4dfe8a test_rgw_admin_meta.cc: remove unused variable 'creds'
9d4c42f test_rgw_admin_opstate.cc: use static_cast<>() instead of C-Style cast
4c778e2 test_rgw_admin_meta.cc: use static_cast<>() instead of C-Style cast
a8b70f0 doc/release-notes: v0.67-rc2
41930b5 ceph.spec.in, debian/control: python-ceph depends on python-flask
0018b45 (tag: v0.67-rc2) v0.67-rc2
fe2019c rest/test.py: cope with older requests.py versions
fd1fd66 ceph-disk: use new get_dev_path helper for list
0b8cad1 ceph_rest_api.py: allow config section fallback
d7df620 global/signal_handler: poll on the control pipe, too
085f129 ceph.in: remove dead code
1579c34 rest/test.py: osd lspools should be a 'GET'
e839420 MonCommands.h: osd pool delete "rw" perms, osd pool set no longer exp
9285506 ceph.in/ceph_argparse.py: move find_cmd_target() to ceph_argparse.py
c2131d4 mon/OSDMonitor: search for latest full osdmap if record version is missing
a055988 rgw/rgw_metadata.h: init cur_shard in LogListCtx with 0
ebff1eb rgw/rgw_metadata.cc: fix possible null dereferencing
6e6ef01 os/ObjectStore.cc: don't fallthrough after OP_OMAP_RMKEYRANGE
27e38e4 mon/Monitor.cc: init scrub_version with 0 in constructor
a7a7d3f test: test_store_tool: global init before using LevelDBStore
76cd7ac mon: OSDMonitor: fix a bug introduced on 97462a32
1cdb3ec configure.ac:  Remove -rc suffix from the configure version number.
c8d66b7 Remove fuse-utils from Recommends in debian/control
b7c40ec configure.ac:  Set version number to match git describe.
4444c94 doc/release-notes: v0.61.6
8e4a78f global/signal_handler: use poll(2) instead of select(2)
4183b74 mon/MonmapMonitor: make 'mon remove ...' idempotent
2338a32 client: signal mds sessions with Contexts instead of Conds
3207542 client: add Context*-based wait_on_list/signal_context_list helpers
612a9b3 mon: add quorum_names to quorum_status command output
9a7a055 ceph-fuse: disable getgroups_cb
2c87d9f mon: PGMap dump shouldn't use strings containing '+' as tags
96551f9 mon: "status" is missing a close_section for the overall output
3dcfe38 mon: "osd stat" needs a flush now that osdmap.print_summary() doesn't
e4d0eee mon: "mds stat" must open/close section around dump_info
3a69fd0 ceph.spec.in: obsolete ceph-libs only on the affected distro
e807770 mon/OSDMonitor: fix base case for 7fb3804fb workaround
e536d66 ceph.spec.in: obsolete ceph-libs only on the affected distro
8814265 Enable libs3 support for debian packages
97462a3 mon: OSDMonitor: work around a full version bug introduced in 7fb3804fb
bc8d62f mon: OSDMonitor: get rid of encode_full() as we don't use it.
a815547 mon: OSDMonitor: update the osdmap's latest_full with the new full version
f46e8b9 doc/release-notes: v0.67-rc1
7b3b989 qa/workunits/suites/fsync-tester.sh: lsof at end
3f31540 qa/workunits/rest/test: cluster_down/up are now idempotent
88f4a96 log: remove unused lock
093182b osd/ReplicatedPG: drop repop refs in ~SnapTrimmer
6582b31 FileStore: disable fd cacher and wbthrottle during replay
2fd4421 PGLog::merge_log, unidex() only works from tail, we index() below anyway
6957dbc PGLog::rewind_divergent_log: unindex only works from tail, index() instead
046d5cb src/test/osd/TestPGLog.cc: check that the object remains in log.objects
1ecdb14 rgw: swift, in create bucket set location_constraints
8a2eb18 rgw: translate swift request to s3 when forwarding
165b0d0 PendingReleaseNotes: update about new rgw copy obj response
9f05db6 rgw: add some comments
c5025d4 rgw: dump progress through swift object copy
6094685 rgw: send data back when copying object
cfe1395 mon/Paxos: add failure injection points
20baf66 mon/Paxos: fix pn for uncommitted value during collect/last phase
19b2978 mon/Paxos: debug ignored uncommitted values
b3253a4 mon/Paxos: only learn uncommitted value if it is in the future
b26b7f6 mon/Paxos: only share uncommitted value if it is next
99e6054 mon/Paxos: accepted_pn_from has no semantic meaning
a61635e ceph-monstore-tool: dump paxos transactions
e60d14d ceph.in: reject --admin-daemon so it can't do harm
835dd97 (tag: v0.67-rc1) v0.67-rc1
58c78db FileJournal: fix posix_fallocate error handling
0897d3a OSD::_make_pg: use createmap, not osdmap
2dbb273 src/*: make Context::finish private and switch all users to use complete
d28c18d OSD::RemoveWQ: do not apply_transaction while blocking _try_resurrect_pg
6c4cd22 FileStore: use complete() instead of finish() and delete
9f591a6 Finisher: use complete() not finish() and delete
8536ff9 common/Cond.h: add a simpler C_SaferCond Context
20bc09c rgw: read attributes when reading bucket entry point
eabf2f6 ceph.spec.in:  Obsolete ceph-libs
db2850c test_cls_statelog.cc: fix resource leak, delete 'rop' at end of function
5f4f87b test_cls_statelog.cc: fix resource leak, delete op at end of function
fc1c1c6 test_cls_statelog.cc: fix resource leak, delete rop at end of function
8e8596d test_cls_version.cc: fix resource leak, delete before new()
3e94393 test_cls_version.cc: fix resource leak, delete before new()
d3782d8 test_cls_version.cc: fix another ressource leak
c35eeae test_cls_version.cc: fix ressource leak
637e106 cls/rgw/cls_rgw.cc: init start_key_added with false
3846bf2 fuse: fix fuse_getgroups detection
6402e46 doc: Fixed formatting errors.
eb03e9d doc: Updated RPM documentation with additional details.
617b3f7 cls_replica_log_types.h: pass const std::list<> by reference
6319823 mon/PGMonitor.cc: reduce scope of local 'num_slow_osds' variable
cf29d17 rgw/rgw_bucket.cc: use static_cast<>() instead of C-Style cast
d181aaa test_cls_version.cc: don't free object twice, free the right one
11c51e8 rgw/rgw_metadata.cc: use static_cast<>() instead of C-Style cast
e910421 rgw: change RGWOp::name() to return string instead of char*
c3acc25 mon, mds, osd: add early SIGTERM injection
7e25fec mds: put g_ceph_context on shutdown
1fd01e3 mon: shutdown: remove sessions under mon->lock
ba5e357 mds: reorder suicide/shutdown a bit
318f3df mds: install signal handlers after init
868b486 mon: install signal handlers after init
b084a38 osd: do not assume we have an osdmap in prepare_to_stop
61a298c osd: install async signal handlers after init()
3dec530 qa/workunits/mon/caps.sh: clean up users; rename
675d783 mon/MonCap: simplify rwx match logic
f79d965 mon: fix command caps check
fb21504 qa: workunits: mon: test mon caps permissions
0356eeb mon/PaxosService: update on_active() docs to clarify calling rules
6d326b8 mon/OSDMonitor: discard failure waiters, info on shutdown
8371680 mon: OSDMonitor: only thrash and propose if we are the leader
e4f2e3e mon/OSDMonitor: do not wait for readable in send_latest()
6edec51 Revert "mon/OSDMonitor: send_to_waiting() in on_active()"
2795eb1 Revert "mon: OSDMonitor: only thrash and propose if we are the leader"
0a99649 Revert "mon/OSDMonitor: fix typo"
8c5e1db ceph_rest_api.py: remove unused imports
ce46961 ceph.in: better error message when daemon command returns nothing
06ae53e mon: improve osdmap subscription debug output
934ad88 rgw: grab the old mtime when doing a user metadata put
f4675dc test: switch the cls_replica_log tests to use a test fixture
da8584f rgw: remove extra unused param from RGWRados::get_attr()
d44082e cls_rgw: quiet down verbose log message
4e05786 rgw: replace logic that compares regions
e4d2787 rgw-admin: link / unlink should report errors
0024e5a rgw: fix time parsing in replica log
7cd0bd8 rgw: bucket entry point object ver fixes
89ecba2 rgw: remove s->objv_tracker
85f3f09 rgw: forward delete bucket request to master after removal
989a4d9 rgw: adjust error for bucket removal on secondary region
2e51823 rgw: forward x_amz_meta headers when forwarding a request
4f4bdbd rgw: fix bucket re-creation on secondary region
0de7085 mon/MonClient: fix small leak
d1b83be msgr: mark addr-based [lazy_]send_message and get_connection deprecated
11c47cc client: mark_down by con
000d4d3 mon: mark_down session by con, not addr
30de040 mon: break con <-> session ref cycle in mon even if shutting down
564075c msg/SimpleMessenger: remove duplicated interface docs
27868ca msgr: update docs for mark_down, mark_down_all semantics
8dcf0b1 msgr: generate reset event on mark_down to addr (not con)
bfadcd2 osd/ReplicatedPG: fix obc leak on invalid LIST_SNAPS op
561ac0b osd: break con <-> session cycle when marking down old peers
41c67e0 osd: make ms_handle_reset debug more useful
6ebb486 doc: Update syntax for rbd children
8574b3c mon/PGMap: don't mangle stamp_delta in clear_delta()
99fa208 osd: log PG state changes at level 5
c549e62 mon/PGMap: avoid negative pg stats when calculating rates
9292c18 mon/PGMap: use signed values for calculated rates
47516d9 ReplicatedPG: track temp collection contents, clear during on_change
9f56a7b PG, ReplicatedPG: pass a transaction down to ReplicatedPG::on_change
2e09b6e osd: add floor() method to pg/osd stat structs
b4db588 osd: make pool_stat_t *log_size fields signed
4bf4d92 doc: radosgw needs 'mon = allow rw' to create its own pools
d3e53cd mon/MonClient: better debugging on version requests
c4d4f34 doc/release-notes: fix typo
053659d msg/Pipe: work around incorrect features reported by earlier versions
f0feabe Message,OSD,PG: make Connection::features private
d1b47f4 test: update cli test for radosgw-admin
76040d9 rgw: Adds --rgw-zone --rgw-region help text.
1b8d50e doc/release-notes: amend 0.61.5 release notes
c9ba933 mon/MonClient: fix small leak
4ed7942 init-ceph: don't activate-all for vstart clusters
f9e9f9c mon/PGMonitor: fix 'pg map' output key names
9ab539e PG: add perf counter for peering latency
fd53d53 msgr: mark addr-based [lazy_]send_message and get_connection deprecated
8ff7d53 client: mark_down by con
e0067a8 mon: mark_down session by con, not addr
3c81475 mon: break con <-> session ref cycle in mon even if shutting down
f7d0403 msg/SimpleMessenger: remove duplicated interface docs
5e72417 msgr: update docs for mark_down, mark_down_all semantics
e1e0d50 msgr: generate reset event on mark_down to addr (not con)
c522634 osd/ReplicatedPG: fix obc leak on invalid LIST_SNAPS op
d3748b2 osd: break con <-> session cycle when marking down old peers
2428bfd osd: make ms_handle_reset debug more useful
921a4aa cls_lock: fix duration test
dd0246d mds: tracedn should be NULL for LOOKUPINO/LOOKUPHASH reply
f3f92fe FileStore: add global replay guard for split, collection_rename
723d691 msg/Pipe: do not hold pipe_lock for verify_authorizer()
a59493e doc/release-notes: add/fix changelog links
d21d39e doc/release-notes: v0.61.5
29c0252 mon: fix off-by-one in check for when sync falls behind
07dfb6f rgw: drop unused assignment
aa460c4 mon: make 'health' warn about slow requests
82722ef osd: include op queue age histogram in osd_stat_t
2e216b5 qa/workunits/cephtool/test.sh: test 'osd create <uuid>'
b41f1ba PG: start flush on primary only after we process the master log
278c7b5 ReplicatedPG: replace clean_up_local with a debug check
1a84411 msgr: fix a typo/goto-cross from dd4addef2d
57bd6fd osd: make 'from dead osd' message more informative
16568d9 msg/Pipe: a bit of additional debug output
ecab4bb msg/Pipe: hold pipe_lock during important parts of accept()
687fe88 msgr: close accepting_pipes from mark_down_all()
dd4adde msgr: maintain list of accepting pipes
994e2bf msgr: adjust nonce on rebind()
07a0860 msgr: mark_down_all() after, not before, rebind
ad548e7 msg/Pipe: unlock msgr->lock earlier in accept()
9f1c272 msg/Pipe: avoid creating empty out_q entry
579d858 msg/Pipe: assert lock is held in various helpers
0ebf23c ceph_mon: obtain backup monmap if store is marked with 'force_sync'
d150193 mon/OSDMonitor: make 'osd pool mksnap ...' not expose uncommitted state
56c5b83 qa/workunits/cephtest/test.sh: put 'osd ls' before any 'osd create' tests
ad9a104 mon: MonCommands: remove obsolete 'sync status' command
884fa2f OSD::_try_resurrect_pg: fix cur/pgid confusion
7e16b72 mon/AuthMonitor: make 'auth del ...' idempotent
f129d17 qa/workunits/cephtool/test.sh: mds cluster_down/up are idempotent
f2fa01e ceph: send successful commands twice with CEPH_CLI_TEST_DUP_COMMAND
d45429b mon/MDSMonitor: make 'mds cluster_{up,down}' idempotent
9c4a030 osdmaptool: fix cli tests
2ea8fac ceph-disk: use /sys/block to determine partition device names
5b031e1 ceph-disk: reimplement is_partition() using /sys/block
3359aae ceph-disk: use get_dev_name() helper throughout
35d3f2d ceph-disk: refactor list_[all_]partitions
e040159 ceph-disk: add get_dev_name, path helpers
d656aed mon/OSDMonitor: fix typo
d90683f osd/OSDMonitor: make 'osd pool rmsnap ...' not racy/crashy
1999fa2 ObjectStore: add omap_rmkeyrange to dump
44c3917 OSD: add perfcounter tracking messages delayed pending a map
d9e0e78 FileStore: add a perf counter for time spent acquiring op queue throttle
4d9d0ff mon/OSDMonitor: return error if we can't set the new bucket's name
466d0f5 crush: return EINVAL on invalid name from {insert,update,create_or_move}_item, set_item_name
93fc07c crush: add is_valid_crush_name() helper
5eac387 mon: OSDMonitor: only thrash and propose if we are the leader
b19ec57 mon/MDSMonitor: make 'ceph mds remove_data_pool ...' idempotent
ba28c7c mon/OSDMonitor: clean up waiting_for_map messages on shutdown
f06a124 mon/OSDMonitor: send_to_waiting() in on_active()
72d4351 rgw: quiet down ECANCELED on put_obj_meta()
acbc2f0 osd: do not enable HASHPSPOOL pool feature by default
64379e7 ceph-disk: rely on /dev/disk/by-partuuid instead of special-casing journal symlinks
3706dbb PendingReleaseNotes: formatted ceph CLI output and ceph-rest-api
ad1392f mon: Monitor: StoreConverter: clearer debug message on 'needs_conversion()'
e752c40 mon: Monitor: StoreConverter: sanitize 'store' pointer on init
036e673 mon: Monitor: do not reopen MonitorDBStore during conversion
d873c29 rgw/rgw_rest_s3.cc: fix dereferencing after deallocation
e45a9bb rgw/rgw_op.cc: reduce scope of local 'ret' integer variable
c484150 rgw/rgw_rados.cc: use static_cast instead of C-Style cast
cc49d3f rgw/rgw_rest.cc: fix malloc memory leak
7a2e8a6 rgw/rgw_bucket.cc: return result of function calls
7769b01 rgw_bucket.cc: don't return bool if return value is int
64b512c rgw/rgw_bucket.cc: remove unused local variable
a937a12 rgw_admin.cc: fix same expression on both sides of '||'
5ea4c5e cls_rgw_client.cc: reduce scope of local variable
408014e rgw: handle ENOENT when listing bucket metadata entries
eef4458 rgw: fix bucket placement assignment
39e5a2a OSD: add config option for peering_wq batch size
b46930c mon: make report pure json
daf7672 ceph: drop --threshold hack for 'pg dump_stuck'
4282971 msg/Pipe: be a bit more explicit about encoding outgoing messages
314cf04 messages/MClientReconnect: clear data when encoding
34f76bd mon: set forwarded message recv stamp
eac559f mon: drop win_election() _reset() kludge and strengthen assertions
c67d50b mon: set peon state to electing if other mons call an election
3ea984c mon: once sync full is chosen, make sure we don't change our mind
1fc85ac mon/PaxosService: consolidate resetting in restart()
7666c33 mon/PaxosService: assert not proposing in propose_pending
c711203 mon/Paxos: separate proposal commit from the end of the round
5c31010 mon/Paxos: make all handle_accept paths go via out label
f1ce8d7 mon: fix scrub vs paxos race: refresh on commit, not round completion
a722fb7 rgw: fix bucket instance json encoding
346d9f4 rgw_admin: fix gc list encoding
55ff523 doc: Fixed link in Calxeda repo instruction.
aa60f94 mon: once sync full is chosen, make sure we don't change our mind
6d3e13f rgw: fix more warnings
1dfd06d test_rgw: fix a number of unsigned/signed comparison warnings
01ec4f1 rgw: Fix typo in rgw_user.cc
fe13f88 doc: Modifies keyring path in radosgw config page.
cf9571c test_rgw_admin_meta: fix warnings
bc3088c cls_rgw: fix warning
6ef48c7 doc: update Hadoop docs with plugin download
a805958 doc: document new hadoop config options
9baa668 Makefile: cls_rgw needs cls_rgw_types linked in now too
6b7d9f2 mon: include some (basic) auth info in report
56c36fa mon: include paxos info in report
bf7c402 mon: move quorum out of monmap
89ced1c mon: include service first_committed in report
629a9d7 Use mon_host instead of mon_addr in ceph_conf
9ca4733 hypertable recent version prototyping includes bool verify in length and read functions
df45b16 Makefile: build cls_rgw even if we're not building radosgw
35ef873 Makefile: fix cls_rgw linkage
cda17fd Makefile: fix cls_refcount linkage
8d9165a qa/workunits/rbd/simple_big: fix unmap
15e3c9a qa/workunits/fs/test_o_trunc.sh: fix path
efe5b67 mon/Paxos: bootstrap peon too if monmap updates
d4876c5 mon/PaxosService: do not prepare new pending if still proposing
f37c36e mon/PaxosService: remove redundant check
bf4f802 mon/PaxosService: fix trim completion
0d66c9e MonCommands.h: use new validation for crush names (CephString goodchars)
741757a ceph_argparse.py: allow valid char RE arg to CephString
089dfe8 ceph_argparse: ignore prefix mismatches, but quit if non-prefix
da4c749 ceph_argparse.py: validate's 3rd arg is not verbose, it's partial
cc10988 ceph-rest-api: separate into module and front-end for WSGI deploy
495ee10 msg/Pipe: fix RECONNECT_SEQ behavior
48a2959 mon: make ancestor arg for 'osd crush rm|remove <name>' optional
c0845a9 mon: AuthMonitor: don't try to auth import a null buffer
60a19e7 PendingReleaseNotes: ceph -s --format=json output change
5dd1d4b test: idempotent filestore test failure
c70216a Revert "test_filestore_idempotent: use obj name from source coll add"
0a3c902 Revert "test_filestore_idempotent: make newly created objects globally unique"
eccbdaa ceph-object-corpus: added cuttlefish objects
97efc72 rgw: fix a typo
a44854c qa/workunits/cls: remove new rgw tests
b7c549d msgr: add 'ms die on old message' to help catch reconnect seq issues
9f5cae4 mon: structure 'ceph status' json output
2dcab51 mon: fix copy/paste error
cf9d1e1 mon: clean up check_fsid() a bit
2dc8688 mon: stash latest state when flagging force_sync
96c4883 mon: factor out stashing latest monmap
0c83b5f cls_rgw: add missing type tests
d0bee5d cls_refcount: add type tests
a04525b mon: fix sync_start doc
e019dd0 mon: fix off-by-one: no need to reapply previous last_committed after sync
e213b1b mon: fix recent paxos sync from 0 when first_committed == 1
b8fad05 doc/dev: add corpus.rst
4a3241c osd: reenable pg_query_t test
8579d80 mon: add encoding tests for newish MMonSync, MMonScrub
5139d0c mds: add encoding test for inode_backtrace_t; note incompat in corpus
0800ea1 osd: add encoding tests for PushOp, PullOp, PushReplyOp
17c2995 mon: add encoding tests for MonitorDBStore data types
afb814f ceph-object-corpus: new objects for almost-dumpling
3e4a291 osd/OSDmap: fix OSDMap::Incremental::dump() for new pool names
6379f37 test_rgw_admin_meta.cc: prefer prefix ++operator for non-trivial iterator
329e467 cls/rgw/cls_rgw.cc: use empty() instead of checking for size() == 0
734c824 test_rgw_admin_log.cc: prefer prefix ++operator for non-trivial iterator
88ba651 test_rgw_admin_opstate.cc: prefer prefix ++operator for non-trivial iterator
028f643 test_rgw_admin_meta.cc: prefer prefix ++operator for non-trivial iterator
cccc09a rgw/rgw_rest_opstate.cc: prefer prefix ++operator for non-trivial iterator
22e0dbb rgw/rgw_rados.cc: use empty() instead of checking for size() > 0
ea0fcfa cmdparse.cc: catch exception by reference
1f8fe70 ceph-rest-api: Missing packaging (binary in .spec, manpage in both)
3d25f46 ceph-rest-api: make main program be "shell" around WSGI guts
cb0f831 ceph.in: output even a blank status line in compat mode
93b3e63 msg/Message: use old footer for encoded message dump
cf8f16d rgw: handle bucket removal by system user on master region
3b110db ceph_argparse.py: define some self.* in __init__
60c9ca6 ceph_argparse.py: fix dangerous default value [] as arg
a049e29 ceph_argparse.py: remove unnecessary semicolon
a28d5d6 ceph_argparse.py: fix some ArgumentValid() commands
3c4ae83 ceph_argparse.py: add missing spaces after comma
c2a6334 ceph_argparse.py: add missing spaces around operator
3278295 ceph_argparse.py: fix bad indentation
707c39d ceph.in: add missing spaces around operator
f714c01 ceph.in: add missing spaces after comma
b82473a ceph.in: remove unnecessary semicolons
5a6251c ceph-rest-api: connect to cluster with configured client name
e4d063b ceph-rest-api manpage
07590ae cephtool/test.sh: sync status no longer supported
e66d011 cephtool/test.sh cleanup
6cafb0e ceph-rest-api tests
4cb0e06 Add 'ceph-rest-api'
45dc573 OSDMonitor: return failure for 'osd lost' without safety switch
c87f55b CompatSet, MDSMap: formatted dumps must avoid numeric tags
e75db71 mon: OSDMonitor: formatter output on 'osd map'
17595f3 mon: OSDMonitor: osd pool get: move to preproc, add formatted output
a15d932 mon: formatted output for 'fsid'
04fbc52 mon: Monitor: 'health detail --format=json' should only output JSON
300f42b mon: Monitor: support multiple formatters on some status functions
c6d1dba test/encoding/import-genearted: fix
3cf8ae0 mds: make rename_rollback::drec not assert on unexpected d_type
846382b mds: fix rename_rollback::drec cctor
db68975 cls/rgw: init op in rgw_cls_obj_complete_op ctor
db71a38 mon: add formatted output for several commands:
f8ee4a7 auth: cephx: KeyServer: list secrets to formatter or plaintext
e76b05b mon: AuthMonitor: improve error reporting for import
b18554a mon: AuthMonitor: formatted output to 'auth get-or-create[-key]'
7da0320 mon: AuthMonitor: dump formatted and plaintext key on 'get-key'
7049efc mon: AuthMonitor: early out on bad entity name
83bcde3 mon,auth: AuthMonitor, KeyRing: add Formatter-dumps of auth info
92d5eb0 auth: Crypto: add encode_formatted/plaintext() functions
2e2bc6d ceph_argparse.py cleanup: simplify some code, error on unused args
a562162 ceph CLI: valid() no longer returns bool, but just exception
0f2ebc6 ceph.in, ceph_argparse.py: move descsort() to ceph_argparse
bfa2284 MonCommands: add new fields: modulename, perms, availability
c9b54d7 common: Formatter: add flush to bufferlist
989be66 rados.py: allow long-form names of 'warn' and 'err' as watch levels
1ad2127 PGMonitor: fix stat comparison in prepare_pg_stats
180c7b4 Get device-by-path by looking for it instead of assuming 3rd entry.
836e35f Get device-by-path by looking for it instead of assuming 3rd entry.
a120d81 Makefile.am:  fix ceph_sbindir
dcb42ca test_rados: don't use assert_greater
d8fe439 Python Ioctx.get_xattrs does not take xattr_name
bc291d3 osd: fix warning
653e04a osd: limit number of inc osdmaps send to peers, clients
5c8a563 mon: do not populate MMonCommand paxos version field
b36338b messages/MPGStats: do not set paxos version to osdmap epoch
997c6f4 rgw-admin: add some of the newer flags and specify their use
2ea6c4c rgw-admin: use 'get' instead of 'show' or info for geo stuff
d36ec78 qa/workunits/cls/test_cls_rgw: add new rgw class tests
2e79f73 ceph.spec.in: add missing %{_libdir}/rados-classes/libcls_* files
ff5f25e debian/ceph-test.install: add missing files
640d138 ceph.spec.in: add some more ceph_test_cls_rgw_* files
dfe3c21 src/Makefile.am: rename cls_test_rgw_*
78bae33 ceph.spec.in: add some ceph_test_cls_* files
dc99a23 Makefile.am: fix build, use $(CRYPTO_LIBS)
00ae543 mon: do not scrub if scrub is in progress
8638fb6 unittest_pglog: fix unittest
c487014 librados/misc.cc: reverse offset and length on write call
bad317b osd: Add namespace to dump_watchers output
f03cdf5 osd: Clean-up redundant use of object_locator_t
8c50165 osd: Add the ability to set capabilities on namespaces
7129564 osd: Prepare for nspace match with simpler is_match_all()
6eb88a1 test: Add namespace list test cases to librados test
fddfdeb test: Add namespace test cases to librados tests
94ccfac rados: Add namespace arg (--namespace, -N) to rados command
69af60d librados: Add operate()/operate_read() log messages
e761e4e librados, os, osd, osdc, test: Add support for client specified namespaces
8e07514 osd: change pg_stat_t::reported from eversion_t to a pair of fields
cc0006d mon: be smarter about calculating last_epoch_clean lower bound
da81228 osd: report pg stats to mon at least every N (=500) epochs
449283f mon/OSDMonitor: allow osdmap trimming to be forced via a config option
18a624f mon/OSDMonitor: make 'osd crush rm ...' slightly more idempotent
c5157dd doc/release-notes: v0.66
8799872 mon/PaxosService: update docs a bit
44db2ac mon/PaxosService: inline trim()
cab8eee mon/PaxosService: move paxos_service_trim_max into caller, clean up
d97f314 mon/PaxosService: simplify paxos_service_trim_min check
da248a9 mon: make service trim_to stateless
886b637 mon/PaxosService: pass trim target into encode_trim()
8b866d2 mon: preserve last_committed_floor across sync
1f5e6c2 mon: no need to reset sync state on restart
bbfb5b4 mon: drop single-use is_sync_on_going() check
a4d0ccf mon: rev the internal mon protocol
9fc4e4f mon/MonitorDBStore: drop unused single prefix synchronizer
45907dc mon: add --force-sync startup option
af3b49f mon/Paxos: move consistent check into Paxos::init()
ccceeee mon/Paxos: remove unnecessary trim enable/disable
aa33bc8 mon/Paxos: config min paxos txns to keep separately
da0aff2 mon: implement a simpler sync
f326c4d mon/PGMonitor: cleanup: use const strings for pgmap prefixes
5faa4ac rgw: warn on the lack of curl_multi_wait()
76e7926 rgw: fix args parsing
3c89a19 os: Add missing pool to hobject_t:::dump() and hobject_t::decode()
b1b188a os: Remove unused hobject_t::set_filestore_key()
72c27a3 librados, osdc: Refactor IoCtxImpl to use operate()/operate_read()
9dd60a6 TestRados: Output error for improper usage instead of Floating Point Exception
30c951c osd: Fix object_locator_t::get_pool() return type
7efbf5d librados: Fix lock names
3931bfa psim.cc: Fix comment on how to create .ceph_osdmap
313b7a1 os: Code conformance in LFNIndex.cc
395262c rgw: call appropriate curl calls for waiting on sockets
73c2a3d configure.ac: detect whether libcurl supports curl_multi_wait()
d08b6d6 mon/PaxosService: prevent reads until initial service commit is done
63fe863 mon/PaxosService: unwind should_trim()
d600dc9 mon/PaxosService: unwind service_should_trim() helper
6aa0230 mon/MDSMonitor: remove unnecessary service_should_trim()
b71a009 mon/OSDMonitor: remove dup service_should_trim() implementation
39b71c5 mon/PaxosService: trim periodically instead of via propose_pending
2f8ff2d mon/PaxosService: reorder definitions
50ffe32 mon/PaxosService: uninline should_trim()
5edc1ff doc: Added Ceph Object Storage installation instructions for CentOS/RHEL 6.
ca54efd mon: sync all service prefixes, including pgmap_*
b536935 mon/MonitorDBStore: expose get_chunk_tx()
43fa7aa mon/OSDMonitor: fix base case for loading full osdmap
ad65de4 ReplicatedPG: send compound messages to enlightened peers
ae1b2e9 ReplicatedPG: add handlers for MOSDPG(Push|Pull|PushReply)
c0bd831 OSD: add handlers for MOSDPG(Push|PushReply|Pull)
264dbf3 messages/,osd_types: add messages for Push, PushReply, Pull
c56f16d ReplicatedPG: split handle_pull out of sub_op_pull
175c077 ReplicatedPG: split handle_push_reply out of sub_op_push_reply
54e5f64 ReplicatedPG: send pulls en masse in recover_primary
c41d4dc ReplicatedPG: send pushes en mass in recover_replicas, recover_backfill
eec86b8 OSD: convert handle_push to use PushOp
a498432 ReplicatedPG: pass a PushOp into handle_pull_response
82cb922 ReplicatedPG: split send_push into build_push_op and send_push_op
31e19a6 ReplicatedPG: _committed_pushed_object don't pass op
0f51b60 ReplicatedPG: submit_push_data must take recovery_info as non-const
b6b48db (tag: v0.66) v0.66
a990664 mon: implement simple 'scrub' command
afd6c7d mon: fix osdmap stash, trim to retain complete history of full maps
dd1e6d4 Revert "Makefile: fix ceph_sbindir"
f07d216 rgw: fix bucket link
eec903a doc: Fix env variables in vstart.sh documentation
69a5544 osd/osd_types: fix pg_stat_t::dump for last_epoch_clean
94afedf client: remove O_LAZY
e9d19b3 common/crc32c: skip cpu detection incantation on not x86_64
956fafc qa/workunits/rbd/simple_big.sh: don't ENOSPC every time
d423cf8 qa/workunits/rbd/kernel.sh: move modprobe up
672f51b qa/workunits/fs/test_o_trunc.sh: fix .sh to match new bin location
7b7f752 unit tests for ObjectContext read/write locks
6f1653a rgw: Add --help support to radosgw
85a1d6c mon: remove bad assert about monmap version
3f5a962 qa: write a somewhat <1tb image
54aa797 qa/workunits/rbd/kernel.sh: modprobe rbd
83f3089 qa: move test_o_trunc.sh into fs dir
507a4ec qa: move fs test binary into workunits dir so teuthology can build it
a84e6d1 mds/MDSTable: gracefully suicide on EBLACKLIST
8b4cb8f rgw: Add explicit messages in radosgw init script
d09ce3d rgw: fix rgw_remove_bucket()
972d22e Adding new Wireshark dissector. This is loosely based on the original dissector, it has been re-worked to bring into line with Wireshark coding guidelines that aim to ensure portability. It currently only decodes a handful of messages as test cases, it needs more work to make it useful. See README.txt for a bit more background.
a793e20 doc: Add a page to document vstart.sh script
c14847c .gitignore: cls_test_*
22227cd qa: add O_TRUNC test
46b7fc2 radosgw-admin: fix cli test
a0b1be9 rgw: fix type encoding
71ebfe7 mon/Paxos: make 'paxos trim disabled max versions' much much larger
ab93696 mon: be less chatty about discarding messages
e8b42a6 osd/OSDMap: handle case where some new osds have hb_front and others don't
81343f1 osd: clear hb_front if it was previously non-NULL and is now NULL
e0da832 doc: Added write caps. Required for auto-creating pools.
01d3e09 osd: fix race when queuing recovery ops
d87ae0a osd_types: add PushOp, PushReplyOp PullOp
194e858 osd: do not use temp_coll for single-step pushes
b0e339c ObjectStore: only register non-null contexts
daee9db ObjectStore,Context: add register_on_complete
a825ae7 rgw: remove a few warnings
3564e30 Elector.h: features are 64 bit
4255b5c ceph_features.h: declare all features as ULL
bc3e2f0 Pipe: use uint64_t not unsigned when setting features
dc29c7a rgw: renamed a few unit tests
db63965 ceph.spec.in:  Fix file name typo
c2873c1 rgw: make rgw_cls_complete_op backward compatible
08dd35d common: autoselect crc32c based on cpu features
7c59288 Initial Intel SSE4 crc32c implementation.
20e3abc rgw: make rgw_bucket_dir_entry backward compatible
4fb782c mds: fix O_TRUNC locking
cd44a62 Makefile: include rbdmap in dist tarball
352f362 Makefile: fix ceph_sbindir
9941171 rgw: keep max_marker on bucket index
0da7da8 unitests: fix compilation
9942efd mon: dead code removal
5c053b1 rgw: handle new rest operations
fcc423d rgw: RESTful api for shards info
19828cb cls_log: store info in header, new op to retrieve it
b3f6423 rgw: replica log RESTful api uses bucket instance id
e10005c rgw: rework replica log + RESTful api
288088d cls_replica_log: implement decode_json for the types
7db133d ceph_json: add a utime_t decoder
87c98e9 sysvinit, upstart: handle symlinks to dirs in /var/lib/ceph/*
cb97338 ceph-disk: handle /dev/foo/bar devices throughout
e082f12 ceph-disk: make is_held() smarter about full disks
a4805ef osdc/Objecter: resend command map version checks on reconnect
653bc2d common: move parse_time into utime_t header
370d175 rgw: remove get_bound_info from RGWReplicaLogger
b6c8366 key_value_store: fixup errno handling
fc7d622 RESTful implementation to dump regionmap implementation
641bd2f RESTful API implementation for replica_log
da1fb93 mds: man page: Fixed cut & paste error
a4cd631 set object_info_t pool of an ObjectContext if it is undefined or bad
0efcccd Move rbdmap file to /etc/ceph
ffe7045 install rules for init-rbdmap
6ff2b16 rgw-admin: Adds option --shard-id to help.t
3a20b06 rgw: admin: Add --shard-id option to help
49ff63b rgw: add RGWFormatter_Plain allocation to sidestep cranky strlen()
94742d4 doc: Minor fix.
2ad4ff6 rgw: metadata, data logs can be turned on / off
935c278 mon: Paxos: update first_committed on first paxos proposal
847465f librados: fix test warning on 32-bit platforms
6d90dad os/FileStore: automatically enable 'filestore xattr use omap' as needed
1b578a8 librados: add test for large and many xattrs
8694d29 osd/PGLog: populate log_keys_debug from read_old_log()
cfc1f2e rgw: modify RGWBucketInfo::creation_time encoding / decoding
4089001 rgw: Fix return value for swift user not found
c73a24b rgw: end-marker serves as last value, not as upperbound
c414030 rgw: relax marker requirements for log apis
b21a41a rgw: update log APIs to use markers
ce7d816 rgw: cls_log_entry has id field
064e92f Makefile.am: some more makefile rules fixes
c2a56e5 rgw: date string parsing also parses seconds fraction
a6bbc91 Makefile.am: some more makefile rules fixes
26423b9 rgw: date string parsing also parses seconds fraction
0335905 rgw: fix cli test
5314e3f Makefile.am: add missing rule
09e374f osd: set maximum object attr size
e56ef07 rgw: initialize sent_header in RGWOp_Opstate_List
e235958 mds: log before respawning when standby-replay falls behind
e75057f rgw-admin: restructure replicalog commands
87217e1 client: send all request put's through put_request()
9af3b86 client: fix remaining Inode::put() caller, and make method psuedo-private
2e857a4 librados: fix cmd OSDCommand test
72ac281 rgw: don't remove bucket index when removing a bucket
10a2b60 rgw: bilog list by bucket instance (RESTful api)
81bee64 client: use put_inode on MetaRequest inode refs
977df77 ceph_json: reset values
674bbab rgw: user param in access key is not manadatory
9d702e5 rgw: advance ptr when sending data
13f9c18 doc: Created an install page for Calxeda development packages.
9e604ee ceph-disk: s/else if/elif/
b4ee7ca changes to accomodate review comments on previous version
8f1da8f rgw: fix regionmap json decoding
cd7510f qa/workunits/misc/multiple_rsync: put tee output in /tmp
e1f9fe5 rgw: fix radosgw-admin buckets list
fe66331 Handle non-existent front interface in maps from older MONs
867ead9 qa/workunits/rbd/simple_1tb: add simple rbd read/write test on large image
8a17f33 ceph-disk: do not mount over an osd directly in /var/lib/ceph/osd/$cluster-$id
986185c mon/PGMonitor: avoid duplicating map_pg_create() effort on same maps
ca55c34 cephtool/test.sh: add case for auth add with no caps
bfed2d6 MonCommands.h: auth add doesn't require caps (it can use -i <file>)
71f3e56 Makefile.am: fix libglobal.la race with ceph_test_cors
e635c47 mon/PGMonitor: use post_paxos_update, not init, to refresh from osdmap
1316869 mon/PaxosService: add post_paxos_update() hook
ea1f316 mon: do not reopen MonitorDBStore during startup
516445b mon/Paxos: simplify trim()
b8d04a2 mon/PaxosService: rename scrub
ac63b2e mon/Paxos: clean up removal of pre-conversion paxos states
d2f3811 mon/Paxos: update first_committed only from paxos
290ccde mon/Paxos: set first_committed on first commit
5511daf doc:  public network statement needed on new monitors.
af00f73 rgw: automatic pool creation for placement pools
fe36533 mon/Paxos: never write first_committed except during trim
e93730b mon: enable leveldb cache by default
ad9c294 mon/Paxos: assert that the store gives us back what we just wrote
11e0325 mon/Paxos: drop unnecessary last_committed loads
d31ed95 mon/PaxosService: allow paxos service writes while paxos is updating
2d2aa00 mon/PGMonitor: store PGMap directly in store, bypassing PaxosService stash_full
7a2566c rgw: remove test placement info
224130c rgw (test): remove some warnings
1b162ce rgw: initialize user system flag
7681c58 (origin/wip-rgw-geo-bucketinstance) rgw: log in the same shard for bucket entry point and instance
d4e39a7 rgw: unlink/link don't always update entry point
5680fa1 doc/release-notes: v0.65
6673b2d rgw: tie metadata put to bucket link/unlink
5c3df08 cls_rgw: cleanup
82db84b rgw: some more internal api cleanups
c4be5a7 rgw: unlink bucket from user on metadata rm bucket:< bucket>
86c73c9 rgw: fixes to object versioning tracking
8bd31d4 rgw: filter read xattrs
422bb6d rgw: add str_startswith()
8db289f cls_ver: rename version xattr, add some more logging
c8f7936 mon/AuthMonitor: start at format 1 (latest) for new clusters
950c0f3 mon/PaxosService: move upgrade_format() machinery into PaxosService
0d73eb4 mon/PGMonitor: drop some dead code
0fd776d mon/PGMap: make int type explicit
29e14ba mon/PaxosService: s/get_version()/get_last_committed()/
c2d517e (tag: v0.65) v0.65
3016f46 get_xattr() can return more than 4KB
6e320a1 skip TEST(EXT4StoreTest, _detect_fs) if DISK or MOUNTPOINT are undefined
63e81af rgw: multiple fixes related to metadata, bucket creation
a4ddf70 Add rc script for rbd map/unmap
b28bd78 mon/PaxosService: drop unused last_accepted_name
6060268 mon/PaxosService: some whitespace
7c9dee0 mon/PaxosService: drop unused {get,set,put}_version(prefix, a, bl)
1d913d2 mon/OSDMOnitor: use provided get_version_full()
872f4d5 mon/PaxosService: simplify full helpers, drop single-use helper
83c49be mon/PaxosService: remove mkfs helpers
c47f271 mon: fix mkfs monmap cleanup
78fefe6 mon: make PaxosService::get_value() int return type 64-bit
78b7ec7 mon/PaxosService: drop unused helpers
6721122 mon/MonmapMonitor: avoid exists_version() helper
6429cb1 mon/PaxosService: remove unused exists_version() variant
9ae0ec8 mon/Elector: cancel election timer if we bootstrap
03d3be3 mon: cancel probe timeout on reset
521fdc2 mon/AuthMonitor: ensure initial rotating keys get encoded when create_initial called 2x
3791a1e osd: tolerate racing threads starting recovery ops
31d6062 init-radosgw.sysv: remove -x debug mode
7e41c10 rgw: bucket entry point contains owner, other fix
eb86eeb common/pick_addresses: behave even after internal_safe_to_start_threads
cad8cf5 Add python-argparse to dependencies (for pre-2.7 systems)
046e3b7 debian, rpm: remove python-lockfile dependency
f046dab mds: do not assume segment list is non-empty in standby_trim_segments
ab6ccbe test/librados/cmd.cc: use static_cast instead of C-Style cast
626d9ee opstate RESTful API implementation with unit test application
79b5a48 osdc/Objecter.cc: use static_cast instead of C-Style cast
e7602a1 mon/MonClient.cc: use static_cast instead of C-Style cast
de4a764 common/cmdparse.cc: reduce scope of local variable 'pos'
b485a3e common/cmdparse.cc: remove unused variable
a92a720 osd/OSD.cc: prefer prefix ++operator for non-trivial iterator
835315b OSDMonitor.cc: prefer prefix ++operator for non-trivial iterator
c700db0 mon/MonCap.cc: use empty() instead of if(size())
4ab5bf6 common/cmdparse.cc: prefer prefix ++operator for non-trivial iterator
1e3161a rgw: add a system request param to select op bucket instance
76228ca rgw: data log contains bucket instance info in key
5dd137a rgw: format bucket.instance meta entries nicely
4e90c5e rgw: use new instance handler for bucket operations
71869c4 rgw: create meta handler for bucket instance
00973df rgw: put_bucket_info() uses objv_tracker in bucket info
dab57ef rgw: keep objv_tracker on bucket info
57dc736 msgr: clear_pipe+queue reset when replacing lossy connections
e053d17 rgw: refactor policy reading
9586305 msgr: reaper: make sure pipe has been cleared (under pipe_lock)
ec612a5 msg/Pipe: goto fail_unlocked on early failures in accept()
afafb87 msgr: clear con->pipe inside pipe_lock on mark_down
5fc1dab msgr: clear_pipe inside pipe_lock on mark_down_all
d74cdad rgw: fix policy read
ad64067 rgw: init member variable
b09d799 rgw: encode bucket info only after setting a flag
cd98eb0 mon/AuthMonitor: make initial auth include rotating keys
9b2dfb7 mon: do not leak no_reply messages
ad12b0d mon: fix leak of MOSDFailure messages
c3260b2 rgw: initial work to separate bucket name and instance
c103031 rgw: initialize system flag in RGWUserInfo
7e3493f rgw: various object put processor fixes
5f43fa8 rgw: fix broken obj put
1aca370 debian: ceph-common requires matching version of python-ceph
d7af5e1 rgw: handle bucket creation with specified placement pool
94eada4 Add header comments and Inktank copyrights to ceph.in/ceph_argparse.py
67a3c1e ceph.in: rip out reusable code to pybind/ceph_argparse.py
2fcbf2b rgw: user configuration for bucket placement
e5e924c rgw: data structures for new data/index placement rules
c4272a1 ceph: even shinier
34ef2f2 ceph: do not busy-loop on ceph -w
27912e5 librados: make cmd test tolerate NXIO for osd commands
abd0ff6 mds: do not assume segment list is non-empty in standby_trim_segments
241ad07 rgw: make replica log object name configurable
469900e RGWReplicaBucketLogger: store bucket replica logs in the .logs pool
3bebbc0 mds: rev protocol
ded2e84 mds: kill Server::handle_client_lookup_hash()
2147c4e mds: use "open-by-ino" helper to handle LOOKUPINO request
24e59b4 rgw: buffer atomic put handler
02de43a rgw: tie opstate into intra-region copy operations
31d221c ceph.in: remove some TAB chars
69e1a91 ceph.in: fix ^C handling in watch (trap exception in while, too)
29f6f27 ceph: --version as well as -v
6d6dc42 fixup "radosgw-admin: new commands to look at and clean up replica logs"
59bfdd0 radosgw-admin: new commands to look at and clean up replica logs
ab79ba4 cls_replica_log: integrate with RGWRados
3651473 cls_replica_log: add tests.
29df88a cls_replica_log: add client with user documentation
e4ef5c6 cls_replica_log: add the actual class
22a02e9 cls_replica_log: add ops for new class
d1c9594 cls_replica_log: add types for new class
0deb6d4 (origin/wip-rgw-geo-enovance) rgw: lock related modifications
3b4c11b rgw: add max-entries, marker for log operations
714f212 osdc: re-calculate truncate_size for strip objects
ebb46c4 qa/workunits/misc/multiple_rsync.sh: wtf
fd769c0 qa/workunits/cephtool/test.sh: fix and cleanup several tests
f420e5c mon: drop deprecated 'stop_cluster'
4977b88 mds: make 'mds compat rm_*compat' idempotent
4a038d6 mon: make 'log ...' command wait for commit before reply
008bdc5 radosgw_admin: fixup cli test
483aa74 test: update cli test
7b5ec74 cls_rgw: skip namespaced entries when listing bucket
5de54f6 a/workunits/cephtool/test.sh: --no-log-to-stderr when examining stderr
d60534b mon: more fix dout use in sync_requester_abort()
8a4ed58 mon: fix raw use of *_dout in sync_requester_abort()
c8af85d doc/release-notes: v0.61.4
c39b99c FileStore: handle observers in constructor/destructor
0211583 init-radosgw: use radosgw --show-config-value to get config values
88f73c5 ceph: fix ceph-conf call to get admin socket path for 'daemon <name> ...'
716fc35 ceph-conf: make --show-config-value reflect daemon defaults
cf3bc25 FileStore: apply changes after disabling m_filestore_replica_fadvise
ed8b0e6 FileStore: apply changes after disabling m_filestore_replica_fadvise
2a4953b ceph-disk: use unix lock instead of lockfile class
8c0daaf ceph-disk: make list_partition behave with unusual device names
8a5d989 FileStore: get_index prior to taking fdcache_lock in lfn_unlink
09e869a PGLog::rewind_divergent_log must not call mark_dirty_from on end()
4d77443 unit tests for PGLog::proc_replica_log
e11cc1c add constness to PGLog::proc_replica_log
392a8e2 mon/PaxosService: not active during paxos UPDATING_PREVIOUS
ee34a21 mon: simplify states
ec2ea86 mon/Paxos: not readable when LOCKED
7b7ea8e mon/Paxos: cleanup: drop unused PREPARING state bit
f985de2 mon/PaxosService: simplify is_writeable
3aa61a0 mon/PaxosService: simplify readable check
a9e9c58 mon/MonmapMonitor: remove some dead code
7229da8 mon/MonmapMonitor: fix typo in check to remove mkfs info
e565802 mon: fix whitespace
439e799 mon: debug proposal timers
e832e76 mon: simplify Monitor::init_paxos()
e68b1bd mon/Paxos: go active *after* refreshing
dc83430 mon: safely signal bootstrap from MonmapMonitor::update_from_paxos()
a42d758 mon/Paxos: do paxos refresh in finish_proposal; and refactor
2fccb30 mon/PaxosService: cache {first,last}_committed
d941363 mon: no need to refresh from _active
03014a4 mon: remove unnecessary update_from_paxos calls
cc339c0 mon: explicitly refresh_from_paxos() when leveldb state changes
95bd048 os/FileStore: disable fadvise on XFS
fd83bc3 client: fix warning
b2f1a1a mds: fix remote wrlock rejoin
15a5d37 mds: fix race between scatter gather and dirfrag export
ded0a5f Revert "client: fix warning"
96c9493 radosgw-admin: interface to control ops state
8b1524b rgw: OpState internal api
258edfc rgw: fix check_state call
5e6dc4e mon: Monitor: make sure we backup a monmap during sync start
6284fdc mon: Monitor: obtain latest monmap on sync store init
af5a986 mon: Monitor: don't remove 'mon_sync' when clearing the store during abort
d628109f rgw: specialized obj zone copy state for statelog
13e0302 rgw: internal api for statelog objclass
0b932bf cls_statelog: pass in timestamp
2574903 AuthMonitor: auth export's status message to ss, not ds
75b6c82 doc: Fixed OpenStack Keystone instruction.
cba4de1 cls_statelog: improve unitest
b89f47c cls_statelog: fix a few issues
64ee014 ceph.spec: create /var/run on package install
97f1322 doc: Updated deployment preflight.
bb799e6 test_rados.py: add some tests for mon_command
64b4e4a rados.py: wrap target in c_char_p()
54f7432 rados.py: return error strings even if ret != 0
81e73c7 ceph.in: pass parsed conffile to Rados constructor
2fc8d86 ceph.in: global var dontsplit should be capitalized
38a595b FileStore: optionally compact leveldb on mount
4a3127f client: fix warning
efcf626 FileStore::lfn_open: don't call get_index under fdcache_lock
bfe4bf9 rgw: handle racing default region creation
ce7b5ea common/Preforker: fix warning
8bd936f client: fix warning
6b52acc config.h: ensure U64 option defaults are computed as 64 bits
e2af5fb test: test for cls_statelog
1ecec3a cls_statelog: fixes
8d5fc70 cls_statelog: add client api functions
fbe816a cls_statelog: fixes and changes to api
7669662 cls_statelog: introducing new objclass to handle state tracking
df8a3e5 client: handle reset during initial mds session open
2e27f69 rgw: move a couple of unitests to a different Makefile rule
f5f8314 rgw: object mtime the same for both object and bucket index
7f63baa rgw: fix inter-region copy (ofs wasn't correct)
92997a4 mon: fix 'osd dump <epoch>'
8c6b24e ceph-disk: add some notes on wth we are up to
94b3700 rgw: intra-region copy, preserve mtime
29eb333 (origin/wip-log-rewrite-sam) test/osd/TestPGLog: %s/dirty()/is_dirty()
f164a32 PGLog: check for dirty_to != eversion_t() and dirty_from != eversion_t::max()
c6dd60d PGLog: rename dirty() to is_dirty()
2ad319b PGLog: only iterate over dirty portions of the log
962b64a PGLog,PG: use normal log dirtying and writing for append and trim
9b6cb63 PGLog: add debug check on written keys, verify on write
abac4ea test/osd/TestPGLog: fix pglog unittests for dirty_log and ondisklog
6dd95c8 PG,PGLog: remove dirty_log arguments
b16fdf2 PGLog: replace dirty_log with mark_dirty_*
f35bc02 PG: move instances of log dirtying in PG into PGLog
d77c4ff PGLog: track dirty_to and dirty_from for log
fb88873 osd_types: move code for pg_log_entry_t::get_key_name into eversion_t
b73aa30 PGLog: remove OndiskLog
ca1637f PGLog: remove other ondisklog references
a9a41bc PGLog: pass only divergent_priors, not ondisklog
7bc4305 PG: remove ondisklog usages from PG
53e1fda FileStore: add rmkeyrange
3924531 PGLog: clear missing on backfill reset
4c89a2b rgw: system user get obj returns JSON encoded metadata
47ce702 *: always include rados.h using types.h
d46e6c3 OSD: we need to check pg ?.0 for resurrection
5bf08cd libcephfs: add a couple multiclient tests
ee40c21 client: fix sync read zeroing at EOF
e538829 ceph-disk: clear TERM to avoid libreadline hijinx
d7f7d61 ceph-disk-udev: set up by-partuuid, -typeuuid symlinks on ancient udev
c907437 ceph-disk: do not stop activate-all on first failure
253069e ceph.spec: include partuuid rules in package
00656da rgw: add 'delete' to signed subresources list
7c72933 test: update cli test
b8d2ba1 rgw: set default region as master
d582ee2 rgw: escape prefix correctly when listing objects
b7143c2 client: fix ancient typo in caps revocation path
cc9b83a ceph.spec: install/uninstall init script
1368097 sysvinit, upstart: ceph-disk activate-all on start
5c7a236 ceph-disk: add 'activate-all'
d512dc9 udev: /dev/disk/by-parttypeuuid/$type-$uuid
7f5d6e5 mds: don't journal bare dirfrag
1d86f77 mds: fix cross-authorty rename race
aa3e512 mds: try purging stray inode after storing backtrace
f11ec5c mds: handle undefined dirfrags when opening inode
29e6597 mds: fix frozen check in Server::try_open_auth_dirfrag()
18b9e63 mds: don't update migrate_seq when importing non-auth cap
f179dc1 mon: make mark_me_down asserts match check
2fe4d29 ceph: remove space when prefix is blank
8d9eef2 ceph: fix return code for multi-target commands
84d1847 ceph: error out properly when failing to get commands
8d9272e test/admin_socket/objecter_requests: fix test
efebdba ceph: do not print status to output file when talking to old mons
80c2d5a osd/ReplicatedPG: length 0 writes are allowed
1113ff0 rgw: get / set user & bucket meta mtime
7e7ff75 common/Preforker: fix broken recursion on exit(3)
f25f212 osd/OSDMap: fix is_blacklisted()
21e85f9 qa/workunits/misc/multiple_rsync.sh: wtf
a2cf14f rgw: preserve bucket creation time across different zones / regions
8eae1b8 rgw: show mtime for metadata entries
8fa4394 rgw: fixes for intra-zone object copy
5df39aa rgw: set bucket marker and bucket obj version from master
622f500 rgw: multiple changes for intra-zone object copy
17d6571 rgw: when setting bucket metadata key, don't override placement
d5679d0 rgw: forward amz headers of copy request to remote rgw
5ff2059 rgw: cleanup, move init_meta_info() into req_info
9253cd8 ceph: pass --format=foo to old monitors
c35c98d ceph: add newline when using old monitors
0d3517b doc: Added index tags.
fb07f9d doc: Added index tags.
fd423fc doc: Added index tags.
8a5b276 doc: Added index tag.
d5dbc2f doc: Updated usage and index tags.
ceba953 doc: Updated usage and index tags.
81d4f9d doc: Added introductory section. Updated usage. Index tags.
0b604fb doc: Index tags.
f851c5d doc: Update for usage and index tags.
4a79fab doc: Update for usage. Index tags.
20e68b7 doc: Updated for glossary usage. Index tags.
44bf35a doc: Updated index tags.
a529882 doc: Updated index tags.
bb5fae4 ceph.in: zero-arg invocation was broken (check array length)
8f8fd7a doc: Updated index tags.
2be1670 doc: Minor updates.
b3a143d doc: Minor updates for usage.
10c0ae9 rgw: remove unused variable
3474fa8 rules:  Don't disable tcmalloc on ARM (and other non-intel)
37cc85e rgw: bucket marker contains zone name
bcfd2f3 udev: drop useless --mount argument to ceph-disk
b139152 ceph-disk-udev: activate-journal
e5ffe0d ceph-disk: do not use mount --move (or --bind)
f3234c1 ceph.spec: include by-partuuid udev workaround rules
1aa7f59 ceph.spec: add missing ceph_test_rados_api_cmd to package
b1293ee ceph: flush stderr, stdout for sane output; add prefix
82ff72f ceph-disk: work around buggy rhel/centos parted
92b8300 mon: OSDMonitor: don't ignore apply_incremental()'s return on UfP [1]
7e08ed1 upstart: start ceph-all on runlevel [2345]
7503db9 ceph: fix mon.*
a2b2f39 librados: add tests for too-large objects
4a1eb3c osd: fix types for size checks
2be3c8d remove RELEASE_CHECKLIST
f1b6bd7 osd: EINVAL from truncate causes osd to crash
bcfbd0a ceph_test_rados: add --pool <name> arg
7ec64db rgw: pass original object attrs through extra request data
02599c4 ceph-fuse: fix uninitialized variable
a2a78e8 ceph-disk: implement 'activate-journal'
8b3b59e ceph-disk: call partprobe outside of the prepare lock; drop udevadm settle
10ba60c ceph-disk: add 'zap' command
06f0b72 ceph.in: allow args with -h to limit help to cmds that match partially
6ebfd3c ceph.in: better global description of tool
821b203 ceph.in: less verbosity on error
99bd5c8 librados: add missing #include
93505bb librados: wait for osdmap for commands that need it
f6a864d rules:  Don't disable tcmalloc on ARM (and other non-intel)
5fb0444 Update adminops.rst add capabilities
2bda9db osdc/Objecter: dump command ops
6e73d99 osdc/Objecter: ping osds for which we have pending commands
e4f9dce ceph.in: refuse 'ceph <type> tell' commands; suggest 'ceph tell <type>'
a6876ad ceph.in: argparsing cleanup: suppress --completion, add help
68a9199 osdc/Objecter: kick command ops on osd con resets
db7d121 osdc/Objecter: add perfcounters for commands
9a7ed0b mon: fix idempotency of 'osd crush add'
7e1cf87 librados: do not wait for osdmap on start
51dae8a doc: Updated with glossary terms.
35ea163 mon/MonmapMonitor: remove unused label
987f175 mon/MonCap: bootstrap-* need to subscribe to osdmap, monmap
0193f88 mon/MonClient: mark_down during get_monmap_privately() shutdown
962d118 mon/MonClient: mark_down connection on shutdown
597e439 msgr: queue reset when marking down pipes on shutdown
ea6880f msg/DispatchQueue: do not discard queued events on stop
de64bc5 msgr: queue reset exactly once on any connection
26e16c0 msg/Pipe: include con reef in debug prestring
eea73ab msg/Pipe: reset replaced pipes
e96c0ce msgr: use ConnectionRef throughout
77db175 mon/MonClient: tear down version requests on shutdown
2818a44 mon/PaxosService: discard messages during shutdown
c112fc8 mon: add is_shutdown() state helper/accessor
652c599 mon: shut down Paxos on shutdown
6630462 osd: break con <-> session cycle on reset
99172c3 osd: do not leak HeartbeatSession on shutdown
449bcd6 osd: close classes on shutdown
b56c965 osd: do not leak MOSDPings on shutdown
d172c33 osd/ReplicatedPG: don't leak Session refs in do_osd_op_effects()
cd1c289 messages/MMonSync: initialize crc in ctor
991d07a vstart.sh: put exports at top
a3fe2dc PendingReleaseNotes: notes on CLI changes
314d9c3 PendingReleaseNotes: cli changes, and ceph tell ...
cb57c41 doc/release-notes: add missed notes for 0.63 and 0.64
6160e50 mon: remove support for 'mon tell ...' and 'osd tell ...'
8adf88a ceph: add support for 'tell mon.X ...'
420e02e librados: new rados_mon_command_target to talk to a specific monitor
cdd11ea rgw: a few fixes to copy object across region
169c5de add apt-get update to installation instructions
165926b rgw: move most of object put processors implementation
0b491e9 rgw: separate req_state from object put processors
bcdd475 rgw: organize get_obj handling for copy a bit different
5fa45f4 Update README dependency lists
f86b4e7 ceph-disk: extra dash in error message
ff280b6 Clean up CrushWrapper methods that take string: no c_str() necessary
c618cf9 OSDMonitor: osd id when id already exists needs to come to stdout too
a376701 ceph, mon/OSDMonitor: fix up osd crush commands for <osd.N> or <N>
e9689ac config: fix run_dir typo
d1b83ff mon/MonClient: send commands to a specific monitor
d0e6575 ceph: implement 'ceph tell osd.* ...'
6a6025f rgw: generate read request if source rgw is remote
3e707da vstart.sh: set run_dir to out
b0b5b1b rbd image_read.sh: wait for rbd sysfs files to appear
8808ca5 osdc/Objecter: fix handling for osd_command dne/down cases
1154b2a init-ceph: look to ceph.conf instead of hard-coding /var/run/ceph
6542991 global: create /var/run/ceph on daemon startup
11d5c7a ceph: only use readline when in interactive mode
862148d mon: fix read of format_version out of leveldb
1c77be0 doc/release-notes: v0.63 and v0.64 notes
b3b0f03 ceph: filter out empty lines from osdids()
edba986 ceph: accept osd.* as a valid name
e5184ea ceph: make life easier on developers by handling in-tree runs
701943a qa/workunits/cephtool/test.sh: look for 'ceph log' via -w, not in log file
b70f565 ceph: flush stdout on watch print
299f6a6 Usage log and ops log are disabled by defaults since 0.56
de17238 mon: fix 'pg dump_stuck' stuckops type
afa16b4 qa: multiple_rsync.sh: more output
42e06c1 (tag: v0.64) v0.64
68b5fa9 ceph-fuse: older libfuses don't support FUSE_IOCTL_COMPAT
1577e20 ceph-create-keys: Make sure directories for admin and bootstrap keys exist
95434d1 rgw: propagate mtime from remote rgw on copy
256afa0 store_test: create_collection prior to split
1a9415a mon: adjust trim defaults
5f0007e doc: Reworked the landing page.
dc6cadc doc: Added a hostname resolution section for local host execution.
f6c51b4 doc: Added some tips and re-organized to simplify the process.
9b012e2 client: set issue_seq (not seq) in cap release
c7fb7a3 doc: Added some Java S3 API troubleshooting entries.
6c557d5 doc: Added install ceph-common instruction.
5543f19 doc: Added install ceph-common instruction.
3f3ad61 doc: Fixed :term" syntax.
00743d5 rgw: propagate error from remote gateway when copying object
0948624 ceph-create-keys:  Remove unused caps parameter on bootstrap_key()
3f2017f osd: fix con -> session ref change after hb reset
ea3efca rgw: pass grant headers to target when writeing object
da5e443 rgw: head acls target can be quoted
a378c4d common/admin_socket: fix leak of new m_getdescs_hook
6bab425 common/cmdparse: no need to use (and leak to) the heap
5c945cd CrushWrapper: dump tunables along with crush map
0e0e896 ceph: --keyring must be passed to parse_argv, which means not argparse
8190b43 OSD: create collection in handle_pg_create before _create_lock_pg
af92b9a Objecter: fail osd_command if OSD is down
a741aa0 mon: send "osd create" output to stdout; tests rely on it
db0c250 rgw: send meta headers with remote PUT request
566315c rgw: don't busy wait for outgoing rest requests
cbf860f rgw: don't send redirect if copy object has a local source
be1d84d rgw: link bucket to owner on metadata update
bf6b80c6 rgw: fix logic related to operations on different region
2237086 rgw: minor logging change
6f6e425 rgw: fix json decoding for swift keys
4849c8c rgw: stream obj into http request
284f6a2 rgw: format put request auth
72cb5fd rgw: bucket metadata, ignore ENOENT on put
31676c5 rgw: skeleton for obj copy across regions
f6c7c0c rgw: metadata lock/unlock implemented with test cases
d1afc81 RESTful APIs for data changes log implemented with test cases
8f141c4 unit tests for PGLog::rewind_divergent_log
04e89a4 unit tests for PGLog::merge_log
6ce2354 messages/MMonProbe: fix uninit vars (again)
10bfa83 osdc/Objecter: clear osd session command ops xlist on close
81a786e librados: fix pg command test
00eaf97 librados.h: Fix up some doxygen problems
e8300d0 mds: fix filelock eval_gather
2b4157a .gitignore: add 'ceph', now a generated file
359f456 ceph: old daemons output to outs and outbuf, combine
b3f38f3 ceph: handle old OSDs as command destinations, fix status part of -w
11e1afd ceph: add -v for version.  Makefile processes ceph_ver.h
fde536f osd: make scrub chunk size tunable
637e0ea rados: --num-objects will now cause bench to stop after that many objects
0bc731e test_filestore_idempotent: use obj name from source coll add
ad3934e rgw: handle deep uri resources
8d55b87 rgw: fix get_resource_mgr() to correctly identify resource
9a0a9c2 rgw: add 'cors' to the list of sub-resources
0b036ec osd: do not include logbl in scrub map
dea8c2d doc: Updated for glossary terms and added indexing.
8e24328 doc: Added indexing and did a bit of cleanup.
a08d620 mds: do not double-queue file recovery in eval_gather
faa1ae7 MDSMonitor: dead debugging code
7785fc5 rados.py: make exception with errno string instead of int
24a5212 ceph, librados, rados.py, librados tests: pass cmd as array
37a6102 ceph: -v should mean version, not --verbose
4446681 ceph: error and verbose message improvement
b114e11 ceph: refactor -s -> status to common code, pass childargs to old mons
2431bfb librados: rados_X_command need to assemble a vector from char *cmd
783b7ec librados, ceph, rados.py: -EINVAL for create with null/invalid name
3f7cac3 ceph: improve error reporting on failure to connect to cluster
ead8d89 ceph: fix up old-monitor handling
b1588bd ceph: catch/handle exceptions in admin socket commands
3720b64 ceph: collect/use clustername, and set defaults like other utilities
366de90 librados, rados.py: rados_create2: add clustername and future flags
8108c95 AuthMonitor: fix signed/unsigned comparison warning
f43c974 mon: upgrade auth database on leader
afebad4 auth: CephxKeyServer: add secrets_{begin,end}() getters
f2177a4 mon: AuthMonitor: remove dead code to avoid confusion
115bb93 ceph: Remove connect/command timeouts; too risky for now Keep 10s timeout when connecting for help descriptions, however
5c30844 doc: Updated with glossary terms.
8e13b38 doc: Updated with glossary terms.
7116de3 doc: Correction and index tags.
ae5aeb1 doc: Updates for glossary terms.
b394edc doc/release-notes: v0.61.3
3d6eaf5 doc: Added upstart syntax.
2d9a46c doc: Added link to Upstart syntax.
963a9c4 init-radosgw*: add all sections to usage output
4ea24ae init-radosgw*: add status
39fff6a fix init-radosgw* to use the same indentation
a4dbfa3 test: Add blacklisting to test_stress_watch
4eb576e Add test_blacklist_self() librados function for test cases
0cbc0a0 osd: Add dump_watchers to osd admin socket to examine all watchers
4b80c5b rados: Output client address in rados listwatchers request
3b0a44d osd: Add dump_blacklist to admin socket
ab0da28 osd: Drop watchers from blacklisted clients
0bd60f8 osd: Add entity_addr_t to watch_info_t and Watch
92d085f mon: fix preforker exit behavior behavior
5deece1 PG: don't dirty log unconditionally in activate()
951fc2f OSD: resurrect a parent if it splits into the pg we want to create
02946e5 qa: stop running xfstests 192 in qemu
30733af Makefile.am: add -ldl to unittest_pglog
5a53da3 ceph-test: add ceph_test_rados_api_lock to packaging and qa
68ccf8e Add RADOS API lock tests
d841566 Add RADOS lock mechanism to the librados C/C++ API.
d970311 doc: Added key and ceph repository to ceph-deploy install.
7acf3de cls,msg: Fix use of set_in4_quad() to set a entity_addr_t
89524eb osd: Fix usage of commands supported by TestOpsSocketHook::test_ops()
c76838f osd: Style corrections
a99435d mon: fix leak of loopback Connection
08bb8d5 messages/MMonHealth: remove unused flag field
4974b29 messages/MMonProbe: fix uninitialized variables
8c23d8c dev/rbd-diff: make formats into bullet lists (solves linebreak probs)
09a796d doc: Removed ceph-deploy git, and added ceph-deploy packages.
d1e2e7b doc: Modified pre-flight checklist for ceph-deploy packages.
72a6767 doc: Added title. Suppresses no title warning messages.
891641e messages/MMonProbe: remove unused fields
6dd7d46 rados.py: correct some C types
6f8b53a ceph: cleanup: accept --conf *and* -c; suppress stderr if no outs
24a270a librados, rados.py: add rados_create2/init2
85576db Revert "mds: initialize rejoins_pending"
0c4ca2a mds: allow purging "dirty parent" stray inode
d7fb9b1 mds: initialize some member variables of MDCache
d605eaf OSD: add pgid and res_map to DeletingState
15a5e09 OSD: make get_or_create_pg handle_pg_peering_evt
9655946 OSD: remove created argument from get_or_create_pg()
64b3e83 Revert "mds: allow purging "dirty parent" stray inode"
05a57bd mds: initialize rejoins_pending
c216914 Revert "mds: initialize some member variables of MDCache"
ce67c58 os/LevelDBStore: only remove logger if non-null
cdf5785 test_filestore_idempotent: make newly created objects globally unique
713719a test_librbd: use correct type for varargs snap test
b70868e unit tests for PGLog::merge_old_entry
21a1c4d mon: fix POOL_OP_AUID_CHANGE
18f2f19 test/librados: remove "set_auid" pool tests
51a887a Add ceph_test_rados_api_cmd to the ceph-test package
fbfdd51 ceph: backward-compatibility hack: blank line before JSON output
f6f4f8f librados cmd tests: mon_status comes to stdout, not stderr
6cec9cc librados: fix unsigned vs. signed warning
5bd93b3 ceph: refactor help so it can be called after cluster connection
d4bfce7 mon: better debugging of caps messages/values
0bec7e1 mon/MonCap: fix setting of text in parse()
5e90e6c mon/MonCap: set text in set_allow_all()
8c67480 ceph: various cleanups  - make base class valid() do useful work  - remove valid from CephPoolname; pool need not exist for create  - add --user as alias for --id  - remove vestige of special --keyring handing  - be sure childargs is an empty list rather than None  - remove -- from childargs if present (to stop interpreting -- args)  - handle connection timeout cleanly
a4b824c PGMonitor: fix pg dump and dump_stuck
be1a512 cmdparse, mon: add cmd_vartype_stringify for _allowed_command
f1021c9 cmdparse: add handle_bad_get(), ceph:: qualifiers, cmdmap_t
b8f1cb9 mds: allow purging "dirty parent" stray inode
2d655bd mds: initialize some member variables of MDCache
17029b2 test_librbd: use correct type for varargs snap test
456f96f ceph: remove global declarations, declare verbose and cluster near top
df34cff ceph: use conf_parse_argv to deal with nonspecial Ceph args
065b29c librados, rados.py: add conf_parse_argv_remainder()
73a1b21 ceph: make ceph -w output 'ceph status' first
dc73581 mon: include cluster fsid/uuid in status output
74f5ea4 mon/MonCap: allow osd, mds to write to cluster log
9809371 ceph: move admin-daemon command before connect()
8dd3618 ceph: finish changing bestsigs to bestcmds
b0469a1 cephtool/test.sh: fix "expect failure"
22660bd MDSMonitor, cmdparse: increase resiliency of bad cmd_getval()
1cb7dbd messages/MClientCapRelease: fix string output
27f82ce ceph: Add missing usage "ceph osd blacklist ls"
367e203 fusetrace_ll.cc: handle return value of fuse_session_loop()
541320c mds/MDCache.cc: reduce scope of 'CDir *dir' in _create_system_file_finish()
84dedf5 mount/mount.ceph.c: reduce scope of 'value'
1b70fcd mds/Migrator.cc: reduce scope of 'in' in handle_export_prep()
8afbc28 kv_flat_btree_async.cc: fix assigned but unused value issue
575652a key_value_store/kv_flat_btree_async.cc: fix some reassign before use value issues
f7071b2 osd/PG.cc: prefer prefix ++operator for iterator
7aa9b92 mds/MDCache.cc: prefer prefix ++operator for iterator
4fa5f99a ceph-fuse: create finisher threads after fork()
1e99be1 vstart.sh: make client logs unique
eb6d5fc os/LevelDBStore: fix merge loop
6cdc4f8 merge_old_entry arguments info and oe are changed to const because there is no side effect.
d7e2ab1 mon: fix uninitialized fields in MMonHealth
f1ccb2d mon: start lease timer from peon_init()
fb3cd0c mon: discard messages from disconnected clients
6b8e74f mon/Paxos: adjust trimming defaults up; rename options
a03ccf1 OSD: *inodes_hard_limit must be less than the fd limit
e12a9c4 OSD: tell them they died if they don't exist as well
cec8379 osd: fix msg leak on shutdown in ms_dispatch
9865bb4 osd: reset heartbeat peers during shutdown
923683f mon/MonClient: fix leak of MMonGetVersionReply
222059e osd: fix leak of MOSDMarkMeDown
08631e7 rgw: some user metadata fixes
851619a upstart: handle upper case in cluster name and id
dfad09b rgw_admin: modify mdlog functionality
2b9ab9f rgw: set truncated as false if ENOENT when listing mdlog entries
54d2305 doc: Added Java example for setting protocol to HTTP.
145c480 doc: Text of diagram for osd_throttles.
8d70c09 doc: Omitted text diagram, and used literal include to text file.
e6ad9da PGLog: only add entry to caller_ops in add() if reqid_is_indexed()
ddb3a8d unit tests for pg_missing_t
db85c52 PG: don't write out pg map epoch every handle_activate_map
5aa0b12 .gitignore: add directory from coverity tools
cfdd87c mds/Server.cc: fix dereference after null check
e555558 mds/Server.cc: fix dereference after null check
d9b00c4 mds/Server.cc: fix dereference after null check
0b78e2b mds/Migrator.cc: fix dereference after null check
578e292 mds/Migrator.cc: fix dereference after null check
c0e3d04 mds/MDCache.cc: fix dereference null return value
91f6b0f mds/MDCache.cc: fix dereference null return value
38ee69c mds/MDCache.cc: fix dereference after null check
5d8440e mds/MDCache.cc: fix dereference after null check
59cffba mds/Locker.cc: fix dereference after null check
3969c69 mds/Locker.cc: fix dereference after null check
bb8798e mds/Locker.cc: fix dereference after null check
db2fbb1 bench/dumb_backend.cc: check return value of lseek()
a7a0425 bench/dumb_backend.cc: check return value of posix_fadvise()
679775a small_io_bench_fs.cc: check return value of FileStore::mkfs/mount()
2a02409 mds/Locker.cc: fix explicit null dereferenced
39a53e5 mds/Server.cc: fix explicit null dereferenced
c5fc52a rgw: only append prefetched data if reading from head
b1312f9 rgw: don't copy object idtag when copying object
8f3f053 rgw: Do not assum rest connection to be established
df2d06d mon: destroy MonitorDBStore before g_ceph_context
f4eddd7 doc: Updated to reflect glossary usage.
474bb16 doc: Updated title and syntax to reflect glossary usage.
7365d0c doc: Updated to reflect glossary usage.
eb35d73 doc: Updated title to reflect glossary usage.
65294bf doc: Updated conf with ServerAlias for S3 subdomains.
442f082 doc: Updated object storage quick start for S3-style subdomains.
5e450ba doc: Updated text with new glossary terms.
c4001b1 doc: Removed FAQ from the index.
d52b805 doc: Removed FAQ doc. It's now in the wiki.
cf9aa7a debian: guard upstart {start,stop} with -x check
6bac8ac rbd/kernel.sh: quit looking for snapshot sysfs entries
1d75b49 debian: add radosgw.postinst
d126a20 debian: invoke-rc.d does not work with upstart jobs
446e077 fix test users of LevelDBStore
ec7731f move log, ondisklog, missing from PG to PGLog
d1b3eeb os/WBThrottle: remove asserts in clear()
7802292 os/LevelDBStore: add perfcounters
a47ca58 mon: make compaction bounds overlap
f628dd0 os/LevelDBStore: merge adjacent ranges in compactionqueue
e9c32b9 doc: note openstack changes for Grizzly
352b7b5 doc: start Hadoop installation docs
743c528 doc: Hadoop clarifications
5fa098f Added -r option to usage
c888d1d mon: fix leak of health_monitor and config_key_service
3c57061 mon: return instead of exit(3) via preforker
626de38 mon: Monitor: backup monmap using all ceph features instead of quorum's
59916b8 debian: stop radosgw daemons on package removal
9e658f0 debian: stop sysvinit ceph-mds daemons
70a3832 debian: only stop daemons on removea; not upgrade
f402568 rbd/concurrent.sh: probe rbd module at start
0c05955 osd: wait for healthy pings from peers in waiting-for-healthy state
04aa2b5 osd: distinguish between definitely healthy and definitely not unhealthy
28ea184 osd: remove down hb peers
a4d3b47 osd: only add pg peers if active
b586f4a osd: factor out _remove_heartbeat_peer
e1dc3fd osd: augment osd heartbeat peers with neighbors and randoms, to up some min
d20e30a flushed the formatter after closing the primary section in MDLOG, BILOG and GETSHARDINFO :: list()
50ac891 osd: initialize new_state field when we use it
a55e03c WBThrottle: add some comments and some asserts
4b31c7e WBThrottle: rename replica nocache
45873b5 rgw: verify bucket location only if exists
80942eb osd: move health checks into a single helper
c093e5b osd: avoid duplicate mon requests for a new osdmap
aac828c osd: tell peers that ping us if they are dead
ea2b232 osd: simplify is_healthy() check during boot
81a9608 rgw: forward delete_bucket to master region
482733e mds: stay in SCAN state in file_eval
0071b8e mds: stay in SCAN state in file_eval
f71e1b1 Makefile: include new message header files
29e4e7e osd: do not assume head obc object exists when getting snapdir
6da4b20 mon: compact trimmed range, not entire prefix
ab09f1e mon/MonitorDBStore: allow compaction of ranges
e20c9a3 os/LevelDBStore: allow compaction of key ranges
f03a6f2 Fixed default region creation issue
3e5cead rgw: user master region's version of bucket
e634d9d Use new fuse package instead of fuse-utils
1bb4e74 mon: disable tdump by default
4af917d os/LevelDBStore: do compact_prefix() work asynchronously
dd35c26 osd: fix note_down_osd
45b84f3 osd: fix hb con failure handler
054e96c (tag: v0.63) v0.63
64d1178 rgw: mdlog, bilog RESTful api cleanup
fabe723 ceph: first cut at --completion
2dcc266 ceph, MonCommands.h:  code format/help format tweaks
5bca9c3 HashIndex: sync top directory during start_split,merge,col_split
1c35556 doc/dev/osd_internals: add wbthrottle.rst
4d53e9c WBThrottle: add perfcounters
b528a91 osd/OSDMap: fix Incremental dump
478b576 kv_flat_btree_async.cc: fix AioCompletion resource leak
e6efc39 kv_flat_btree_async.cc: fix AioCompletion resource leak
6939b12 kv_flat_btree_async.cc: fix AioCompletion resource leak
554b41b Remove mon socket in post-stop
7e0e096 mds: use "open-by-ino" function to open remote link
3120d96 mds: open missing cap inodes
ceaf51f mds: bump the protocol version
eeb68eb mds: open inode by ino
617f70d mds: move fetch_backtrace() to class MDCache
05a7588 mds: remove old backtrace handling
39b5e76 mds: update backtraces when unlinking inodes
b88c49b mds: bring back old style backtrace handling
c9d2e25 mds: rename last_renamed_version to backtrace_version
6c72111 mds: journal backtrace update in EMetaBlob::fullbit
03c0fe9 mds: reorder EMetaBlob::add_primary_dentry's parameters
26effc0 mds: warn on unconnected snap realms
f3a9f47 mds: slient MDCache::trim_non_auth()
9424298 mds: fix check for base inode discovery
c9707f6 mds: Fix replica's allowed caps for filelock in SYNC_LOCK state
3962a75 mds: defer releasing cap if necessary
a918e61 mds: fix Locker::request_inode_file_caps()
2b1b6ca mds: notify auth MDS when cap_wanted changes
fc94f47 mds: export CInode:mds_caps_wanted
e21f328 mds: export CInode::STATE_NEEDSRECOVER
882be6b mds: send slave request after target MDS is active
38fb2ec mds: unfreeze inode after rename rollback finishes
8a1114c mds: remove buggy cache rejoin code
30c6821 mds: fix typo in Server::do_rename_rollback
e8497f8 mds: fix import cancel race
0708d44 mds: fix straydn race
7a6ec35 mds: fix slave commit tracking
0c1ca8e mds: fix uncommitted master wait
5426c75 mds: adjust subtree auth if import aborts in PREPPED state
d7b999b mds: don't stop at export bounds when journaling dir context
81d073f mds: fix underwater dentry cleanup
8b4e991 mds: journal new subtrees created by rename
a6df764 PendingReleaseNotes: notes about enabling HASHPSPOOL
aa0649c osdmaptool: fix cli tests
0740811 With mdlog lock and unlock functionality, listing and trimming base on shard_id
615b54c doc: Updated rgw.conf example.
6f93541 doc: Updated RGW Quickstart.
e59897c doc: Updated index for newer terms.
b4f63ce ceph: --help-all
99d7bce ceph: fix format strings for Py2.6 compatibility
ec0371c ceph: print parameter name for CephString in concise_sig
1e0222a ceph: Clean up/add missing docstrings
52b23b5 rgw: propagate region on bucket creation
3044fa8 rgw: determine owner after effetctive user
4dafea4 rgw: forward request params through upstream REST
aee6665 mon: Refactor
6d1e14e pg_pool_t: enable FLAG_HASHPSPOOL by default
5187649 rgw: enable data sending via http client
f9b58e0 rados.py: don't access returned buffers if error/SIGINT
ef4eb4c PGMonitor: dead code removal
2c51b91 MonCap: add pg r/w to osd capability profile
0f54748 kv_flat_btree_async.cc: fix AioCompletion resource leak
7b438e1 kv_flat_btree_async.cc: fix resource leak
9785478 ceph-disk: remove unnecessary semicolons
16ecae1 ceph-disk: cast output of _check_output()
9429ff9 ceph-disk: fix undefined variable
c127745 ceph-disk: add missing spaces around operator
580a08c rgw: multiple fixes and cleanups
2655c1e utime: add asctime()
8682248 PG: ping tphandle during omap loop as well
d62716d PG: reset timeout in _scan_list for each object, read chunk
b8a25e0 OSD,PG: pass tphandle down to _scan_list
bb407bf doc: Updated Ceph FS Quick Start.
7c497d9 doc: Added troubleshooting to Ceph FS index.
3dda794 doc: Added separate troubleshooting for MDS and Ceph FS.
8b3a04d rgw: iterate usage entries from correct entry
0c805b6 rgw: rest_client, forward requests
f2f7353 rgw: some code cleanup
75600c6 doc: Updates for ceph-deploy and cuttlefish.
c812bb5 rgw: separate certain request info into different structure
87cef3d mon: drop unnecessary conditionals
e09e944 modified:   src/init-ceph.in 	fixed bug in init script, the "df" should be run on remote host by do_cmd, 	and use $host instead of "hostname -s"
f9ec5a7 msgr: increase port range to 6900-7300 (from -7100)
1dd99f0 modified:   src/init-ceph.in 	fixed bug in init script, the "df" should be run on remote host by do_cmd, 	and use $host instead of "hostname -s"
27381c0 osd: ping both front and back interfaces
92a558b msgr: add Messenger reference to Connection
2885142 msgr: take an arbitrary set of ports to avoid binding to
6ad1055 osd: bind front heartbeat messenger to public_addr
0262301 osd: send hb front addr to monitor at boot
da1940a osd: create front and back hb messenger instances
1fee4cc osd/OSDMap: encode front heartbeat addr
342eed3 osd/OSDMap: hb_addr -> hb_back_addr
cf977ce osd/OSDMap: new_hb_up -> new_hb_back_up
6cfdb74 osd/OSDMap: new_up_internal -> new_up_cluster
3fa6585 osd: Add asserts for seg faults caused by corrupt OSDs
b355b98 OSDMonitor: fix osd dump (need enclosing section)
c2e262f osd: skip mark-me-down message if osd is not up
32dc463 osd, mds: shut down async signal handler on exit
4a8d996 rbd image_read.sh: ensure rbd is loaded
87eaaab rgw: clean up s3 signing code
08c39b8 ReplicatedPG::submit_push_complete don't remove the head object
eb91f41 messages/MOSDMarkMeDown: fix uninit field
70c9851 mds: weaken reconnect assertion
bec630f cephtool/test.sh: add test for --verbose and --concise
28a6761 ceph: fix --concise (set verbose to False)
d81d0ea sysvinit: fix osd weight calculation on remote hosts
caa15a3 sysvinit: use known hostname $host instead of (incorrectly) recalculating
903d4a0 rgw: add system users
b35fafb rgw: pre-generate bucket object version before creating it
0289c44 OSDMonitor: skip new pools in update_pools_status() and get_pools_health()
751b73a ceph-syn: specify which types of addresses to pick
a43d353 ceph-mds: specify which types of addresses to pick
de49967 mon: PaxosService: drop atomic_t on 'proposing'
c307d42 ceph-osd: specify which types of addresses to pick
6d89323 ceph-mon: only care about public addr during pick_addresses()
1ba9f84 common: add mask argument to pick_addresses() to specify what we need
78a1834 ceph: remove cli test
e15d290 mon: Paxos: get rid of the 'prepare_bootstrap()' mechanism
586e8c2 mon: Paxos: finish queued proposals instead of clearing the list
549e547 mds/Migrator.cc: fix possible dereference NULL return value
32b024c mds/Migrator.cc: fix possible dereference NULL return value
ed53bf1 mds/Migrator.cc: delete some empty lines at EOF
158e740 mds/Migrator.cc: fix possible dereference NULL return value
7ba34c1 mds/Migrator.cc: fix dereference NULL return value
de1e355 mds/Migrator.cc: fix possible NULL pointer dereference
c266d7c mds/Server.cc: fix possible NULL pointer dereference
fd818a2 src/rbd.cc: silence CID COPY_PASTE_ERROR warning
fa3149d mds/MDS.cc: fix dereference null return value
7118108 mds/MDCache.cc: fix possible NULL pointer dereference
2ff23fe mon: Paxos: finish_proposal() when we're finished recovering
f70d463 wip: ceph: print help for osd.0, mon.a, mds.a daemon commands
34c42f6 ceph: admin_socket() returns data rather than printing.
06a156d admin_socket and all users: command-descriptor support
27b60d8 Makefile.am: Move cmdparse to libcommon
ed31524 rados.py, ceph: add timeout for run_in_thread and selected callers
70a9697 packaging fixes around the new ceph cli:
7e6c461 ceph: handle our own help printing
bf6220e mon: Merge in (and add COMMAND() for) compact command
948d396 ceph: handle non-EINVAL failure on get_command_descriptions
d302761 objecter: allow osd-destined commands to fail if osd doesn't exist
a9b4f46 mon: fix stdout vs. stderr throughout monitor
de1b855 librados, rados.py: rados_*_command: pass inbuflen to handle zeroes
5225028 osd: handle new-style JSON commands directly (like mon)
c3f6e64 mon, cmdparse: move dump_cmds_to_json to common/cmdparse
623d630 ceph: cleanup: remove dead code/imports, note apparently-unused objects
a568be8 ceph: hack for tell so that we don't have to duplicate "tell <target>" in each command description
a502daa ceph: figure out which daemon should get a command early
9a08573 ceph: add partial to validate()
aa7f52f ceph: move parsing of a json funcsig into function for reusability
26df7ac ceph: allow CephName to validate when given only an 'id'
2a663a9 rados.py: no exception on error, just return errno to caller
0b9601d MonmapMonitor: use parsed destination for mon tell
fc629e6 MonmapMonitor: mon tell: allow 'type.id' or 'id' as well as 'n'
d7c6885 ceph: send pgid in command strings of pg tell
3ff7c36 ceph: return error from json_command rather than raising exception
5f211ef ceph: clean up line wraps, comments, add verbose command output
95e411d ceph: implement -w/--watch.
2ce5cb7 rados.py: change all calls to librados to be on a child thread
4849084 rados.py: implement rados_monitor_log
bcf064f librados: rados_monitor_log's cb takes two ints rather than timespec
4dc6a16 mon/PGMonitor: reflow command methods
590cffe mon/OSDMonitor: restructure command flow
d87e371 mon: fix 'osd dump'
db589d1 vstart.sh: use new mon cap profiles
05dda0f mon: weaken security check on 'log' command
73d08b9 mon: wire new command map to new caps
839d5b3 mon: transition from MonCaps -> MonCap
489cd5c FileStore: integrate WBThrottle
6670e2a os/: Add WBThrottle
917341e ceph-object-corpus: note MForward encoding change
5d7dd5a mon: bump wire protocol version
1123fc2 mon/MonCap: add new MonCap implementation
27dc4fe osd/OSDCap: avoid typedef for rwxa_t; rename to osd_rwxa_t
2aefee2 osd/OSDCap: fix allow_all() check
dc4a508 ceph: remove ceph tool cli tests
039b757 librados: add rados_monitor_log()
e830de5 librados: unit tests for mon_command
63017ba rados.py: use librados-allocating versions of *_command
a090abf librados: use memcpy rather than strncpy for possibly-NUL data
d490041 ceph: restructure so old-style commands and new-style can share code
93d8125 rados.py: remove debug prints from *_command
9e8397a Check for and handle old-monitor
d5075ca Return correct error to main; always write outs to stderr
2919bde Set conffile to passed -c, not conf
d5497fa rados.py: errnos must have errno. qualifier
7dbe4ef ceph: pop off 'target' before sending command
808f518 ceph: fix exception msg
3b7062b RadosClient: handle command replies
2e52649 ceph: 'ceph daemon <name|path> <command ...>'
e748d9b ceph: add support for --admin-socket <path>
e3f13e8 vstart.sh: set python path(s); echo something for user to paste
aeeabcd librados: add *_command() variants that allocate the result w/ malloc
1af5f74 wip: osd tell commands, CephFileparse, etc.
4698d99 Enhance cephtool tests for coverage of CLI rewrite
f26bd55 mon, ceph: transition to separate CLI parsing
d9ff7d4 mon: add JSON command parsing framework
ed2266a Formatter: fix XML parsing assert
3148482 Formatter: add new_formatter(type)
850a4cc Rename "ceph" tool to "ceph-legacy-cli"
4227490 rados.py: functions for new librados functions {mon,osd,pg}_command
3bc0d3f Add C and C++ interfaces to mon_command, osd_command, pg_command
a9ce311 str_list: cleanup/enhancement
2e17222 osdc/Objecter: implement osd and pg commands
9f55333 mon/MonClient: assume tid 0 is the first command
0c6a31c mon/MonClient: add mon command handling
5e21b30 mon: set tid on MMonCommandAck
17cf8df Revert "mon: fix validatation of mds ids in mon commands"
e9d20ff mon: implement --extract-monmap <filename>
5110497 doc: update mon cluster rescue process for cuttlefish+
132d5bf Fix usage for "ceph osd lost"
c0268e2 mon: implement --extract-monmap <filename>
669e45e rgw: forward bucket creation to master region
5671fa9 ceph-monstore-tool: implement getmonmap
d48f1ed rgw: protect ops log socket formatter
0866517 FileStore: add fd cache
14d8cc6 ceph-fuse: add ioctl support
bcc8bfd ceph-disk: fix stat errors with new suppress code
ca28d87 common/shared_cache.hpp: fix set_size()
17a6e7f doc/dev/osd_internals: add some info about throttles
12eff5d common/shared_cache.hpp: add clear()
bfb08ee rbd image_read.sh: test different clone object orders
7ad5ceb rbd image_read.sh: add clone-of-clone testing
a6b4847 rbd image_read.sh: allocate local file at create time
512e907 rbd image_read.sh: a few cleanups
cbff720 rbd: prevent import of a dir
ebc0913 ceph-monstore-tool: be more verbose when replaying a trace
a6569c5 ceph-monstore-tool: compact command
9cc787a ceph-monstore-tool: dump-keys command
7be705e rgw: infrastructure to send requests to different region
1c7b9c3 os/LevelDBStore: fix compression selection
19c5ac3 Use invoke-rc.d in maintainer scripts
047d32a Added send_response implementation for MDLOG and BILOG list APIs so that periodic flushing can happend in execute()
183280c PG: kill some dead IndexedLog methods
4cf00b9 OSD: kill old split code, it's been dead for a while
2f193fb debian: stop sysvinit on ceph.prerm
d2a4253 mds: better error check on sessionmap load
87767fb mon: be a bit more verbose about osd mark down events
03b9326 Makefile: add -Wformat-security
a7096f8 rgw: add access key to zone info
d05a4e5 ceph df: fix si units for 'global' stats
0c2b738 ceph df: fix si units for 'global' stats
17f6fcc Remove stop on from upstart tasks
6340ba8 Fix -Werror=format-security errors
947e133 MDLOG and BILOG REST Apis implemented along with some bug fixes
8bba266 libcephfs: add ceph_get_pool_name()
feec1b4 doc: Added more glossary-compliant terms and indexing.
5c4b4f0 doc: Added another instance term to the glossary.
decf342 doc: Minor improvements to Ceph FS landing page.
0f4c67f rgw: store region in bucket info
3255f11 libcephfs: get the pool name of a file path
3562c8c libcephfs: get replication factor of a file handle/path
877fcf0 libcephfs: get file handle/path layout info
42c74fd libcephfs: get stripe_unit/stripe_count/object_size/pool_id by file handle/path
10496a8 libcephfs: fix typos
ee3d50e Client: get describe_layout by file handle/path
69e2cbe mon: add 'compact' command
a130cd5 kv_flat_btree_async.cc: release AioCompletion before leave the loop
4ba70f8 librbd/internal.cc: fix resource leak
7494e4e doc: Omitted literal syntax from toc.
381ad24 doc: Added fuse syntax to the fstab doc.
c80c6a0 sysvinit: fix enumeration of local daemons when specifying type only
d8d7113 udev: install disk/by-partuuid rules
65072f2 mon: clear pg delta after some period
acf6b8f os/FileStore: fix replay guard error msgs (again)
9b9d322 test_filestore_idempotent_sequence: unmount prior to deleting store
5a27e85 Revert "test_filejournal.cc: cleanup memory in destructor"
aacc9ad librbd: make image creation defaults configurable
c49ba75 os/FileStore: print error code to log on replay guard failure
53ee6f9 rbd.py: fix stripe_unit() and stripe_count()
810306a cls_rbd: make sure stripe_unit is not larger than object size
8fa3039 doc: Added index reference.
74a73f2 doc: Added glossary references and index references.
5737d03 doc: Added cluster map and CRUSH definitions.
58a880b doc: Fixing index references.
46f5f58 doc: Added latency comment.
604c83f debian: make radosgw require matching version of librados2
eaf3abf FileJournal: adjust write_pos prior to unlocking write_lock
541396f client/Client.cc: fix/silence "logically dead code" CID-Error
64871e0 mds: avoid assert after suicide()
49033b6 objclass/class_debug.cc: reduce scope of 'n' in cls_log()
297b573 tools/ceph-filestore-dump.cc: reduce scope of 'r' in export_files()
a634a13 test/system/systest_runnable.cc: reduce scope of 'ret' in join()
6147df4 test/system/st_rados_list_objects.cc: reduce scope of 'ret' in run()
56f8c36 test/system/st_rados_create_pool.cc_ reduce scope of 'ret' in run()
d226d9c test/system/rados_list_parallel.cc: reduce scope of 'ret'
8f486f0 test/librbd/test_librbd.cc: reduce scope of several variables
95bf066 rgw/rgw_tools.cc: reduce scope of 'ret' in rgw_get_obj()
492553b rgw/rgw_common.cc: reduce scope of 'end' in two cases
682f107 rgw/rgw_bucket.cc: reduce scope of 'max' in rgw_remove_bucket()
9d6e086 rgw/rgw_admin.cc: reduce scope of 'ret'
a3eeb9f rgw/rgw_acl_s3.cc: remove local variable 'ret' from create_from_headers()
b9fe22b rbd_fuse/rbd-fuse.c: reduce scope of some variables in open_rbd_image()
393de32 osdc/Objecter.cc: reduce scope of skipped_map
84ce4e9 os/chain_xattr.cc: reduce scope of local variable
829fdd4 src/os/LFNIndex.cc: reduce scope of suffix_len
8254072 os/HashIndex.cc: reduce scope of a local variable
ea7d8a4 os/FileStore.cc: reduce scope of a local variable
2c60bc1 src/os/FlatIndex.cc: reduce scope of suffix_len
4427528 src/os/DBObjectMap.cc: reduce scope of some variables
14871d0 mount/mount.ceph.c: reduce scope of 'skip' in parse_options()
eb808cf src/mds/flock.cc: reduce scope of old_lock_to_end in two cases
ce84a22 mds/Locker.cc: reduce scope of forced_change_max
e7d4782 src/crush/mapper.c: reduce scope of some local variables
e0f1084 auth/Crypto.cc: reduce scope of local variable in_buf
aa11c68 rgw/rgw_rados.cc: remove not needed code
cd48f57 rgw/rgw_gc.cc: fix possible NULL pointer dereference
403bfa4 osd/OSD.cc: remove unused variable
17d8ee9 Fix some little/big endian issues
769a16d Makefle: force char to be signed
3759daa OSD: After repairs finish a new deep-scrub should be avoided
c0378b6 OSD: Repair with 0 fixed doesn't complete properly
e34a56f doc: fix mkcephfs production use, deprecated note
3ac7fb8 rgw: parse location constraint on bucket creation
a7e80e2 rgw: a function to read all request input
84c17b6 rgw: update json encode/decode for new bucket info
c8ac287 rgw: add region to bucket info
b646407 Modified PutMetadata::get_data() to handle chunked transfers
3c8ef2b ceph_json: don't try to parse NULL buffer
0219774 Removed the check for parameter validation in op_get()
efaa33f Fixed certain bugs on rest admin APIs
bf612f0 rgw: modify metadata RESTful implementation
648c3bc With admin metadata rest API implementation and unit test cases for it
8f3fb97 Added OSD to glossary, removed parenthetical.
f36ec02 doc: Updated architecture document.
48e89b5 OSD: scrub interval checking
1f4e7a5 OSD: Don't scrub newly created PGs until min interval
7b93d28 doc/release-notes: v0.62
52b0438 doc/rados/configuration: fix [mon] osd min down report* config docs
2a4425a reflect recent changes in the pg deletion logic
1c53991 fix typos and add hyperlink to peering
b7d4012 typo s/come/some/
dbddffe update op added to a waiting queue or discarded
e9935f2 (origin/wip-rgw-bucketlog-3) ceph_json: fix bool decoding
67ecd75 rgw: json_encode json a bit differently
afeb8f2 md/Sever.cc: fix straydn assert
e69257e rgw/rgw_user.cc: fix possible NULL pointer dereference
d692902 mds/Server.cc: fix possible NULL pointer dereference
fb222a0 mds/Server.cc: fix possible NULL pointer dereference
c87788b mds/Server.cc: fix possible NULL pointer dereference
088455f librados/AioCompletionImpl.h: add missing Lock
8a52350 src/dupstore.cc: check return value of list_collections()
70a4a97 mds/Server.cc: fix possible NULL pointer dereference
21489ac src/rbd.cc: use 64-bits to shift 'order'
3e44682 mon/Monitor.cc: init 'timecheck_acks' with '0' in constructor
528ec35 mon/Monitor.h: init 'crc' in constructor with '0'
9883630 mon/QuorumService.h: remove unused QuorumService::flags
8df55e0 test/test_cors.cc: initialize key_type in constructor
eac545e tools/ceph.cc: cleanup memory allocated for 'buf'
c3c140b tools/ceph.cc: close file descriptor in error case
043ea2c tools/ceph.cc: close file descriptor in error case
3602891 test_filejournal.cc: cleanup memory in destructor
7ea44ee librbd/test_librbd.cc: free memory in test_list_children()
3c285c4 scratchtool.c: cleanup rados_t on error
cab8e9b test/kv_store_bench.cc: fix resource leak
d8cb7df filestore/test_idempotent_sequence.cc: fix FileStore leaks
349cfb4 ceph-filestore-dump.cc: cleanup on error case
df4c099 ceph-filestore-dump.cc: cleanup resource in error case
9382379 (tag: v0.62) v0.62
c5deb5d doc/release-notes: v0.61.2
97a7309 rgw: tie bucket/user removal to mdlog differently
4bb4063 ceph_test_libcephfs: parse environment
f24b8fb PG: fix some brace styling
72bf5f4 PG: subset_last_update must be at least log.tail
395a775 SimpleThrottle: fix -ENOENT checking
d06d0c3 rgw: slightly simplify metadata abstraction
bb6d1f0 rgw: read bucket metadata before writing it
88af2b0 Replace mis-named mon config variables using mon_osd_min_down_reports/mon_osd_min_down_reporters
225fefe ceph-disk: add '[un]suppress-activate <dev>' command
5c305d6 mon: fix validatation of mds ids in mon commands
ba05b16 mon: Monitor: tolerate GV duplicates during conversion
6db072d libcephfs: add ceph_conf_parse_env()
9ec77eb ceph_test_libcephfs: fix xattr test
9bb58b2 OSD: We need to wait on CLEARING_DIR, not DELETED_DIR
13ae13a librbd: add options to enable balanced or localized reads for snapshots
0c7414b ReplicatedPG: send -EAGAIN for both balanced and localized reads
4ddaea7 librados: add per-ObjectOperation flags for balanced and localized reads
442f058 librados: add sparse_read() to the C++ bindings for an ObjectOperation
d519346 Objecter, librados: use only ObjectOperation form of sparse_read internally
ed76824 Objecter: fix error handling for decoding stat
82211f2 qa: rsync test: exclude /usr/local
459c731 osd/OSD.h: fix try_stop_deletion
a0d238c rgw: cache obj version
93f2794 Throttle: move start_op() to C_SimpleThrottle constructor
613d747 librbd: run copy in parallel
fb299d3 librbd: move completion release into rbd_ctx_cb()
a6d0a25 librbd: parallelize and simplify flatten
bfa1066 librbd: only send non-zero copyup data
cfece23 librbd: parallelize rollback
922df6c rgw: op->PutACLs uses the correct set_attr for buckets
1f0b947 rgw: rados->set_attr() just calls rados->set_attrs()
437d69e mds/CDir.cc: fix possible dereference after NULL check
c006151 ceph-monstore-tool.cc: check if open() was successful
d1e0fc6 kv_flat_btree_async.cc: fix resource leak
f6635cb client/SyntheticClient.cc: check return value of describe_layout()
cb91f0f client/Client.cc: fix possible NULL pointer dereference
5af2cbf rados.cc: fix leaking of Formatter*
4b3a7dc client/SyntheticClient.cc: fix another memory leak
b9fbc82 client/SyntheticClient.cc: fix memory leak
447f318 mds/MDCache.cc: fix dereference NULL pointer
d258df4 mds/MDCache.cc: add NULL pointer check
5392e97 mds/Server.cc: remove dead default in switch
f56cb98 osd/OSD.h: add missing unlock of osd_lock
b097f65 rgw/rgw_rest.cc: remove dead and unneeded code
5babc81 rbd.cc: fix error handling
4908079 rados_sync.cc: remove dead and not needed code
077cdb0 test/omap_bench.cc: remove dead code
0c70e44 libcephfs/test.cc: add assert for result of ceph_getxattr()
8d61466 rgw/rgw_user.cc: add missing break in switch
d9c5b5b client/SyntheticClient.cc: add missing break in switch
6e241b9 ObjectStore.cc: add missing break in switch
92db7a0 rgw: metadata handler for bucket set_attr operations
27fb38b doc: Fixed typos. Somehow got a merge error.
65768a6 mds: be more explicit about path_traverse completion
8eaa15f doc: fix broken link to ceph-deploy in release notes
3b2c5fb librados: add selfmanaged_snap_rollback as an ObjectOperation
4095641 librbd: delete more than one object at once
537386d Throttle: add a simpler throttle that just blocks above a threshold
261aaba doc: Added entry for the RGW Admin Ops API.
54e7a6f libcephfs_jni.cc: reduce scope of ret variable
cd0f461 include/ceph_hash.cc: reduce scope of a var in ceph_str_hash_rjenkins()
ad2990c include/addr_parsing.c: reduce scope of port_str in safe_cat()
cc3376c global/global_init.cc: reduce scope of ret in global_init_daemonize()
73a10ac crush/builder.c: reduce scope of oldsize in crush_add_bucket()
e064e67 common/safe_io.c: reduce scope of some ssize_t variables
8c97e77 common/obj_bencher.cc: reduce scope of avg_bandwidth
6256d3e common/ceph_argparse.cc: remove scope of some variables
b66b8dd common/admin_socket.cc: remove scope of ret variable in do_accept()
e7d1114 cls/rbd/cls_rbd.cc: reduce scope of variable rc
cdfc4a7 rgw/rgw_op.cc: use empty() instead of size()
45ffb36 ceph-filestore-dump.cc: use empty() instead of size()
723062b doc: Updated usage syntax. Added links to hardware and manual OSD remove.
01a07c1 OSD: rename clear_temp to recursive_remove_collection()
f5a60ca osd: remove_dir use collection_list_partial
8b3cd6e rgw: don't handle ECANCELLED anymore
7a8d6fd PG,OSD: delay ops for map prior to queueing in the OpWQ
d3dd99b PG: no need to wait on DeletingStateRef for flush
0ef9b1e osd_internals/pg_removal.rst: update for pg resurrection
90f50c4 OSD: add pg deletion cancelation
b274c8a common/sharedptr_registry.hpp: add remove
0557e6c rgw: bucket metadata operations go through metadata handler
270ca62 doc: Updated doc for connectivity. Updated text with glossary terms.
e417312 doc: Updated disk syntax. Updated text with glossary terms.
af91928 doc: Added connectivity section. Updated doc with glossary terms.
f1b13a1 doc: Added the non-implemented bit for the gateway to the dev/radosgw TOC.
69b6482 OSD: don't rename pg collections, handle PGs in RemoveWQ
fe164e4 doc: Republishing the admin operations API for the gateway.
d4732e8 doc: Republishing the admin operations API for the gateway.
00e9031 osd: prioritize recovery for degraded pgs
09163a3 Add priority option to AsyncReserver class
df049c1 AsyncReserver: Remove assert in set_max() for max > 0
da271f7 doc: Document admin api web interface.
619a68a armor: don't break lines by default
770d94d rgw: implement metadata hander for buckets data
499edd8 osd: initialize OSDService::next_notif_id
e30a032 osd: init test_ops_hook
72b5629 rbd: fix buffer leak in do_import
2bc0883 librbd: fix possible use-after-free
4a90af8 ceph-filestore-dump: fix uninit fields in ctor
99958e2 rgw: fix various uninit class fields
ad073c2 radosgw-admin: fix fd leak in read_input()
110a823 rados: fix fd leak
3dc7c32 rados: fix buffer leak
4087e42 os/Filestore: fix fd leak in error path
8632707 mon: fix Formatter leak
76b9024 mds: fix fd leak
5433462 doc/release-notes: v0.61.1 release notes
e5b2ca8 PG: rename must_delay_request to op_must_wait_for_map, make static
6c1e479 mon: dump MonitorDBStore transactions to file
5a631b8 osd: optionally enable leveldb logging
bb4f65a mon: allow leveldb logging
a284c9e common/Preforker: fix warnings
3ebddf1 debian/control:  squeeze requres cryptsetup package
83bbae4 debian/control:  squeeze requres cryptsetup package
46c3e48 ceph_json: dump timestamp in utc
551571c rgw: datalog trim
52666dc PG: reassert_lock_with_map_lock_held() is dead
17705d7 OSD,PG: lock_with_map_lock_held() is the same as lock()
e2528ae ceph-create-keys: gracefully handle no data from admin socket
f2a54cc init-ceph: fix osd_data location when checking df utilization
ea809f7 rgw: bucket index log trim
546ed91 osd: don't assert if get_omap_iterator() returns NULL
76b736b rgw: metadata log trim
36ec6f9 osd: don't assert if get_omap_iterator() returns NULL
3846451 rgw: user operation mask
ef82ad7 rgw: resend data log entry if took too long
3385c2c rgw: more data changes log implementation
a37092f RefCounteCond: keep return val, wait() returns it
f28df17 rgw: changed data log renew thread
39b258c rgw: limit num of buckets in data changes log
d5da152 rgw: use shared_ptr instead of RefCountedObject
5e642fa lru_map: infrastructure for a bounded map
6659b2b rgw: data changes log, don't always send new requests
171b0bf rgw: data changes log, naive implementation
988dab3 rgw: decouple bucket data pool from bucket index pool
8e89db8 OSD: handle stray snap collections from upgrade bug
252d71a PG: clear snap_collections on upgrade
438d9aa OSD: snap collections can be ignored on split
1870516 mon: set MonitorDBStore options on open
393c937 ceph: return error code when failing to get result from admin socket
dbcd738 ceph-monstore-tool: added replay
aa94f5b ceph-monstore-tool: add MonitorDBStore trace dumper
797089e mon: dump MonitorDBStore transactions to file
4fbf9a7 rgw: fix get_obj() with zero sized obj
0b526d9 rgw: don't set shadow obj attr in object metadata
abef2b2 rgw-admin: object stat also decodes policy
d05d05a rgw: update cli test for radosgw-admin
2983d98 Makefile.am: add missing header file
7132e6e rgw-admin: add object stat command
49b3d2e rgw-admin: bucket list also specifies object namespace
4b142a1 rgw: copy_obj uses req_id as tag
b295c64 rgw: radosgw-admin bucket list --bucket lists bucket objects
3d7b839 rgw: call rgw_store_user_info() with objv_tracker
85e4ea9 rgw-admin: fix some more merge issues
fa23b3e rgw-admin: fix user_id initialization
7e08c57 rgw: share object tag and index tag
2a16baf rgw: bucket index log fixes
871b401 radosgw-admin: bilog list gets marker and max-entries params
b1578ba radosgw-admin, cls_rgw: list bucket index log
5e19628 cls_rgw: bucket index versioning
d857896 rgw: fix broken radosgw-admin user * commands
abd0ab3 cls_rgw, rgw: bucket index logs modifications
478fe5e rgw: metadata rm
fe63d44 rgw: cls_log_trim boundary change
288645d rgw: show metadata log through radosgw-admin
75ada77 rgw: use new cls_log listing interface
8444db6 cls_log: adjust listing api
cb6d4de rgw: log user operations
7ca9192 rgw: track object versions between reads and writes
72220bf rgw: initialize meta_mgr earlier
e98ca56 test_cls_log: remove warning
0cdce74 cls_log: extend unitest
c28f864 cls_log: more fixes
815e0ac cls_log: unitest
5313b99 cls_log: fixes, other adjustments
fee51dd objclass: provide new api for unique subop versioning
4feac81 osd: keep track of current osd subop num
b77422f cls_log: trim works in chunks, returns -ENODATA when done
7c19f96 cls_log: a class to handle info sorted by timestamp
0cccd7c rgw: metadata list user, only show uids
272635f rgw: user metadata updates also key version
ff2d3c9 rgw: add top level metadata handler
dcee3a1 rgw: put metadata, other cleanups
1269986 rgw: metadata manager, api to list keys
7cfa89d rgw: metadata set/get infrastructure
fe96600 rgw: rgw_get_system_obj() can return obj_version
2223d99 cls_version: add cls_version_read(ObjectReadOpeation&)
1563ad1 librados: add two more ObjectOperation::exec()
5f1b897 rgw: start tying metadata objs to version objclass
913ecd4 cls_version: unitest
8d7d436 cls_version: various fixes
6a5966c cls_version: create a new objclass
8bab4fe rgw: fix json decoding of rgw_bucket
8bb5e0a rgw: regionmap update
8ef4f39 rgw: get/set region map
ea4d033 rgw: zone list, setup changes
e27f889 common/ceph_parser.cc: cleanup
67db8a6 rgw: set region info, default region
5cc34ff rgw: can list regions, show default region info
708339a rgw: some region/zone related cleanups/fixes
a12357c rgw: admin command to show region info
6fa5480 rgw: derr -> lderr
488a20d rgw: region creation
960fa0d rgw: region management encoding/decoding changes
64aa4e4 rgw: define region/zone data structures
f0c0997 doc/install/os-recs: reverse order of releases
f8ae2bd doc: Fixed typos.
452fb52 doc: Fixed typo.
a0cb5e5 doc: Removed "and" as suggested.
ad75582 doc: Fixed hyperlink.
87160c4 doc: Fixed path typo.
2d6e4d2 doc: Updated OS support for Cuttlefish.
67b60b9 doc: Minor tweak to the definition list style.
fd63f8a WorkQueue: Allow WorkQueueVal to be specified with 1 type
4b548b5 OSD: removal collections will be removed inline and not queued
d7cd957 OSD::clear_temp should clear snap mapper entries as well
7b22cfb PG,OSD: mark info as backfilling in _remove_pg()
c207516 doc: Added glossary to TOC.
473aae9 doc: Added glossary.
4e99dca doc: Fixed usage typo.
8586738 Fix whitespace indentation
ad504e9 Implement 'config get <var>' for the admin socket
27d86bd fixed common typo in error messages
2bd2731 doc/install/{debian,rpm}: update for cuttlefish
7c3a0e8 doc/start/get-involved: fix links
b107081 doc/release-notes: I missed rgw rest api in the release notes
9d85d67 os/ObjectStore: add missing break in dump()
c693ba5 rados: add whole-object 'clonedata' command
298ebdb doc: Deleted redundant "so that" phrase.
277f2de doc: Corrected typo.
359bd6d doc: Corrected typo.
2d4b5bd Removed comment out of header, and added "coming soon."
1cfc6e3 doc: Updated usage for push | pull.
048e049 Clean up defer_recovery() functions
bd36e78 osd: make class load errors louder
0b4c5c1 osd: optionally enable leveldb logging
c1d5f81 mon: allow leveldb logging
237f3f1 (tag: v0.61) v0.61
eb69c7d os/: default to dio for non-block journals
60603d0 ceph-disk: use separate lock files for prepare, activate
e662b61 ceph-test.install: add ceph-monstore-tool and ceph-osdomap-tool
eae02fd ceph.spec.in: remove twice listed ceph-coverage
71cef08 ceph.spec: add some files to ceph
c5d4302 doc: Update the usage to reflect optional directory name.
35acb15 doc: Rearranged to show zapping multiple disks and creating multiple OSDs.
8add78c doc: Moved install to the second step, from the first step.
6abbe68 doc: Autonumbering syntax correction.
efa460c doc: Added troubleshooting PGs to the index.
cddf3b5 doc: Commented out osd list for now.
0c0fc03 doc: Commented out remove a mds for now.
41eecf4 doc: Forwarding link. FAQ migrated to new Ceph wiki.
3540d90 ceph-test.install: add ceph-monstore-tool and ceph-osdomap-tool
6f33885 ceph.spec.in: remove twice listed ceph-coverage
acb60e5 ceph.spec: add some files to ceph
1a67f7b mon: fix init sequence when not daemonizing
a763569 ceph: add 'osd crush rule ...' to usage
3f0b8ec mon: avoid null deref in Monitor::_mon_status()
a968692 mon: generate useful error msgs for 'osd crush rule create-simple ...'
8894c50 crush: return -1 on error from get_type_id
b2501e9 ceph.spec: require xfsprogs
a0988be doc/release-notes: warn about sysvinit crush map update
c189d85 init-ceph: update osd crush map position on start
2e0dd5a mon: fork early to avoid leveldb static env state
6f8c1e9 doc/release-notes: add/link complete changelogs
4fa2c49 doc/release-notes: v0.56.5
72fc6eb doc: Fixed typos.
5cdd731 Revert "mon: fix Monitor::pick_random_mon()"
b4e73cc doc/install/upgrading...: note that argonaut->bobtail->cuttlefish must be v0.56.5
039a3a9 tools/: add paranoid option to ceph-osdomap-tool
2610528 osd: default 'osd leveldb paranoid = false'
444660e librados,client: bump mount timeout to 5 min
6a61268 OSD: also walk maps individually for start_split in consume_map()
c659dd7 rgw: increase startup timeout to 5 min
45c9e24 doc/install/upgrading...: note about transitioning to ceph-deploy
a8d4647 doc/release-notes: note about ceph-deploy
f95a053 Update debian.rst
615b84b Makefile,gitignore: ceph-monstore-tool, not ceph_monstore_tool
628e232 Makefile: put ceph_monstore_tool in bin_DEBUGPROGRAMS
d0d93a7 tools: ceph-osdomap-tool.cc
f498226 OSD: load_pgs() should fill in start_split honestly
3e0ca62 OSD: cancel_pending_splits needs to cancel all descendants
d944180 osd: add --osd-leveldb-paranoid flag
7cc0a35 mon: add --mon-leveldb-paranoid flag
dfacd1b dumper: fix Objecter locking
7bb145b doc/rados/deploy: note that osd delete does not work yet
771f452 doc/rados/deploy: misc edits
a21ea01 Revert "PaxosService: use get and put for version_t"
88c030f mon/Paxos: update first_committed when we trim
3a6138b mon/Paxos: don't ignore peer first_committed
bb270f8 mon: Monitor: fix bug on _pick_random_mon() that would choose an invalid rank
7f48fd0 mon: Monitor: use rank instead of name when randomly picking monitors
8a8ae15 OSD: clean up in progress split state on pg removal
2f6eb39 docs: Update links to Github and the Tracker
81b06be docs: Update the ceph-users join and leave addresses
b3f37ea docs: Update CloudStack RBD documentation
fe68afe mon: communicate the quorum_features properly when declaring victory.
b17e842 doc: Incorporating Tamil's feedback.
bd6ea8d doc: Reordered header levels for visual clarity.
bb93eba doc: Fixed a few typos.
14ce0ad doc: Updated the upgrade guide for Aronaut and Bobtail to Cuttlefish.
7de29dd doc/release-notes: update cuttlefish release notes to include bobtail
cd1d6fb ceph-disk: tolerate /sbin/service or /usr/sbin/service
a97ecca mon: Monitor: disregard paxos_max_join_drift when deciding whether to sync
a39bbdf mon: if we get our own sync_start back, drop it on the floor.
d00b4cd Revert "mon: update assert for looser requirements"
cedcb19 Revert "mon: when electing, be sure acked leaders have new enough stores to lead"
c2bcc2a ObjectCacher: wait for all reads when stopping flusher
6ae9bbb elector: trigger a mon reset whenever we bump the epoch
0acede3 mon: change leveldb block size to 64K
6f2a7df doc: Fix typo.
35a9823 doc: Added reference to transition from mkcephfs to ceph-deploy.
de31b61 doc: Updated index for new pages. Added inner table.
fa9f17c doc: Added transition from mkcephfs to ceph-deploy page.
02853c5 doc: Added purge page to ceph-deploy.
45d12f1 doc: Added OSD page to ceph-deploy.
0b912f4 doc: Added mds page for ceph-deploy.
3c46c51 doc: Added admin tasks page for ceph-deploy.
1c15636 Set num_rd, num_wr_kb and num_wr in various places that needed it
adb7c8a osd: read kb stats not tracked?
b5e2461 osd: Rename members and methods related to stat publish
bd68b82 mon: enable 'mon compact on trim' by default; trim in larger increments
929a994 mon: share extra probe peers with debug log, mon_status
030bf8a debian: only start/stop upstart jobs if upstart is present
825a431 man: update remaining copyright notices
4abf081 man: refresh content from rst
1bd011a PG,OSD: _remove_pg must remove pg keys
7146012 OSD: no need to remove snapdirs on _remove_pg()
8f6a1b8 mon/Paxos: compact on trim
3cb4f67 mon: compact PaxosService prefix on trim
e8c9824 mon: add compact_prefix transaction operation
a2f7d1d leveldb: add compact_prefix method
90b6b6d mon: compact leveldb on bootstrap
ee3cdaa mon: compact leveldb on bootstrap
5fa0f04 mon: --compact argument, config option to compact the store on start
6a00f33 leveldb: add compact() method
ffc8557 doc: update rbd man page for new options
8b2a147 gitignore: add ceph_monstore_tool
29831f9 Makefile: fix java build warning
a2fe013 mon: remap creating pgs on startup
278186d mon: only map/send pg creations if osdmap is defined
28d495a mon: factor map_pg_creates() out of send_pg_creates()
896b277 client: make dup reply a louder error
ee553ac client: fix session open vs mdsmap race with request kicking
bf0b430 Fix a README typo
cea2ff8 mon: Fix leak of context
20d99c4 doc: Removed extra whitespace.
041b0cf doc: Added rbd-fuse to TOC.
8f48a3d Added commentary and removed fourth column for now.
4e805a5 doc: Removed. Redunant information now.
6612785 doc: Added openssh-server mention, corrections, hyperlink fix.
21db055 doc: Added openssh-server mention.
9fa6ba7 doc: Added manpage link and hidden TOC.
dd6e79a doc: Removed installed Chef. This is now in the ceph wiki.
945dac6 doc: Removed text for include directive. Wasn't behaving the way I'd hoped.
3d9bc46 doc: Added ceph-mds to CephFS toc.
44d13a7 doc: Fix. ceph, not chef.
5327d06 ceph-filestore-dump: fix warnings on i386 build
79280d9 OSDMonitor: when adding bucket, delay response if pending map has name
e725c3e PaxosService: use get and put for version_t
1e6c390 tools: add ceph_monstore_tool with getosdmap
50e58b9 ceph.spec.in:  remove conditional checks on tcmalloc
5c1782a debian/rules:  Fix tcmalloc breakage
6d348a1 mon: cache osd epochs
0650fa9 monitor: assert out early if we get our own sync_start back
1e6f02b mon: update assert for looser requirements
ba13173 doc: Deleted old index. Generates warnings otherwise.
9a7a075 doc: General purpose pre-flight checklist.
9e775f1 doc: Modified Ceph deployment landing page.
fb8119c doc: Added general pre-flight checklist for ceph-deploy.
3433aa8 doc: Removed old ceph-deploy placeholder.
9c0c4c1 doc: Removed Chef section. Now appears in new Ceph wiki.
c25144e doc: Added Key Management for ceph-deploy.
d0d1554 doc: Added "Add/Remove Monitors" section for ceph-deploy.
f24dbde doc: Added Create a Cluster section.
b631cc6 doc: Added ceph-deploy package management (install | uninstall ) section.
d85c690 doc: Added new quick start preamble and index.
3ff7eef doc: Added ceph-deploy preflight.
9365674 doc: Added ceph-deploy quick start.
ebbdef2 monitor: squash signed/unsigned comparison warning
5fa3cbf mon: use brute force to find a sync provider if our first one fails
c880e95 rgw: fix compilation for certain architectures
a8b1bfa rgw: fix list buckets limit
f2df876 rgw: fix bucket listing when reaching limit
2264078 rgw: swift list containers can return 204
960eac2 rgw: fix plain formatter flush
7144ae8 rgw: fix bucket count when stating account
1670a2b rgw: trivial cleanups post code review
98f532e Makefile.am: Add -lpthread to fix build on newer ld in Raring Ringtail
741f468 mon: fix Monitor::pick_random_mon()
cbc3b91 mon: mark PaxosServiceMessage forward fields deprecated
77c068d mon: fix double-forwarding check
e3b602a osd: Fix logic in OSDMap::containing_subtree_is_down()
a2a23cc debian/rules: use multiline search to look for Build-Depends
f768fbb client: re-fix cap releases
5121e56 client: don't embed cap releases in clientreplay
89692e0 debian/rules: use multiline search to look for Build-Depends
2146930 mon: do not forward other mon's requests to other mons
a5cade1 PG: clear want_acting when we leave Primary
3ce35a6 mon: get own entity_inst_t via messenger, not monmap
303e739 radosgw: receiving unexpected error code while accessing an non-existing object by authorized not-owner user
407ce13 PendingReleaseNotes: these are now in the release-notes.rst
4af93dc doc/release-notes: add note about sysvinit script change
cd7e52c init-ceph: use remote config when starting daemons on remote nodes (-a)
d90b0ca gen_state_diagram.py: fix function name
1ee8f39 gen_state_diagram.py: fix naming of global variables/constants
d9f8de1 gen_state_diagram.py: add some missing spaces around operators
7cd9d23 gen_state_diagram.py: remove unnecessary semicolon
eb3350e test_mon_config_key.py: fix some more naming of local vars
7436542 test_mon_config_key.py: fix naming of local variable opLOG
9d3b4fd test_mon_config_key.py: fix naming of local variable
0407572 fix "Instance of 'list' has no 'split' member"
c792ea6 test_mon_config_key.py: fix naming of local variable
912bb82 test_mon_config_key.py: fix naming of global variables/constants
1464169 test_mon_config_key.py: add missing space after comma
16c5650 test_mon_config_key.py: remove unnecessary semicolon
f601eb9 test_mon_config_key.py: fix bad indentation
9dd5de2 perf-watch.py: fix naming of a local variable
226ff52 perf-watch.py: fix naming of local variable
148710f perf-watch.py: add missing space after comma
dffa9ee perf-watch.py: remove unnecessary semicolons
ac3dda2 scrub clears inconsistent flag set by deep scrub
ba527c1 doc/release-notes: enospc note
2075ec6 doc/release-notes: 0.61 cuttlefish notes
82d5cd6 ObjectCacher: remove all buffers from a non-existent object
fcaabf1 mon: when electing, be sure acked leaders have new enough stores to lead
fb8bad3 mon: be more careful about making sure we're up-to-date on sync check
290b5eb rgw: fix i386 compile error
14f2392 FileStore::_split_collection: src or dest may be removed on replay
3604c98 librados: fix calc_snap_set_diff interval calculation
81a6165 PG: call check_recovery_sources in remove_down_peer_info
a9791da mon: send clients away while sychronizing
12bc9a7 mkcephfs: give mon. key 'allow *' mon caps
cce1c91 PendingReleaseNotes: note about rbd resize --allow-shrink
31399d1 Fix typo of the keystone service-create command
9abec30 rgw: list container only shows stats if needed
c7a0477 rbd: fix cli-integration tests for striping change
446641a 95-ceph-osd-alt.rules:  Fix missing parent parameter
1f7ff41 ReplicatedPG: timeout watches based on last_became_active
a40772b osd_types: add last_became_active to pg_stats
d196b5b OSD: don't report peers down if hbclient_messenger is backed up
49eeaeb Messenger: add interface to get oldest queued message arrival time
297c671 DispatchQueue: track queued message arrival times and expose oldest
48631c1 mon: revert part of PaxosService::is_readable() change
0093d70 librbd: fix i386 build
857c88e librbd: add read_iterate2 call with fixed argument type
6c798ed librbd: implement read not in terms of read_iterate
95ed73a mon: drop forwarded requests after an election
ab25707 mon: requeue routed_requests for self if elected leader
4b07d69 mon: track original Connection* for forwarded requests
8402107 test_filejournal: adjust corrupt entry tests to force header write
556bb64 rgw: stream list buckets (containers) request
ccbc4db init-ceph: fix (and simplify) pushing ceph.conf to remote unique name
7ad63d2 ceph-disk:  OSD hotplug fixes for Centos
3dd9574 doc: Usage requires --num_osds.
b71ec9c doc: Added some detail. Calculating PGs, maps; reorganized a bit.
b73ef01 mon: [MDS]Monitor: remove 'stop_cluster' and 'do_stop()'
f42fc0e mon: MDSMonitor: tighter leash on cross-proposals to the osdmon
fa77e1e mon: PaxosService: add request_proposal() to perform cross-proposals
a634bb1 mon: PaxosService: is_writeable() depends on being ready to be written to
98e2398 mon: PaxosService: is_readable/writeable() depending on is_active()
b29a5b1 mon: PaxosService: consider is_recovering() on is_writeable()
b33fae4 mon: commit LogSummary on every message
59d6953 mon: set threshold to periodically stash_full
660752a doc: Added users to Getting Started.
1164345 ceph-mon: Attempt to obtain monmap from several possible sources
9ba3240 mon: Monitor: backup monmap prior to starting a store sync
de5d1da rgw: don't send tail to gc if copying object to itself
85fd2ca mon: make 'osd pool rmsnap ...' idempotent
43d62c0 mon: make 'osd pool mksnap ...' idempotent
08e3ec1 mon: make 'osd blacklist rm ...' idempotent
5926ffa rbd: only set STRIPINGV2 feature when needed
5446218 rbd: fix feature display for --info
568101f rbd: avoid clobbering return value with udevadm settle
8db9d0a FileJournal: a valid entry after invalid entry =/=> corrupt
9b953aa radosgw: Fix duplicate 'Content-Type' when using 'response-content-type'
4b9a2a3 mon: MonmapMonitor: add function to obtain latest monmap
41b874c mon: PaxosService: add 'exists_key/version' helper functions
1a8b30e ceph-create-keys:  Don't wait if permission denied
1fa719d doc: Aesthetic improvements. Removed unnecessary graphic and overrode margin for h3 tag.
3749ffe doc: Added a scenario to PG troubleshooting.
cf91594 doc: Changed usage to "bucket-name". Description was okay.
870f47c tools/ceph-filestore-dump: Implement remove, export and import
88d9ee1 ReplicatedPG::_finish_mark_all_unfound_lost: only requeue if !deleting
0e15555 ReplicatedPG::_applied_recovered_object*: don't queue scrub if deleting
6ef0f16 PG: check for pg change in ~FlushState
b8cb9d7 PG: bail if deleting in _finish_recovery
75cb55b AsyncReserver: delete context in cancel_reservation
d73b9fb tools/ceph-filestore-dump: Error messages lost because stderr is closed
37d2fe2 osd: Make clear_temp() public for use by remove
460db08 osd: Add flag to force version write in _write_info()
da39f91 osd: Create static PG::_write_log() function
ad845e6 OSDMonitor: pg split is no longer experimental
56619ab Fix journal partition creation
fe9d326 rbd: fix qa tests to use --allow-shrink
d395aa5 init-ceph: do not stop start on first failure
9a7d1f5 mon: Monitor: fix timechecks get_health clobbering overall status
aa0d5f3 mon: fix health monitor calls
be4807f global: call observers (and start logging) in global_init
76505c2 osd: Create new static function PG::_write_info() for use by PG import
52d8240 osd: Add OSD::make_infos_oid() as common function to create oid
5ffb3ef filestore, osd: Fixes to comform to programming guidelines
fa89cfd mon: QuorumService: return health status on get_health()
78c9db8 OpRequest: don't maintain history if the OSD is shutting down
1493e7d osd/: optionally track every pg ref
66c007f common/: add tracked_int_ptr.hpp
ec6f71b ReplicatedPG: use the ReplicatedPGRef typedef
4090eff ReplicatedPG: use ReplicatedPGRef for C_PG_MarkUnfoundLost
f03ba5a ReplicatedPG: use ReplicatedPGRef for C_OSD_OpCommit
8fe1b9d ReplicatedPG: use ReplicatedPGRef for C_OSD_OpApplied
c04c3e5 OSD: use PGRef in handle_pg_remove
1c2b66c OSD: use PGRef in handle_pg_stats_ack
c2127a1 PG: use PGRef in QueuePeeringEvt
0b7795a OSD: use PGRef in consume_map
f45a541 PG: use PGRef for FlushState
2f9a35a PG: use PGRef for C_PG_FinishRecovery
8bd89e1 PG: use PGRef in C_PG_ActivateCommitted
ce64775 PG: do not put() in scrub() if pg is deleting
b021036 PG,ReplicatedPG: move intrusive_ptr declarations to top
220c651 ReplicatedPG: add ReplicatedPGRef
016e975 FileStore::_do_copy_range: read(2) might return EINTR
07a80ee FileStore::_do_clone_range: _do_copy_range encodes error in return, not errno
5e4b8bc config: clarify 'mon osd down out subtree limit'
cd2cabe doc: Trimmed toc depth for nicer visual appearance.
44aa696 doc: Added new PG troubleshooting use case.
2e3579e doc: Updated title.
304a234 doc: Added PG troubleshooting to toctree.
d5139ba doc: Bifurcating OSD and PG Troubleshooting. Updated hyperlink.
3b8057a doc: Bifurcating OSD and PG Troubleshooting. Added PG troubleshooting doc.
3c4bf83 doc: Bifurcating OSD and PG Troubleshooting. Removed PG section.
46d8b9f rgw_bucket: Fix dump_index_check.
b0c1001 mon: ensure 'osd crush rule ...' commands are idempotent
0d46dc4 mon: make 'osd crush link ...' idempotent
5f1898d rgw_bucket: Fix dump_index_check.
87634d8 mds: journal the projected root xattrs in add_root()
f379ce3 mds: fix setting/removing xattrs on root
7e4f80b debian/control:  Fix typo in libboost version number
f4bc760 build:  Add new package dependencies
fd678ea debian/control:  Fix typo in libboost version number
4b34b0e mon: PaxosService: fix trim criteria so to avoid constantly trimming
86c1ea1 build:  Add new package dependencies
5a5fdfc mon: Paxos: increase debug levels for proposal listing
a0e457a doc: Removed legacy man page index. Generates warning otherwise.
d67793c doc: Clarified that admin-socket is accessed from same host.
da7bf67 doc: Updated hyperlinks to new tshooting section.
fb4cba4 doc: Removed this doc. Nothing referenced it, and parent directory echoes content.
f784317 doc: Revised top-level ops page.
6cf3682 doc: Removed link to nowhere. Otherwise generates a warning.
064ec2f doc: Removed top-level tshoot page, and created new index.
0d1e047 doc: Excised community from OSD tshoot, made it stand alone.
23e3fbe doc: Moved monitor troubleshooting to troubleshooting section.
594580c doc: Moved troubleshooting OSD to troubleshooting section.
7875800 doc: Added extraneous rgw settings to rgw conf.
4e6709b doc: Moved memory profiling from operations to troubleshooting.
9e9bd2d doc: Moved CPU profiling from operations to troubleshooting.
f0e3548 doc: Set toc depth to 1 level, and added troubleshooting so it appears in sidebar.
dd7fd2d doc: Moved journal discussion to OSD ref from Ceph config.
9ddc8b9 doc: Reordered deployment tools in toc.
fd8b4d0 doc: Removed logging from config index. Set depth to 1 for clean appearance.
cd4b242 doc: Removed logging. Added references. Reorganized and edited.
22a5cb6 doc: Removed. Not in toc, and otherwise generates a warning.
84b0ec2 doc: Updated hyperlink.
808ad25 doc: Removed fragmented logging info. Consolidated into one doc.
3c144e9 rbd: Only allow shrinking an image when --allow-shrink flag is passed
7b408ec client: disable invalidate callbacks :(
db37bd8 rbd: add --no-progress switch
8f21beb leveldbstore: handle old versions of leveldb
085b3ec mds: change XLOCK/XLOCKDONE's next state to LOCK
efe7399 mds: pass proper mask to CInode::get_caps_issued
f25f922 mon: Monitor: convert osdmap_full as well
1260041 mon: PaxosService: add helper function to check if a given version exists
246b811 osd/PG.cc: initialize PG::flushed in constructor
a993d25 Fix policy handling for RESTful admin api.
f3527d4 Fix policy handling for RESTful admin api.
544eb9b qa: pull qemu-iotests from ceph.com mirror
8994566 librbd: flush on diff_iterate
efce39e doc: Cherry-picked from master to next. Uses ceph-mds package during upgrade.
82aab8d doc: Cherry-picked from master to next. Rewrite of CloudStack document.
9753287 doc: Cherry-picked from master to next. Updates config to use virtio.
72b3919 doc: Cherry-picked from master to next. Reorders ceph osd create.
3afe84b doc: Cherry picked from master to next. Adds comments on naming OSDs.
02d3c11 os/FileJournal: fix journal completion plug removal
d8a354d config: provide settings for the LevelDB stores we use
fb840c8 osd/PG.cc: initialize PG::flushed in constructor
4a84ddb client: Fix inode remove from snaprealm race
0dc0f5b osd/PG.h: remove unused variable prior_set_built
6133ea5 librbd: use initialized data for DiffIterateDiscard test
638eb24 librbd: print seed for all DiffIterate tests
b343c52 doc: Changed MDS upgrade to use ceph-mds package.
785b25f Fix: use absolute path with udev
b4fc83c doc: Overhauled Wido's CloudStack document.
d801ca3 ceph.spec.in: use %{_sbindir} macro again
98de67d qa: add workunit for running qemu-iotests
a0ae2ec os: bring leveldbstore options up to date
6b98162 mds: output error number when failing to load an MDSTable
ae71b57 init-radosgw.sysv:  New radosgw init file for rpm based systems
f875c0c mds: only go through the max_size change rigamarole if the client requested it
9c18fd6 mds: Locker needs to remember requested max_size changes from clients
87ff4af doc: Added additional note on first step of adding OSD.
2b6719f doc: Added info on OSD naming, and example.
a01bc3d doc: Moved ceph osd create to first step.
74cdbc3 doc: Changed libvirt example to use virtio.
4977f3e mds: Delay export on missing inodes for reconnect
3a1cf53 client:  Unify session close handling
06d05e5 LibrbdWriteback:  complete writes strictly in order
a329871 OSD: make pg upgrade logging quiet
351d9b2 rbd qa/workunits: add rbd read data test
bb8d1c9 rgw_admin: Create keys for a new user by default.
170d4a3 FileJournal: start_seq is seq+1 if journalq.empty()
90c256d FileJournal: fix off by one error in committed_thru
a4fa0a8 Journal: commits may not include all journaled seqs
13474b0 Journal: pass the sequence number to commit_start
49bc341 rgw_admin: Create keys for a new user by default.
a1d9cbe mds: fix session_info_t decoding
909dfb7 LibrbdWriteback: removed unused and undefined method
9d19961 LibrbdWriteback: use a tid_t for tids
870f9cd WritebackHandler: make read return nothing
f5b81d8 ObjectCacher: deduplicate final part of flush_set()
4b65673 test_stress_watch: remove bogus asserts
3888a12 test: update rbd formatted-output for progress changes
718fa0c pool should be root in osd set syntax for bobtail
95374c6 config: fix osd_client_message_cap comment
a48739d FileJournal: clarify meaning of start_seq and fix initialization
88ab841 Revert "global: call config observers on global_init (and start logging!)"
be801f6 mon: Use _daemon version of argparse functions
c76bbc2 ceph_argparse: add _daemon versions of argparse calls
d7b7ace Pipe: call discard_requeued_up_to under pipe_lock
4cb18b5 journaler: remove the unused prefetch_from member variable
3cdc61e mds: Keep LogSegment ref for openc backtrace
edc9ddf mds: fix journaler to set temp_fetch_len appropriately and read the requested amount
0031949 md_config_t: change from class to struct as the name indicates
1734742 rados.py: add docstrings for Ioctx::__aio_*_cb()
203915c rados.py: add more docstrings
3daf250 rados.py: add docstrings for *Error classes and others
2124a4b cephfs.py: add docstring for shutdown() and version()
94a1f25 rados.py: fix create_pool()
9adf2e9 rados.py: add some docstrings
29ae388 rados.py: chmod -x
059c512 pybind: unify make_ex() code in cephfs.py and rados.py
5559e1d pybind: add docstrings for make_ex()
471174b rbd.py: remove unnecessary semicolons
a309177 global: call config observers on global_init (and start logging!)
1e7ddd9 global: flush log before stopping/starting on daemonize
f5ba0fb mon: make 'osd crush move ...' idempotent
628e9ae librbd: fix DiffIterateStress again
aca0aea osd: throttle client messages by count, not just by bytes
f7070e9 msgr: add second per-message throttler to message policy
79b7144 librbd: fix DiffIterateStress test
b083dec rgw: translate object marker to raw format
be6961b Allow creation of buckets starting with underscore in RGW
6ef9d87 FileJournal: introduce start_seq header entry
f12a5ed FileJournal: fill in committed_up_to for old headers
e5cecd7 debian/ceph-test.install: add installed but not packaged files
a3a658d ceph.spec.in: add installed but not packaged files to ceph-test
8cf3319 ceph.spec.in: remove some twice created directories
6bc1488 ceph.spec.in: fix udev rules.d files handling
4b90a95 ceph.spec.in: use macros for standard directories
a8362f5 ceph.spec.in: reorder and fix ceph file list
6b80296 debian/ceph.install: no need to move files to usr/sbin/
61a2be3 ceph.spec.in: don't move ceph-disk* and ceph-create-keys around
4d16f38 Makefile.am: install ceph-* python scripts to /usr/bin directly
354c41e ceph.spec.in: use %{_sbindir} instead of /usr/sbin
29f9db1 mon: fix crush unit tests for idempotency
336c4ae mds: verify mds tell 'dumpcache <filename>' target does not exist
e6d4582 mon: make 'osd crush unlink ..' idempotent
0d6ddd9 mds: do not go through handle_mds_failure for oneself
c8cbec2 Makefile.am: fix build of ceph_test_cors
0ce09fa client: Kick waiters for max size
f9b7dff client: log inode when waiting on max size
85a77df mon: limit warnings about low mon disk space
ea7c6c6 librados: Fixes to list_snaps test changes
a793853 ceph-disk:  CalledProcessError has no output keyword on 2.6
b48d6b4 librados: test for EINVAL on bad list_snaps() ioctx snapid
65a6975 librados: set SNAP_DIR on listsnaps command
ccb47fd osd: fail with EINVAL if bad snapid set on list_snaps
ae67d37 librados: fix list_snaps() tests
8d3c7ff mon: make 'osd crush rm|unlink ...' idempotent
4e847e8 librbd: simplify diff_iterate calls to list_snaps
edc46a7 Fix comment typos
cfd32ff test_mon_config_key.py: fix 'del' to clean up correctly internally
5cf0c49 mds: initialize tableservers/clients on mds creation
1054c87 Revert "mds: trigger tableserver active/recovery hook even for self"
8a6438f README: fix dependency lists
0c16b31 Adds "mds fail 0" command to operations commmand reference. Partially fixes #2206, though better documentation will eventually be needed.
968c6c0 mds: trigger tableserver active/recovery hook even for self
c4eb7e6 ceph-disk: fix some (local) variable names
3dd8b46 ceph-disk: fix naming of local variable in is_mounted()
eaf31bf ceph-disk: merge twice defined function is_mounted(dev)
4c6d644 ceph-disk: define exception type
058eb92 ceph-disk: fix Redefining name 'uuid' from outer scope
0080d1d ceph-disk: add missing space after comma
b99b8cc rgw/rgw_user.cc: reduce scope of variable
ee7eae3 rgw/rgw_user.h: remove twice initialized purge_keys
6e9f478 test_cors.cc:  prefer prefix ++operator for iterator
b4845a6 test_cors.cc: use static_cast instead of C-Style cast
e2c3511 test_cors.cc: use %u to format unsigned in sprintf()
bda21f7 rgw/rgw_user.cc: use 'true' directly instead of variable
84b1914 rgw/rgw_user.cc: reduce scope of same_email in execute_modify()
13abf32 rgw/rgw_user.cc: remove some unused std::string variables
4839cf2 rgw/rgw_cors_swift.h: prefer prefix ++operator for iterator
620ca6c rgw/rgw_op.cc: prefer prefix ++operator for iterator
275be10 rgw/rgw_op.cc: remove unsused variable
4a35cfd rgw/rgw_op.cc: use static_cast instead of C-Style cast
c662733 rgw/rgw_cors_s3.cc: prefer prefix ++operator for iterator
9850ed1 rgw/rgw_cors_s3.cc: remove unused variable
2136170 rgw/rgw_cors_s3.cc: use static_cast instead of C-Style cast
69f60d2 explain what an inline xattr is and how it relates to omap
7abba7b rgw/rgw_cors.cc: fix inefficient usage of string::find()
eb815bb rgw/rgw_cors.cc: prefer prefix ++operator for iterator
5479723 rgw/rgw_cors.cc: use empty() instead of size() == 0
e1babf4 rgw/rgw_bucket.cc: prefer prefix ++operator for iterator
c9be9ff rgw/rgw_bucket.cc: remove unused variable
42109d3 rgw/rgw_user.h: initialize some bool variables in constructor
a5ce246 rgw/rgw_user.h: move initialization in initialization list
9b5f8a4 rbd.cc: use static_cast instead of C-Style cast
07be36c mds/Migrator.cc: prefer prefix ++operator for iterator
574051f unit tests for FileStore::_detect_fs when running on ext4
aee6549 fix nspace assignment in LFNIndex::lfn_parse_object_name
dd19d69 rgw: Create RESTful endpoint for user and bucket administration.
aa14da2 doc/release-notes: v0.60
fc13f11 PG::_scan_list: assert if error is neither -EIO nor -ENOENT
3fa3b67 FileStore: rename debug_delete_obj to debug_obj_on_delete
40070ce PG: _scan_list can now handle EIO on read, stat, get_omap_header
fcec1a0 ObjectStore: add allow_eio to read, stat, get_omap_header
76ad956 librados: test empty ObjectWriteOperation
690e4df Makefile.am: disable building ceph_test_cors when radosgw is not enabled
f26f7a3 (tag: v0.60) v0.60
267ce0d librados: don't use lockdep for AioCompletionImpl
78acc5c test: fix signed/unsigned comparison in test_cors
d5b7970 PG: don't compare auth with itself
39d1a3f PG: pass authoritative scrub map to _scrub
a838965 PG: read_error should trigger a repair in _compare_scrub_objects
1940cf3 FileStore,OSD: add mechanism for injecting EIO, truncating obj
83dbfae PG::_select_auth_object: prefer a peer which did not hit a read error
e61c94e PG: make _select_auth_object smarter
a77eaec mds: bump the protocol version.
93ab1ed mds: don't roll back prepared table updates
2b0f03c mds: clear scatter dirty if replica inode has no auth subtree
3d3d85d mds: don't replicate purging dentry
44db980 mds: eval inodes with caps imported by cache rejoin message
9939ced mds: try merging subtree after clear EXPORTBOUND
5ceae8c mds: clear dirty inode rstat if import fails
d1602b3 mds: don't open dirfrag while subtree is frozen
fcf170b mds: notify bystanders if export aborts
7278f64 mds: fix export cancel notification
27438db mds: unfreeze subtree if import aborts in PREPPED state
4d532cb mds: check MDS peer's state through mdsmap
b439588 mds: avoid double auth pin for file recovery
e072d34 mds: add dirty imported dirfrag to LogSegment
a4ed7ea mds: send lock action message when auth MDS is in proper state.
7ad7c34 mds: issue caps when lock state in replica become SYNC
10b1a56 mds: share inode max size after MDS recovers
b2342a9 mds: take object's versionlock when rejoinning xlock
6862fe7 mds: reqid for rejoinning authpin/wrlock need to be list
d1a2574 mds: handle linkage mismatch during cache rejoin
ce0b74e mds: encode dirfrag base in cache rejoin ack
9f66d04 mds: include replica nonce in MMDSCacheRejoin::inode_strong
cbb38a1 mon: OSDMonitor: only output warn/err messages if quotas are set > 0
01fd55a mds: remove MDCache::rejoin_fetch_dirfrags()
e62e48b mds: fix MDS recovery involving cross authority rename
3ab8663 mds: send resolve acks after master updates are safely logged
75346d8 mds: send cache rejoin messages after gathering all resolves
97bc0d2 mds: don't send MDentry{Link,Unlink} before receiving cache rejoin
e381bb3 mds: set resolve/rejoin gather MDS set in advance
ed85dd6 mds: don't send resolve message between active MDS
30dbb1d mds: compose and send resolve messages in batch
a6d9eb8 mds: don't delay processing replica buffer in slave request
1312716 mds: unify slave request waiting
ef9a4f6 mds: defer eval gather locks when removing replica
12e7c3d mds: avoid sending duplicated table prepare/commit
a5dce80 mds: make sure table request id unique
bb83a5d mds: consider MDS as recovered when it reaches clientreplay state.
7826814 client: always remove cond from list after waiting
8267bf5 librbd: fix size arg type for diff_iterate
b2b1034 PendingReleaseNotes: note about rbd progress output
f1f6407 test_librbd: add diff_iterate test including discard
e88fe3c rbd.py: add some missing functions
c0e3f64 librbd: add C and python bindings for diff_iterate
e83fd3b librados: don't insert zero length extents in a diff
52097d3 rbd: add formatted output to diff command
33d1a2f librbd: return -ENOENT from diff_iterate when the snap doesn't exist
6a04a7f rbd: initialize random number generator for bench-write
c680531 librbd: change diff_iterate interface to be more C-friendly
8a1cbf3 rbd: remove alway-true else condition in import-diff
d86fb04 rbd: make diff banner length depend on the banner
c499caf mkcephfs: warn that mkcephfs is deprecated in favor of ceph-deploy
677867d qa: workunits: mon: test 'config-key' store
c0e5c22 rbd: fail import-diff if we reach the end of the stream sooner than expected
09898ff rbd: complete progress for import-diff from stdin
a0fca08 rbd: fix else style in import-diff
2ec87e6 rbd: update progress as a diff is exported
f0ddf6c rbd: remove unused argument from do_diff()
ef49385 rbd: fix size change output
88706ab rbd: send progress info to stderr, not stdout
325a337 rbd: include 'diff' command in man page
64a202a rbd: update man page for import-diff and export-diff
f67f62a rbd: prevent import-diff if start snapshot is not already present
9946c69 rbd: fail import-diff if end snap already exists
5b0c68b doc/dev/rbd-diff: specify that metadata records come before data
3694968 librbd: implement image.snap_exists()
c5bd978 librados: move snap_set_diff to librados/
6af769a librados: cleanly define SNAP_HEAD, SNAP_DIR constants
10dc0ad librados: document list_snaps
be8927f librbd: drop unused elapsed calc for diff_iterate
f0c9a20 librbd: diff_iterate fromsnapname after the end snap is also invalid
a69532e librbd: document diff_iterate in header
d0baadb librbd: uint64_t len for diff_iterate
7bbaa71 doc/dev/rbd-diff: update incremental file format
44e295a qa: rbd/diff_continuous.sh: use non-standard striping
39689fe librbd: fix diff_iterate arithmetic for non-standard striping
f2b0880 qa: rbd/diff_continuous.sh: base test off a clone
fc3f4fd rbd: implement simple 'diff' command
4d02e17 librbd: handle diff from clone
186ddda rbd: send import debug noise to dout, not stdout
58c2ded qa: add rbd/diff_continuous.sh stress test
e716743 rbd: implement 'export-diff' and 'import-diff' commands
cf7d13a rbd: add --io-pattern <seq|rand> option to bench-write
0296c7c librbd: implement diff_iterate
6db5109 librados: expose snapset seq via list_snaps
ebed000 osdc/Objecter: prval optional for listsnaps
4ae9774 osd: fix error codes for list-snaps
941cfc2 osd: fix clone snap list for list-snaps
ceee218 osd: wait for all clones on SNAPDIR requests
556d334 osd: direct reads on SNAPDIR to either head or snapdir
b64bb5f osd: do not include snaps with head on list_snaps()
01b7420 osd: clean up some whitespace
0074228 osd: include SnapSet seq in the list snaps response
fa5206c osd: make LIST_WATCHERS and LIST_SNAPS print nicely for OSDOp
849a45c strings: add 'list-watchers' to MOSDOp strings
a2956f6 rgw: fix warning
01779df rgw: add missing include file
3c52b8b Makefile.am: change some cors rules
e1a78f9 rgw: fix a few warnings
d4b22f3 rgw: more cors fixes
e9e86ad rgw: cors, style fixes, other fixes
f165049 rgw: with CORS support
c01e2e4 client: do sync read when 'client oc = false'
74c7083 client: fix use-after-free on session close and cond signals
4ad35b2 mds: mark connection down when MDS fails
fbcc64d mds: fix MDCache::adjust_bounded_subtree_auth()
573a4ae mds: process finished contexts in batch
5cbaae6 mds: preserve subtree bounds until slave commit
c344ff1 fix null character in object name triggering segfault
e611937 mon: OSDMonitor: add 'osd pool set-quota' command
9532808 doc: Added entries for Pool, PG, & CRUSH. Moved heartbeat link.
bcc5c65 doc: Added heartbeat configuration settings.
6157d68 doc: Moved PG info to separate page. Moved heartbeat to mon-osd doc.
ca77aab doc: Rewrote monitor configuration section.
ea3c833 doc: Moved to separate section for parallelism.
ba73b83 doc: Cleanup.
e9b3f2e ceph-disk list: say 'unknown cluster $UUID' when cluster is unknown
9e7ddf6 config_opts: fix rgw_port comments to be plaintext
3da3129 ReplicatedPG: check for full if delta_stats.num_bytes > 0
9b09073 mon: Monitor: check if 'pss' arg is !NULL on parse_pos_long()
e2a936d common: util: add 'unit_to_bytesize()' function
23c2fa7 osd: osd_types: add pool quota related fields
655a950 PG::_scan_list: record read errors in the Scrubmap::object
dab3dac osd_types: add read_error flag to Scrubmap::object
562e171 ceph-disk: handle missing journal_uuid field gracefully
4c4d559 librados: move snapc creation to caller for aio_operate
3cbd036 client: update cap->implemented when handling revoke
4f8ba0e msgr: allow users to mark_down a NULL Connection*
2da57d7 debian: Add git to Build-Depends (need by check_version script)
8f5c665 debian: Run wrap-and-sort from devscripts
972f0eb unit test LFNIndex::remove_object and LFNIndex::lfn_unlink
d15c152 ceph_json: add missing include file
9a07ee3 ceph_json: add template specializations
6a65b91 ceph-disk: implement 'list'
b982516 ceph.spec.in:  Add python-argparse dependency
a021ce6 mon: ConfigKeyService: stash config keys on the monitor
e950ed0 ceph.spec.in:  Move four scripts from sbin to usr/bin
06a1e9c ceph: propagate do_command()'s return value to user space
e91405d ceph: propagate do_command()'s return value to user space
f804892 PG: update PGPool::name in PGPool::update
1993c2a PG: use int64_t for pool id in PGPool
91a8d93 OSD: flush pg osr on shutdown prior to put()
f1d1f11 librbd: increment version for new functions is_complete() and aio_flush()
302b93c librbd: add an async flush
860493e librbd: use the same IoCtx for each request
2ae3206 librbd: add an is_complete() method to AioCompletions
f06debe librados: add versions of a couple functions taking explicit snap args
7cc0940 librados: add async flush interface
fa27156 librados: increase version number to indicated new functions
553aaac ObjectCacher: remove unneeded var from flush_set()
41568b9 ObjectCacher: remove NULL checks in flush_set()
92db06c ObjectCacher: always complete flush_set() callback
03ac01f librbd: make aio_writes to the cache always non-blocking by default
c212504 ObjectCacher: optionally make writex always non-blocking
bf7cbdf rados: remove confusing argument echo on error
f891d5a rgw_json_enc.cc: use static_cast instead of C-Style cast
8d957c1 rgw/rgw_admin.cc: remove double checks from get_cmd()
c8ac1ee unit test LFNIndex::lfn_get_name
b9c8d4f librados.h: fix comment describing rados_pool_list
613b708 librbd: flush cache when set_snap() is called
2429446 radosgw-admin: fix help clitest
10626f7 mon: MonitorDBStore: add 'get_iterator()' method to iterate over a prefix
d3e4904 ceph-disk: reimplement list_all_partitions
20d594a ceph-disk: reimplement is_partition
d89a63c doc: Updated usage.
bc72492 doc: Updated usage.
4362934 ceph-disk: conditionally remove mount path
2ae297c ceph-disk: ignore udevadm settle return code
9844500 upstart: try udevadm settle if osd journal isn't present
89c6901 osd: disallow classes with flags==0
f2dda43 osd: EINVAL when rmw_flags is 0
50b831e osd: fix detection of non-existent class method
b0103ab OSD fails to start with error assert(values.size() == 2)
4db4a02 Fix radosgw upstart job
5aa5bc2 mds: Delay session close if in clientreplay
9369f91 Change ceph::apt -> ceph::repo in doc
98f6a25 mkcephfs.in: use 32 chars for mktemp to be more unique
2cb9f96 mkcephfs.in: cleanup rdir in MON case
a8338ee mkcephfs.in: provide a valid rdir for MONs on -a
38f845d mkcephfs.in: use mktemp instead of dd+md5sum+awk
0e009b1 mds: Clear backtrace updates on standby_trim_seg
0c43ac3 ceph_common.sh: fix typo in comment
17029a6 java libcephfs: add serialVersionUID to some Exception classes
10191a9 CephMount.java: remove unused import
8c962b5 MDS.cc: remove double is_clientreplay() check in active_start()
3f2e711 mon: fix crush_ops.sh tests
76b296f ReplicatedPG: send entire stats on OP_BACKFILL_FINISH
503ed9e testing: fix hadoop-internal-test
7c1e9be client: Don't signal requests already handled
77230d4 fix append to uninitialized buffer in FlatIndex::created
9eda8e5 ceph-disk:  udevadm settle before partprobe
14cef27 mds: CInode::build_backtrace() always incr iter
bb68a20 java: fix test name typo
b9141e9 client: Cleanup request signaling
3b520b5 client: Handle duplicate safe replies
dfb46b9 client: Always cleanup request after safe
4dda138 client: Remove got_safe from MetaRequest
f957e72 CrushWrapper.cc: remove some std::string::c_str() calls
7f65c51 doc/release-notes: extra note for v0.56.4
82b129f doc/release-notes: v0.56.4
491795e Improve test by getting cloneid from my_snaps vector
70e0ee8 rgw: bucket index ops on system buckets shouldn't do anything
b7d7e68 ceph-disk: rename some local variabels in list_*partitions
0b5fcff ceph-disk: fix naming of a local variable in find_cluster_by_uuid
8a999de ceph-disk: rename some constants to upper case variable names
86e55f5 ceph-disk: add some more docstrings
543327b ceph-disk: print subprocess.CalledProcessError on error
2d26bcc ceph-disk: fix indention
9db05a2 java: pretty print Ceph extent
486e5b9 java: support ceph_get_osd_addr
bc65ace java: support ceph_get_osd_crush_location
60fe136 java: support ceph_get_file_extent_osds
78fd096 PendingReleaseNotes: mention renamin of cluster to zone
ece4348 client: don't set other if lookup fails in rename
836b97f test/libcephfs: Test rename error cases
8e6a970 client: Fix rename returning ENOENT for dest
3f5f432 MDSMap: improve health check
e77cd59 MDSMap:: constify a bunch of methods
838f1cd preserve /var/lib/ceph on deb/rpm purge
4f2051c mon: factor out _get_pending_crush() helper
eae1532 mon, crush: add some tests to build a DAG via the cli
a60d7df crush, mon: unlink vs remove
b54db77 crush: fix remove_item on bucket removal
d8f4be6 mon: add 'osd crush add-bucket <name> <type>'
96e08ef mon: allow removal of buckets via 'osd crush rm ...'
683f745 crush: change find_roots(); add find_takes()
751b4bf mon: add optional ancestor arg to 'ceph osd crush rm <item> [ancestor]'
ee6b993 crush: add remove_item_under()
6cba563 mon: 'ceph osd crush link ...' to add a link to an existing bucket
fe4e86c crush: prevent formation of a loop
a54a411 crush: add link_bucket()
05dac04 mon: 'ceph osd crush add ...' to add a second link to an item
78d8faf rgw: zone info is configurable
4fe4dea PG::GetMissing: need to check need_up_thru in MLogRec handler
d611eba PG,osd_types: improve check_new_interval debugging
c524e2e common/MemoryModel: remove logging to /tmp/memlog
6a7ad2e init-ceph: clean up temp ceph.conf filename on exit
0517345 init-ceph: push temp conf file to a unique location on remote host
f463ef7 mkcephfs: make remote temp directory name unique
853dd35 doc: Added {id} argument to OSD lost.
020fb1a rgw: s/cluster/zone
8bd7915 rgw: generic decode_json for containers
b07f3cd rgw: add encode_json
96ad9b1 moved rgw/rgw_json.* common/ceph_json.*
53ba6c2 rgw: rgw_jsonparser changes
da33701 rgw: decode RGWUserInfo using decode_json
959b658 rgw: introduce decode_json to easily decode json structures
6d63752 ceph-disk: re-add python 2.7 dependency comment
38a5acb osd: reenable 'journal aio = true'
e5940da os/FileJournal: fix aio self-throttling deadlock
6c79604 test/test_snap_mapper.cc: remove twice included <tr1/memory>
00cf817 mon/MDSMonitor.cc: remove twice included MonitorDBStore.h
a583029 mon/LogMonitor.cc: remove twice included <sstream>
9dd5b20 mon/AuthMonitor.cc: remove twice included <sstream>
1144260 common/Formatter.h: remove twice included <list>
000310f ReplicatedPG: add debug flag to skip full check at reservation
29a288f ReplicatedPG: replica should post BackfillTooFull in do_scan if full
f9c8190 PG: halt backfill on RemoteReservationRejected in Backilling
022903b PG: add helper for adding a timer event to retry backfill
3ab4a09 PG: add BackfillTooFull event for RepRecovering
cd73539 PG: add helper for rejecting backfill reservation
33aaea5 PG: use OSDService::too_full_for_backfill in RepWaitBackfillReserved
cec3d82 OSDService: add too_full_for_backfill
fab0be1 Makefile: add MOSDMarkMeDown
7bfaaf7 OSD: notify mon prior to shutdown
a2dba95 Monitor: add MOSDMarkMeDown support
edebb34 OSDMonitor: factor out check_source helper
b8929c4 messages: add MOSDMarkMeDown
bb12522 OSD: clear OpHistory on shutdown
51ae509 OpRequest: use OpRequestRef for OpHistory
210ecc5 FileStore::stat: valgrind: don't read *st on error
6119f29 shared_cache: clear lru in destructor
95e9322 ceph_osd: clear client_throttler prior to putting g_ceph_context
8d43a2e OSD: reorder OSD::shutdown
505bebb OSD: check for is_stopping after locking osd_lock or heartbeat_lock
9d076a0 OSD: lookup_lock_raw_pg is dead
e41554d OSD: rename timer to tick_timer
30b7a15 OSD: move backfill_request_timer cleanup to OSDService::shutdown
264cd3e ReplicatedPG,OSD: move dequeueing into on_shutdown
eb8dd0d PG: clarify PG::deleting comment
71ec9c6 mon: AuthMonitor: delete auth_handler while increasing max_global_id
42a71c1 FileJournal: quieter debugging on journal scanning
6740d51 FileJournal: quieter debugging on journal scanning
7e8cc57 doc: Fixed some typos.
7698500 libcephfs: fix ceph_get_osd_crush_location
a72aaff test: add ceph_rename test
7ed0be1 rados.py: remove unnecessary semicolon
cffc2d5 rados.py: fix bad indention
9496622 rados.py: remove lenght modifier 'l' on format string
d81d2c0 rados.py: fix 'Rados' has no member 'name'
4e2557a crush: allow an item to be inserted twice
14f2674 crush: use const string& args
eed8d53 rados.py: add missing space after ','
e2df59e ceph-create-keys: rename log to LOG since it's a constants
17d4a7c doc/release-notes: v0.59
541cd3c msg/Pipe: fix seq handshake on reconnect
ac9fa43 Fix tips in documentation
cd96dbe Fix important in documentation
3305157 Fix notes in documentation
e485471 Update Chef deployment documentation
97fd7b6 mon: DataHealthService: log to derr instead if we're about to shutdown
51d62d3 mon: DataHealthService: shutdown mon if failed to obtain disk stats
5bf0331 client/Client.cc: handle error if _lookup() fails
fc41684 qa/workunits/direct_io/test_sync_io.c: add proper error handling
a8a5683 test_short_dio_read.c: add proper error handling
f9c108c mds/Locker.cc: prefer prefix ++operator for iterators
4151630 mount/mount.ceph.c: remove unused variable
87691dc ceph-disk: cast output of subprocess.Popen() to str()
c29812c mon: Monitor: clearer output on error during attempt to convert store
3575feb ceph-disk: fix adjust_symlink() replace 'journal' with 'target'
a27cb85 ceph-disk: fix adjust_symlink() replace 'canonical' with 'path'
6d3247b ceph-disk: there is no os.path.lstat use os.lstat
97b4f8d ceph-disk: remove unused variable key from prepare_journal_dev()
9daf6cf ceph-disk: fix except to catch OSError
0ada43f ceph-disk: add missing space after >> operator
d3c60dc fix: Redefining name 'uuid' from outer scope (line 14)
6a8120d ceph-disk: remove unused variables from list_partitions()
3af7a1a ceph-disk: fix /dev/dm-[0-9] handling list_all_partitions()
cbae6a4 (tag: v0.59) v0.59
9bcf5b6 ceph-disk: rename local variable shadowing builtin
4adf088 ceph-disk: remove twice defined identical function unmount
ea26ea0 ceph-disk: remove twice defined function mount
c57daa3 ceph-disk: remove double defined function get_conf
57dde5c ceph-disk: rename local variable shadowing builtin
dfb1fbe QuorumService.h: use enum instead of static const int
6a3aa2a Missed adding rados_types.hpp to package
c2602d7 ceph-disk: install and package
f287c6f ceph-disk: simplify command dispatch
a019753 ceph-disk: consolidate exceptions
20e4ba5 ceph-disk: consolidate ceph-disk-* into a single binary
2900bf4 PendingReleaseNotes: fix typo
1597b3e librbd: optionally wait for a flush before enabling writeback
47f1a94 Makefile: missing header
020d1b1 mon: use enum instead of static const int
efc4b12 mon/Paxos: set state to RECOVERING during restart
45843f7 Makefile.am: fix misspelt header name
bee5046 mon/PaxosService: handle non-zero return values
d477594 ceph-disk-prepare: 'mkfs -t' instead of 'mkfs --type='
9029b09 mds: Handle ENODATA returned from getxattr
7aec13f mon/PaxosService: fix proposal waiter handling
6774290 Makefile: fix header name
cecfe41 mon: Monitor: take advantage of the new HealthMonitor class.
b781400 mon: HealthMonitor: Keep track of monitor cluster's health
a3751d1 mon: QuorumService: Allow for services quorum-bound to be easily created
a2ac935 qa: add 16MB direct-io write test
53c1c48 signal_handler: add func to queue an async signal
a13ae37 client:  Remove unecessary set_inode() in _rmdir()
5e5e1cd mon/Session.h: prefer prefix ++operator for iterators
ffaf286 test/filestore/workload_generator.cc: prefer prefix ++operator for iterators
37fd66e test/filestore/test_idempotent.cc: prefer prefix ++operator for iterators
7258051 test/filestore/test_idempotent.cc: fix ~TestFileStoreState()
80615f6 test/test_snap_mapper.cc: prefer prefix ++operator for iterators
ed159c4 test/osd/RadosModel.h: prefer prefix ++operator for iterators
0535e1f test/filestore/TestFileStoreState.cc: prefer prefix ++operator for iterators
2a04a9b test/xattr_bench.cc: prefer prefix ++operator for iterators
28354c0 test/osd/Object.cc: prefer prefix --/++operator for iterators
ed4a0fa test/encoding/ceph_dencoder.cc: prefer prefix ++operator for iterators
a8f6b76 test/bench/bencher.h: prefer prefix ++operator for iterators
e94cbee ObjectMap/test_object_map.cc: prefer prefix ++operator for iterators
f56d484 tools/rest_bench.cc: prefer prefix ++operator for iterators
58d07ad tools/common.cc: prefer prefix ++operator for iterators
6ba964f ceph-filestore-dump.cc: prefer prefix ++operator for iterators
12a44bc rgw/rgw_user.cc: prefer prefix ++operator for iterators
424bce9 rgw/rgw_rest_swift.cc: prefer prefix ++operator for iterators
360191f osd/OSDMap.cc: prefer prefix ++operator for iterators
5fe46a3 mds/MDCache.cc: prefer prefix ++operator for iterators
51a2d78 mds/CInode.cc: prefer prefix ++operator for iterators
d0a1632 client/Client.cc: prefer prefix ++operator for iterators
c091dcc auth/AuthMethodList.cc: fix remove_supported_auth()
a96a1cc mds/mdstypes.h: prefer prefix ++operator for iterators
3967ce4 rgw/rgw_rados.cc: make sure range_iter != ranges.end()
5b8a505 rados.cc: prefer prefix ++operator for iterators
006a70d rgw/rgw_rados.cc: prefer prefix ++operator for iterators
272ebf3 rgw/rgw_admin.cc: prefer prefix ++operator for iterators
c4cc2e8 rgw/rgw_acl_s3.cc: prefer prefix ++operator for iterators
a740eef osdmaptool.cc: prefer prefix ++operator for iterators
d5f6073 osdc/Striper.cc: prefer prefix ++operator for iterators
4d46efa osdc/Objecter.cc: prefer prefix ++operator for iterators
f0ed8c4 osdc/ObjectCacher.cc: prefer prefix ++/--operator for iterators
da438aa osdc/ObjectCacher.h: prefer prefix ++operator for iterators
d0df3da osdc/Objecter.h: prefer prefix ++operator for iterators
060d2d5 osdc/Filer.h: prefer prefix ++operator for iterators
844671e osdc/Filer.cc: prefer prefix ++operator for iterators
49c5470 osd/osd_types.cc: prefer prefix ++operator for iterators
273517a osd/SnapMapper.cc: use empty() instead of size() == 0
10b0839 osd/ReplicatedPG.cc: prefer prefix ++operator for iterators
293bb07 osd/PG.cc: prefer prefix ++operator for iterators
cdfce02 osd/OSDMap.cc: prefer prefix ++operator for iterators
812ca21 osd/OSD.cc: prefer prefix ++operator for iterators
7647003 os/LFNIndex.cc: prefer prefix ++operator for iterators
c089f5d mds/Migrator.cc: prefer prefix ++operator for iterators
d777e5a os/JournalingObjectStore.cc: prefer prefix ++operator for iterators
16fa6f1 os/FlatIndex.cc: prefer prefix ++operator for iterators
b374a3a os/FileStore.cc: prefer prefix ++operator for iterators
9704dde msg/Pipe.cc: prefer prefix ++operator for iterators
62f00f0 msg/Pipe.cc: prefer prefix ++operator for iterators
d7936e8 mon/OSDMonitor.cc: prefer prefix ++operator for iterators
344feba mds/journal.cc: prefer prefix ++operator for iterators
d2026a9 mds/events/EMetaBlob.h: prefer prefix ++operator for iterators
18b4a17 mds/SnapRealm.cc: prefer prefix ++operator for iterators
206cd8d mds/Migrator.cc: prefer prefix ++operator for iterators
2b902b3 mds/MDCache.cc: prefer prefix ++operator for iterators
55e8bcc mds/CDir.cc: prefer prefix ++operator for iterators
7a3e2ee librados/librados.cc: prefer prefix ++operator for iterators
ebd959b kv_flat_btree_async.cc: prefer prefix ++operator for iterators
566b60b common/Finisher.cc: prefer prefix ++operator for iterators
ba5c935 mds: Add config option for log segment size
2678db5 qa/workunits/restart:  Add test to check backtrace
85057e9 mds: Add kill points for backtrace testing
acae3d0 pybind/cephfs:  Add initial py wrappers for cephfs.
0c74475 mds: Cleanup new segment conditionals
8b79886 mds: Backtrace for create,rename,mkdir,setlayout
4d0448f mds: New backtrace handling
62d12d8 message/mds:  Fix client reconnect decode
fb07745 include/elist: Fix clear() to use pop_front()
b8fb2ee dencoder:  Add inode_backtrace_t to types
9e13886 mds: Use map for CInode pinrefs
fc80c1d client: Ensure inode/dentries are ref counted
f8d66e8 OSD: split temp collection as well
5b022e8 hobject: fix snprintf args for 32 bit
9ea02b8 ceph_features: fix CEPH_FEATURE_OSD_SNAPMAPPER definition
ee178fb ceph.spec.in:  Additional clean-up on package removal
65c31e1 ceph-fuse: invalidate cache by default
f3ad12e test_filejournal: add tests for footer, header, payload corruption
a22cdc6 FileJournal: add testing methods to corrupt entries
3b767fa FileJournal,Journal: detect some corrupt journal scenarios
cf00930 FileJournal::wrap_read_bl: convert arguments to explicit in/out arguments
c3725e9 FileJournal: add committed_up_to to header
4aa0f8a FileStore: add more debugging for remove and split
de8edb7 FileJournal: queue_pos \in [get_top(), header.max_size)
f1b031b OSD: expand_pg_num after pg removes
8222cbc PG: ignore non MISSING pg query in ReplicaActive
11650c5 mon: only try to bump max if leader
80af5fb ceph-disk-activate: identify cluster .conf by fsid
6f15dba debian/control:  Fix for moved file
7370b55 ceph-disk-activate: abort if target position is already mounted
18525eb rados/test.sh fails in the nightly run
efd153e debian: add start ceph-mds-all on ceph-mds install
41897fc debian: add start ceph-mds-all on ceph-mds install
47378d6 libcephfs: add ceph_get_osd_addr interface
b6102c0 Revert "ceph-disk-activate: rely on default/configured keyring path"
3e628ee Revert "ceph-disk-activate: don't override default or configured osd journal path"
282d3aa monmaptool.cc: prefer prefix ++operator for iterators
0c5532c mon/PGMonitor.cc: prefer prefix ++operator for iterators
01c6a7e mon/MonmapMonitor.cc: prefer prefix ++operator for iterators
45a3d0c mon/Monitor.cc: prefer prefix ++operator for iterators
a26a9f7 mon/MonMap.cc: prefer prefix ++operator for iterators
a6c4543 mon/MDSMonitor.cc: prefer prefix ++operator for iterators
a66170d mon/LogMonitor.cc: prefer prefix ++operator for iterators
23ce79f mon/AuthMonitor.cc: prefer prefix ++operator for iterators
ab0dac1 mds/mdstypes.cc: prefer prefix ++operator for iterators
c0506c2 mds/SnapServer.cc: prefer prefix ++operator for iterators
823a56f mds/SnapServer.h: prefer prefix ++operator for iterators
6127f43 mds/SnapServer.h: prefer prefix ++operator for iterators
e98432c mds/Mutation.cc: prefer prefix ++operator for iterators
e317a97 mds/MDSTableServer.cc: prefer prefix ++operator for iterators
d0a0ee5 mds/MDSTableClient.cc: prefer prefix ++operator for iterators
f8825a3 mds/MDSMap.cc: prefer prefix ++operator for iterators
3ff204e mds/MDS.cc: prefer prefix ++operator for iterators
865d7a8 mds/MDLog.cc: prefer prefix ++operator for iterators
6735383 mds/MDCache.cc: prefer prefix ++operator for iterators
ce8060e mds/MDBalancer.cc: prefer prefix ++operator for iterators
180d93a mds/Locker.cc: prefer prefix ++operator for iterators
f2452b1 mds/MDCache.h: prefer prefix ++operator for iterators
a42e9ef mds/CInode.cc: prefer prefix ++operator for iterators
1e60fcf mds/CDir.cc: prefer prefix ++operator for iterators
d0d8929 mds/AnchorServer.h: prefer prefix ++operator for iterators
8b96655 mds/AnchorServer.cc: prefer prefix ++operator for iterators
1525053 mds/AnchorClient.cc: prefer prefix ++operator for iterators
f4a78a2 librbd/internal.cc: prefer prefix ++operator for iterators
2ef97a6 librbd/ImageCtx.cc: prefer prefix ++operator for iterators
7332796 librados/RadosClient.cc: prefer prefix ++operator for iterators
5ac012a librados/IoCtxImpl.cc: prefer prefix ++operator for iterators
ab46e6d libcephfs.cc: prefer prefix ++operator for iterators
e8d59d5 kv_flat_btree_async.cc: prefer prefix ++operator for iterators
46c0d9c key_value_store/cls_kvs.cc: prefer prefix --operator for iterators
e2776a9 crush/CrushWrapper.cc: prefer prefix ++operator for iterators
9a1b863 crush/CrushCompiler.cc: prefer prefix --operator for iterators
381bee3 common/lockdep.cc: prefer prefix ++operator for iterators
60cedb1 client/SyntheticClient.cc: prefer prefix ++operator for iterators
31a3645 mon: refuse "mon remove" if only one mon left
f56620b osd: data loss: low space handling
ce7ee72 ceph_common.sh:  Fix sed regex in get_local_daemon_list
8c774aa rbd: clean up do_import() a bit
8d8f892 Simplify may_write()
388616b OSD: remove snap_mapper entries in RemoveWQ
3177cb8 PG: check and repair snap_mapper entries during scrub
8665839 OSD,PG: add upgrade procedure for snap_mapper
8631e92 osd/: Integrate SnapMapper with OSD
8db029d Makefile: add SnapMapper to osd
354f33d test/: add tests for map_cacher
580ea54 osd/: add SnapMapper
2f9e369 common/: add map_cacher
984c0c3 common/shared_ptr.hpp: add get_next and expose VPtr and WeakVPtr types
4ac16ec filestore: add debug option to verify split results
03e5330 DBObjectMap, hobject: add helpers for pgid bit matching
0b436ab ObjectStore: add Context management to Transaction
f6500f5 Context: allow C_Contexts to not have a cct, add list_to_context
7db2a51 ObjectStore: move queue_transaction into ObjectStore
78db663 osd_internals/snaps.rst: update description to reflect SnapMapper
ba449ce osd_internals/snaps.rst: add a description of snaps and trimming
be95af7 PG::read_log: fix assert, split may introduce holes in the log
1a8c170 OSD: add debugging to start_split and complete_split
de22b18 PG: check_recovery_sources must happen even if not active
7a434d1 FileStore: fix reversed collection_empty return value
ce4432a HashIndex: _collection_list_partial must tolerate NULL next
e4bf1bc OSD: lock not needed in ~DeletingState()
32bf131 ReplicatedPG: don't leak reservation on removal
3091283 rbd: remove fiemap use from import
8123a1f mds: log session resets more cleanly
311704f mds: use session con ref to mark down killing session
dcda366 mds: mark con for closed session disposable
5c9186c mds: useless cleanup
2b55470 mds: mark_down old sessions using con
ca89cf5 client: fix kick_flushing_caps() args
e35d19b client: clean up useless MetaSession lookups
e6f04db client: fix trim_caps() args
ca5d68a client: fix wake_inode_waiters() arg
bc2a2eb client: validate/lookup mds session in each message handler
ced92b0 client: fix remaining s->inst users to use s->con
1ab8ff9 client: remove unused MetaSession::was_stale
6d1040b client: only signal session waiters on open and close
f8272c0 client: use Connection* in MetaSession instead of the inst/addr
dea707b client: use session->inst where possible
41f8b61 client: drop unused release_lease()
6fca300 client: pass session to send_reconnect and resend_unsafe_requests
90b3014 client: switch kick_requests and send_request to take a session *
6d0b7c8 client: handle ESTALE redirection in make_request(), not reply handler
80e81ec client: fix up _closed_mds_session
72d1184 client: use helper for _close_mds_session()
3975774 mds: flush log when we hit xlock during path traversal
e47d490 client: instantiate MetaSession for opening connections
5f2efe6 client: pass around MetaSession* instead of int mds
cee8786 client: check for mds state before sending messages
1779d39 mon: increase max_global_id before we hit the wall
4637752 mon: simplify assign_global_id()
436e5be mon: AuthMonitor: don't return global_id right away if we're increasing it
b99367b mon: Paxos: only finish a queued proposal if there's actually *any*
7710ee2 auth: assert if auth_debug = true and secret_id == 0
8659b7e libcephfs_jni.cc: prefer prefix ++operator for iterators
bc77af7 dupstore.cc: prefer prefix ++operator for iterators
f6b4f3e crushtool.cc: prefer prefix ++operator for iterators
c4810a5 libcephfs_jni.cc: fix indention
6802f27 doc: Added libvirt config comments for discard granularity.
8872531 rgw: set up curl with CURL_NOSIGNAL
4056552 src/crush/CrushTester.{cc,h}: prefer prefix ++operator for iterators
acac2be common/pick_address.cc: prefer prefix ++operator for iterators
1fc0b4d common/buffer.cc: prefer prefix ++operator for iterators
7feec80 common/WorkQueue.cc: prefer prefix ++operator for iterators
ae9fdfd LogEntry.h: prefer prefix ++operator for iterators
74198cc common/LogClient.cc: : prefer prefix ++operator for iterators
5c7b603 client/SyntheticClient.cc: prefer prefix ++operator for iterators
20dbd13 osd/osd_types.h: prefer prefix --/++operator for iterators
e047260 osd/PG.h: prefer prefix ++operator for iterators
f59f644 osd/OSD.h: prefer prefix ++operator for iterators
5e016d9 client/Client.cc: prefer prefix ++operator for iterators
8998c9f ceph_syn.cc: prefer prefix ++operator for iterators
b94f4b3 mon/Session.h: prefer prefix --operator for iterators
1e89f74 mon/Session.h: prefer prefix ++operator for iterators
69d1eab mds/SnapRealm.h: prefer prefix ++operator for iterators
62d33e9 mds/SessionMap.h: prefer prefix ++operator for iterators
d3f9673 mds/MDSMap.h: prefer prefix ++operator for iterators
89ffc64 mds/CInode.h: prefer prefix ++operator for iterators
bd4f1a3 msg/Messenger.h: prefer prefix ++operator for iterators
95749b3 MonMap.h: prefer prefix ++operator for iterators
6ae0345 buffer.h: prefer prefix ++operator for iterators
5d401b0 types.h: prefer prefix ++operator for iterators
81e00c1 auth/Crypto.cc prefer prefix ++operator for iterators
af3b163 doc: Fixed syntax error.
be6f7ce doc: Added tcp and bind settings and cleaned up syntax a bit.
77ecdc7 doc: Setting should use network not single IP.
669d2ba doc: Fixed usage and added note for copying keyring to client. Added hyperlinks.
7f66ebe doc: Addressed confusion with version numbering.
4df44bb doc: Added troubleshooting entry for single OSD and single replica.
36c672d Fix typo in ceph usage output
60639ab mon/Monitor.h: return string instead of 'char *' from get_state_name()
72c6226 client/hadoop/CephFSInterface.cc: prefer prefix ++operator for iterators
5ad2460 cls/rgw/cls_rgw.cc: prefer prefix --operator for iterators
7a31085 client/Inode.cc: prefer prefix ++operator for iterators
822c67e SyntheticClient.h: prefer prefix ++operator for iterators
0f48638 CephxKeyServer.h: prefer prefix ++operator for iterators
b1437a8 auth/Auth.h: prefer prefix ++operator for non-primitive types
64dca11 tools/rest_bench.cc: remove unused variable
9b51c25 test/test_filejournal.cc: use %u to format unsigned in sprintf()
5e882db test/system/st_rados_list_objects.cc: remove not needed statement
ae15b2f test/osd/RadosModel.h: remove unused variables
faab0e8 test/osd/Object.cc: catch exception by reference
4762fac test/omap_bench.cc: remove unused variables
b77454c test_mon_workloadgen.cc: remove unused variables
3cb9b35 test/librados/aio.cc: use static_cast instead of C-Style cast
a6bd658 test/encoding/ceph_dencoder.cc: use static_cast instead of C-Style cast
8dc0a32 bench/dumb_backend.h: remove never executed delete statement
3072902 test_object_map.cc: use %u to format unsigned in snprintf()
a19a2a1 test_keyvaluedb_iterators.cc: remove unused variable
08bf10b rgw/rgw_xml.cc: use static_cast instead of C-Style cast
03e0308 rgw/rgw_user.cc: remove unused variables
69cb92e rgw/rgw_rest_usage.cc: remove unused variables
3894205 rgw/rgw_rest_s3.cc: remove unused variables
f8a9fec rgw/rgw_rados.cc: perform initialization of prefix in initialization list
a37d71d rgw/rgw_rados.cc: remove unused variables
c6becc6 rgw/rgw_rados.cc: use static_cast instead of C-Style cast
579d4ad testing: update wordcount to new code layout.
09fa711 testing: fix hadoop-internal-tests
936b8f2 ceph-disk-activate: rely on default/configured keyring path
813e9fe ceph-disk-activate: don't override default or configured osd journal path
f8bc21a crush: add test for reweighting multiple items in the tree
9eb0d91 debian: stop ceph-mds before uninstalling ceph-mds
c021c5c log: drop default 'log max recent' from 100k -> 10k
46e8fc0 librbd: invalidate cache when flattening
f2a23dc ObjectCacher: add a method to clear -ENOENT caching
f6f876f ObjectCacher: keep track of outstanding reads on an object
28c0ce6 crush: make item adjust weight adjust *all* instances of the item
b3b059e crush: whitespace
c48c76f ceph: fix cli test
2450db1 Revert "Use start-stop-daemon --chuid option to setuid to www-data."
a52c48d mon: Paxos: increase trim tolerance from 3 to 30.
41987f3 mon: Paxos: bootstrap leader if he has fallen behind upon reaching collect
8ce26ea Document scrubbing behavior
a99ed03 Use start-stop-daemon --chuid option to setuid to www-data.
44f1cc5 Fix radosgw actually reloading after rotating logs.
c846e5c rgw/rgw_op.cc: remove unused variables
7e65048 rgw/rgw_op.cc: use static_cast instead of C-Style cast
6f85287 rgw/rgw_multi_del.cc: use static_cast instead of C-Style cast
f87b4ea rgw/rgw_multi.cc: use static_cast instead of C-Style cast
7ed6fe8 rgw/rgw_http_client.cc: use static_cast instead of C-Style cast
b322024 rados_sync.cc: fix typo in error msg
8ad58b4 rgw/rgw_common.cc: initialize has_acl_header in constructor with 'false'
33f67c9 rgw/rgw_admin.cc: remove some unused variables
026575b rgw/rgw_admin.cc: reduce scope of 'int ret'
30938f6 rgw/rgw_admin.cc: remove twice check for 'object'
9f34cf5 rgw/rgw_rados.h: use static_cast instead of C-Style cast
ece03bc rgw/rgw_acl_s3.cc: use static_cast instead of C-Style cast
f106e1a rgw/rgw_common.h: pass some const variables by reference to 'operator<<'
b669682 rbd_fuse/rbd-fuse.c: remove consecutive return/break statement
fab9ee5 rbd.cc: use static_cast instead of C-Style cast
8720f52 rados_sync.{cc,h}: pass some const std::string by reference
315c8c3 rados_sync.cc: remove unused variable
2b3cef7 rados_export.cc: reduce scope of 'int ret' in do_rados_export()
da51f59 src/rados.cc: remove unused variable
965f5d0 src/osdmaptool.cc: remove some unused variables
531ff1c osdc/Objecter.cc: use static_cast instead of C-Style cast
0517a2d osdc/ObjectCacher.cc: set left to 0 instead off 'left -= left'
75531a1 osdc/ObjectCacher.cc: use static_cast instead of C-Style cast
868447d os/FileStore.cc: move variable async_done to the right #ifdef block
2a94340 os/FileStore.cc: remove assignment of a never used value
a6f4de9 msg/SimpleMessenger.cc: use static_cast instead of C-Style cast
637e8e7 mon/PGMonitor.cc: use static_cast instead of C-Style cast
0ed2f37 mon/Monitor.cc: Clarify calculation precedence for '%' and '?'
88b6b57 librbd/internal.cc: clarify expression with parentheses
f7eec26 SyntheticClient.cc: Clarify calculation precedence for '%' and '?'
94d370e fusetrace_ll.cc: reduce scope of 'int err' in main()
5c1dc92 mds/Locker.cc: fix warning about 'Possible null pointer dereference'
f971a67 mds/Locker.cc: use static_cast instead of C-Style cast
07820f0 mon/MonMap: don't crash on dup IP in mon host
0dd956c debian: Fix FTBFS because depend on old libboost-dev
3fbdfd3 Add code to check flag state
0e33490 librados: fix installed header include paths
c7aa897 ceph_common.sh: add warning if 'host' contains dots
4fe52a7 Revert "Update conf.py"
7008992 Update conf.py
776c042 osd: noscrub, nodeepscrub osdmap flags
cdb4ae3 doc: Added a new network configuration reference document.
9bcba94 Fix output of 'ceph osd tree --format=json'
3854d3e doc: Added network settings. Reorganized index.
4c8c36c doc: Excised network settings.
da706c1 doc: Format edits. Excised much of network discussion. Added reference to network guide.
881e9d8 osd: mark down connections from old peers
ba7e815 osd/PG: rename require_same_or_newer_map -> is_same_or_newer_map
7a9107d mon/Paxos: make old clock skew message more/less suggestive
416b962 Properly format Content-Length: header on 32-bit systems.
4384e59 rgw: set attrs on various list bucket xml results (swift)
7cb6ee2 formatter: add the ability to dump attrs in xml entities
6669e73 rgw: don't iterate through all objects when in namespace
3b260f3 Add filestore_replica_fadvise config option default true
f52ec6d osd: fadvise replica data don't use
08d5a28 Avoid sending a success response when an error occurs.
edd0a1c Fix FileStore to notice if filestore_flusher config is changed
eb9b5f0 client: move annoying traceless handling into verify_reply_trace()
3f1b7fd client: debug async cache invalidation
3a7233b mds: pass created_ino back to client on replayed requests
0bcf2ac mds: track created inos with completed request ids in session info
977a1cb client: debug created ino
974dc84 client: unlink old_dentry on traceless rename reply
bc92b40 client: force lookup on traceless reply
0d501f6 client: make _do_lookup take a const string
3112754 mds: do not do traceless reply for open O_TRUNC requests
98a383b client: handle fh cleanup in ll_create() failure path
d87035c client: root can write to any file
613c8f1 client: clear I_COMPLETE on traceless reply for dentry request
80e122f client: pass ptarget from link, create, mkdir, symlink, setattr
29abaf6 client: handle traceless replies from make_request()
1e2864a osd: increate default pg log size from 1000 -> 3000
a714c16 vstart.sh: osd debug op order = true
d43384d Set weight of an osd based on df. priority to Weight in ceph.conf
e6caf69 config: note which options are overridden by common_preinit()
7c208d2 common: reduce default in-memory logs for non-daemons
a58eec9 init-ceph: fix run dir
de2c5b3 osd: add ctor for clone_info
e1e2d5d Missed adding rados_types.hpp to package
cb3ee33 ObjectCacher: fix debug log level in split
439d0e3 osd: add ctor for clone_info
a319f5c debian: require libsnappy-dev for ceph
ee158ed libcephfs: return osd location from crush map
e694ea5 release-process.rst:  Fix typos
e8da4bf client: expose extent/osd mapping
32407c9 ceph-disk-prepare: move in-use checks to the top, before zap
8550e5c doc/release-notes: v0.58
b244b87 Update doc/radosgw/s3/python.rst
7cd1cb2 Add list_snaps() calls to snapshots test cases
818f3d2 Add rados listsnaps command
db4ccc0 osd/librados: add op to list clones/snaps for an object
3b5933e Remove unused SnapContext in librados.hpp
1ebfb41 osd: Improve snapshot test
8418330 osd: correct comment
a6196de ceph-disk-prepare: verify device is not in use by device-mapper
3bd0ac0 ceph-disk-prepare: verify device is not mounted before using
867586c debian: require >= python2.6 for ceph as well
f03f626 ceph-disk-prepare: clean up stupid check for a digit
5950554 ceph-disk-prepare: use os.path.realpath()
ba3f91e (tag: v0.58) v0.58
66df847 Add X-Python-Version >=2.6 to debian control file.
a06ea30 PG,ReplicatedPG: use pg_has_reset_since to discard old async events
83e9aa5 PG::build_scrub_map: detect race with peering via last_peering_reset
9e47225 ReplicatedPG::C_OSD_CommittedPushedObject: use intrusive_ptr for pg
3e59667 ReplicatedPG::C_OSD_CommittedPushedObject take epoch submitted
2a7e802 init-ceph: fix --restart option
007c83d doc: Updated year in footer.
1d33436 doc: Added instructions for ensuring ceph config file and keyring prior to mounting ceph fuse.
1cfc3ae jounal: disable aio
7e2785a Build: no longer need to use LEVELDB_INCLUDE
d5a453f tools: ceph: add 'ceph df' usage
de6d0a2 mon: Monitor: 'ceph df'
e384798 README:  Add libsnappy-dev to build requirements.
14daccc doc: missing blank line in radosgw/config-ref
e01c15b librados.hpp: replace paris with pairs
d5ec9ca doc: Instruction should have been noout, not nodown.
d54ded4 doc: Fixed OSD pool config settings. Should be in [global], not [osd].
ded94ad ceph.spec.in: Require gptfdisk for Suse, gdisk for otherwise
1de23b5 osd/Watch.cc: init NotifyTimeoutCB::canceled in constructor with false
7ee047c osd/ReplicatedPG.cc: use static_cast instead of C-Style cast
1695525 ReplicatedPG.cc: remove unused variables
91e24b8 ReplicatedPG.cc: remove consecutive return/break statement
79569f7 osd/PG.cc: reduce scope of listed_collection in read_log_old()
75a265f osd/PG.cc: use static_cast instead of C-Style cast
b4276cb osd/OSD.cc: remove unused variable 'map<int64_t, int> pool_resize'
e0308f3 osd/OSD.cc: reduce scope of "PG *pg" in OSD::handle_pg_query()
054424b osd/OSD.cc: use static_cast instead of C-Style cast
3c96faa os/IndexManager.cc: reduce scope of 'int r' in IndexManager::build_index()
b871163 os/LevelDBStore.h: pass const string by reference to past_prefix()
ea7907f os/FileStore.cc: fix warning about comparing int with bool
40aaf82 os/FileStore.cc: remove identical else branch
a68411b os/FileStore.cc: use static_cast instead of C-Style cast
f1f1c77 SimpleMessenger.cc: use static_cast instead of C-Style cast
5009c77 msg/Pipe.cc: reduce scope of some variables
bb172dd mon/Paxos.cc: use static_cast instead of C-Style cast
8bfe3c6 mon/PGMonitor.cc: use static_cast instead of C-Style cast
5376a13 mon/PGMap.cc: remove useless assigment to 'first', it's never used
e13da07 mon/OSDMonitor.cc: use static_cast instead of C-Style cast
9b73448 mon/MonmapMonitor.cc: remove unused variable
4d5e3dd mon/MonmapMonitor.cc: use static_cast instead of C-Style cast
e2fe6f0 mon/Monitor.cc: reduce scope of reuse_caps in Monitor::_ms_dispatch()
0b73c31 mon/Monitor.cc: use static_cast instead of C-Style cast
0213806 mon/MonClient.cc: use static_cast instead of C-Style cast
f26fad2 mon/MDSMonitor.cc: use static_cast instead of C-Style cast
956408e mon/LogMonitor.cc: move unused variable into related code block
b232621 mon/LogMonitor.cc: use static_cast instead of C-Style cast
17bd157 mon/Elector.cc: use static_cast instead of C-Style cast
00b309c mon/AuthMonitor.cc: remove unused 'std::stringstream ss'
17aa1b4 mds/flock.cc: remove unused variable 'crossed_waiting_locks'
eedb463 mds/Server.cc: reduce scope of some variables
116d8d1 mds/Server.cc: : use static_cast instead of C-Style cast
146e457 mds/Migrator.cc: use static_cast instead of C-Style cast
cb31159 mds/MDS.cc: remove unused variable 'oldresolve'
7def48c mds/MDS.cc: : use static_cast instead of C-Style cast
926e996 mds/MDCache.cc: remove unused variables recover_q and check_q
87a1773 mds/MDCache.cc: reduce scope of 'in' in MDCache::open_root_inode()
ec0e6cb mds/MDCache.cc: use static_cast instead of C-Style cast
f40932d mds/MDBalancer.h: init some double variables in constructor
a8be638 mds/MDBalancer.cc: use static_cast instead of C-Style cast
eabd0b8 ESession.h: initialze 'open' in the constructor with false
b6305c1 mds/LogEvent.cc: use static_cast instead of C-Style cast
82f233b mds/Locker.cc: reduce scope of 'pool' in Locker::issue_client_lease()
eed1476 ceph.spec.in: merge fdupes support from SUSE packages
558681d ceph.spec.in: add on non-RHEL sharutils to 'BuildRequires:'
db4fee2 ceph.spec.in: fix 'Requires:' to get sgdisk into the system
c02e317 mds/Locker.cc: use static_cast instead of C-Style cast
95cfffb mds/CDir.h: use static_cast instead of C-Style cast
96e9da1 ceph.spec.in: gdisk for for rpm based systems instead of gptfdisk.
0f42edd msgr: drop messages on cons with CLOSED Pipes
2a84437 osd: add 'osd debug op order' to track and assert order of client ops
2ed9f5a osd: include osdmap epoch in osd_op message operator<<
0ad717a osd: useful debugging for when we drop requests
d672452 crush-map.rst: fix chooseleaf syntax in ssd example
ffc0ff6 init-ceph: kick off ceph-create-keys when starting mons
1e0b2d8 init-ceph: fix default admin socket path used for status
0cbe406 osd: show retry attempt in MOSDOp operator<<
c47c02d msg/Pipe: allow tuning of TCP receive buffer size
e10c1d1 msg/Pipe: move setting of socket options into a common method
5d54ab1 FileJournal::wrap_read_bl: adjust pos before returning
6cba924 librbd/internal.cc: remove unused variable total_write
c12d91e librbd/internal.cc: reduce scope of 'int r'
bed61fc librados/librados.cc: don't check unsigned 'len' against less than zero
a2b14cf librados/librados.cc: reduce scope of 'ret' in rados_objects_list_next()
f441d38 librados/librados.cc: use static_cast instead of C-Style cast
56902d7 librados/RadosClient.cc: use static_cast instead of C-Style cast
2f66b49 crush/builder.c: fix realloc handling
9b87690 crush/builder.c: fix sizeof handling of bucket->h.items
56777b0 cls_rbd.cc: remove another unused variable
9f98b80 cls_rbd.cc: remove unused variable
d75cf46 CInode.h: use static_cast instead of C-Style cast
4f1cd46 CDentry.h: use static_cast instead of C-Style cast
5c3f5c5 ceph.spec.in: add new Requires from ceph-disk-prepare
5ce0809 fix ceph-object-corpus submodule commit
58f4cd5 doc: rbd-cloudstack: fix bullet list, missing words, change ! to .
b65ca56 ceph-test.install:  Add libcephfs-test.jar to package.
be3581e doc: Consolidated Ubuntu and Ubuntu 12.10 requirements.
fac4959 mon: PaxosServices: don't ignore get_version(ver,bl) return value
ded84b1 doc: Added dependencies for ubuntu 12.10.
cfcacea debian: require cryptsetup-bin
5e278b8 vstart.sh: give mon. key mon = 'allow *' caps
202ae8e doc: fixed link and form edit.
783555f doc: Added auth entry to index.
7f7b2e7 doc: Removed auth entries from general. Part of an auth-specific section now.
712fca6 doc: Added comment to enable message. Added link to Auth Config Reference.
c0ed901 doc: Added Auth Config Reference as standalone config reference.
f62c5ab osd: allow log trimming during recovery
c980b76 ceph-fuse: add ceph options for all current fuse options
cf0d4f8 mon: MonitorDBStore: return -ENOENT on get() if key doesn't exist
1a581d0 kv_flat_btree_async.cc: remove unused variables
b6884e8 kv_flat_btree_async.cc: remove some unreachable break statements
ebdf67f key_value_store/cls_kvs.cc: remove unused variable dupmap
ca71457 bloom_filter.hpp: check for self assignment
8d35a66 crush/builder.c: reduce scope of oldsize in crush_add_rule()
d9d075e debian: let dpkg calculate the shlibs dep for leveldb (if any)
afa811c CrushCompiler.cc: remove duplicate if/else branches
9a40ab3 common/secret.c: reduce the scope of some variables
4b242f9 pick_address.cc: pass const string by refrence
7b7e912 obj_bencher.cc: use static_cast instead of C-Style cast
4ac5edd config.cc: remove unused variable 'val' from parse_injectargs()
7aab480 code_environment.cc: move variable ret in get_process_name()
de3f80c ceph_context.cc: remove unused variable 'args' from do_command
cd4dc83 cls_crypto.cc: remove some unused variables
924040b cls_acl.cc: remove unused variables
b20d024 common/armor.c: reduce scope of some variables
289d816 ceph_argparse.cc: accept also 0/1 for boolean injectargs
a7e797d TextTable: pass const string by refrence to define_column()
90c407e CephBroker.h: use static_cast instead of C-Style cast
85e36c1 SyntheticClient.cc: use static_cast instead of C-Style cast
f42a63b debian/control: fix Depends
4316153 debian/control: add libleveldb-dev to Build-Depends:
2becb35 README: add leveldb-dev to package list needed for build
f811f72 ceph.spec.in: fix leveldb handling
37d148b configure.ac: check for libsnappy
83dbaf6 add src/leveldb to .gitignore
8162215 remove leveldb from master branch
ea546ae Build: Change build to always use system leveldb
a34e7c6 ceph-test.install:  remove cepkfs-test.jar
75ce88f doc: fix rst for watch/notify internals
c313423 OpRequest: rmw_flags may actually be 0
0666b63 ceph-test.install:  Add libcephfs-test.jar.
1d8e119 client: add some new functions: lchmod, fsetattr, lutime
ac9ed33 client: allow change file owner or group only
7bd8400 client: use get_filehandle
3cc0551 client: fix log data
c5d78f4 libcephfs: fix default parameters document for ceph_open_layout
b5c9e59 PendingReleaseNotes: mention ceph-mon requiring the creation of data dir
ebf4717 mon: give useful errors to user when store is missing
cf20ea6 mon: Monitor: check for an argument to 'quorum' before reading the array
6810111 mon: Monitor: adjust sync start criteria considering a peon's bootstrap
d9962cc mon: Paxos: bootstrap if we have fallen behind when we start collecting
f58601d librbd: fix rollback size
c8dd2b6 msg: fix entity_addr_t::is_same_host() for IPv6
5b468e2 mon: fix other debug dumps
be31390 msgr: print dump before asserting (if that is enabled)
20b0933 msgr: dump corrupt message to log (at high debug levels)
6d89b34 osd: allow (some) log trim when degraded, but not during recovery
86df164 osd: restructure calc_trim
0ba8db6 osd: allow pg log trim during (non-classic) scrub
c1cffc7 mon: avoid expensive dump unless log will gather
95a379a ceph_common.sh: tolerate missing mds, mon, osds in conf
6bd0969 testing: updating hadoop-internal test
1274064 CephBroker.cc: fix condition
f0ae380 test: removing dead code
5006028 test: updating libcephfs-java tests
4ce3461 Client.cc: reduce the scope of some variables
60b9b10 Client.cc: use static_cast instead of C-Style cast
26e8577 Paxos.h: pass string name function parameter by reference
dc55c29 Typo: pool should be root in rados/operations/crush-map.rst
ef20382 osd/ReplicatedPG.cc: remove unused variables
fd5ce75 osd_types.cc: add parenthesis around expression
c0da0e1 OSDMap.cc: add parenthesis around expression
83eadd8 PGMonitor.cc: add parenthesis around expression
43e2b51 Client.cc: add parenthesis around expression
d783f95 CephxProtocol.cc: catch end_of_buffer by reference
bf10e5e CephxProtocol.cc: catch error by reference
d0e48eb crushtool.cc: remove unneeded function declaration
a6b3cc7 mds/journal.cc: fix assert in replay()
88555e7 KeyValueDBMemory.cc: use empty() instead of size() == 0
4059d94 ReplicatedPG.cc: use empty() instead of size() == 0
a2d842f FileStore.cc: use if(!empty()) instead of if(size())
e3b27b7 mon_store_converter.cc: use empty() instead of size()
ed83d4b Paxos.cc: use empty() instead of size()
14716fd Monitor.h: use empty() instead of !size()
7a81b07 Monitor.cc: use empty() instead of size()
1c8ffc5 ceph.spec.in:  Create placeholder directorys under /var/lib/ceph (Bug 4119)
aa79077 configure.ac:	Add test for c++ compiler.
ccdafa0 test_lock_fence.sh, rbdrw.py: rbd lock/fence test
98408f5 mon: PaxosService: remove lingering uses of paxos getters and wait methods
9d472ca systest: restrict list error acceptance
b64d261 systest: fix race with pool deletion
9e6025b doc: Added subnet example and verbiage to network settings.
5e5530b doc: Added content to remove REJECT rules from iptables.
9c693d7 test_rbd: move flatten tests back into TestClone
55bd768 qa: enable watch-notify dependent test
345aa2d test_rbd: close image before removing it
9ab0fd7 doc: Added a small ref section for osd config reference.
3ef6d5b doc: Updated osd configuration reference.
5b24a68 systest: restrict list error acceptance
b0271e3 systest: fix race with pool deletion
2b7deee qa: output rados test names as they run
62999ea PG,ReplicatedPG: use pg_has_reset_since to discard old async events
6722533 PG::build_scrub_map: detect race with peering via last_peering_reset
04ee8f4 ReplicatedPG::C_OSD_CommittedPushedObject: use intrusive_ptr for pg
a01dea6 ReplicatedPG::C_OSD_CommittedPushedObject take epoch submitted
c453734 librbd: remove unused internal method
5806226 librbd: drop snap_lock before invalidating cache
3fdf439 doc: Moved admonition to kernel mount.
516935b doc: Added verbiage to describe single host deadlocks.
67103a8 Monitor.cc: fix -Wsign-compare
cf167a1 debian: add new files
4b77deb ceph.spec.in: add new files
6ae10fe Client.cc: don't pass c_str() if std::string is expected
350481f Paxos.h: fix dangerouse use of c_str()
9217c4a debian: make gdisk, parted requirements, not recommendations.
35c951f Minor wording change.
6bae2a5 Grammar typo
3896896 Changes to the OS support, multi-data center, and hypervisor questions.
0cd215e mds: reencode MDSMap in MMDSMap if MDSENC feature is not present
c07e8ea qa/run_xfstests.sh: use $TESTDIR instead of /tmp/cephtest
8235b16 osd: an interval can't go readwrite if its acting is empty
704db85 mkcephfs: create mon data dir prior to ceph-mon --mkfs
10f50d3 doc: Added a lot of info to OSD troubleshooting.
e68f2c8 doc: Added mention of Admin Socket interface and brief description.
73317bd doc: Changed title to OSD and PG, indicating both subjects are covered.
ab7039d doc: Added references from monitoring OSD to troubleshooting OSD.
97cc738 doc: set maxdepth to 2, so TOC isn't so long with new OSD troubleshooting.
7c94083 client: use 4MB f_bsize and f_frsize for statfs
64267eb test/librados/watch_notify: fix warning
53586e7 ceph-object-corpus: re-update
2dae6a6 PG::proc_replica_log: oinfo.last_complete must be *before* first entry in omissing
3105034 objecter: don't resend linger ops unnecessarily
15bb9ba objecter: initialize linger op snapid
5648117 Add test for list_watchers() C++ interface
1c3241e Add listwatchers command to rados
af339ae Add ObjectReadOperation and IoCtx functions
cfe9239 librados: expose a list of watchers on an object
bf5cf33 Add rados_types.h header file
8c05af5 configuration parsing: give better error for missing =
dc18122 osd/PG: fix typo, missing -> omissing
94ae725 test_librbd_fsx: fix image closing
6c08c7c objecter: separate out linger_read() and linger_mutate()
de4fa95 osd: make watch OSDOp print sanely
dd007db ceph_common.sh: fix iteration of items in ceph.conf
6cb5374 ceph-conf.rst: missing '=' in example network settings
ce7ffc3 PG::proc_replica_log: adjust oinfo.last_complete based on omissing
79f09bf MDS: remove a few other unnecessary is_base() checks
9f82ae6 mds: allow xattrs on the root inode
6bd8781 mds: use inode_t::layout for dir layout policy
84ef164 mds: parse ceph.*.layout vxattr key/value content
fea7768 osdc/Objecter: unwatch is a mutation, not a read
81bd996 FileStore::_clone: use _fsetattrs rather than _setattrs
5b48e63 FileStore::_setattrs: use _fsetattrs
c33c51f FileStore: add _fsetattrs
2ec04f9 FileStore::_setattrs: only do omap operations if necessary
83fad1c FileStore::_setattrs no need to grab an Index lock for the omap operations
ad00fc7 Fix failing > 4MB range requests through radosgw S3 API.
96896eb Handle empty CONTENT_LENGTH environment variable.
c83a01d Fix failing > 4MB range requests through radosgw S3 API.
4277265 osd: an interval can't go readwrite if its acting is empty
a1ae856 librbd: make sure racing flattens don't crash
995ff0e librbd: use rwlocks instead of mutexes for several fields
e0f8e5a common: add lockers for RWLocks
6d8dfb1 osd: clear recovery state on pg removal
94e5dee test: fix run-rbd-tests pool deletion
6612b04 ceph-object-corpus: use temporary 'wsp.master.new' corpus until we get merged into master
04dac7e vstart.sh: Create mon data directory before --mkfs
89f9204 test: ObjectMap: add a generic leveldb store tool
cb85fb7 mon: ceph-mon: convert an old monitor store to the new format
19e5098 mon: Add an offline monitor store converter
091fa82 os: LevelDBStore: scrap init() and create open() and create_and_open()
cab3411 mon: Monitor: Add monitor store synchronization support
6db25a3 message: MMonSync: Monitor Synchronization message
d8a5cf6 mon: MonitorDBStore: add store iterators to obtain chunks for sync
b33d4ea mon: Paxos: get rid of slurp-related code
cd4de77 mon: PaxosService: rework full version stashing
86f6a34 mon: Paxos: trim through Paxos
a5e2dcb mon: Single-paxos and key/value store support
5551aa5 mds: parse ceph.*.layout vxattr key/value content
0202bf2 ReplicatedPG: allow multiple watches in one transaction
9a399af doc: add some internal docs for watch/notify
661a283 librados/: include watch cookie in notify_ack
8ece91f ReplicatedPG: accept watch cookie value with notify ack
ebdf66d Watch/Notify: rework watch/notify
7af3299 osd/: move ObjectContext over to osd_types.h
22ec5bc PG: check object_contexts on flushed
359c0df ReplicatedPG: add intrusive_ptr hooks
7fe7eff Timer.cc: use complete() rather than finish()
8713f18 osd: remove force hack for testing the HASHPSPOOL code
ceb390f mon: allow syslog level and facility for cluster log to be controlled
c3d130c mon: Monitor: keyring always on mon_data/keyring by default
1461967 mon: MonitorDBStore: Add a key/value store to be used in the monitor
0201cc8 rgw: refactor header grants
eb0f49d rgw_acl: Support ACL grants in headers.
04f3fe4 mon: fix new pool type
2e1b02b osd: lock pg in build_past_intervals_parallel()
473beb5 qa: mon/pool_ops.sh: fix last test
3692ccd doc: make the cephfs man page marginally more truthful
db99fb4 rgw: fix multipart uploads listing
34f885b rgw: don't copy object when it's copied into itself
efc4947 man: make the cephfs man page marginally more truthful
128cb17 osd/OSDMap: note OSDHASHPSPOOL feature when pool FLAG_HASHPSPOOL is set
b90167d mon: move OSDMap feature bit calculation into an OSDMap method
8cc2b0f osd: introduce HASHPSPOOL pool flag, feature to avoid overlapping pg placements
96e153a qa: mon/pool_ops.sh: test pool set size
7bd49d0 qa: mon/pool_ops.sh: fix pool tests
4eb9bf2 test/bufferlist: fix warning
3ff0fe0 testing: updating hadoop-internal test
f1bff17 qa: sample test for new replication tests
60d9465 doc/release-notes: v0.57
dbadb3e PG: remove weirdness log for last_complete < log.tail
5fc83c8 os/FileStore: check replay guard on src for collection rename
56c5a07 osd: requeue pg waiters at the front of the finished queue
f1841e4 osd: pull requeued requests off one at a time
9a7a9d0 (tag: v0.57) v0.57
4002d70 osd: fix printf warning on pg_log_entry_t::get_key_name
f80f849 qa: test_mon_workloadgen: use default config file path
6d33859 qa: mon/workloadgen.sh: drop TEST_CEPH_CONF code
8ca2274 rbd: udevadm settle before unmap
b45f67e test: correcting hadoop-internal tests
d2dbab1 testing: adding a Hadoop wordcount test
30b8d65 mon: restrict pool size to 1..10
45a4fe0 qa: rbd map-snapshot-io: udevadm settle
8e0be54 debian: allow extra args to get passed to ./configure via the environment
231dc1b qa: rbd/map-snapshot-io: remove image when done
1a7a57a qa: fix quoting of wget URLs
3612ed6 osd: log weirdness if caller_ops hash gets bigger than the log
ad84ea0 Strip any trailing whitespace from rbd showmapped
133d0ea buffer: drop large malloc tests
7fcbfdc buffer: put big buffer on heap, not stack
fb472a5 unit tests for src/common/buffer.{cc,h}
94e7c14 mon: fix pgmap stat smoothing
aa537df doc/release-notes: add note about upgrade to v0.56.3
28e7212 ceph_common: fix check for defined/undefined entities in conf
d20bf07 buffer::ptr::cmp only compares up to the smallest length
fecc3c3 ceph-disk-prepare: -f for mkfs.xfs only
aff0bb6 debian: fix start of ceph-all
c4573b7 fix operator>=(bufferlist& l, bufferlist& r)
3f5c252 qa: rbd/map-snapshat-io: unmap image when done
d950d83 ceph-disk-prepare: always force mkfs.xfs
e090a92 udev: trigger on dmcrypted osd partitions
c6ac0dd ceph-disk-prepare: add initial support for dm-crypt
e7040f5 ceph-disk-activate: pull mount options from ceph.conf
b1c0fcc ceph-disk-activate: use full paths for everything
95835de ceph-disk-prepare: do partprobe after setting final partition type
ea6cfb5 ReplicatedPG: handle missing set even for old format
bc74429 qa: rbd/map-snapshot-io.sh: chown rbd device stuff
29b4466 cls/lock/cls_lock.cc: use !lockers.empty() instead of size()
adb807c src/client/SyntheticClient.cc: use !subdirs.empty() instead of size()
5c3e657 client/Client.cc: use empty() instead of size()
4902836 mds/MDSMap.h: use up.empty() instead of up.size()
28bf6cb mds/CDentry.h: use projected.empty() instead of projected.size()
d50a22d ceph_authtool.cc: use empty() instead of size()
ab17aaf OSD: add leveldblog compatibility flag for OSD
16b3718 PG: verify log versions during read_log
5f92b6c PG: write_log if we read an old-format log
1ef9420 osd: move pg log into leveldb
ae0c2bb qa: pull qa stuff from ceph.com ceph.git mirror
160490c doc: radosgw: document config without 100-continue and custom fastcgi
467f7a7 config: Add small note about default number of PGs
6f3f173 test_sync_io.c: add error handling
26cdb6a test_short_dio_read.c: add error handling
2c42bfc doc: update rados troubleshooting for slow requests
a6534bc osd/OSDCap: add unit test for parsing pools/objects with _ and -
6c504d9 osd/OSDCap: tweak unquoted_word parsing in osd caps
4dfcad4 OSD: always activate_map in advance_pgs, only send messages if up
2ce28ef osd/OSDCap: add unit test for parsing pools/objects with _ and -
a14bae6 rgw: user can specify 'rgw port' to listen on a tcp port.
93bfb36 test/filestore/chain_xattr: remove testfile; disable LOGFILE
1de16ac osd: log error when ondisk snap collections do not match
971b161 osd: fix read_log error/warning messages to mon
533fd7a wireshark/ceph/packet-ceph.c: fix some issues from cppcheck
ab1166c rest_bench.cc: use empty() to check for emptiness
8202378 tools/common.cc. use !empty() to check for non-emptiness
1834885 test_filejournal.cc: use empty() to check for emptiness
f9bf127 src/test/osd/RadosModel.h: use empty() to check for emptiness
37bb45f test_mon_workloadgen.cc: use empty() to check for emptiness
f923be5 TestFileStoreState.cc: use empty() to check for emptiness
47413b3 FileStoreTracker.cc: use empty() to check for emptiness
9da963e test_object_map.cc: use empty() to check for emptiness
e551dd4 test_keyvaluedb_iterators.cc: use empty() to check for emptiness
a8614b8 scratchtoolpp.cc: print some more results
e2af5b3 rgw/rgw_user.cc: use empty() to check for emptiness
a30017f rgw/rgw_usage.cc use empty() to check for emptiness
b14994e rgw/rgw_rest_swift.cc: don't pass c_str() result to std::string argument
dfe1b45 rgw/rgw_rados.cc: : use empty() to check for emptiness
005fe42 rgw/rgw_op.cc: use empty() instead of size() to check for emptiness
e980d52 rgw/rgw_main.cc: use empty() instead of size() to check for emptiness
6044083 mds/journal.cc: use !empty() instead of size() to check for emptiness
f244fd7 mds/SnapServer.cc: use !empty() instead of size() to check for emptiness
e57d991 mds/MDSMap.cc: use !empty() instead of size() to check for emptiness
aa2ae6a mds/MDS.cc: use !empty() instead of size() to check for emptiness
1755fd9 mds/MDCache.cc: use empty() instead of size() to check for emptiness
3ed962b mds/Locker.cc: use !empty() instead of size()
a65c71c mds/CInode.cc: use !empty() instead of size()
d089640 mds/CDir.cc: use !empty() instead of size()
4c11a5d librbd/internal.cc: use !empty() instead of size()
15248ae kv_flat_btree_async.cc: use empty() instead of size() to check for emptiness
fc0a108 cls_kvs.cc: use !empty() instead of 'size() > 0' to check for emptiness
30fe107 crushtool.cc: use !empty() instead of 'size() > 0' to check for emptiness
f4cae00 crush/CrushWrapper.cc: don't pass c_str() result to std::string argument
d6c4a62 obj_bencher.cc: use empty() instead of 'size() == 0' to check for emptiness
e719e0a common/WorkQueue.cc: use !empty() instead of size() to check for emptiness
810d23e cls_refcount.cc: use empty() instead of !size() to check for emptiness
c4f1c07 cls/rbd/cls_rbd.cc: use !empty() instead of 'size() > 0'
fb811ec rgw/rgw_log.cc: don't pass c_str() result to std::string argument
59f8c8d rgw/rgw_gc.cc: use !empty() instead of size() to check for emptiness
338e168 rgw/rgw_admin.cc: use empty() instead of size() to check for emptiness
8c1cb21 rgw/rgw_admin.cc: prevent useless value assignment
c115bdb rbd.cc: use empty() instead of size() to check for emptiness
95eda32 rados.cc: use omap.empty() instead of size() to check for emptiness
4950a1b osdmaptool.cc: : use empty() instead of 'size() < 1'
fb6561e Objecter.cc: prevent useless value assignment
d029b93 init-ceph.in: replace "/var/run/" by already used $RUN_DIR
aa4cae6 ceph_common.sh: check if $sshdir exist, otherwise create it
97c6ce0 init-ceph.in: create pid and log dir only on start
7eefe0b doc: Update create example to use 'allow ' syntax
51a0a22 doc: Move pool=... syntax inside of single quotes
01f82b8 ceph.spec.in: remove librados2 requirement from librbd1
9952f2d ceph.spec.in: cleanup requirements of fuse packages
03fe479 LDADD PTHREAD_LIBS to fix librados-config linking
02a353e fix buffer::list::zero(unsigned o, unsigned l) to act on all buffer::ptr
b7b9af5 debian: start/stop ceph-all event on install/uninstall
690ae05 ceph-disk-activate: catch daemon start errors
5bd85ee udev: trigger ceph-disk-activate directly from udev
d1904b2 ceph-disk-activate: auto detect init system
f06b45e ceph-disk-activate: specify full path for blkid, initctl, service
1af749e upstart/ceph-osd: make crush update on start optional
ccdcae3 doc/release-notes: v0.56.3
1334a42 PG,OSD: convert write_info users to write_if_dirty
34ed5da OSD: init infos_object in OSD::init()
93b3da6 PG: place biginfo on the infos object next to the info and epoch keys
f4b70c8 PG: minor style change for append_log and read_info
f3bc8df PG: use helpers to generate info and epoch keys
7e19207 libcephfs:  Fix shutdown segfault
6879e8b doc: Minor clarification.
760b5ff OSD: dirty big_info in build_past_intervals_parallel
e011ad1 upstart: ceph-hotplug -> ceph-osd-activate
792e45c upstart/ceph-hotplug: tell activate to start via upstart
b2ff6e8 ceph-disk-prepare: refactor to support DIR, DISK, or PARTITION for data or journal
64ec2d4 doc: Made a few clarifications from feedback.
191d5f7 ceph-disk-activate: detect whether PATH is mount or dir
fd4a921 ceph-disk-activate: add --mark-init INITSYSTEM option
0765528 ceph-disk-activate: factor mounting out of activate
23ad3a4 debian: put ceph-mds upstart conf in ceph-mds package
e80675a debian: include /var/lib/ceph/bootstrap-mds in package
809143f ceph-create-keys: create mds bootstrap key
4698b6a upstart/ceph-hotplug: drop -- in ceph-disk-activate args
c8f528a init-ceph: iterate/locate local sysvinit-tagged directories
b8aa476 init-ceph: consider sysvinit-tagged dirs as local
50cbd10 debian: implement purge postrm script for ceph, ceph-mds
af2372c ceph-disk-prepare: align mkfs, mount config options with mkcephfs
617bde9 doc: Added many Q/A sections to the FAQ.
670a148 qa: fix mon/osd.sh
7aefe92 specfile:  Add ceph-coverage to list of binaries
612f65b Objecter.cc: use !empty() instead of size() to check for emptiness
722d12c ObjectCacher.cc: use empty() instead of !size() to check for emptiness
475967f ReplicatedPG.cc: use empty() instead of size() to check for emptiness
d9a0638 PG.cc: use empty() instead of size() to check for emptiness
5d89996 OSD.cc: use empty() instead of size() to check for emptiness
f94f797 LFNIndex.cc: use !holes.empty() instead of 'size() > 0'
4893def HashIndex.cc: use empty() instead of size() to check for emptiness
f65679b FileStore.cc: use empty() instead of size() to check for emptiness
b0ec071 DBObjectMap.cc: use empty() instead of size() to check for emptiness
dd855b3 monmaptool.cc: use empty() instead of size() to check for emptiness
0b31234 PGMonitor.cc: use !empty() instead of size() to check for emptiness
6f0175e OSDMonitor.cc: use !empty() instead of size()
8fcd31f Monitor.cc: use empty() instead of size()
f7078b4 MonCaps.cc: use !empty() instead of size()
d7705ed OSDMonitor.h: use !reporters.empty() instead of size()
180cae5 AuthMonitor.cc: use !pending_auth.empty() instead of 'size() > 0'
6b8458d CInode.h: use !old_inodes.empty() instead of size()
a3970e5 CephxProtocol.h: pass CryptoKey by reference to decode_decrypt()
9d6eccb osd/PG: initialize info_struct_v in ctor
7c2e2b9 java: make CephMountTest use user.* xattr names
977ba79 doc: clarified ceph id vs. ceph name, and fixed a typo.
188f3ea osd/PG: store pg_info_t in leveldb (omap), purged_snaps separately
0e98527 doc: Added some of the troubleshooting steps into the libvirt procedure and removed path for virsh edit.
fe28381 librbd: unprotect any non-unprotected snapshot
c036dc7 doc: fix command syntax
376cca2 deb:  Add ceph-coverage to ceph-test deb package
78ff229 mds: Setting pool on a file requires latest osdmap
d8c6b08 mds:  Add retry field to MDRequest
ed6c3ff qa/workunits:  Add vxattr set pool test script
5517000 cephtool:  Add add_data_pool command to help
1b05517 msg/Messenger: rename option
302b26f osd: only share maps on hb connection of OSD_HBMSGS feature is set
afda30a osd: tolerate unexpected messages on the heartbeat interface
1e68ccf msg/Messenger: do not crash on unhandled message
a88f9be .gitignore: fix ceph_filestore_dump name
2cb6bcc Revert "Makefile: name binary ceph-filestore-dump"
0c65cd5 mds/LogEvent.h: change print() signature to const
e2b8e0f modified the perl file name Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
411770c FileStore: set replay guard on create_collection
b184ff5 FileStore: _split_collection should not create the collection
d8891d5 os/FileStore: do not tolerate ENOENT on collection_add
66ddffb osd: make coll_t::is_pg() correctly validate the snapid suffix
7edf8ac os: use coll_t:is_pg_prefix() check instead of is_pg()
ea98fbb doc: Removed legacy comment regarding Keystone integration.
522a81e doc: Added link to <disk> reference. Added minor clarifications.
77799a5 auth: cephx: KeyServer: add 'has_secrets()' function
5659a4e mon: Remove global version code introduced around bobtail's release
bd6d498 ceph-filestore-dump: Improve error message
f0b2e32 Makefile: name binary ceph-filestore-dump
2922287 doc: Added procedures for using libvirt VMs with Ceph.
1b7fc30 .gitignore: fix typo and missing vstart.sh output
2783fce work unit for rbd cli tests Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
f923c8c doc: document hadoop replication config
7c8d3d0 added new cli tests Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
a62d519 Unit tests for chain_xattr.cc
31e911b osd: update snap collections for sub_op_modify log records conditionaly
715d871 osd: include snaps in pg_log_entry_t::dump()
54b6dd9 osd: unconditionally encode snaps buffer
8b05492 osd: improve debug output on snap collections
ab89e93 Revert "rgw: plain format always appends eol to data"
133295e libcephfs: fix for #4068
755b4bb .gitignore: add local ones for ocf and man
3d5969d qa/rbd: +x on map-snapshot-io.sh
b26dc4e test: fix run-rbd-tests
c52dbd5 .gitignore: re-add vstart dirs and tags, fix typo
ebe70d7 Mutex.cc: fix implicitly-defined namespace 'std'
c7970bb ceph_authtool.cc: fix implicitly-defined namespace 'std'
d6b205f librados/librados.cc: fix implicitly-defined namespace 'std'
69552ff test_mon_workloadgen.cc: fix -Wgnu
1f0fd50 src/osd/PG.h: use empty() instead of size()
76798ea src/osd/OSD.h: use empty() instead of size()
99f2175 src/msg/Messenger.h: pass function parameter by reference
72ff806 src/mon/PGMonitor.cc: remove unused variable
aad71df src/log/Entry.h: pass function parameter by reference
6986707 common/WorkQueue.h: use empty() instead of size()
3b77687 common/AsyncReserver.h: use empty() instead of size()
d427d98 src/msg/msg_types.h: pass function parameter by reference
79c95a6 common/config.h: declaration of config_option as struct
f213669 .gitignore: cleanup and sort entries
125cb71 ceph-test.install: updated filelist
6cecdd8 spec/debian: don't install rest-bench twice
7b89ee6 ceph-test: give binaries from ceph-test package useful  names
749218f buffer::ptr self assignment bug + patch
89df090 rgw/rgw_rest.cc: fix 4K memory leak
f0ba807 SyntheticClient.cc: fix some memory leaks in the error handling
e6591db wireshark: fix some memory leaks
d48cc78 rgw/rgw_xml.cc: fix realloc memory leak in error case
c92a0f5 os/FileStore.cc: fix realloc memory leak in error case
f26f147 common/fiemap.cc: fix realloc memory leak
4d054e2 qa: fix iogen script
41537d4 osd: do not spam system log on successful read_log
abc80ff java: make CephMountTest use user.* xattr names
c31aff5 rgw: plain format always appends eol to data
3e4d79f rgw: change json formatting for swift list container
b19b6dc osd: fix load_pgs collection handling
1f80a0b osd: fix load_pgs handling of pg dirs without a head
073f58e OSD::load_pgs: first scan colls before initing PGs
0d68f3a test/crypto: fix narrowing conversion warning
20255d9 doc: update commands for fetching release PGP keys
7761233 mds: enable SnapInfo, snaplink_t, sr_t dencoder usage
d414875 mds: remove very dead commented-out code
f1e08e6 mds: add ENCODING to the incompat set
e7bc4b8 mds: cap_reconnect_t uses modern encoding
38dd59b doc: Removed unnecessary/contradictory options.
19c9466 doc: Fixed order of option.
07b24cf mds: SessionMap now uses modern encoding
7cbae70 mds: mds_load_t now uses modern encoding
5c81221 mds: dirfrag_load_vec_t now uses modern encoding
6a6f75e mds: inode_load_vec_t now uses modern encoding
4123d01 mds: use modern encoding for LogEvent
3fb1b21 mds: EUpdate more modernization for dencoder
05461e8 mds: EUpdate event now uses modern encoding
8f75db3 mds: ETableServer more modernization for dencoder
ac8f25c mds: ETableServer event now uses modern encoding
f82dce8 mds: ETableClient more modernization for dencoder
d727b12 mds: ETableClient event now uses modern encoding
d557bcf mds: ESubtreeMap more modernization for dencoder
7998524 mds: ESubtreeMap event now uses modern encoding
1842f46 mds: ESlaveUpdate more modernization for dencoder
70bc6af mds: rename_rollback more modernization for dencoder
85c67fe mds: rmdir_rollback more modernization for dencoder
637e99f mds: link_rollback more modernization for dencoder
a64153f mds: ESlaveUpdate event now uses modern encoding everywhere
3cea0ca mds: ESessions more modernization for dencoder
8e8ecb4 mds: ESessions now uses modern encoding
709ff3d mds: ESession more modernization for dencoder
3f469ba mds: ESession event now uses modern encoding
b578ef2 mds: EResetJournal modernization for dencoder
5db5433 mds: EResetJournal event now uses modern encoding
a1ed741 mds: EOpen event now uses modern encoding
de9c1a1 MDS: EMetaBlob more modernization for encoder
821b74e MDS: EMetaBlob::dirlump more modernization for encoder
196313b mds: EMetaBlob::nullbit modernization for dencoder
09a2d66 mds: EMetaBlob::remotebit more modernization for dencoder
deb0d45 mds: EMetaBlob::full_bit more modernization for dencoder
6073027 mds: EMetaBlob and its sub-parts use modern encoding now
83c1a3c mds: EImportStart event uses modern encoding
a25683f mds: EImportFinish event uses modern encoding
b079733 mds: EFragment event uses modern encoding
8906ae9 mds: remove unused EString event
f886f31 mds: EExport event uses modern encoding
d21de81 mds: ECommitted now uses modern encoding
7bad507 SnapServer: use modern encoding for server_state
6e797e0 InoTable: use modern encoding for encode_state and decode_state
eb060bb CInode: use modern encoding for encode_export/decode_import
d8a7b87 CInode: use modern encoding for encode_store
95cee97 AnchorServer: use modern encoding for server state
d5a6a25 DecayCounter: use modern encoding
0fe7a08 mds: old_rstat_t now uses modern encoding
ff63530 mds: Capability (and sub-structs) now uses modern encoding
3cf3710 mon: fix typo in C_Stats
2bdf753 mon: assert valid context return values
4837063 mon: retry PGStats message on EAGAIN
1782776 mon: handle -EAGAIN in completion contexts
1b05b0e radosgw-admin: fix cli test
2eaa728 keys: renew autobuild.asc key
278dfe5 rgw: stream get_obj operation
3383618 throttle: optional non perf counter mode
ed2bb38 OSD: check pg snap collections on start up
55f8579 OSD::load_pgs: first scan colls before initing PGs
70532d1 rgw: get bucket_owner from policy
f6af1e7 rgw: fix bucket_owner assignment
e345dfe Feature 3667: Support extra canned acls.
fa47e77 ReplicatedPG: check store for temp collection in have_temp_coll
a18045f rgw: a tool to fix clobbered bucket info in user's bucket list
a00c77a rgw: bucket recreation should not clobber bucket info
36cf4d0 ceph: fix 'pg' error message to direct user toward better input
1042060 mds: error messages for export_dir said 'migrate_dir'
c44846e ceph: ceph mon delete doesn't exist; ceph mon remove is the command Fix up cli test as well (doc is already correct)
eb9d6ca osd: fix name of setomapval admin-daemon command
73872e7 ceph: use "config set" consistently in help/error msgs
5896b97 modified the script to run on both argonaut and bobtail. Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
dbce1d0 PG: dirty_info on handle_activate_map
9432353 mds: rename mds_traceless_replies to mds_inject_traceless_reply_probability
af95d93 osd: flush peering queue (consume maps) prior to boot
75c40fa qa: fix iogen script
46d7dbd client: trigger the completion in _flush when short-cutting
08b82b3 mds: add "mds traceless replies" debug option
9871cf2 logrotate.conf: Silence rgw logrotate some more
d02340d silence logrotate some more
c0e1070 test: fix Throttle unit test.
1948a02 osd: do not spam system log on successful read_log
3acc4d2 rbd-fuse: fix for loop in open_rbd_image()
db0dbe5 msg/Message.h: fix C-style pointer casting
b1fc10e messages/MOSDRepScrub.h: initialize member variable in constructor
22e48b5 include/xlist.h: fix C-style pointer casting
d54bd17 include/types.h: change operator<< function parameter
0327cba include/buffer.h: fix operator=
ad526c0 obj_bencher.cc: use vector instead of VLA's
a4042cc ceph_crypto.cc: remove unused shutdown() outside crypto ifdef's
4268296 WorkQueue.h: fix cast
27fb0e6 rgw: a tool to fix buckets with leaked multipart references
50c1775 rgw: radosgw-admin object unlink
3b63542 mon: move list_rules into CrushWrapper method
9f4d4ac crush: add list_rules() method
7f237be Makefile:  Add rgw/logrotate.conf source tarball
99ea303 logrotate.conf:  Remove unneeded loop and update new rgw version.
c8eace6 rgw: create a separate logrotate file for radosgw
b79067a qa: add workunits/mon/crush_ops.sh
2c559a7 mon: 'osd crush rule rm <name>'
a19cdd4 osdmap: method to check if a crush ruleset is in use
b9bd482 crush: remove_rule() method
43a01c9 crush: factor out (trivial) crush_destroy_rule()
c370d85 mon: 'osd crush rules list|ls'
b6036a5 mon: 'osd crush dump'
9da6290 crush: factor out dump_rules from dump
a04d3f0 mon: 'osd crush rule create-simple <name> <root> <failure_domain_type>'
1a386d6 crush: add_simple_rule() command
d7ada58 crush: fix get_rule_id() return value
4f992ea crush: add rule_exists()
3105700 mon: 'osd find <osd-id>' command
c058285 mds: uninline Capability encoders
90d93d9 mds: build dencoder with more stuff
ad40bdd MDSMap: mds_info_t now uses modern encoding
50ab924 mds: MDSMap now uses modern encoding
771204b mds: move conditional MDSMap encoding into single encode method
21901d2 mdsmap: uninline encode/decode
78632ad mds: modernize SimpleLock on-wire encoding
924fb18 mds: mds_table_pending_t now uses modern encoding
49b0be5 mds: rename MDSTableServer::_pending to mds_table_pending_t
72c7bcd mds: MDSCacheObjectInfo now uses modern encoding
d580a58 mds: string_snap_t now uses modern encoding
f57f424 mds: session_info_t now uses modern encoding
91555e2 mds: move durable Session bits into session_info_t
4486580 mds: fnode_t now uses modern encoding
bd4897b mds: old_inode_t now uses modern encoding
7e85a17 remove common/types.cc
843a352 mds: inode_t now uses modern encoding
87da20b mds: fold byte_range_t into client_writeable_range_t
49eb4d6 mds: client_writeable_range_t now uses modern encoding
9cf9c54 mds: nest_info_t now uses modern encoding
cda5590 mds: rename struct default_file_layout to file_layout_policy_t
a892671 mds: frag_info_t now uses modern encoding
2888830 mds: default_file_layout now uses modern encoding
34f7c71 mds: inode_back{trace,pointer}_t now uses modern encoding
f1baa79 mds: move SnapRealm into its own h/cc files
3e72893 client: rename client/SnapRealm files to avoid automake build conflict
08124fc mds: SnapInfo, snaplink_t, sr_t now use modern encoding
e35b89e  mds: Anchor now uses modern encoding
ccba2ce mds: add CEPH_FEATURE_MDSENC feature bit
43468a3 osd: remove DecayCounter header
ece1c0f mon: check correct length of command
64ded02 Relax Throttle::_reset_max conditions and associated unit tests
ca2d645 os: default to 'journal aio = true'
d41b541 Edit endpoint-create in ./doc/radosgw/config.rst
6e60330 Edit rgw keystone url in ./doc/radosgw/config.rst
af8cac1 Note on host in ./doc/radosgw/config.rst
4b4dba3 doc: Updated to note bobtail supports RGW + Keystone.
e2e1de2 cli test: add pg deep-scrub option to test
eba8697 cli test: add pg deep-scrub option to test
4a6924a install:  remove perl dependency
804ffc6 Add "pg deep-scrub..." missing from ceph usage output
9019fbb rgw: fix setting of NULL to string
e0acc33 xattr_bench.cc: remove twice included <time.h>
c81a9d4 ceph-filestore-dump.cc: remove twice included <iostream>
558b238 testmsgr.cc: remove twice included <sys/stat.h>
60432d9 perf_counters.cc: remove twice included header files
b70d563 testxattr.cc: remove twice included <iostream>
b22d641 workload_generator.cc: remove twice included "common/debug.h"
9421041 test_idempotent.cc: remove twice included "os/FileStore.h"
d141f79 tp_bench.cc: remove twice included <iostream>
c8aeb93 small_io_bench*.cc: remove twice included <iostream>
8197990 MDS.cc: remove twice included common/errno.h
4e29c95 mon: enforce reweight be between 0..1
b970d05 qa: smalliobenchrbd workunit
d050fe1 doc: Minor edits.
0797be3 rgw: key indexes are only link to user info
fd1512f Build:  Add -n to files and description for rbd-fuse in ceph.sepc.in
de01bdd Makefile:  Install new rdb-fuse.8 man page
16cf9dc build:  Add new rbd-fuse package
7d1e825 Revert "Don't install rbd-fuse binary"
334568e rbd-fuse: quick and dirty manpage
91f8c3c rbd-fuse: quick and dirty manpage
340b1cf ceph-filestore-dump.cc: don't use po::value<string>()->required()
1ee46c5 doc: Added more detail to SSD section. Links to performance blogs.
2292fa6 Add important note in doc/radosgw/config.rst
129a660 ceph-filestore-dump.cc: don't use po::value<string>()->required()
9235271 ceph.spec.in: fix file section for ceph-resource-agents
6e09cb9 ceph.spec.in: extend fix for libedit-devel on special SUSE versions
4c1d8d0 ceph.spec.in: don't move libcephfs_jni files around
9b16036 ceph.spec.in: move libcephfs_jni.so to ceph-devel
3f53c3f Validate format strings for CLS_ERR/CLS_LOG
97c6619 qa: update the rbd/concurrent.sh workunit
0758fab Add ceph-filestore-dump to the packaging
ab778cb doc: v0.56.2 release notes
3c8d7d7 osd: create tool to extract pg info and pg log from filestore
4a950aa Move read_log() function to prep for next commit
b571f8e PGMap: fix -Wsign-compare warning
b0d4dd2 test_libcephfs: fix xattr test
c782d2a qa: add test for rbd map and snapshots
e253830 cls_rbd, cls_rgw: use PRI*64 when printing/logging 64-bit values
77f5741 mds: move lexical_cast and assert re-#include to the top
35e5d74 Don't install rbd-fuse binary
23923ee mds/Server.cc: fix warring assert.h's
25e9a0b mon: require name for 'auth add ...' command
e9a6694 client: return errors to the user if fsync fails
84a024b init-ceph: make ulimit -n be part of daemon command
61fbe27 qa: add layout_vxattrs.sh test script
db31a1f mds: allow dir layout/policy to be removed via removexattr on ceph.dir.layout
ebebf72 mds: handle ceph.*.layout.* setxattr
09f2854 mds: fix client view of dir layout when layout is removed
8475148 client: note presence of dir layout in inode operator<<
ba32ea9 client: list only aggregate xattr, but allow setting subfield xattrs
3f82912 client: implement ceph.file.* and ceph.dir.* vxattrs
febb965 client: move xattr namespace enforcement into internal method
ad7ebad client: allow ceph.* xattrs
e51299f mds: open mydir after replay
3bc2114 ObjectCacher: fix flush_set when no flushing is needed
59ac4d3 qa: add rbd/concurrent workunit
7cd4e50 client: Wait for caps to flush when flushing metadata.
907c709 mds: Send created ino in journaled_reply
cf7c3f7 client: Don't use geteuid/gid for fuse ll_create
0b66994 (origin/wip-3930) ceph.spec.in:	package rbd udev rule
a7d15af mon: smooth pg stat rates over last N pgmaps
ecda120 doc: fix overly-big fixed-width text in Firefox
3f6837e mon/PGMap: report IO rates
208b02a mon/PGMap: report recovery rates
76e9fe5 mon/PGMap: include timestamp
a2495f6 osd: track recovery ops in stats
4aea19e osd_types: add recovery counts to object_sum_stats_t
193dbed rbd-fuse: fix warning
1e24ce2 doc: Removed indep, and clarified explanation.
829aeba mds: clear inode dirty when slave rename finishes.
5884177 mds: mark export bounds for cross authority directory rename
abc4c78 mds: allow handling slave request in the clientreplay stage
e69e7e5 mds: fix 'discover' handling in the rejoin stage
0e9c812 mds: add projected rename's subtree bounds to ESubtreeMap
77946dc mds: fetch missing inodes from disk
f4abf00 mds: rejoin remote wrlocks and frozen auth pin
710bba3 mds: move variables special to rename into MDRequest::more
4fc68a4 mds: properly clear CDir::STATE_COMPLETE when replaying EImportStart
9a0cfcc mds: don't journal opened non-auth inode
0cf5e4e mds: journal inode's projected parent when doing link rollback
c93cf2d mds: fix for MDCache::disambiguate_imports
baa6bd6 mds: fix for MDCache::adjust_bounded_subtree_auth
e0aa64d mds: don't replace existing slave request
85294a5 mds: always use {push,pop}_projected_linkage to change linkage
3a66656 mds: send resolve messages after all MDS reach resolve stage
a42a918 mds: split reslove into two sub-stages
844cd46 mds: fix slave rename rollback
1a6626f mds: preserve non-auth/unlinked objects until slave commit
9944d9f mds: don't journal non-auth rename source directory
fb49713 mds: force journal straydn for rename if necessary
ce431eb mds: splits rename force journal check into separate function
c9ff21a mds: fix "had dentry linked to wrong inode" warning
cd8d910 mds: don't set xlocks on dentries done when early reply rename
b429a3a doc: Updated to add indep and first n to chooseleaf. Num only used with firstn.
f41010c rgw: fix crash when missing content-type in POST object
09522e5 rgw: fix crash when missing content-type in POST object
b955a59 mon: set limit so that we do not an entire down subtree out
2b8ba7c osdmap: implement subtree_is_down() and containing_subtree_is_down()
75f6ba5 crush: implement get_children(), get_immediate_parent_id()
97b7892 doc: update ceph man page link
91a0bc8 ceph, rados: update pool delete docs and usage
1a6197a qa: fix mon pool_ops workunit
818e9a2 rbd-fuse: fix printf format for off_t and size_t
21673e8 rbd-fuse: fix usage of conn->want
f74265b configure: fix check for fuse_getgroups()
fb85c7f rbd: don't ignore return value of system()
014fc6d utime: fix narrowing conversion compiler warning in sleep()
0ded0fd mon: Monitor: rework timecheck code to clarify logic boundaries
3a08942 doc: fix rbd create syntax
659d1a3 mds: properly set error_dentry for discover reply
6daec53 mds: introduce XSYN to SYNC lock state transition
6714497 mds: allow journaling multiple root inodes in EMetaBlob
919df3b mds: lock remote inode's primary dentry during rename
5176cb7 mds: check deleted directory in Server::rdlock_path_xlock_dentry
6bd676e mds: fix end check in Server::handle_client_readdir()
c547816 mon: Elector: reset the acked leader when the election finishes and we lost
d74b31b mon: Monitor: force timecheck cleanup on finish_election()
fa421cf configure: remove -m4_include(m4/acx_pthread.m4)
32276e9 configure: fix RPM_RELEASE
341e676 osdmaptool: fix clitests
54c392e osd: dump/display pool min_size
1ba4c80 qa/workunits/rbd/copy.sh: use non-deprecated --image-format option
bbb86ec mon: safety interlock for pool deletion
700bced Revert "mon: implement safety interlock for deleting pools"
6c40794 Added libexpat dependency
2a6dcab rbd-fuse: add simple RBD FUSE client
7daf372 rbd-fuse: Original code from Andreas Bluemle
aec2a47 s3/php: update to 1.5? version of API
b2a473b workunit for iogen
17cd549 mon: Monitor: timecheck: only output report to dout once
13fb172 mon: Monitor: track timecheck round state and report on health
b49440b doc: Added new, more comprehensive OSD/PG monitoring doc.
5f21050 doc: Trimmed some detail and added a x-ref to detailed osd/pg monitoring doc.
95cfdd4 doc: Added osd/pg monitoring section to the index.
d36a208 doc: Added x-ref links.
1af3578 doc: fixed description for pg in control section.
248835d doc: wider sidebar, larger font, cleaned tip CSS
037900d sharedptr_registry: remove extaneous Mutex::Locker declaration
8bd306b doc: Added Subdomain section.
8fef6fa osd/PG: include map epoch in query results
e359a86 osd: kill unused addr-based send_map()
5e2fab5 osd: share incoming maps via Connection*, not addrs
1bc419a osd: pass new maps to dead osds via existing Connection
76705ac osd: requeue osdmaps on heartbeat connections for cluster connection
a7059eb msgr: add get_loopback_connection() method
a6ed62e common: fix cli tests on usage
5f9ab93 Revert "filestore: disable extra committing queue allowance"
38871e2 os/FileStore: only adjust up op queue for btrfs
d95b431 adminops.rst: revert changes for as-yet-unimplemented features
bb860e4 rados: remove unused "check_stdio" parameter
234becd rados: obey op_size for 'get'
0c1cc68 FileStore: ping TPHandle after each operation in _do_transactions
e0511f4 OSD: use TPHandle in peering_wq
4f653d2 WorkQueue: add TPHandle to allow _process to ping the hb map
79d599c java: remove extra whitespace
6f0e113 libcephfs-java test: use provided environment
40ae8ce common: only show -d, -f options for daemons
7e7130d doc: Syntax fixes.
b51bfdf doc: Updated usage for Bobtail.
1d71d05 doc: Updated usage for Bobtail.
b0a5fe9 java: support ceph_get_file_pool_name
42d92b7 doc: Added example of ext4 user_xattr mount option.
b3a2e7e rgw_rest: Make fallback uri configurable.
352652b libcephfs: document ERANGE rv for get_file_pool_name
487bacd java: fix exception name typo
9cefa96 java: add missing chmod unmounted test
0c6d5a9 java: support fchmod
4b3bcb9 java: support stat()
00cfe1d common/HeartbeatMap: fix uninitialized variable
b9f58ba libcephfs-java test: jar files are in /usr/local/share/java, it seems
f9f31aa wireshark: fix indention
3e9cc0d wireshark: fix guint64 print format handling
67c7757 PendingReleaseNotes: pool removal cli changes
8a97eef ReplicatedPG: handle omap > max_recovery_chunk
c3dec3e ReplicatedPG: correctly handle omap key larger than max chunk
09c71f2 ReplicatedPG: start scanning omap at omap_recovered_to
62a4b96 ReplicatedPG: don't finish_recovery_op until the transaction completes
20278c4 ReplicatedPG: ack push only after transaction has completed
4d6ba06 ObjectStore: add queue_transactions with oncomplete
a972fd4 mds: fix end check in Server::handle_client_readdir()
c061e84 rados: safety interlock on 'rmpool' command
c993ac9 mon: implement safety interlock for deleting pools
132045c common/HeartbeatMap: inject unhealthy heartbeat for N seconds
657df85 os/FileStore: add stall injection into filestore op queue
a4e7865 osd: do not join cluster if not healthy
c406476 osd: hold lock while calling start_boot on startup
ad6b231 osd: do not reply to ping if internal heartbeat is not healthy
61eafff osd: reduce op thread heartbeat default 30 -> 15 seconds
0d172b9 packaging: add smalliobenchrbd
9388f94 Update src/rgw/rgw_admin.cc
db48caf osd: debug support for omap deep-scrub
509a93e osd: Add digest of omap for deep-scrub
cfb1aa8 osd: Add missing unregister_command() in OSD::shutdown()
e328fa6 test/bench: add rbd backend to smalliobench
c3266ad config: helper to identify internal fields we should be quiet about
0ee5ec7 common/Throttle: fix modeline, whitespace
89072fb test/bench: don't alias bl from above
c50f5f5 test/bench: use uint64_t for uniform distribution
451cc00 doc: Modified usage for upgrade.
73a9693 osd: improve sub_op flag points
23c02bc osd: refactor ReplicatedPG::do_sub_op
a1137eb osd: make last state for slow requests more informative
24d0d7e osd: dump op priority queue state via admin socket
33efe32 osd: simplify asok to single callback
514af15 common/PrioritizedQueue: dump state to Formatter
6e3363b common/PrioritizedQueue: add min cost, max tokens per bucket
c549a0c common/PrioritizedQueue: buckets -> tokens
128fcfc note puller's max chunk in pull requests
b685f72 osd: add OpRequest flag point when commit is sent
a1bf822 osd: set PULL subop cost to size of requested data
e8e0da1 osd: use Message::get_cost() function for queueing
bec96a2 osd: debug msg prio, cost, latency
40654d6 filestore: filestore_queue_max_ops 500 -> 50
1233e86 osd: target transaction size 300 -> 30
44dca5c filestore: disable extra committing queue allowance
cfe4b85 os/FileStore: allow filestore_queue_max_{ops,bytes} to be adjusted at runtime
101955a osd: make osd_max_backfills dynamically adjustable
9230c86 osd: make OSD a config observer
6401abf qa/workunit: Add iozone test script for sync
72147fd objectcacher: Remove commit_set, use flush_set
00b1186 testing: add workunit to run hadoop internal tests.
359d0e9 config: report on log level changes
c5e0951 config: clean up output
d7d8192 config: don't make noise about 'internal_safe_to_start_threads'
2e39dd5 mds: fix default_file_layout constructor
e461f09 mds: fix byte_range_t ctor
1716084 osd: calculate initial PG mapping from PG's osdmap
2491f97 workunits/cephtool: add tests for ceph osd pool set/get
4830895 Clarify journal size based on filestore max sync
aea898d ceph: reject negative weights at ceph osd <n> reweight
7d9d765 workunit/cephtool: Use '! cmd' when expecting failure
0cb760f OSD: do deep_scrub for repair
5e00af4 osd: set pg removal transactions based on configurable
4712e98 osd: make pg removal thread more friendly
bc99404 os: move apply_transactions() sync wrapper into ObjectStore
f6c69c3 os: add apply_transaction() variant that takes a sequencer
4bdcfbf client: Respect O_SYNC, O_DSYNC, and O_RSYNC
045af95 qa: remove xfstest 068 from qemu testing
1f911fd ceph: allow osd pool get to get everything you can set
49726dc os/FileStore: only flush inline if write is sufficiently large
8ddb55d os/FileStore: fix compile when sync_file_range is missing;
b8d5e28 doc/rados/operations/crush: need kernel v3.6 for first round of tunables
736966f java: support get pool id/replication interface
40415d1 libcephfs: add pool id/size lookup interface
76e715b doc: Added link to rotation section.
e1741ba doc: Added hyperlink to log rotation section.
612717a doc: Added section on log rotation.
8332658 doc: Modified index to include mon-osd-interaction.
d6fc92d doc: Added a section describing mon/osd interaction.
bebdc70 build:  Add perl installation dependency to rpm and debian packages.
ff7c971 doc: Added an admonishment for SSD write latency.
6f28faf mds: open mydir after replay
dd7caf5 mds: gracefully exit if newer gid replaces us by name
2e11233 mon: enforce unique name in mdsmap
ca2d9ac doc: Updated OSD configuration reference with backfill config options.
e330b7e mon: create fail_mds_gid() helper; make 'ceph mds rm ...' more generic
d81ac84 rbd: fix bench-write infinite loop
60db6e3 crushtool: warn usefully about missing output spec
e776b63 crushtool: consolidate_whitespace() should eat everything except \n
efa595f doc/rados/operations/authentication: update for cephx sig requirement options
91a573a mon: enforce 'cephx require signatures' during negotiation
50db10d msg/Pipe: require MSG_AUTH feature on server if option is enabled
4a49a09 cephx: control signaures for service vs cluster
c236a51 osdmap: make replica separate in default crush map configurable
c6f8010 mon: Monitor: drop messages from old timecheck epochs
b0162fa osdmaptool: more fix cli test
5bd8765 osdmaptool: fix cli test
98a7631 osd: leave osd_lock locked in shutdown()
faa62fa radosgw: increate nofile ulimit in upstart
19ee231 ceph: adjust crush tunables via 'ceph osd crush tunables <profile>'
85eb8e3 osdmaptool: allow user to specify pool for test-map-object
37dbf7d rgw: copy object should not copy source acls
70c3512 ReplicatedPG: ignore snap link info in scrub if nlinks==0
381e258 osd/PG: fix osd id in error message on snap collection errors
665577a osd/ReplicatedPG: validate ino when scrubbing snap collections
e65ea70 ReplicatedPG: compare nlinks to snapcolls
5735235 ReplicatedPG/PG: check snap collections during _scan_list
b856874 osd_types: add nlink and snapcolls fields to ScrubMap::object
39bc654 PG: move auth replica selection to helper in scrub
9e44fca ReplicatedPG: correctly handle new snap collections on replica
88956e3 ReplicatedPG: make_snap_collection when moving snap link in snap_trimmer
625c3cb rados.cc: fix rmomapkey usage: val not needed
3f0ad49 librados.hpp: fix omap_get_vals and omap_get_keys comments
cb5e2be rados.cc: use omap_get_vals_by_keys in getomapval
44c45e5 rados.cc: fix listomapvals usage: key,val are not needed
fb4bb5d osd: better error message for request on pool that dne
9a1f574 osd: drop newlines from event descriptions
0efb9c5 test: add cram integration test for formatted output
f6dabc8 rbd: always output result for formatted output
d7cdcc0 rbd: regenerate man page and cli test
4e5a07b XMLFormatter: fix pretty printing
8fea6de rbd: add --pretty-format option
6934ac3 rbd: move Formatter construction to main
98487b5 rbd: fix long lines
84c5d85 rbd: support plain/json/xml output formatting
8e33a8b mon: note scrub errors in health summary
a586966 osd: fix rescrub after repair
c1a86ab configure.ac: fix problem with --enable-cephfs-java
1d50aff mds: fix usage typo for ceph-mds
2dc2b48 mds: use #defines for bits per cap
d56af79 osd: note must_scrub* flags in PG operator<<
2baf125 osd: based INCONSISTENT pg state on persistent scrub errors
26a63df osd: fix scrub scheduling for 0.0
389bed5 osd: note last_clean_scrub_stamp, last_scrub_errors
2475066 osd: add num_scrub_errors to object_stat_t
d738328 osd: add last_clean_scrub_stamp to pg_stat_t, pg_history_t
6f6a419 osd: fix object_stat_sum_t dump signedness
2995480 osd: change scrub min/max thresholds
16d67c7 osd/PG: remove useless osd_scrub_min_interval check
a148120 osd: move scrub schedule random backoff to seperate helper
62ee6e0 osd/PG: trigger scrub via scrub schedule, must_ flags
1441095 osd/PG: introduce flags to indicate explicitly requested scrubs
796907e osd/PG: move scrub schedule registration into a helper
be0c4b3 ac_prog_javah.m4:  Use AC_CANONICAL_TARGET instead of AC_CANONICAL_SYSTEM.
13cb196 java: add fine grained synchronization
85c1035 java: remove all intrinsic locks
2b9da45 java: remove unnecessary synchronization
fb8a488 java: remove create/release synchronization
017b6d6 Revert "osdmap: spread replicas across hosts with default crush map"
410906e mon: OSDMonitor: don't output to stdout in plain text if json is specified
7ea5d84 osdmap: spread replicas across hosts with default crush map
3610e72 mon: OSDMonitor: only share osdmap with up OSDs
1f72180 rbd: Fix tabs
3413899 doc: Updates to CRUSH paper.
e94b06a rbd: make 'add' modprobe rbd so it has a chance of success
15bb00c rbd: call udevadm settle on map/unmap
66eb93b OSD: only trim up to the oldest map still in use by a pg
8cf79f2 OSD: check for empty command in do_command
0f161f1 Correct typo in mon docs 'ceph.com' to 'ceph.conf'
aeb0206 qa/run_xfstests.sh: use cloned xfstests repository
8d0fa15 mon: Monitor: only schedule a timecheck after election if we are not alone
58e03ec mon: Monitor: unify 'ceph health' and 'ceph status'; add json output
bc57c7a mon: Monitor: use 'else if' on handle_command instead of bunches of 'if'
7a7fff5 mon: Monitor: move a couple of if's together on handle_command()
ff1c254 mon: Monitor: reduce indentation level; make code more readable
684d4ba mon: Monitor: add timecheck infrastructure to detect clock skews
aa40de9 messages: add MTimeCheck
e6f284e doc: Added -a option. Should work without from server, as described.
de6633f doc: Normalized to term "drive" rather than disk. Changed "(Manual)" entry on remove OSD.
988f359 rados: add truncate support
44625d4 config_opts.h: default osd_recovery_delay_start to 0
0f42c37 ReplicatedPG: fix snapdir trimming
035caac Revert "rgw: fix handler leak in handle_request"
797b3db Added python wrapper to rados_cluster_stat
59aad34 configure.ac: check for org.junit.rules.ExternalResource
61437ee configure.ac: change junit4 handling
aedbb97 configure.ac: remove AC_PROG_RANLIB
d8c4fc5 ceph.spec.in: fix libcephfs-jni package name
f027d02 ceph.spec.in: rename libcephfs-java package to cephfs-java
9b167b4 ceph.spec.in: fix handling of java files
12af11a src/java/Makefile.am: fix default java dir
00898c1 rbd: allow copy of zero-length images.  Includes simple test.
1c3d684 doc/install/debian.rst: fix typo in link ref; broke doc build
48f1394 ReplicatedPG: increment scrubber.errors rather than errors
62e721a librados: add aio stat tests
879578c librados: implement aio_stat
5b12b51 osd: make missing head non-fatal during scrub
e1da85f rgw: Fix crash when FastCGI frontend doesn't set SCRIPT_URI
eba314a rgw: fix handler leak in handle_request
4483285 librbd: Allow get_lock_info to fail
77ddf27 doc/release-notes: v0.48.3argonaut
f07921b doc/install: new URLs for argonaut vs bobtail
72674ad doc/release-notes: v0.56.1
26e8438 test: enforce -ENOTCONN contract in libcephfs
5c58aa9 libcephfs: return -ENOTCONN when call unmounted
f83fcf6 PG: set DEGRADED in Active AdvMap handler based on pool size
c412109 libcephfs: clarify interface return value
d16ad92 msg/Pipe: prepare Message data for wire under pipe_lock
40706af msgr: update Message envelope in encode, not write_message
6258688 osdc/Objecter: fix linger_ops iterator invalidation on pool deletion
4c9f4c3 ceph-fuse: rename ceph_ll_* to fuse_ll_*
4cfc490 msg/Pipe: encode message inside pipe_lock
a058f16 msg/Pipe: associate sending msgs to con inside lock
2a1eb46 msg/Pipe: fix msg leak in requeue_sent()
ce49968 os/FileJournal: include limits.h
e9efa33 java: add stripe unit granularity tests
ececcf5 java: update javadoc comments
cdd138d java: fix whitespace
6954bf3 java: add support for get_stripe_unit_granularity
abcda95 libcephfs: expose stripe unit granularity
988a521 osd: special case CALL op to not have RD bit effects
d3abd0f Revert "OSD: remove RD flag from CALL ops"
3a94087 libcephfs: delete client after messenger shutdown
0978dc4 rbd: Don't call ProgressContext's finish() if there's an error.
e89b6ad ReplicatedPG: remove old-head optization from push_to_replica
acfa0c9 mds: optimize C_MDC_RetryOpenRemoteIno
acbe6d9 mds: don't issue caps while inode is exporting caps
ca4dc4d mds: check if stray dentry is needed
3705c7c mds: drop locks when opening remote dentry
ea2fd12 mds: check null context in CDir::fetch()
420f335 mds: rdlock prepended dest trace when handling rename
248e4ab mds: fix cap mask for ifile lock
f9280cb mds: fix replica state for LOCK_MIX_LOCK
5995325 mds: keep dentry lock in sync state as much as possible
b03eab2 mds: forbid creating file in deleted directory
d379ac8 mds: disable concurrent remote locking
28d59d3 os/FileStore: fix non-btrfs op_seq commit order
f1e0305 doc: Removed the --without-tcmalloc flag until further advised.
88af7d1 doc: Added defaults for PGs, links to recommended settings, and updated note on splitting.
4ae4dce OSD: for old osds, dispatch peering messages immediately
73bc8ff doc: Added comments on --without-tcmalloc option when building Ceph.
37b57cd Update doc/rados/configuration/filesystem-recommendations.rst
43ef677 doc: Added some packages to the copyable line.
333ae82 doc: Fixed syntax error.
224a33b     qa/workunit:  Add dbench-short.sh for nfs suite
a32d6c5 osd: move common active vs booting code into consume_map
0bfad8e osd: let pgs process map advances before booting
5fc94e8 osd: drop oldest_last_clean from activate_map
67f7ee6 osd: drop unused variables from activate_map
a14a36e OSDMap: fix modifed -> modified typo
43cba61 log: fix locking typo/stupid for dump_recent()
64d2760 doc: Added a memory profiling section. Ported from the wiki.
5066abf doc: Added memory profiling to the index.
0e9a0cd qa/workunit:  Update pjd script to use new tarball
d8940d1 fuse: Fix cleanup code path on init failure
c4370ff librbd: establish watch before reading header
483c6f7 test_filejournal: optionally specify journal filename as an argument
c461e7f test_filejournal: test journaling bl with >IOV_MAX segments
dda7b65 os/FileJournal: limit size of aio submission
e0858fa Revert "librbd: ensure header is up to date after initial read"
8229770 doc: Minor edits.
d3b9803 doc: Fixed typo, clarified usage.
8422474 mds: fix rename inode exportor check
5e8642a mds: call maybe_eval_stray after removing a replica dentry
f5ea5c3 mds: don't defer processing caps if inode is auth pinned
fe5936b mds: remove unnecessary is_xlocked check
b2d5005 mds: fix lock state transition check
b3796f4 mds: indroduce DROPLOCKS slave request
7e04504 mds: fix on-going two phrase commits tracking
2f96b47 mds: fix anchor table commit race
a79493d mds: skip frozen inode when assimilating dirty inodes' rstat
61da9b1 mds: mark rename inode as ambiguous auth on all involved MDS
3b13d3d mds: only export directory fragments in stray to their auth MDS
d9d7147 mds: don't trim ambiguous imports in MDCache::trim_non_auth_subtree
fcb9f98 mds: use null dentry to find old parent of renamed directory
7a52016 mds: don't journal null dentry for overwrited remote linkage
5ae715b mds: xlock stray dentry when handling rename or unlink
2627957 mds: don't trigger assertion when discover races with rename
e10267b mds: fix Locker::simple_eval()
7e23321 mds: don't renew revoking lease
1a32f0a (tag: v0.56) v0.56
49ebe1e client: fix _create created ino condition
a10054b libcephfs: choose more unique nonce
e2fef38 client: fix _create
82cec48 doc: add-or-rm-mons.rst: Add 'Changing Monitor's IPs' section
379f079 doc: add-or-rm-mons.rst: Clarify what the monitor name/id is.
8bbb4a3 doc: fix rbd permissions for unprotect
d0a14d1 librbd: fix race between unprotect and clone
958addc rbd: open (source) image as read-only
47bf519 librbd: open parent as read-only during clone
c67c789 librbd: add {rbd_}open_read_only()
91e941a OSD: remove RD flag from CALL ops
85e9d4f cls_rbd: get_children does not need write permission
4aa6af7 doc/release-notes: link to upgrade doc
7b0dbeb doc/install/upgrading: edits to upgrade document
6711a4c Revert "mds: replace closed sessions on connect"
82f8bcd msg/Pipe: use state_closed atomic_t for _lookup_pipe
a5d692a msgr: inject delays at inconvenient times
e99b4a3 msgr: fix race on Pipe removal from hash
6339c5d msgr: don't queue message on closed pipe
7bf0b08 msgr: atomically queue first message with connect_rank
c2a7525 test: mon: workloadgen: debug when message fsid != monmap fsid
b30ab51 test: mon: workloadgen: assert if monmap's fsid is zero after authenticate
3583684 doc: update Hadoop documentation
942c714 init-ceph: ok, 8K files
0a5d6d8 msg/Pipe: remove broken cephs signing requirement check
65b787e msg/Pipe: include remote socket addr in debug output
9e5e08f doc: Added a new upgrade document.
1553267 doc: Minor edit.
02b8bcd doc: Added upgrade link to index.
076b418 os/FileJournal: logger is optional
3debf0c client: fix fh leak in non-create case
67bc849 mds: Return created inode in mds reply to create
7f35e5d client: Make ll_create use _create
813787a log: broadcast cond signals
ca34fc4 osd: allow RecoveryDone self-transition in RepNotRecovering
1867b81 docs:  fix typo in release-process doc
3a8bf3a doc/release-notes: document new 'max open files' default
ea13ecc osd: less noise about inefficient tmap updates
672c56b init-ceph: default to 16K max_open_files
948e752 ceph-fuse: Avoid doing handle cleanup in dtor
ff2d4ab ceph-fuse:  Pass client handle as userdata
9967cf2 release-notes: rgw logging now off by default
1c3e12a doc: warn about using caching without QEMU knowing
f6ce5dd rgw: disable ops and usage logging by default
64b845f features is uint64_t
856f32a ceph-fuse:  Split main into init/main/finalize
c0fe381 java: remove deprecated libcephfs
6c7b667 init-ceph: fix status version check across machines
774a54c docs:  update release process documentation.
6356739 osd: fix recovery assert for pg repair case
f230603 osd: only calculate OpRequest rmw flags once
f1dfd64 messages/MOSDOpReply: remove misleading may_read/may_write
03f6dfa osd: move rmw_flags to OpRequest, out of MOSDOp
998f719 dropping xfs test 186 due to bug: 3685
98e7b59 docs:  remove extra release-process2 file.
82c7171 osd: drop 'osd recovery max active' back to previous default (5)
6f1f03c journal: reduce journal max queue size
0d2ad2f mds: use set to store MDSMap data pools
2137d5c mds: wait for client's mdsmap when specifying data pool
9da6d88 doc: document mds config options
916d1cf doc: journaler config options
cedea13 docs:  Merge changes from release-process2 document.
850a056 mds: add waiting_for_mdsmap queue
c764935 mds: do not check for pool existence in osdmap
4929fc7 qa: remove xfstests 172 and 173 from qemu testing
f5403f9 doc/man/8/mkcephfs: update --mkfs a bit
8b59908 mds: replace closed sessions on connect
d18f3c2 mds: don't force in->first == dn->first
a1485f9 mds: compare sessionmap version before replaying imported sessions
0002546 mds: fix race between send_dentry_link() and cache expire
efbca31 mds: fix file existing check in Server::handle_client_openc()
f5e86ec mds: delay processing cache expire when state >= EXPORT_EXPORTING
1174dd3 mds: don't retry readdir request after issuing caps
dd44157 mds: take export lock set before sending MExportDirDiscover
96f48aa mds: re-issue caps after importing caps
a3e70ae mds: always send discover if want_xlocked is true
69f9f02 mds: fix error hanlding in MDCache::handle_discover_reply()
e6b8f0a mds: set want_base_dir to false for MDCache::discover_ino()
b7e698a mds: no bloom filter for replica dir
0ab0744 mds: properly mark dirfrag dirty
48d8ae5 mds: alllow handle_client_readdir() fetching freezing dir.
8efcf54 mds: *_pg_pool -> *_pool
d2f5890 client, libcephfs: add method to get the pool name for an open file
32ab274 client: specify data pool on create operations
3f45821 mds: verify that the pool id is valid on SET[DIR]LAYOUT
99d9e1d mds: allow data pool to be specfied on create
697ed23 client: remove set_default_*() methods
850d1d5 osd: fix dup failure cancellations
61d43af osd: make MOSDFailure output more sensible
9df522e mon: make osd failure report log msgs sensible
8362e64 monclient: fix get_monmap_privately retry interval
d843a64 Makefile: fix 'base' rule
a09f5b1 init-ceph,mkcephfs: default inode64 for mounting xfs
5f25f9f init-ceph: default osd_data path
f6b2ca8 OSD: always do a deep scrub when repairing
ad9bcc7 PG: don't use a self-transition for WaitRemoteRecoveryReserved
2e96bb1 PG: Handle repair once in scrub_finish
6325a48 import_export.sh: sparse import export
5905d7f rbd: harder-working sparse import from stdin
410903f rbd: check for all-zero buf in export, seek output if so
4a55804 librbd: move buf_is_zero() to new common/util.cc and include/util.h
8f5de15 osd: fix pg stat msgs vs timeout
2bf4f42 doc: Added new journaler page to CephFS section. Needs descriptions.
53afac1 doc: Added Journaler Configuration to toc tree.
757902d doc: Added --mkfs options.
46d0334 doc: Added running multiple clusters. Per Tommi.
e3d0756 doc: Updated the Configuration File section.
00ed665 PG::scrub_compare_maps increment scrubber.fixed for missing repairs
c9e0517 PG::_compare_scrubmaps: increment scrubber.errors on missing object
4a03939 release-notes: add more user-visible changes
b39928d release-notes: remove bug fix that does not affect argonaut
048567e release-notes: fix typos
3076e45 release-notes: pgnum is required now
b564fdb release-notes: remove warning about osd caps
09d4f03 doc: Added sudo the ceph health for when cephx is on.
085992f doc: minor fix to syntax.
206ffcd mkcephfs: error out if 'devs' defined but 'osd fs type' not defined
4a40067 doc: update ceph.conf examples about btrfs default
999ba1b monc: only warn about missing keyring if we fail to authenticate
5d5a42b osd: clear CLEAN on exit from Clean state
b3e62ad auth: use none auth if keyring not found
4d661e0 PG::sched_scrub: only set PG_STATE_DEEP_SCRUB once reserved
7c56d8f PG::sched_scrub: return true if scrub newly kicked off
ae044e6 osd: allow transition from Clean -> WaitLocalRecoveryReserved for repair
670afc6 PG: in sched_scrub() set PG_STATE_DEEP_SCRUB not scrubber.deep
19e44bf osd: clear scrub state if queued scrub doesn't start
feb0aad doc: Moved path to individual OSD entires.
e765dcb osd: only dec_scrubs_active if we were active
ada3e27 osd: reintroduce inc_scrubs_active helper
129a49a cephtool: mention ceph osd ls, fix ceph osd tell N bench
a36d1db rgw: remove noisy log message
5b5a19a rgw: fix daemonize initialization
754fc20 release notes: Mention new cephtool commands
50914e7 log: fix flush/signal race
c0e2371 ReplicatedPG::remove_notify : don't leak the notify object
b5031a2 OSD,ReplicatedPG: do not track notifies on the session
719679e doc: Added package and repo links for Apache and FastCGI. Added SSL enable too.
04eb1e7 doc: Fixed restructuredText usage.
ea9fc87 doc: Removed foo. Apparently myimage was added and foo not removed.
a803159 rgw: configurable exit timeout
92b59e9 rgw: don't try to assign content type if not found
08c6424 rgw: don't initialize keystone if not set up
799c59a rgw: remove useless configurable, fix swift auth error handling
5497d22 doc: Modified the demo configuration file for Bobtail.
40fdd77 doc: Added Gateway Quick Start.
5281ee2 doc: Added Gateway Quick Start configuration file.
84fb371 Updated Getting Started index to include Gateway Quick Start.
5e95510 doc: Added REST Gateway link to 5-minute Quick Start.
c2b231e doc: Updated the 5-minute Quick Start for Bobtail.
f596cee doc: Updated Block Device Quick Start for Bobtail.
60b2857 doc: Updated CephFS Quick Start for Bobtail.
d17bd38 doc: Added authentication and mkcephfs settings for Bobtail.
cd5c82d doc: Added javascript code block tag.
6122a9f OSDMonitor: remove temp pg mappings with no up pgs
2395af9 OSDMap: make apply_incremental take a const argument
2e49d5c cephtool: add qa workunit
d9c2396 ceph.spec.in:  Improve finding location of jni.h for sles11.
b2eb8bd osd: implement 'version' tell command
4634410 ceph.spec.in:  Add packages for libcephfs-jni and libcephfs-java
85763f0 ceph: report error string to stderr, not stdout
5f24e23 ceph: fix error reporting when tell target is invalid or down
b00eb6f mon: 'ceph osd ls'
212f6b5 OSDMap::dump: tag pg_temp mappings with pgid
04e7a5c rgw: configurable exit timeout
6c7ec2d crushtool: nicer error message on extra args
dbe6fb7 crushtool: only dump usage on -h|--help
fd482a2 ceph.spec.in:  Update pre-reqs for ceph-fuse pacakge.
1b67a43 Revert "objecter: don't use new tid when retrying notifies"
bdc998e mon: OSDMonitor: add option 'mon_max_pool_pg_num' and limit 'pg_num' accordingly
21c47c6 osd: debug EMSGSIZE / OSD_WRITETOOBIG
f81ca89 doc/release-notes: don't use format 2 rbd images until after osds upgrade
3c24622 crushtool: add --set-chooseleaf-descend-once to help
874b273 doc/release-notes: 'mon max pool pg num'
e8b8531 doc: fix typo in config file
e9231fe Makefiles:  Two new packages needed in the debian build depdencies.
bc9d9d8 Refactor rule file to separate arch/indep builds.
4bf9078 osdc/Objecter: prevent pool dne check from invalidating scan_requests iterator
6f978aa doc: draft bobtail release notes
5061481 doc: correct meaning of 'pool' in crush
1ec70aa qa: add a workunit for fsync-tester
286dcbe test: remove underscores from cephfs test names
a7de975 lockdep:  Decrease lockdep backtrace skip by 1
641b077 mkcephfs: fix == -> =
bf01b7b map-unmap.sh: use udevadm settle for synchronization
02aca68 ceph-disk-activate: mark dir as upstart-managed
96f40b1 upstart: make starter jobs consistent
e597482 upstart: only start when 'upstart' file exists in daemon dir
6ab7db6 ReplicatedPG: use default priority for Backfill messages
7e13356 ReplicatedPG: do not use priority from client op
8d73f3e Fix comment in sample.ceph.conf
9f05102 crush-map.rst: add info about multiple crush heirarchies
f16e571 client: Add config option to inject sleep for tick
8cf367c rbd.py: check for new librbd methods before use
c9894ff osd: up != acting okay on mkpg
e3ed28e mon: OSDMonitor: don't allow creation of pools with > 65535 pgs
8103414 rbd: handle images disappearing while in ls -l
2452391 rgw_op: enforce minimum part size in multi-part uploads
aa2214c mds: document EXCL -> (MIX or SYNC) transition decision
97cc55d OSD: put connection in disconnect_session_watches as well as the session
f2c083e OSD: disconnect_session_watches obc might not be valid after we relock
c17d628 clarify/correct some of sample.ceph.conf
e6dd068 qa: echo commands run by rbd map-unmap workunit
975003b auth: guard decode_decrypt with try block
448db47 mount.fuse.ceph: strip out noauto option
ae100cf mount.fuse.ceph: add ceph-fuse mount helper
ac92e4d /etc/init.d/ceph: fs_type assignment syntax error
4605fdd filestore: Don't keep checking for syncfs if found
8e25c8d (tag: v0.55.1) v0.55.1
dba0960 OSD: pg might be removed during disconnect_session_watches
047aecd PG,ReplicatedPG: handle_watch_timeout must not write during scrub/degraded
0dfe6c8 ReplicatedPG:, remove_notify, put session after con
695bb3b ReplicatedPG: only put if we cancel evt in unregister_unconnected_watcher
fdf66b6 ReplicatedPG: watchers must grab Connection ref as well
5f55b38 doc: Updated per comments in the mailing list.
9d71456 docs: better documentation of new rgw feature
3a95d97 rgw: configurable list of object attributes
8708724 rgw: option to provide alternative s3 put obj success code
bece012 doc: document swift compatibility
88229a4 docs: add rgw POST object as supported feature
64cefe2 PG,ReplicatedPG: move write_blocked_by_scrub logic into a helper
54618af docs: fix spacing in radosgw config-ref
8e6a535 qa: exclude some more xfstests
caea0cb os/JournalingObjectStore: un-break op quiescing during journal replay
6a8a58d doc: document swift compatibility
cf28e78 docs: add rgw POST object as supported feature
3950182 st_rados_watch: tolerate extra notifies
29307d3 mds: shutdown cleanly if can't authenticate
c310700 objecter: don't use new tid when retrying notifies
9a40ef0 mds: fix journaling issue regarding rstat accounting
b9d717c fix build of unittest_formatter
be37276 include/atomic.h: add stdlib.h for size_t
1699b7d OSD: get_or_create_pg doesn't need an op passed in
6a4fa89 LFNIndex: fix move_subdir comments
fdcdca7 HashIndex: fix typo in reset_attr documentation
7eac968 HashIndex: init exists in col_split_level and reset_attr
12673c2 PrioritizedQueue: increment ret when removing items from list
80cca21 PrioritizedQueue: move if check out of loop in filter_list_pairs
a50c7d3 config: do not always print config file missing errors
6fb9a55 config: always complain about config parse errors
2e7cba7 doc: fixed indent in python example.
788992b config_opts.h: adjust recovery defaults
f4be3c8 doc: Added sudo to ceph -k command.
3709519 doc: Fixed typo.
47c81a3 Makefile.am: add missing flags to some tests targets
333b3f4 mon: fix leak of pool op reply data
f66fe77 os/JournalingObjectStore: simplify op_submitting sanity check
a88b584 os/JournalingObjectStore: remove unused ops_submitting
ad4158d os/JourningObjectStore: drop now-useless max_applying_seq
d9dce4e filestore: simplify op quescing
d4c6a22 rgw: document admin api web interface.
25ea069 osd: make pool_stat_t encoding backward compatible with v0.41 and older
e227c70 crush/CrushWrapper: do not crash if you move an item with no current home
1acb691 mon: Elector: init elector before each election
f302983 init-ceph: =, not ==
8816b39 debian: add ceph.postinst to remove /etc/init/ceph.conf on update
fc58299 PG: remove last_epoch_started asserts in proc_primary_info
81fdea1 auth: set default auth_client_required
a3908a6 auth: changed order of test for legacy and new authentication
907da18 auth: improve logging
8355733 rbd: use ExportContext for progress, not cerr
e0761fb doc: Added sudo to the service start command.
778bad1 doc: Moved sudo to before ssh instead of before tee.
413b5d0 doc: inverted the steps per doc feedback.
07b3699 mds: move from EXCL to SYNC if nobody wants to write
636048d mds/locker:  Add debugging for excl->mix trans
fa5a46c test/libcephfs: Add a test for validating caps
10bf150 client: Add routine to get caps of file/fd
efc6614 librbd: change internal order parameter to pass-by-value
57d5c69 librbd: clean up after errors in create
c1bf229 librbd: bump version for new functions
bc6f726 mon: PGMonitor: erase entries from 'creating_pgs_by_osd' when set is empty
f81d720 doc/install/os-recommendations: fix syncfs notes
4d43c86 doc: fix bobtail version in os-recommendations
e1c27fe mon: Monitor: rework 'paxos' to a list instead of a vector
27071f3 OSD: store current pg epoch in info and load at that epoch
9f169ac OSD: account for split in project_pg_history
15d8993 PG: update info.last_update_started in split_into
338f368 OSDMonitor: require --allow-experimental-feature to increase pg_num
fb73850 PG: set child up/acting in split_into
3f412e8 OSD: do _remove_pg in add_newly_split_pg is pool if gone
19e6861 osd/: dirty info and log on child during split
9835e19 osd/: mark info.stats as invalid after split, fix in scrub
5f8a363 PG: split ops for child objects into child
9981bee OSD: add initial split support
58890cf librados: watch() should set the WRITE flag on the op
f2914af HashIndex: fix list_by_hash handling of next->is_max()
0c01094 rbd: remove block-by-block messages when exporting
ef24f53 doc: Change per doc request.
ca1a4db release: add note about 'ceph osd create' syntax
214c7a1 client: Allow cap release timeout to be configured
0a137d7 mkcephfs: fix fs_type assignment typo
4c31598 upstart: fix radosgw upstart job
47266cd upstart: rename ceph -> ceph-all
b7b7242 rbd: update manpage for import/export
e9653f2 librbd: hold AioCompletion lock while modifying global state
b2ccf11 librbd: handle parent change while async I/Os are in flight
64ecc87 Striper: use local variable inside if() that tested it
a55700c librbd: hold AioCompletion lock while modifying global state
41e16a3 librbd: handle parent change while async I/Os are in flight
917a6f2 Striper: use local variable inside if() that tested it
2a5549c qa: add script for running xfstests in a vm
2779325 rgw: fix rgw_tools get_obj()
cb19e99 doc: ceph osd create takes a uuid, not an osd id
993ff14 PG: add split_into to populate child members
6e67a27 osd/: splitting a pg now triggers a new interval
36c0fd2 PrioritizedQueue: allow caller to get items removed by removed_by_filter
b6c49b4 mon/OSDMonitor: enable split in Monitor
b8a37fd PGMonitor,OSD: don't send creates on split
f4f6bd7 OSD: dispatch_context only discard transaction if contexts empty
fec47ca OSD: don't wait for superblock writes in handle_osd_map
fdc5e5d os/: Add CollectionIndex::prep_delete
a48dee5 os/: Add failure CollectionIndex failure injection
bd46386 test/store_test: add simple tests for collection_split
f2a2391 os/: add filestore collection_split
a83d13a OSD: ignore queries on now deleted pools
3986564 Dropping xfs tests 179 and 183 as they are causing nightly failures
727c37a mds: journal remote inode's projected parent
3f69f72 mds: don't create bloom filter for incomplete dir
3cf2197 doc: write descriptions for the remaining msgr options
724d5aa doc: added some descriptions in ms-ref and filestore-config-ref
0756052 PG: remove last_epoch_started asserts in proc_primary_info
b76f12d doc: Edited striping section. Modified stripe graphic to pretty print. Also modified replication graphic to pretty print.
2ba9c87 mds: journal remote inode's projected parent
8cd8f25 mds: don't create bloom filter for incomplete dir
3ace9a7 logrotate: do not spam stdout
a74a4ac doc: Added a striping section for Architecture.
690f817 (tag: v0.55) v0.55
234cc08 ceph.spec.in:  Add SLES and remove Fedora from debug package list.
2604557 test_rados_api_misc: fix dup rmmkey test
f2c7a60 doc: Fixed many hyperlinks, a few typos, and some minor clarifications.
a7a3cbf doc: Clarified example for root user.
5bea57b config: we still want osd_thread_recovery_timeout
e686cb1 config: Remove unused options
6b105ae client: Fix ceph_mount() when subdir is specified
f57a798 osd: EINVAL on unknown TMAP op code
4870b43 mds: use TMAP_RMSLOPPY op when removing dentries
272e89d osd: add TMAP_RMSLOPPY op
9961640 osd: ENOENT on TMAP_RM on non-existent key
85574a3 os/JournalingObjectStore: applied_seq -> max_applied_seq
5281084 os/FileStore: only wait for applying ops to complete before commit
c10958e osd: fix RepModify when past last_peering_reset
880a185 OutputDataSocket: fix uninit var
3a064dc rgw: fix uninit var
648c7f0 test/osdc/FakeWriteback: fix uninit var
0dac9e6 osd: fix missing unlock; simplify
0fa4875 mds: fix freeze inode deadlock
2a50689 mds: use rdlock_try() when checking NULL dentry
1203cd2 mds: allow open_remote_ino() to open xlocked dentry
587aec1 mds: fix assertion in handle_cache_expire
961bc0c mds: fix open_remote_inode race
3fa2582 mds: consider revoking caps in imported caps as issued
4cd8ea9 mds: drop locks if requiring auth pinning new objects.
9bfe540 mds: don't forward client request from MDS
8f67489 mds: call eval() after caps are exported
ff170ec mds: clear lock flushed if replica is waiting for AC_LOCKFLUSHED
946b263 mds: Don't acquire replica object's versionlock
5620f3d mds: allow try_eval to eval unstable locks in freezing object
8dcc6c3 msg/Pipe: flush delayed messages when stealing/failing pipes
7794de6 rbd: report striping as a feature in rbd info
dccf6ee ceph-osd: put g_ceph_context before exit
49f32ce ReplicatedPG: only increment active_scrub on primary for final push
a928b6d OSDService: make messengers private
47699f3 osd/: make OSDService messenger helpers return ConnectionRef
494711e mon: PaxosService: cancel proposal timer after election
9cd730b doc: update kernel recs
dc93132 logrotate: fix rotation
909b92e mds: assert segements not emtpy in get_current_segment()
f0c2920 mds: be explicit about MDRequest killed state
41ef9bb mds: drop redundant mdr->committing = true
44bc687 mds: fix request_kill()
0ffafb3 Revert "osd: fix leak of heartbeat con on reset"
abd9e36 client: only dump cache on umount if we time out
6d65fa4 msg/Pipe: release dispatch throttle on delayed queue discard
158260b msg/Pipe: start delay thread *after* we know peer type
f0bf616 msg/Pipe: drop queue helpers
f454bb5 msg/Pipe: refactor msgr delays
b97aaca msgr: add a delay_until queue that is used to delay deliveries.
01059e9 msgr: clear out the delay queue when stop()ing
0e92f89 msgr: move the delay queue initialization into start_reader
90f6698 messenger: add the shell of a system to delay incoming Message delivery
bea3ecf rgw: treat lack of swift token as anonymous user access
6a69083 radosgw-admin: close storage before exit
774d5bf osd: move next_osdmap under separate lock
b31a99a osd: fix leak of heartbeat con on reset
3ceaec4 osd: use safe con helpers for scrub
f865f26 osd: use safe con helpers from do_{infos,queries,notifies}
30832f5 osd: make _share_map_outgoing() use a Connection
7d27e2e client:  Fix for #3490 and config option to test
f9056f5 test/libcephfs:  Test reading an empty file
5c8cbd2 PG: scrubber.end should be exactly a boundary
206f39e ReplicatedPG: remove from snap_collections even without objects to trim
8218d8a OSD: get_or_create_pg return null if pool is gone
f4f93f8 OSD: history.last_epoch_started should start at 0
e2c4e2f PG: maintain osd local last_epoch_started for find_best_info
82517f1 hobject_t: make max private
0b55fbd Script to install and configure radosgw.
079dd19 mon: Monitor: don't allow '+' or '-' prefixed values on parse_pos_long()
c6cc476 mon: OSDMonitor: return -EINVAL on not-a-uuid during 'osd create'
a87361e osd: fix Connection leaks
e18f9ee osd: add Connection-base send_map(), send_incremental_map()
5bc10ec osd: use OSDService send_message helper from PG context
bd03234 osd: simplify active_committed
e165330 osd: use safe OSDService msgr helpers for heartbeats
ea65dff osd: helpers to blacklist messages to down osds
4c3d5dc test_cls_rgw.c:  Call to cls_rgw_bucket_complete_op() needs new parameter.
24d61fa mon: add WARN_UNUSED_RESULT to the MonitorStore functions that return error codes
c762f91 mon: remove the silly write_bl_ss write_bl_ss_impl distinction
399f269 mon: convert store users with unchecked return codes to just assert on issues
ab312f8 mon: update Paxos::read()'s successful read check
3fe7c6c mon: add new get_bl_[sn|ss]_safe functions
60f60ff mon: In MonitorStore, wrap all uses of ::close and assert success
dd3a24a create qa/workunits/rbd/map-unmap.sh
5d6da25 rgw: bucket check --check-objects
e5dc46f rgw: check_disk_state() removes multipart parts from index
78286b1 log: 10,000 recent log entries
4de7748 log: fix log_max_recent config
39b93f5 mon: check all uses of fsync in the MonitorStore for errors
88a3e7d Makefile: fix libcephfs for gcov and cleanups
80c506d rbd: fix import from stdin, add test
fcebe04 rbd: allow export to stdout, add tests
a176800 mon: fix compiler warning
653f134 os/DBObjectMap.h: remove twice included <string>
e7f8e56 mds/journal.cc: remove twice included common/config.h
1f3e5ad mon/Monitor.cc: remove twice included osd/OSDMap.h
ec2f261 messages/MClientRequest.h: remove twice included sys/types.h
34f6d29 mount/canonicalize.c: remove twice included string.h
54da979 common/pipe.c: remove twice included unistd.h
1341e6d crushtool.cc: remove twice included sys/stat.h
0718c15 rgw/rgw_rest.cc: remove twice included rgw_formats.h
947b33a os/DBObjectMap.cc: remove twice included headers
a0d978f remove twice included linux/types.h
238f932 rados.cc: remove twice included headers
428d974 osdmaptool.cc: remove twice included sys/stat.h
93ff160 os/IndexManager.cc: remove twice included FlatIndex.h
aee71e1 osd/OSD.h: remove twice included OpRequest.h
03a4c8c tools/common.cc: remove twice included headers
82c1f48 mds/Resetter.h: remove twice included msg/Messenger.h
428f300 mds/Migrator.cc: remove twice included Migrator.h
abc8cb6 mds/Dumper.h: remove twice included msg/Messenger.h
e1431b8 librados/RadosClient.cc: remove twice included sys/stat.h
1ca3d75 include/buffer.h: remove twice included stdio.h
9ac063a monmaptool.cc: remove twice included sys/stat.h
8a19b89 client/SyntheticClient.cc: remove twice included headers
f814afa fusetrace_ll.cc: remove twice included sys/time.h
3fa561e ceph_syn.cc: remove twice included sys/stat.h
8a6278e ceph_osd.cc: remove twice included sys/stat.h
5fb2185 client/MetaRequest.cc: remove twice included client/Dentry.h
f8ef4a8 client/Client.cc: remove twice included headers
c753f58 ceph_mds.cc: remove twice included sys/stat.h
1c0c055 ceph_fuse.cc: remove twice included sys/stat.h
f65307a ceph_mon.cc: remove twice included sys/stat.h
43ef8c1 mon: do not crash on invalid 'mon tell N ...' target
c99d9c3 rbd: fix import from stdin, add test
a738f44 rbd: allow export to stdout, add tests
cf2a045 config: make $pid a metavariable
aa37fe7 test_rados_api_misc: fix TMAPPUT sorting test
8850b3c ceph.spec.in:  Fix typo.
a1e0868 README: add the libboost-thread-dev dep to the list
054f761 ceph.spec.in:	Add new test programs to package.
dbb3fb1 Makefile:  Add test/osdc/FakeWriteback.h to noship-headers.
10b68b2 osd: detect (some) misordered ondisk tmaps
bc77e52 osd: verify TMAPPUT data is sorted
29fae49 osd: do not ENOENT on missing key on remove
8e91d00 osd: tolerate misordered TMAP updates
a4439f0 osd: move tmapup into a helper
919db19 rbd workunit: Add tests for clones across pools
5164075 rbd workunit: Make "remove_images" silent
ca5549e rbd workunit: Add tests for cross-pool rename
bbd343a rbd: tests for copy with explicit/implicit pool names
e612afc rbd: fix import pool assumptions
81d3830 rbd: change destpool assumptions.
724cfd1 rbd: --size fixes
66b148e rbd: allow parsing image@snap even if --pool given
37adf2a packaging:  Add ceph-test debian package
76e2601 ObjectContents.h:  Fix compiler warning by adding parenthesis
af5d9e4 Makefiles:  Use AM_CXXFLAGS for crypto library compiler options
1dc0fce ceph.spec.in:  Enable rest-bench and debug configure options
c04fcaa ceph.spec.in:  Add rest-bench and ceph-test packages.
10a35ca Makefiles:  Update noinst_headers
3112cd8 test: mon: run_test.sh: helper script for the mon's workloadgen
2a68105 qa: workunits: mon: add workloadgen's workunit
e1820d8 test: mon: workload generator
f502907 messages: MLog: make ctor's uuid argument a const
3177774 mon: Monitor: use existing strict_strtol() on parse_pos_long()
f7276de crush: relax the order by which rules and buckets must be defined
1fcccd3 crushtool: rework how verbosity works
9e8c861 rgw: unaccount multipart parts when completing upload
d4bc372 fix syncfs handling in error case
ece11b0 rbd workunit: Add tests for clones across pools
0be9b15 rbd workunit: Make "remove_images" silent
a96ede9 rbd workunit: Add tests for cross-pool rename
3918043 rbd: tests for copy with explicit/implicit pool names
c219698 rbd: fix import pool assumptions
3b0c360 rbd: change destpool assumptions.
08f47a4 rbd: --size fixes
e452df6 rbd: allow parsing image@snap even if --pool given
854a786 mds: don't add not issued caps when confirming cap receipt
642ffc9 mds: check parent inode's versionlock when propagating rstats
a3aad3c mds: fix anchor table update
5731026 mds: don't expire log segment before it's fully flushed
3e988d4 osdc/ObjectCacher: touch Objects in lru
16215d9 osdc/ObjectCacher: remove unused waitfor_{rd,wr}
011d1e7 osdc/ObjectCacher: *do* pin object during write
6efe977 mon, osd: adjust msgr requires for CRUSH_TUNABLES2 feature
0cc47ff crush: introduce CRUSH_TUNABLES2 feature
88f2181 crush: for chooseleaf rules, retry CRUSH map descent from root if leaf is failed
0beeb47 rgw: document ops logging setup
6bc32b2 rgw: usage REST api handles cateogories
94423ac perfcounters: fl -> time, use u64 nsec instead of double
3a0ee8e perfcounters: add 'perf' option to disable perf counters
b1c7108 logrotate on systems without invoke-rc.d
a37c34d Search for srcdir/.git in check_version
d72c2c8 Removing ceph dirs while scrubbing ceph off the system
74b2a2d rgw: POST requests not default to init multipart upload
1f8c323 java: add ceph_open_layout interface
f0c608c client: add ceph_open_layout interface
365ba06 qa: add script to run objectcacher tests
525f942 init-ceph: do not make noise about missing devs
bc32fc4 syncfs: check for __NR_syncfs too
6890675 monmap: fix crash from dup initial seed mons
7602a05 osdc/ObjectCacher: fix BufferHead leak on ENOENT
df550c9 make mkcephfs and init-ceph osd filesystem handling more flexible
96b82eb mon: Monitor: wake up contexts based on paxos machine's state
3b061ab mon: AuthMonitor: increase log levels when logging secrets
7527a1e auth: Keyring: increase log levels when logging secrets
deabdc8 auth: cephx: increase log levels when logging secrets
d6cf77d crush: CrushWrapper: don't add item to a bucket with != type than wanted
95e1fe8 mon: PGMonitor: check if pg exists when handling 'pg map <PG>'
1c715a1 mds: child directory inherits SGID bit
55081c2 crush: prevent loops from insert_item
b706945 Try using syscall() for syncfs if not supported directly by glibc
189d073 rgw: fix usage accounting
5126bd7 rbd: make snap purge fail if removing a snap fails
ddf377a rgw: fix cleanup
820911b msgr: use get_myaddr and set_myaddr to set the nonce
5c27bc4 rgw: fix cleanup
f40f715 rgw: signal shuts down fcgi socket
24fde54 crypto: fix nss related leak
7f221a5 rgw: fix xml parser leak
b3b77b6 rgw: fix memory leaks
c31f94d set the nonce unconditionally on bind
afd4da7 doc: Added FAQ back into toc tree.
0dbf6e8 test_librbd_fsx: Add OP_FLATTEN
7021f1a test_librbd_fsx: consume saved-image files as test runs
b35e37f osdc/Striper: fix handling for sparse reads in add_partial_sparse_result()
328d72d rgw: signal shuts down fcgi socket
4eb50e6 crypto: fix nss related leak
436baa0 java: add Java exception for ENOTDIR
700b5c0 qa/run_xfstests.sh: drop tests 174 and 181
57c8116 doc: filename change to fix a link.
15f7713 doc: fixed links that broke due to new IA.
f86522c rgw: fix xml parser leak
98a04d7 rgw: fix memory leaks
394768b doc: Removed "deprecated" from toctree. Confused some users.
739bca1 doc: Removing old/unused images.
288db95 mon: shutdown async signal handler sooner
45c652d mon/AuthMonitor: refactor assign_global_id
92d6b8e mon/AuthMonitor: reorder session->put()
82042ad msg/Pipe: remove useless reader_joining
c07c93e msg/Pipe: join previous reader threads
c4caf87 msg/DispatchQueue: fix message leak from discard_queue()
183953e msg/SimpleMessenger: use put() on local_connection
3e2eb3a mon: clean up Subsription xlists
005967d mon: drop con->session reference in remove_session()
6d3afce mon: sessions get cleaned up before dtor
e0e9a2d msg/Pipe: don't leak session_security
d005732 mon: Monitor: make MSG_MON_PAXOS case a bit more consistent
bbe2e1a mon: Paxos{,Service}: finish contexts and put messages on shutdown
9e3ceca mon: Monitor: finish contexts on shutdown
900a0fa mon: Monitor: drop election messages if entity doesn't have enough caps
988f92a mon: remove all sessions on shutdown
5cf6c7e ceph_mon: cleanup on shutdown
68491af rgw: add -lresolv flags to Makefile.am
7903aab mon/MonClient: use thread-safe RNG for picking monitors
07c831a upstart: fix limit lines
b4a769d upstart: add ceph-osd-all-starter.conf
ff0a44b upstart: make ceph-osd-all, ceph jobs
3610754 Makefile.am: fix LDADD for test_objectcacher_stress
12eb797 client: fix lock leak in lazio_*() failure paths
be11c31 upstart: set high open file limits
25f003b msg/Accepter: only close socket if >= 0
30373ce osd: default journal size to 5GB
a562518 librbd: take cache lock when discarding data from cache
2e862f4 ObjectCacher: fix off-by-one error in split
fdadefe ObjectCacher: begin at the right place when iterating over BufferHeads
20a0c56 ObjectCacher: add debug function to check BufferHead consistency
5d760b7 ObjectCacher: more debugging for read completions
c054ad6 ObjectCacher: assert lock is held everywhere
7570e6c ObjectCacher: debug read waiters
8c96161 ObjectCacher: don't needlessly increment iterator
b948e4c ObjectCacher: retry reads when they are incomplete
29a96cf rgw: ops log can also go to socket
7b96807 doc: Added links to APIs.
feb8451 doc: don't use 'pool=data' as an example
c42af80 doc: Added documentation for using CPU profiler.
84eac86 doc: Added documentation for installing CPU profiler.
3ccaaa0 doc: Added librbd to the RBD toc.
9ea2609 doc: Added libcephfs to the CephFS section and moved librbd to RBD section.
8da6dde common/ceph_argparse: fix malloc failure check
e82ca0d mon/MonClient: initialize ptr in ctor
8f1f36d os/FileStore: fix fd leak in _rmattr
426b58d os/FileStore: fix fd leaks in _setattrs
1df38fd osdc/ObjectCacher: faux use-after-free
9a10ebb test: add ObjectCacher stress test that does not use a cluster
fd928b9 ObjectCacher: more debugging for BufferHeads
8b187bd build: update for boost_thread library.
493049b mon: OSDMonitor: clarify some command replies
0b28ef6 mon: OSDMonitor: fix spacing when outputting items on command reply
f0c7bb3 build: update for boost_thread library.
c707568 doc: fix crush set syntax
71cfaf1 os/FileStore: only try BTRFS_IOC_SUBVOL_CREATE on btrfs
3ca947e mon: clean up 'ceph osd ...' list output
344c4fd mon: correctly identify crush names
592a894 mon: use parse_osd_id() throughout
918c58c PrioritizedQueue: remove internal lock, not used
b53e06c DispatchQueue: lock DispatchQueue when for get_queue_len()
659d4c2 run_xfstests.sh: activate more tests that now work
22cb135 doc: add Hadoop configuration parameters
63c5128 smalliobench: fix init-only, add don-not-init
b40387d msg/Pipe: fix leak of Authorizer
12c2b7f msg/DispatchQueue: release throttle on messages when dropping an id
5f214b2 PrioritizedQueue: allow remove_by_class to return removed items
98b93b5 librbd: use delete[] properly
4a7a81b objecter: fix leak of out_handlers
ef4e4c8 mon: calculate failed_since relative to message receive time
9267d8a rgw: update post policy parser
f6cb078 mon: set default port when binding to random local ip
ce28455 rgw: relax date format check
0a2a0c0 doc: config-cluser move to new IA.
5c302eb doc: Move of cluster ops for new IA.
8430210 doc: add-or-rm-mons.rst: fix typo
4a34965 client: register admin socket commands without lock held
4db9442 objecter: separate locked and unlocked init/shutdown
d395131 osd/: add config helper for min_size and update build_simple*
d5bc66a doc/release-notes: fix heading
74f7607 doc: release-notes for v0.54
0d42e97 doc: update crush weight ramping process
131d15a rgw: fix warning
a0eb891 osd: default pool min_size to 0 (which gives us size-size/2)
1d00f3a mon: default min_size to size-size/2 if min_size default is 0
9d979d7 osd: default min_size to size - size/2
735df02 mon: helpful warning in 'health detail' output about incomplete pgs
1679a55 osd: start_boot() after init()
65961ca vstart.sh: support -X by adding 'auth required = none' entries
60b84b0 (tag: v0.54) v0.54
5d27f3d rgw: compile with -Woverloaded-virtual
1be9923 rgw: fix RGWCache api
e0e33d2 rgw: fix RGWCache api
9a38059 osd: remove dead rotating key code from init
eee0982 osd: defer boot until we have rotating keys
193e2ea PG: persist divergent_priors in ondisklog
fcbbebc PG::merge_old_entry: fix case for divergent prior_version
f299be0 PrioritizedQueue: use iterator to streamlink SubQueue::remove_by_class()
95cb6cf PrioritizedQueue: avoid double-lookup on create_queue()
57a6255 osd/: de-prioritize recovery ops relative to client ops
bd4707a msg/: use PrioritizedQueue to handle DispatchQueue queueing
5d47db2 OSD: queue ops based on message priority
a62d778 OSD: use PrioritizedQueue for OpWQ
f02c75e WorkQueue: Add WorkQueueVal for passing params by val
25eb1fb common: Add PriorititizedQueue
bbdae98 Pipe: we don't queue DispatchQueue codes on an actual pipe
d129112 common: add RefCountedObj.cc with intrusive_ptr hooks
1c20ea9 rgw_cache: change call signature to overwrite rgw_rados put_obj_meta()
da0ea9f rgw: unquote etag for if-match
096c8ac rgw: use thread safe version of gmtime
cc06090 rgw: don't convert object mtime to UTC
c4981b8 java: remove redundant src.dir
efdb209 doc: reorder some openstack/rbd instructions
caed0e9 osdc/ObjectCacher: do not take Object ref for bh writes
8b4bdda client: Remove object from oset before deleting
0b85e43 java: fix build.xml formatting
8970e81 java: fix javadoc builds
a11940f osdc/ObjectCacher: only return ENOENT if ObjectSet is flagged
16db00d client: unregister commands on shutdown
7d1974c client: fix null dentry crash on dump_cache
ad3063a client: dump mds session info
fc6b82f client: add dump_cache asok command
2c28e5d common: dumpers for ceph_{file,dir}_layout
69c47d3 client: add mds_requests asok command
809d0e5 Makefile: fix hadoop lib build
ef71f32 Makefile: use libclient.la for libcephfs
2f24168 client: fix null put in ~MetaSession
8b1f547 librbd: fix create existence checking
614cf34 librbd: debug when copy occurs
9c31d09 mon: kick failures when we lose leadership
e43f9d7 mon: process failures when osds go down
763d348 mon: ignore failure messages if already pending a failure
23531c2 osd: add 'osd debug drop op probability'
efa03ce mon: require pgnum in 'ceph osd pool create <poolname> <pgnum> [<pgp_num>]' command
cda9e51 librbd: return actual error when detecting format fails during creation
3d76e67 java: add symlink/readlink tests
6dd7925 test_libcephfs: fix, add symlink loop tests
3902a01 debug: adjust default debug levels
6c0be02 client: simplify/fix symlink loop check
d037ff4 client: fix path_walk for directory symlinks
cd14453 OSDMonitor: remove max_devices and max_osd interdependency
ae1f46c mds: re-try_set_loner() after doing evals in eval(CInode*, int mask)
07b4f8f si_t was not properly converting values < 100KB
8f49de0 osdc/ObjectCacher: only call flush callback if we transitions to clean
0cfe632 cleaned up scripts Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
54f6c17 client: ensure we don't leak MClientReply
a8053c1 ceph-fuse: fix leak of args
b305fc8 osdc/ObjectCacher: fix leak on readahead
1c9ec26 ceph.spec.in:  Build debuginfo subpackage.
de2cd18 test: add cli test for missing args to rbd
34ebda2 rbd: check for second argument to mv/rename
9aae0ee rbd: check for second argument to mv/rename
5ef16ed test.sh: Adding LD_LIBRARY_PATH so JUnit can find .so files. Removing useless java.library.path references.
9e9feff doc/cluster-ops/pools.rst: Added documentation for min_size
b5ce4d0 client: fix SnapRealm leak
56a152b client: debug SnapRealm reference counting
a34a9af vstart: allow minimum pool size of one
88cdde3 client: fix leak of Cap
5e564f9 client: fix leak of session release msg on session close
c352edd client: only start invalidator thread if cb != NULL
44a7017 ceph-fuse: deallocate messenger, g_ceph_context on stop
fe6e426 doc: add-or-rm-mons.rst: fix a formatting typo
5b32664 doc: add-or-rm-mons.rst: make paths clearer
66e6a63 client: give get_caps() out-arg a less confusing name
ad4bd4e client: do not gratuitously drop FILE_CACHE ref in _read()
128fed8 client: assert cap refs don't go negative
dc907e2 librbd: take parent lock when examining fields it protects
a183fe7 OSDMap.cc: Add pool name to OSDMap dump
faf23ca rbd: fix snap unprotect, which was succeeding while clones existed
77b4237 librbd: no need to scan snapshots for parents during remove
c45a415 script clean up
9ea95a0 Added a function get_cmd_op Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
fc0d6d3 docs: add keystone documentation
5fda39e rgw: change configurable
a99b0fa rgw: fix build
8fcd351 rgw: use a different boost thread library
ff8c238 rgw: keystone tokens revocation thread
b69da4b json_spirit: thread safe
feb24af rgw: decode pki tokens
02c2c32 rgw: invalidate revoked tokens
1f05b1a rgw: keep pki tokens by hash
8249d7b rgw: decode revocation message
0d164da rgw: use thread safe version of gmtime
ff5ee98 build:  Add RPM release string generated from git describe.
82ebbab doc: Clarified text to reflect requirement for majority, not odd number of monitors.
a39110d ceph.spec.in:  Remove ceph version requirement from ceph-fuse package.
e37c192 rgw_admin: do not throw error when start-date and end-date are not passed to usage::trim()
b7da8bb libcephfs_jni.cc: mtime and atime are Long data types. Changing the accessor methods to reflect this fact
1581db9 configure: fail when missing junit dependency
a47a966 Makefile: include Java test suite artifacts
2dfc103 Makefile: include Java unit test runner
55483d7 Makefile: only add source files to EXTRA_DIST
74cc299 Makefile: use real file for make target
4f215b0 Makefile: remove redundant EXTRA_DIST
c3129a2 Changing build.xml to produce a jar instead of class files Adding a TestSuite class to run all tests Remove the libcephfs-test.jar when running ant clean
7701542 Adding libcephfs-java.jar to .gitignore
791a822 Adding a simple workunit that executes one libcephfs-java test
5dec917 Moving test java files into a proper heirarchy. Moving the compilation of tests classes from build.xml to Makefile and editing configure.ac to look for the junit4 jar in the default location of /usr/share/java. It is still possible to build and run tests from build.xml as well as Makefile.
08ee736 java: fix return type on JNI function
b1b9f0a vstart.sh: allow shorter MON, OSD, MDS count env vars
8ccccbb osdmap: make flag names match
f2bf7aa mon: make osdmap flags incur a health warning
9373452 doc: Rewrote index for install section per new IA.
f2fbe7a doc: Removed source/index from top-level toc tree per new IA.
6f6df5c doc: Moved doc/source files to doc/install per new IA.
059294c doc: Syntax cleanup for new IA. Fix tip. Clean up for generating keys.
631075d doc: Syntax cleanup for new IA. Added reference to repo.
7a1e952 doc: Syntax cleanup for new IA.
e11cafb doc: Syntax cleanup for new IA. Removed steps for building docs.
b5ae387 doc: Syntax cleanup for new IA. Removed info for building documentation.
9eb0b2b doc: Syntax cleanup for new IA.
e144582 doc: update the rest of the table for debian wheezy
cdd73bb doc/: document recovery reservation process
0ed0d2a pg: recovery reservations
9d9a222 doc: Wheezy is now using kernel 3.2.0; say so
e7c02b3 doc: Fix per-daemon public/private settings: "network" -> "addr"
eac614a doc: Clarify "pool size", copies, and replicas more
52bada5 doc: fix Hadoop config option typo
97c19da rgw: unquote etag for if-match
d3553a5 doc: Made changes to the CSS to make admonitions more prominent.
067953f doc: Added lines between title and body. Pre IA cleanup.
282ac92 doc: Updated syntax for consistent usage prior to IA updates.
d1404c3 doc: Updated index for removal of legacy openstack install.
9127ebd doc: Minor edit to admonitions.
04f661f doc: Updated syntax prior to IA updates.
d38df17 doc: Updated syntax usage prior to IA updates.
ee07b22 doc: Added new info per Ross's request.
a1b2f58 doc: Fix and minor edit for admonitions.
e1195fd doc: Minor edits for admonitions.
6731b55 doc: Edits from Peter Reiher's feedback, and minor edits for admonitions.
2260e15 doc: Minor edits for admonitions.
07f60d4 doc: Added topic for adding OSDs and adjusting CRUSH weights.
0a939d0 doc: Removed legacy OpenStack installation.
5ef58d3 doc: Added topic for adding an OSD and adjusting CRUSH weights.
50d3598 rgw: don't convert object mtime to UTC
c357474 ceph.spec.in:  Remove ceph version requirement from ceph-fuse package.
cca606f Update log file when rgw is not running
1348685 osd/: add pool min_size parameter for min acting set size
60a9816 qa: Script to run fio and template file
456c90b Makefile: add missing rgw_resolve.h to dist tarball
ca89880 client: kick waiters for an mds session to open on mds recovery
f0927cb qa: disable xfstest 45 until mount issue is resolved on precise
02527d4 qa: disable xfstest 45 until mount issue is resolved on precise
0baa927 cls_rbd: send proper format of key to "last_read" for dir_list
fe9a441 rgw: document cname configurable
951c6be rgw: resolve hostname dns cname record
6aa9cff java: use accessors for mode flag tests
84299e1 rgw: fix multipart overwrite
be6d563 rgw: don't reset multipart parts when updating their metadata
488b019 rgw: break out of read loop if we got zero bytes
138262f doc: fixed some inccorrect syntax.
2a69627 mds: move to from loner -> mix if *anyone* wants rd|wr
4b3f97d mds: base loner decision on wanted RD|WR|EXCL, not CACHE|BUFFER
307fd24 librbd: fix memory leak on read
241569c rbd: allow removal of image even if rbd_children deletion fails
4b4e0fa rbd: allow removal of image even if rbd_children deletion fails
3162f13 rgw: configurable swift token ttl
0f7dada client: Add symlink loop checking in path_walk()
60e54d6 client:  Fix path_walk() to support dir symlinks
beaafe8 test: Add tests for symlink pathological cases
15b3d98 doc: Minor edits and added reference to Cephx intro.
85cd694 osd/: encode LOST_REVERT reverting_to in prior_version pos
bad0114 PG: use remove_object_with_snap_hardlinks for divergent objects
699e54d rbd: stripe count is not measured in bytes
0db11c7 chain_xattr: use sys_* methods
8c3481d os/FileStore: chain_*() methods return error codes; don't check errno
9cf0be7 chain_xattr: comment about how xattrs are named
2bf6a2b os/chain_xattr: whitespace, constify *end
be438dc os/chain_xattr: do not double memory buffer (again)
b7f89cb os/chain_xattr: fix listxattr buffer size
5496600 os/FileStore: introduce lfn_close()
51d3faa os/FileStore: remove lfn_*xattr helpers
044be91 os/FileStore: recast _rmattr on top of chain_f*
6a6699b os/FileStore: recast _setattrs() on top of chain_f* methods
41bc77f os/FileStore: drop _getattr() helpers
d59cf33 os/FileStore: use new helpers from collection_{get,set,rm}attr[s]
b6bfeed os/FileStore: use _fgetattr() from getattr()
307fd42 os/FileStore: remove unused _getattrs() methods
1862ddd os/FileStore: use _fgetattrs() from collection_getattr()
a367e6e os/FileStore: use _fgetattrs() from _rmattrs()
cab1d63 os/FileStore: use _fgetattrs() for _setattrs()
ad5ac17 os/FileStore: use _fgetattrs() for CLONE
769f473 os/FileStore: use _fgetattrs() for GETATTRS op
68377f9 os/FileStore: add _fgetattr(), _fgetattrs() helpers
bb127bd os/FileStore: use f*xattr() methods to test xattr support
4e55303 os/chain_xattr: move chained xattr helpers into separate file/module
e49969a test script for s3 tests Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
7e57c5f librbd: better debug output
8d8726a osdc/ObjectCacher: wake all rx waiters on ENOENT
7731d47 test_librbd: add additoinal clone test
41812c2 osdc/ObjectCacher: trigger copy-on-write before read
674d266 osdc/ObjectCacher: return ENOENT
cde4dd0 osdc/ObjectCacher: remove BufferHeads on ENOENT
1a7caa4 osdc/ObjectCacher: clear complete if may-cow and !exists
f8e92a1 osdc/ObjectCacher: add object exists flag
890e492 librbd: remove parent logic from reads beneath the cache
09dc191 osdc/WritebackHandler: add may_copy_on_write()
f6d2e9a osdc/Striper: more debug
e506362 librbd/AioCompletion: ensure read result assembly happens last
8712958 librbd: complete Context on error from ObjectCacher::readx
72a710a client: return EBADF for invalid file desc
132fb34 doc: describe Hadoop configuration options
342c2c7 PG::merge_old_entry: fix case for divergent prior_version
7e26467 PG: use remove_object_with_snap_hardlinks for divergent objects
7483d1f msg/Accepter: use derr
769bac8 msgr: change port range from 6800-6900 -> 6800-7100
623553d msgr: make bind port range configurable
49bd8ab librados: move misc tests into test/librados/ dir
5893dd5 librados: test/rados-api/* -> test/librados/*
80880ee client: always follow non-trailing symlinks
4fc67c5 client: simplify path_walk() loop
6f7a632 client: Support for fchown
e4aa6d7 cls_lock: reorg test_cls_lock
0eedc78 cls_rgw: reorg test_cls_rgw
a1402b5 fix cls_rbd reorg
ddf096b librbd: reorg rbd tests
b749323 cls_rbd: move into new location
bcefc0e msg/Pipe: fix leak of AuthSessionHandler
4bff87d doc: Added qemu caching section.
f171aba doc: Added Commandline Usage and a few fixes.
f7412fe crypto: add cms utility function
c51e1f9 test script for s3 tests Signed-off-by: tamil <tamil.muthamizhan@inktank.com>
a7e1368 test: Add symlink test for absolute paths
4cd47c4 client: Fix state of symlink with absolute path
bc4e6b9 doc: Changed term "kernel object" to "kernel module". Added hyperlink to cephx.
019fee8 doc: Improved the landing page for RBD.
536d764 doc: Clarified text and added reference back to main RBD pages. Added sidebar.
2b2ac13 doc: Changed RBD to librbd cache for accuracy.
a01b112 doc: changed --user to --id, and fixed a typo.
a7551e4 run_xfstests.sh: add optional iteration count
dfc57c4 doc: minor edits to the index.
968b315 doc: Added layering to the snapshot section.
6c5de99 osd: add PG state recovery_wait
d2c6d44 message: add MRecoveryReserve
23dbe3e message: add missing print statement for REJECT message
614cb50 PG: correct sub-state names in ReplicaActive
15ada1c doc: update notes on new rpm-based platforms
45005d3 doc: fix os-recommendations table
2d52d7c doc: Index entry for OS Recommendations
049e7fb doc: update os-recommendations
c435d31 ceph-disk-activate: avoid duplicating mounts if already activated
da9aed9 osd/: add pg_log_entry_t::reverting_to for LOST_REVERT
29a03f0 rgw: parse keystone token expiration
3f08e96 PG: requeue snap_trimmer after scrub finishes
1bb6537 PG: requeue snap_trimmer after scrub finishes
c62f3dd rgw: cache keystone tokens
310796a doc: tiny syntax fix.
eac443e doc: Added internal anchor references.
3c034ae doc: using remote copy
1351e76 README: add libboost-program-options-dev
f944386 rgw: map keystone tenant id to rgw user
6bbe7db configure.ac: add program_options header check
88f4823 rgw: handle keystone roles
421c352 rgw: auto create rgw user for new keystone users
845e862 rgw: handle keystone tokens
9df953c rgw: extend rgw json parser api
9608a88 ReplicatedPG: actually delay op for backfill_pos
550ef50 Finisher: add perf counter for queue len
8d27eda FileJournal: rename queue_lock to finisher_lock
1a5b626 FileJournal: write_cond is not used
c6c8fce FileJournal: break writeq locking from queue_lock
2646a8f Throttle: reduce lock hold periods
bc91f9d os: instrument submit lock, apply lock, queue_lock, write_lock
2ed667a FileStore: add op_throttle_lock
542e134 FileStore: don't lock op_tp in queue_op
a8ac453 perf_counters: add dec()
9601b29 JournalingFileStore: move apply/commit sequencing to apply_manager
1d9f5d2 JournalingFileStore: create submit_manager to order op submission
117ac90 JournalingObjectStore: remove force_commit, no longer needed
2d180e7 JournalingObjectStore: whitespace fix
c2c912b FileStore: remove trigger_commit
5326c22 JournalingFileStore: pass -1 as the alignment if unimportant
f7727dd FileStore: next_finish is not used
a268afa test/bench: add tp bench
e814d8f test/bench: small io benchmarker
fe2814e Mutex: Instrument Mutex with perfcouter for Lock() wait
184a676 msg/SimpleMessenger: start accepter in ready()
c830a9b mon: separate pre- and post-fork init
5dd5471 msg/Pipe: fix seq # fix
1db4bd9 osd: verify authorizers for heartbeat dispatcher
6d3cafc rgw: refactor curl functionality
44818eb rgw: configurable swift auth url
a12bc43 doc: fix typo in cinder upstart config name
06c62c5 doc: Added syntax fixes to Peter's session authentication doc.
402e1f5 ceph-disk-prepare: poke kernel into refreshing partition tables
2e32a0e ceph-disk-prepare: fix journal partition creation
8921fc7 ceph-disk-prepare: assume parted failure means no partition table
a4db58f msg/Pipe: whitespace cleanup
02f6262 msg/Pipe: only randomize start seq #'s if MSG_AUTH feature is present
3a48cbf doc: update fs recommendations
1a236e1 cephx: don't check signature if MSG_AUTH feature isn't present
56bce3b auth: include features in cephx SessionHandler
100fcca Fixed problem with checking authorizer in accept().
5324d2d librbd: Fix 32-bit compilation errors
2157bcb Temporary patch to a problem in Pipe related to monitor initialization.
b9eccdf osd: make pool_snap_info_t encoding backward compatible
7239e80 dep-report.sh:  ceph package dependency report.
1638f62 client: Fix ref counting double free with hardlink
49ca7d5 test: Functional test for hardlink/unmount pattern
84c7a34 osdc/ObjectCacher: remove dead locking code
17c8589 librbd: clip requests past end-of-image.
86de1fa librbd: size max objects based on actual image object order size
07e7bc3 rgw_cache: change call signature to overwrite rgw_rados put_obj_meta()
3384431 mds: Fix SnapRealm differ check in CInode::encode_inodestat()
eafe0a8 mds: allow try_eval to eval replica locks
f0c2e12 mds: Send mdsdir as base inode for rejoins
ceeebaf mds: Fix stray check in Migrator::export_dir()
d2ac024 mds: fix stray migration/reintegration check in handle_client_rename
2f09d47 mon: fix leading error string from 'ceph report'
9cea181 doc: updated front page graphic.
65ed99b PG: Do not discard op data too early
047f58d java: use unique directory in test
0a1e0b7 java: add tests for double mounting
be94fb4 java: add AlreadyMounted exception
13f76df java: remove deprecated ceph_shutdown
16a4c92 java: clean-up in finalize()
d88c60c java: enable ceph_release
5c91428 java: enable ceph_unmount
7e7e06f java: mkdirs returns IOException
9c9c247 java: log listdir contents in java client
4a5abc6 java: remove tabs to fix formatting
1c45775 java: add O_WRONLY open flag
712bfa5 java: add FileAlreadyExists exception
d4da4dc doc: fix warning in JavaDoc
1de3305 osdc/ObjectCacher: handle zero bufferheads on read
94a84d2 osdc/ObjectCacher: add ZERO bufferheads from map_read()
fde7fe6 osdc/ObjectCacher: add zero bufferhead state
4fb6a00 test_librbd_fsx: sleep before exit
45946c2 osdc/ObjectCacher: some extra debugging
fdf556a osdc/ObjectCacher: fill in zero buffers in map_read() on miss if complete
9dc887d osdc/ObjectCacher: improve debug output for readx()
b9b1be6 osdc/ObjectCacher: set complete flag when we observe ENOENT
94d2b91 osdc/ObjectCacher: clear complete on trim, release
ab56e41 osdc/ObjectCacher: add complete flag
f3db940 osdc/ObjectCacher: refresh iterator in read apply loop
e287296 osdc/ObjectCacher: do read completions after assimilating read result
9407046 osdc/ObjectCacher: do not close objects explicitly
8920f41 osdc/ObjectCacher: make trim() trim Objects
f241e22 osdc/ObjectCacher: check lru_is_expireable() in can_close()
cd8e991 osdc/ObjectCacher: add LRU for Object
46897fd osdc/ObjectCacher: take Object ref for bh writes
21dc0e0 osdc/ObjectCacher: take refs for inflight lock ops
57e18a7 osdc/ObjectCacher: take Object ref when there are buffers
a34a8b8 osdc/ObjectCacher: add ref count to Object
24d07e8 osdc/ObjectCacher: rename lru_* -> bh_lru_*
57a4cbb librbd: fix race in AioCompletion that are still being built
e225767 doc: add JavaDoc to Sphinx
ffb8c60 Various cleanup changes to session authentication code.
67bc92a client: add ceph_release, ceph_shutdown
f1eef53 client: double mount returns -EISCONN
c9ca3c9 client: do not reset session state on reopened sessions
3153ec7 mds: fix handling of cache_expire export
4ac4520 mds: do not mark closed connections disposable
ad839c7 mds: use connection on closed sessions in force_open_sessions
53b354d doc: update copyright to include contributors, CC
c33f93d rgw: abort multipart upload uses part manifest
c0df832 osd: fix populate_obc_watchers() assert
3eda37a mds: check getcwd() return value
1afa8ff leveldb: fix accidental submodule revert
a5eb72b doc: note raw format required for openstack/rbd
ee2ce73 rgw: multipart manifest uses parts built manifest
43caeeb rgw: multipart uses striping
f085708 rgw: remove objects on failed upload
19a7f5a rgw: atomic object data is being split over multiple parts
1ebf0b7 rgw: fix multipart overwrite
38f4d6a rgw: don't reset multipart parts when updating their metadata
5c1252f rgw: break out of read loop if we got zero bytes
345bcac mds: fix #include for getcwd(), simplify
8c16a83 doc: Added hyperlink.
da8bb88 doc: Fixed usage and deleted legacy values.
e510677 vstart.sh:  Use ./init-ceph instead of CEPH_BIN
1921a06 Script that generates perl wrapper for teuthology tests
18731b4 rgw_admin: do not throw error when start-date and end-date are not passed to usage::trim()
bfc4904 rgw: better error responses, logging for specific error cases
30d11f4 rgw: POST fixes, policy range, policy expiration
7bb3504 rgw: handle expiration and content length policy conditions.
ca1e177 rgw: implement POST key can use ${filename}
d7b5942 rgw: return correct responses with POST
3faf6ab rgw: handle success_action_redirect
846bb34 rgw: handle policy as case insensitive where required
391775b rgw: handle missing content length in POST
fc05b63 rgw: handle x-ignore- in POST request
52b78d5 rgw: verify that request variables are in policy
86b06f1 json_spirit: update grammar
ccd757f rgw: add policy decoding code
5b90d10 rgw: basic policy functionality
81f257d rgw: add a test tool for json parser
c2b702f rgw: adjustments for 100-continue
d6d3bf0 rgw: handle content_type, meta
9f9bc77 rgw: helper functions to parse multipart form
1bafe7c rgw: Create JSON parser
256bd62 rgw: Implement POST object to publicly writeable buckets.
7c67230 osd/osd_types: make stat osd_op print nicely
4240846 librbd: use assert_exists() to simplify copyup check
e609c8a librados: add assert_exists guard operation
59839a8 librbd: validate copy size against proper snapshot id
eed28da osd: return EOPNOTSUPP on bad class or method name
31260a3 leveldb: fix accidental revert
b85cde5 rgw: dump an error message if FCGX_Accept fails
d4f0a88 workqueue: make debug output include active threads
4d20b60 msg/Pipe: fix tight reconnect loop on connect failure
54cab4d throttle: less default log noise
3dffa6d rbd: document defaults for rbd bench-write
ac07afa test: Dont check initial permissions
84a35f8 Makefile: include java in dist tarball
3cc39f5 rgw: check client write status on swift get_obj
a755674 rgw: don't continue processing of GET request on error
2248822 osd: drop conditional check in populate_obc_watchers
4156b98 osd: populate obc watchers even when degraded
a135352 run-cli-tests: Include rationale for cram patch and pointer to issue.
a7a6850 doc: Changed rack, row text to row, rack. Fixed some syntax. Added note.
3d0a522 vstart.sh: cephx on by default, -X to disable
2d20f3a objecter: move map checks to helper
da5b244 mds: avoid copy in SessionMap::get_or_add_session()
7a3ccef librbd: init layout in ImageCtx ctor
2c45d1c librbd: init vars in AioRequest ctor
d2f07cc mon: pass by ref
0fedc28 monmap: pass by ref
7d9ee17 client: release import caps we don't have
66bda16 auth: change default: require 'cephx' for daemons
91a2492 mds: fix typo, build
5fb8a22 mds: make dup session close an error; make case consistent
e6cbcb2 mds: deal with the case where you have a Session close event without a Session.
5e221a4 doc: Added clarification from Peter's feedback.
3870ce2 doc: Added backward compatibility text. Additional cleanup.
50bb659 man: update ceph-debugpack, ceph man pages
c18e17d rbd: update man page build
69a96bb doc: clean up doc build directions
ebcad66 Stopped logging keys in session authentication code.
b3cc40a java: update deb bits from ceph-devel feedback
ad3482b java: add test for mount with bad root
941ac2f Makefile: add src/include to #include path for libcephfs_jni_la
4a0398d do_autogen.sh: add -j flag to enable java stuff
9feb4af debian: add libcephfs-java package
68e0164 automake: setup autotools to build cephfs-java
3504335 java: add Java and C++ source files
d2f0f89 libcephfs: return error when not mounted
233b0bd test/libcephfs: Fix telldir/seekdir test
cc8b9e2 mds: use const ref instead of large pass-by-value
ae8aaa4 mds: annotate switch case fall-thru
667fb72 mds: fix coverity warnings on NULL deref
1e987ea mds: fix possible inode_t::get_layout_size_increment() overflow
96ff10a mds: init cap_reconnect_t::flock_len
091d16a mds: init in cap_reconnect_t ctor
46054ce mds: init inode_t::dir_layout
86b4317 rbd: implement bench-write command
04d32e7 rbd: print useful error message if striping is specified for format 1
58e920b client: Fix permissions checking for O_WRONLY
352a7e2 test: Make the test filename unique to test
b19ac61 client: Fix permissions error on open with O_CREAT
0571cb7 S3 test scripts
f6b7b5c doc: minor fix on user name for GW script.
43e8f76 Cleaned up
1c38286 addr_parsing: make , and ; and ' ' all delimiters
e0b3213 vstart.sh: log client to out/$name.log
03887e0 client: fix signed/unsigned comparison warning
1fc18c4 mon: MonitorStore: fix error checks for mkdir operations
e8df212 leveldb: revert accidental rewind
85a26ad client: initialize tid in MetaRequest ctor
676db60 test/libcephfs: Fix telldir/seekdir test
51858b7 test:  Add libcephfs tests for stat, lstat, chmod
c68c516 client: Fix stat of relative symlinks
b4bfade doc: Fix wrong wording for symlink xattrs calls
809587c client: Implement lchown in Client and libcephfs
39fcd7e test:  Add libcephfs tests for stat, lstat, chmod
9b0c88b client: Implement stat and correct lstat
14ef165 client: Support for fchmod
a0f65a1 mon: MonitorStore: check return value of 'rename' for errors
e41caa1 mon: MonitorStore: check mkdir return value for errors
2549bb8 mon: MonitorStore: check return value for errors on 'open'
6d7dea3 mon: AuthMonitor: check return values
0292349 mon: LogMonitor: check return value when writing to file
47a4a7c mon: Monitor: unlock before returning
52dedc8 mon: Monitor: fix potential null-pointer dereference
64bf7f9 leveldb: update .gitignore
bcd6aea monclient: drop now-unused MonClient::is_latest_map()
8ed86ee test: Add func. test for chmod in libcephfs
328bf48 client: Add permissions checking to open
ee20cd0 rbd: reject negative size (can make image that is hard to delete)
8791db7 qa: run multiprocess rados tests
935d579 testrados_watch_notify: fix most tests, disable one
c9de24f testrados_list_parallel: fix
cce58a3 objecter: refactor pool dne checks
dc2ec37 objecter: fix handling for pool DNE on pgls
ed46a85 version: drop 'commit:' prefix on sha1
6f74e6b radosgw: fix compile warning
ab4d8b7 doc: Updated the cephx section of the toc for cluster ops.
256c665 doc: Did a little clean-up work in the cephx guide.
0818e1e doc: Added a new intro for cephx authentication.
d2afddd rgw: multiple coverity fixes
58020d4 test: Add a workunit for chmod
db97666 mds: explicitly queue messages for unconnected clients
2542dd5 client: fix implemented caps update on release/flush
b290dc3 MClientRequest: fix mode formatting
2528b5e (tag: v0.53) v0.43
0d3a53d msg/Pipe: correctly read from peers without MSG_AUTH
96e365b radosgw-admin manpage: Fix broken quotes
412efc1 admin_socket: fix '0' protocol version
a43ba9a rbd: fix striping feature bit addition
7957500 librbd: log why create failed when striping features missing
b7682c5 librbd: use map-based stripe method to avoid fragmenting io
d68a806 striper: expose method that works directrly from a map<>
5599eb7 Striper: move from Filer
ff304c8 librbd: implement user-facing image to image copy
6242059 librbd: factor out copy from image create/open/close
5d5863c librbd: rename get_size() -> get_current_size()
c7b5cdf filer: trivial unit test
17bb2c5 osd: include buffer_extents in ObjectExtent operator<<
e6c98e9 filer: more debug output
b4f2829 filer: fix add_partial_sparse_result
059ebac test_librbd_fsx: randomly vary striping on clone
a736cb0 librbd: allow striping to be specified for clones
819f939 filer: add debug printability for striped read result stuff
80ebcee filer: uninline StripedReadResult
fd8013a librbd: avoid read copy for c++ api read
ecb040c librbd: read_from_parent into a bufferlist
b1b3324 librbd: use bufferlist target for read_iterate()
a8042c7 librbd: make read methods target buffers or bufferlists
94de63a librbd: kill unused get_block_osd()
e9e197b librbd: kill legacy striping helpers
d556eda librbd: reimplement flatten in terms of child objects
cdb165e librbd: write sync read over an extent list
2660129 librbd: make rollback use new striping accessors
113f698 librbd: make trim_image() behave with new world striping order
0aeedf6 librbd: generate format_string in ImageCtx
3ae9f57 librbd: make read_iterate iterate over periods
e114cbf librbd/ImageCtx: accessors
6151899 librbd: reimplement striping
9e109e1 filer: add sparse result into a striped read result
08d1eb5 filer: make tail zeroing in stripe result assembly optional
6cd51fe librbd: remove callback from handle_sparse_read
3d010fc objecter: use StripedReadResult for scatter/gather read
3c2024d filer: helper to assemble striped read results into a single result
36a2245 buffer: add claim_prepend()
827ad53 filer: add optional buffer offset
c85b901 filer: add helper to map from object extent to file extents
c3f186e filer: use vector<pair<>> instead of map<> for buffer extent map
058c24f filer: include (numeric) objectno in ObjectExtent
a7f634a librbd: update python bindings for striped image creation
ae7271e rbd: document stripe unit options on man page
d7b912f librbd: document create3
79a365a librbd: populate struct ceph_file_layout for image
d54ca67 filer: generalize file_to_extents to take a format string
848a942 rbd: show striping parameters with 'info' command
efa1bea librbd: expose image striping properties
e0b4638 cls_rbd: fix snap key filtering
8143206 rbd: allow striping to be specified on image creation
d6501db librbd: allow striping to be specified on image creation
4ef9a3d librbd: load striping information when opening image
2e403ef cls_rbd: add stripe_unit, stripe_count metadata
18a3cee client: avoid possible null deref
0095a13 client: fix shadowing in inode ctor
d8bb685 client: init readdir fields
5511564 Makefile:  Add CRYPTO_C(XX)FLAGS to librdb
4c134a4 Makefiles:  Add ar-lib to .gitignore.
f525534 autogen.sh:  On some platforms, the m4 is created earlier.
d28ba52 autogen.sh:  Create m4 directory for leveldb submodule.
0cc828b Makefiles:  Update submodule reference to latestes for leveldb.
3ecd289 Makefile: update submodule reference for leveldb.
0219b66 leveldb: fix-up submodule entry.
071fdc2 Makefile: Improve test for boost system library.
7ea734c Makefiles:  Missing boost library should not be fatal.
151d940 Makefiles:  ignore the m4 macro directory
3658157 Makefile:  Updates to eliminates warnings, add test for boost system lib.
a1d8267 cls_rgw: init var in ctor
8d7c8e3 rgw: don't add port to url if already has one
662c69e ceph-disk-prepare, debian/control: Support external journals.
4db1251 logrotate: fix bash syntax
251649c doc: remove cephfs warning
168bd10 doc: fix file system recs
e0bc555 cephx: simplify signature and check code
d123e31 msg/Pipe: avoid duplicated code to randomize out_seq
389fac7 rgw: replace bucket creation with explicit pool creation
0ec4520 rbd: don't issue usage on errors
7477a08 doc: Added radosgw temp remove.
041081c doc: Minor clean-up.
94aec21 doc: minor clean-up.
fc34f16 rgw: fix compilation
15775f8 mon: drop command replies on paxos reset
06a8d95 doc: Editing and cleanup.
410ebac test: Allow randomized tests to be repeatable
baf54b2 client: Reset cache_name pos on dirp
8518115 rbd cli tests: copy.sh was looking for old version of rbd ls -l output
0442607 clean up of rbd functionality script
73462f0 cleaned up the perl module
bd47169 cleaned up the script
11c51dc radosgw-admin: don't try to parse date if wasn't specified
f268d4e ceph-debugpack: updates
9810517 doc: separate config from I/O in openstack diagram
4ebe8c2 doc: clarify rbd openstack docs
8fab972 gitignore: Update to match packaging changes and additions, rest-bench addition.
dd462ce configure.ac: Typo in human-readable description.
7ef0df2 mon: Monitor: resolve keyring option to a file before loading keyring
4eabe57 doc: simplify wording for rbd-openstack config
b83d38a doc: Add doxygen style documentation for libcephfs
9da5b53 test: Refactored testceph.cc into gtest framework
a00a240 test: Allow readdir test to be repeated
3b5b9ef libcephfs: Check that buffer is non-null
323a52e mds: Fix removexattr ENODATA error
629cad5 osdmap: fix null deref in dump
0406d0c osdmap: fix osdmap dump null check
5129620 mds: note fall-thru to please coverity
d68985f test_cfuse_cache_invalidate: check for errors
75bed10 mon/Elector: fix leak on monmap from peer
1a28cce test_cfuse_cache_invalidate: zero buffer
97c2f19 FileJournal: ignore osd journal size for block devices
df1d17f rgw: switch perm to uint32_t
f4a0b2d rgw: flexible attr fields
d4725c0 rgw: get bucket logging stub
c0b5370 rgw: check_disk_state also updates other object metadata
acb3053 rgw: set null termination explicitly
8731d0d cls_rgw: return returned ret code
58ad3bf rgw: add missing parantheses
b13a36c rgw: check NULL before dereference
148ba6e rgw-admin: pass object by reference
091bf45 rgw: fix leaks in certain error paths
ce94875 rgw: fix (im)possible leak
79b15a2 rgw: catch possible exception
5dbda13 rgw: initialize member variables at req_state
5a615f1 rgw: initialize data members
ddb1bb0 rgw: RGWObjState() initialize memebers
7eb366c rgw: initialize members at RGWRados()
d16e25f cls_rgw: check pointer before dereferencing
7ab3d2a rgw: multiple coverity fixes of uninitialized fields
b5ed23d rgw: trivial fix
e042d6b rgw: change size_t to ssize_t for string.rfind() result
d2159bf rgw: fix resource leak
e233dff Revert "admin/build-doc: Use installed Sphinx and its dependencies, when possible."
3091b5f rgw: virtual bucket affects resource lookup
0344c6b rgw: document admin, usage api
cb1fdb9 rgw: fix chunked object PUT for small objects
3d1dee2 rgw: abort_early should initialize formatter if needed
511e639 rgw: configurable set of enabled apis
d22aa6c rgw: add user caps
d8223fa rgw: usage trim
ed04755 rgw: usage show accepts more params
42d873e rgw: different formatters for different services
2b6a27d rgw: add a flusher to handle output data, simplify client api
cecd7af Formatter: fix XML formatter
02f7870 rgw: add rest-usage handler
fca6d3b rgw: REST resources init uses configurables
cea28f8 rgw: refactor protocol stacking
85f137d rgw: tie callbacks in different handlers directly to REST
b71b8b0 rgw: sed 's/_REST/_ObjStore/g' *
e153bce rgw: start moving usage management functions
a9c9f96 rgw: hide fcgi details from client code
c038c3f doc: Added admonishments to use separate host for clients.
fa66eaa mds: Reset session stale timer at end of open
48fc340 upstart: OSD journal can be a symlink; if it's dangling, don't start.
8d718ca osd: Make --get-journal-fsid not really start the osd.
435a5c1 osd: Make --get-journal-fsid not attempt aio or direct_io.
88fc8b7 ceph-disk-prepare: Use the OSD uuid as the partition GUID.
d6b065c debian/control, ceph-disk-prepare: Depend on xfsprogs, use xfs by default.
2e9afc2 ceph-disk-{prepare,activate}: Default mkfs arguments and mount options.
b40b2d6 ceph-disk-prepare: Avoid triggering activate before prepare is done.
79320ff ceph-disk-activate: Add a comment about user_xattr being default now.
ab84949 ceph-disk-activate: Use mount options from ceph.conf
8eeebe8 ceph-disk-activate: Refactor to extract detect_fstype call.
d94e421 ceph-disk-activate: Unmount on errors (if it did the mount).
a146f05 ceph-disk-prepare: Allow setting mkfs arguments and mount options in ceph.conf
0b934e1 ceph-disk-prepare: Allow specifying fs type to use.
18d1580 doc: clarify osd journal as a block device
075c321 rbd: ls -l format tweaks:
8a484be rbd: Make lock list adapt 'number' of msg (1 lock, 2 locks)
19147c0 rbd: set_conf_param() rewhack:
88ea027 Add si_t type for large-number "just the suffix, no space"
082746d client: Fix assert when stale arrives before open
0405a44 ceph-disk-activate, upstart: Use "initctl emit" to start OSDs.
1f3a50a ceph-create-keys: Refactor to share wait_for_quorum call.
4302f12 ceph-create-keys: Create a bootstrap-osd key too.
a53a4a2 client: Don't keep sending SESSION_REQUEST_OPEN
2d6953a Revert "rbd: gracefully handle extra arguments"
20496b8 OSD: separate class caps from normal read/write
0d48879 rbd: gracefully handle extra arguments
aed3612 MOSDBoot: fix compatibility with ~argonaut
f1ad419 qa: report success if race is not detected
37ffb27 qa scripts: Replace cut -f 1 with awk '{print $1;}'
bed5536 rbd: Use TextTable for showmapped and lock list
c109329 librbd: simplify math
61b2e4d rbd: use TextTable to implement ls -l
fb88683 Add TextTable class for table output
9889d81 librbd: fix error handling in get_parent_info
3ba7ab2 doc: Whitespace cleanup.
790b508 doc: rst syntax fixes.
36f1698 rbd.py: Fix docstring syntax of list_lockers().
2411ba6 rbd.py: Docstring syntax.
c65ffe9 admin/build-doc: Use installed Sphinx and its dependencies, when possible.
d5c3c47 mon: Elector: clean ack set on election start
35f5eff mon: Elector: bootstrap on new monmap from elector
a6ba95f mon: dump formatted crushmap on report
36efcb5 mon: do not tick() until all paxos instances recover
fec1912 client: Fix #2215 with cache inval in thread
847728e client: Remove unnecessary checkafter parameter
68fbbea ceph-fuse: Test for fuse cache issue (#2215)
2de5670 mds: make migrate_stray() specify full path
74ea0cb doc: update release-process.rst
9cabbb2 mds: fix stray reintegration check in handle_client_rename
2519bd3 doc:  Added description of ceph release process.
67a201d Avoid sign-extension of non-magic Message* values
fcc987b release: note possible osd caps incompatibilities
9362f72 doc: add rbd example to ceph-authtool man page
2e366ea OSD: deprecate CLS_METHOD_PUBLIC flag
7ea8f16 doc: update ceph-authtool man page for new osd caps
13ba5ec objclass: require each class method to have a flag set
135c85a OSDCap: add separate caps for class read and class write
bf333d8 OSDCap: allow runs of spaces anywhere
9e8f69a qa: try to reproduce a race more times
e8df6a7 mds: Avoid creating unnecessary snaprealm
5673523 mds: Properly re-calculate mdsdir inode's auth bit
60b93a7 mds: Trim non auth subtree directory
d2861d9 mds: Properly update dirty dir fragstat during log replay
f8110cb mds: Allow export subtrees in other MDS' stray directory
1cc28d5 mds: Avoid save unnecessary parent snaprealm
824e593 mds: Set metablob.renamed_dirino in do_rename_rollback()
35dc221 mds: Fix xlock imports
bc1e52f mds: Allow rename request for stray migration/reintegration
c6c6de5 mds: Add finish callback to waiting_for_base_ino wait queue
7004829 mds: Consider stopping MDS when finding peer inode
b8aeb76 mds: Don't drop client request from MDS
60a5d78 doc: first draft of full OpenStack integration
e2f6ae0 filejournal: check lseek() return value on darwin
13b841c osdmap, mon: optional dump 'osd tree' in json
14de7a5 client: Resolves coverity NULL dereference issue
d250bb8 libcephfs: destroy cmount on ceph_shutdown()
965ab90 filestore: check ioctl SYNC return code
8237f68 obj_bencher: fix leak in error path
709ff14 PG: assert auth is not end in _compare_scrubmaps
7ca754b FileStore: copy paste error _do_copy_range
106dc66 doc: Removed languages from librados in tech-specific stack diagrams.
763ae7c doc: Added stack diagram for rgw. Noted NO MDS. Corrected namespace comment.
2e78047 doc: Removed a setting we can ignore for now.
c3f158f doc: Minor updates to filesystem settings.
8799ef6 doc: Added journal settings to the config TOC.
d962e89 doc: Completed a journal configuration reference. Journaler is separate.
1166f3a Compatibility code for session authentication; mostly passing keys around to where they're needed.
2b56e80 Code to allow pipes to be prepared to sign messages and to call the authentication methods for signing and checking.
27974c4 Changes to cephx protocol to handle session authentication.
cc5d05b Changes to existing None and Unknown authentication protocols to handle null session authentication.
7cce4d4 Changes to basic authentication class to enable session authentication
3548806 New documentation about Cephx protocol and session authentication.
12bba4a OSDCap: parse spaces explicitly
b57b86a test: remove commented out test cases
32a6394 logrotate: check for executables to avoid cron errors
2bf3f8c filestore: check lseek64 return value
409fbb7 filestore: check ioctl WAIT_SYNC return value
15ebc0f filejournal: check lseek64 return value
ef393b5 mon: fix large pass by value
5defa92 mon/PGMap: fix nearfull check
72ca956 test_libcephfs: fix test
7af24bb libcephfs: fix test workunit
1ad339f mon: fix recovered_peon assert
238b497 mon: debug recovered_{peon,leader}
b8cbe26 mon: fix recovered_peon assert
1708cf8 mon: debug recovered_{peon,leader}
6f7067f mon: avoid large pass by value in MForward
4878fdc mds: fix MDSCacheObject pin printer * logic
a3e42d8 mdsmap: init fields in ctor
1cebd98 mds: fix potential overflow
694a4f0 mds: init atid in context
18668ba mds: init log layout in MDCcahe ctor
7594e9c mds: simplify get_dirfrag()
bef66e0 mds: fix mlogger shutdown
4aef86f mds: fix leak from get_current_dir_name
c517fde librbd: simplify math
7779901 mds: add assert to lock path
816bb7e mds: fix uninit Dumper fields in ctor
e9f350f mds: fix fd leak in dumper
e604de1 mds: fix uninit Capability::last_issue
82aeced mds: fix uninit field in CInode
1acd109 mds: fix typo in rsubdirs warning
310e486 mds: init CDir fields
5e51f55 mds: avoid useless have_inode() call
6047325 osd: pass by value
af11531 osd: fix coverity NULL warning
ada0db3 osd: logger is never NULL
020856b osd/PG: remove redundant NamedState
0769a1d osd: init all vars in PG::NamedState
09f602d ceph tool: fix cli test
7827c56 mon: fix uninit var warning in session startup
f4c34c0 filstore: fix leak of fd in write error paths
e0820d2 filestore: fix fd leak
dfac9b3 mds: dentry always has dir
d5f8e42 librbd: init value in CopyProgressCtx ctor
e43f4ff librbd: fix overflow assert check
5a0461a ceph tool: update url in man page
f1f7ac7 ceph tool: document 'ceph osd map ...' command
2e1ea3f OSDCap: parse 'pool=<poolname>' in addition to 'pool <poolname>'
c925ce8 FileStore: use fresh vector for calls for listing collection
67ab965 Makefile.am: recompile small file instead of libosd for unit test
524a438 test: add more OSDCap unit tests
142d902 OSDCaps: fix allow_all()
3090366 OSDCap: fix output operators for caps
47a2f41 OSDCap: fix typo in comment
42a63f3 OSDCap: remove grants added during failed parsing
e61b965 osdmap: restore stream format
70e35ba cephtool: fix resource leak
779e0f0 cls_refcount: fix uninit vals in ctor
67cacee rados: fix error paths in do_put()
903f60a osdmaptool: fix pg_t::parse() return value check
d5b4f9a osdmaptool: check return values
0b3c5dc objecter: fix dereference after null check
b1d8513 objectcacher: fix uninit var in ctor
62273b5 objectcacher: fix uninit it ctor
e5103b4 objectcacher: avoid confusing coverity
a1f9dbc journaler: uninit var in ctor
7b90139 journaler: uninit var in ctor
50460f9 filer: fix overflow
d2cbe1f MOSDFailure: avoid big pass by value
cb0d969 MMonJoin: avoid large pass by value
e92b92b MRoute: avoid pass by value
02e4839 messages: uninit values
b5fb298 msg/Messenger: avoid large pass by value
797d3cc msg/Accepter: check getsockbyname() return value
ae1c38f LogEntry: fix uninit in ctor
2381f12 utime: restore ostream state
95dca98 stringify: use const ref
884daeb addr_parsing: fix memory leak
98da9f9 pidfile: fix fd leak from pidfile_remove()
687d6d5 crushtester: fix uninit var
b7cf603 crushtester: avoid divide by zero
ffe0e09 crushtester: avoid divide by zero
7490032 adminsocket: fix sock-fd leak in failure path
af5f143 PrebufferedStream: avoid dereferencing end()
cf6639a perfcounters: remove unused members
5846e27 obj_bencher: protect with lock
f577c82 obj_bencher: possible divice by zero
ce06339 lockep: fix leak in failure/assert path
4bd2799 ipaddr: fix buffer overrun on ipv6 prefix of 128
6f89765 config: don't leak buf on dump config
66f7c41 buffer: init data val in ctor
05dc45f buffer: restore stream state after hexdump()
9bd673f adminsocket: init vars in ctor
dfb9488 adminsocket: change failure test
3ec32c9 adminsocket: check return value
73d8549 workqueue: reset heartbeat timeout under lock
bdadc4e MemoryModel: init in ctor
8d4e6e2 LogEntry: init in ctor
6984037 doc: Added commentary for BMC and VLAN.
3223b3d ceph.spec.in:  Build rpms with nss instead of cryptopp.
53c1db9 vstart.sh: let you specific specific ip to bind to
0ee6a95 doc: Added commentary for BMC and VLAN.
cc4dcf6 test: add more OSDCap unit tests
de6e0d8 OSDCaps: fix allow_all()
e903ca7 OSDCap: fix output operators for caps
1d747d1 OSDCap: fix typo in comment
30e10a9 doc: RST cleanup for RPM dev package installs.
2fc29fe doc: Removed old ops directory structure and redundant files.
ff96789 client: add WARN_UNUSED_RESULT to client init func
27c7c71 client: Remove unmaintained ldceph.cc from tree
a1cfe74 client: Mods to fix #3184 for messenger shutdown
1d231f9 Refresh manpages from .rst sources
3c1e2e1 manpage-howto.txt: note that man/Makefile.am may need update too
eb27f9a Add howto for changing man pages
d37ca79 mon: update 'auth' help/usage
1d552a4 rados: fix man page
8740ddf doc: fix rpm url (part deux)
6c5c939 librbd: fix includes for portability
c9266d6 rgw: check that realloc succeeded
4513397 ReplicatedPG: track incoming pushes with perf counters
3f952af PG: explicitely delay ops on backfill_pos
0a2f827 PG: last_complete might be outside of the log
4c4c9d5 doc: fix rpm url
214327e rgw: copy_object should not override ETAG implicitly
25a9620 FileJournal: correctly check return value of lseek in write_fd
303f640 OSDCap: remove grants added during failed parsing
3144690 doc: fix injectargs syntax
e488594 (tag: v0.52) v0.52
9e9c5f2 osd: make 'pg <pgid> revert ...' command idempotent
175465b cephfs:  Fix breakage of cephfs link
8c3bfaa doc: update ceph-authtool man page
3b0e120 doc: clarify rbd caching
fa3a747 doc: fix typo in dev layering notes
f0a5c56 doc: small fixes to the OpenStack page
8964f10 doc: remove MDS from diagram describing RBD and OpenStack
f586add doc: extend QEMU/RBD docs
4ea9b9f doc: minor fixups to rpm install doc
85b0151 doc: draft rpm installation
cc9d7da cephfs: Fix warning - use err instead of errno
e8c734b client:  Fix compile error: bad {0} initializers
67535f2 rgw: different test for multi object delete
cd15405 client: Fix coverity UNINIT_CTOR defects
844ffd6 client: Fix coverity 716909 [FORWARD_NULL]
68dea67 client: Add asserts for coverity bugs
10186fe client:  Fixes coverity defect 716891
7945f8b client:  Fixes coverity defect 716890 [DEADCODE]
65700fc client: Coverity fixes for 716841-716844
bc45cde cephfs:  Fixes for coverity bugs 716840 and 716970
bba1766 rgw: copy_object should not override ETAG implicitly
a9e3041 mds: Move check for empty path lookup to getattr
c689556 PG, OSD: reject backfills when an OSD is nearly full
a6b0d55 timer: add unsafe callbacks option
5b232a6 doc: Fixed typo.
9f6ee01 JournalingObjectStore: lock journal_lock at top of journal_replay
e022585 FlatIndex: terminate dir_name buffer passed to strncpy
d3bd9cb FileStore: uninit var in ctor OpSequencer::parent
0e73313 FileStore: fix omap_store and dbomap leaks in mount
3bef5eb FileStore: don't leak r in mount
f9c5ac3 FileStore: fix fd and tmpfd leaks in _detect_fs()
b99979c FileStore: fix leaked fd and check lseek in _test_fiemap
620701d FileStore: fix filedescriptor leak in mkfs
33f9618 FileStore: fix statfs,fstatfs,fstat ret val checks
ea91ee5 FileJournal: uninit var in ctor aio_ctx FileJournal
147e90c FileJournal: uninit var in ctor FileJournal
8ec08c2 FileJournal: check return value of lseek in write_fd
66b1eb2 rgw: better protocols separation
35cd5f3 rgw: clean up ops initialization, completion
47983df client: Fix for #3184 cfuse segv with no keyring
f310a1c mds: fix ino release on session close
26882da client: Put all libcephfs gtest tests into one bin
c92e1dd mds: Handle empty relpath from client getattr
5c8aea7 FileJournal: fix potential overflow in create()
5bf6d22 FileJournal: fix memory leak in _open_file
2455147 doc: Added an anchor to enable linking from CRUSH map section.
c8be464 doc: Clarified descriptions, and improved IA and navigation.
2b54391 client: Fix to client filepath initializing
d5bcf41 mon: include auth mon's paxos version on latest gv calculation
6b35b88 DBObjectMap::_get_header fix shadowed var causing dead code
8a3efbb osd_types: uninit var in ctor pg_query_t
3e4f379 osd_types: typo in object_info_t::decode for struct_v==6
4f621a1 ReplicatedPG: add assert to snapset.clones search
10e1ac7 PG: uninit var in ctor Scrubber
8e214ed PG: big param passed by value, C_PGActivateCommitted
7808e50 OSDMap: clear setprecision in print_osd_line
c683fa8 OSD: big parameter passed by value, send_still_alive
61545de librados: cleanup: use Mutex::Locker
b581464 librados: protect lookup_pool, get_pool_name with lock
681f614 mds: Adjust mydir auth when starting MDS that was stopped cleanly
37881a3 mds: Fix SessionMap::is_any_state()
cd78cd2 rbd: fix leak of dir handle in get_rbd_seq
84fa74e rbd: fix leak of fd on error when reading an entire file
2d44a1a rbd: fix leak of fd when importing an image from a file
dd10b1e secret: close fd on error
2371352 librados: always free buffer allocated by md_config_t::_get_val
e6ced04 librados: fix use without NULL check in rados_pool_list
f35ab0f librados: init everything in default IoCtxImpl ctor
68b1fd6 rbd: make sure we have a device before trying to unmap
399fc01 librbd: fix list for more than 1024 format 2 images
52943a6 librbd: don't allow order to be more than 64
74b85e7 librbd: use 64-bits to shift order
11da12f librbd: init cookie in WatchCtx ctor
404d45b librbd: init m_req in LibrbdWriteback::C_Read ctor
38aeb00 librbd: initialize on-disk header in ImageCtx ctor
efb2a57 librbd: init everything in default AioRequest constructors
eccf60e librbd: fix coverity warnings for AioCompletions
b841df0 doc: fix broken link in command reference
24ef2ef librados: init all variables in ctors
4015343 PG,osd_types,PGMonitor: make backfill state names more descriptive
1fafd99 PG: add CEPH_FEATURE for backfill reservation
3ebf52d doc/: added documentation for backfill_reservation
796b9b6 osd/: add PG_STATE_BACKFILLING
b54a0a2 osd/: add backfill reservations
fa21924 test_librbd_fsx: add missing break statement
c2cf8eb librbd: assert overflow will not happen
e653816 rgw: url_decode should allocate extra byte for dest
200ed2b mds: Adjust mydir auth when starting MDS that was stopped cleanly
0571535 mds: Fix SessionMap::is_any_state()
1747c1c rbd: fix leak of dir handle in get_rbd_seq
55f7230 rbd: fix leak of fd on error when reading an entire file
5b22c1d rbd: fix leak of fd when importing an image from a file
2c1b7f2 secret: close fd on error
4567a6d librados: always free buffer allocated by md_config_t::_get_val
a677f47 librados: fix use without NULL check in rados_pool_list
a5c7776 librados: init everything in default IoCtxImpl ctor
ee1fe15 rbd: make sure we have a device before trying to unmap
a204058 librbd: fix list for more than 1024 format 2 images
7df76de librbd: don't allow order to be more than 64
118c212 librbd: use 64-bits to shift order
cd3d3aa librbd: init cookie in WatchCtx ctor
073786e librbd: init m_req in LibrbdWriteback::C_Read ctor
dea894d librbd: initialize on-disk header in ImageCtx ctor
c1ffe08 librbd: init everything in default AioRequest constructors
3486050 librbd: fix coverity warnings for AioCompletions
86b3e8a OSD: add init and shutdown for OSDService
e177680 librbd: ensure header is up to date after initial read
5cba778 librados: note that watch's version param is ignored
7782ccb doc: Added messaging section to ref. Placeholders. Definitions needed.
8853469 doc: Added space for Emacs users.
446e68c doc: Added journal section placeholders. Definitions needed.
04ddd14 doc: Fixed hyperlink.
abf1bf4 doc: Clean up and added placeholders for new definitions.
78439e9 doc: Fixed hyperlink.
873ccdf doc: Fixed hyperlink.
441ae00 doc: Restored "Differences from Posix" to /doc/dev
153fb3b doc: Adds package deps to list in README
e32ee37 librados: cleanup: use Mutex::Locker
d1de1f1 librados: protect lookup_pool, get_pool_name with lock
720a301 mon: tolerate no session on no_reply()
a794c93 ReplicatedPG: set op return version to pg version on ENOENT
53b18e3 osd: catch decoding errors from client ops
ef29d90 osd: some whitespace
a73777a osd: return -EPERM on insufficient caps
3b4f754 msg/Accepter: assert that listen_sd always >= 0
f13eaf4 msg/Accepter: fix race in accepter shutdown
0c7637d rgw: prepare_update_index should not error on system bucket
9aa467d ceph-object-corpus: update with v0.52 objects
58ad4dd uuid: include unistd to make encode testing work
0c07607 qa: move all rados class unit tests into qa/workunits/cls
420baa9 Makefile: rename test_rados_api_cls_lock -> test_cls_lock
69743c1 vstart.sh: Alternative fix for vstart.sh -n
c9e81fd Makefile.am: librdb_fsx test needs math library on some platforms
93cd73f doc: link to full 0.48.2 changelog
8276fa2 mds: Clean up finished two phase commits
4d39553 cfuse: Define CEPH_INO_DOTDOT (3) for top-level parentdir
671c4c3 ceph_common.sh: 'hostname -s' (instead of cut ...)
51d5815 doc: v0.48.2argonaut release notes
fd205da cfuse: Add the parent entry (..) for a top-level readdir
d5a048c doc: Removed legacy doc. Not needed.
9fa5720 doc: Removed legacy doc. Not needed.
64198f8 doc: Removed legacy doc. Not needed.
d50aab8 doc: Added enabling Swift access to rgw config.
4958063 doc; Added troubleshooting to index.
a83f503 doc: Copied contents of rgw troubleshooting over to the new ops section.
280aeaf doc: Reverted so that we don't force yes or non-interactive.
9c8061f doc: Removed legacy usage.
b3651da doc: Cleanup, spell check, grammar check mostly.
b311a40 doc: Updating the index to remove legacy and uneeded entries.
5e9158e Fix description for --nodaemon
0a83cb9 mon: clean up recovered_leader() checks
50e7251d Abort on failure
31f430a Fixup usage to reflect options available
faddb80 Swap current dir (.) with CEPH_BIN for OOT builds
0f7c516 Move keyring option to global section
259fffbe mon: require MON_GV protocol feature
879ce01 mon: move setting of ondisk GV feature into helper
414cd1b mon: do not issue global versions if quorum does not support the feature
3baae15 mon: set new incompat GV feature when paxos stabilizes for the first time
db04ce4 mon: make MRoute encoding backwards-compatible
e068bd7 rbd/copy.sh: fix typo
ed43d4d rbd/copy.sh: fix typo
7a3d1e6 librbd: bump version
855dff6 cls_rbd: remove locking methods
8f2a0d9 rbd: add locking commands
b66ef43 qa: update rbd tests and runner
3a9e665 librbd: use generic cls_lock instead of cls_rbd's locking
69ee9af cls_lock_client: add ObjectOperation-based get_lock_info
6dcbbbb cls_lock_types: add missing include
67bbcf2 cls_lock_client: return error when decoding fails
d1252ea cls_lock_client: fix indentation
bf2e489 cls_lock_client: change modified reference parameters to pointers
2dca3a8 cls_lock_client: clean up reference parameters
e71fdc7 cls_lock: fix some spacing
b69a959 cls_lock: specify librados namespace explicitly
55673ba radosgw-admin: fix cli test
3372f14 rbd: only open the destination pool for import
ad2ba8e qa: test args for rbd import
d14a31d rbd: make --pool/--image args easier to understand for import
a583a60 librbd, cls_rbd: close snapshot creation race with old format
a4833bb librbd: fix delete[]
3401f00 doc: clarify rbd man page (esp. layering)
582001e rbd: add --format option
a112419 librbd: prevent racing clone and snap unprotect
e85a238 rbd: add "children" command, update cli test files
bd94058 librbd: add {rbd_}list_children() methods
f6b2f79 mon: make heartbeat grace and down out interval scaling optional
be50391 mon: add tunable to control laggy probability weighting.  simplify decoding.
5499778 mon: apply grace period scaling to mon_osd_down_out_interval
2ad62d5 mon: decay laggy calculations over time
abd2ae7 mon: factor reporter lagginess into grace adjustment
adf0fe6 mon: scale heartbeat grace based on laggy probability, interval
3f51d31 mon: check failures in tick
09b251c mon: clean up osd failure logging
a3e8ed1 mon: reply to all reporters when an osd is failed
7952c35 mon: locally apply osd heartbeat grace to failure checks
3eb7341 mon: no_reply() to failure messages we don't reply to
d328a28 mon: send 'null' reply to requests we won't reply to
e06818b mon: refactor osd failure report tracking
66f31c1 mon: adjust or decay laggy probabilities on osd boot
e9f051e osdmap: include osd_xinfo_t to track laggy probabilities, timestamps
b64641c osd: include boot_epoch in MOSDBoot
4f1792d osd: include failed_for in MOSDFailure reports
6f5c4a9 PG: need pg lock to read osdmap_ref
59f8587 OSD: in enqueue_op, cannot read *pg since we don't hold the pg lock
78a322b OSD: remove some commented out pg->unlock calls
ed18eea :doc: Changed rados.gateway to radosgw.gateway. Start with /etc/init.d.
900e4ce workqueue: allow thread pool size to be adjusted dynamically
5e095ec :doc: Trimmed up the stack diagram and fixed a few hyperlink refs.
5350830 :doc: Modified hostname to hostname -s.
7c178be :doc: Modified hostname to hostname -s.
5936ded :doc: Modified hostname to hostname -s.
fa93ea1 rgw: fix unused warning message
496c5d4 rgw: fix uninitialized var in error message
6bc1ef0 rgw, cls_rgw: a tool to rebuild bucket stats
11b80ae :doc: Changed title to RBD from RADOS. Clearer.
9829039 :doc: Made notice to stop i/o a warning. Initial format clean up.
84c50dd :doc: Added discussion and stack diagram. Initial format cleanup.
171fcd8 :doc: Remove legacy usage. Initial format cleanup.
08e9fc0 rgw: obj_stat() returns object version (epoch), use it
15e97d7 cls_rgw: complete_op() only skip update if epoch is non zero
3167228 cls_rgw: update index stats based on correct category
0f82a39 rgw: fix suggested object size
6a054ea rgw: set exists flag when suggesting existing bucket entry
b12c147 cls_rgw: change scoping of suggested changes vars
c11e05f test/rgw: add a test for index suggest
1217538 cls_rgw: configurable tag timeout
64b9a89 test/rgw: add bucket index unitest
519ed24 cpeh.spec.in:  Don't package boto_tool.
6ff23bb cls_rgw: client api for bucket index init
b03adda cls_rgw: add client api calls for index suggest
1bf345e doc/config-cluster/*: update recently added/changed config options
91f3893 :doc: Title change for clarity. Initial formatting cleanup.
88dd90e :doc: Removed old rec section.
2f73c07 docs: add radosgw internals and usage testing section
3369ea3 :doc: Notes to add data directory. Notes to address key with escape char.
0398b9f :doc: Added note to clarify use of host=shortname.
3d86194 :doc: Rewrote architecture paper. Still needs some work.
fafb195 :doc: Removing old control.rst. New one is in ceph/docs/cluster-ops.rst
f60ea38 :doc: Removing old init section.
4f3642c rbd: only open the destination pool for import
46883a5 ceph.spec.in:  Add new rados libraries, libcls_kvs.so and libcls_refcount.so.
cb49823 osd: default journal size to 1 GB
6b0c9ff filejournal: do not enforce that bdev size >= osd journal size
de93044 remove obsync
f1819f0 :doc: Changed from bullet list to section titles.
18cf1b6 :doc: Usage consistent with Tyler's notes.
da1a9f9 :doc: Corrected a path.
00e58a5 :doc: Addresses DOCUMENTATION #3155
4251d78 rgw: update cache interface
6756f9a rgw-admin: add cluster info command
7fe1f0b rgw: simplify create_pool
ff0f88a rgw: store cluster params in a special object
a150cf3 rgw: document how refcount objclass works
539a8c7 cls_refcount: add a unitest
93218ae rgw_rados: adjustments for refcount objclass
cfe4830 rgw: set atomic context for copy operation src and dest
3cd17fb rgw: copy of objects using refcount
20c7852 rgw: use refcount put instead of obj delete where needed
78d6a60 qa: test args for rbd import
fd4b294 rbd: make --pool/--image args easier to understand for import
0bf7723 doc: fix indentation
cf6899d Adding RBD CLI test automation script, RbdLib and cephscrub.sh
539786a osd: move permissions check into pg op thread
221fc78 osd: drop unnecessary can_discard_request() in PG::queue_op()
2223ac7 osd: introduce PG::_qlock to protect queuing
1425281 mon: share quorum features on election victory
ebdfd4b mon: refactor monitor feature checks
e84f2e4 mon: move feature read/write into helpers
fa86f7a mon: move start-up feature check into static helper
4d333ad mon: track when peon paxos machines activate
e91b16a mon: fix paxos completions
85ed24a mon: share global version with proposal, collect, commits, slurp, etc.
39e5138 mon: specify/allocate a global version at begin time
f4210f8 mon: include global versions in paxos, slurp messages
8619d87 mon: provide global paxos version helpers
6a1d34a mon: allow all paxos instances to recover before going writeable
247ba35 mon/MonitorStore: store global version (gv) alongside paxos values
d697b54 test/rados-api/aio.cc: use read operation for omap cmp test
c1372f9 osd/OSD.cc: Fix typo in OSD::heartbeat_check()
e89cab6 osd/ReplicatedPG: set truncate_seq when handling CEPH_OSD_OP_APPEND
c73c440 Makefile: rename 'core' -> 'base', add a few things
24c3cae librbd, cls_rbd: close snapshot creation race with old format
31560ca Rejig the way the shared libraries are processed so that manual postinst/postrm scripts are not required for lib* packages, ensuring that the .so's in the ceph package are not detected
9474765 upstart: Give everything a stop on stanza.
60e273a upstart: Start mds,mon,radosgw after a reboot.
fb6c5c3 upstart: Use "ceph osd crush create-or-move".
d8cb19d upstart: Add ceph-create-keys.conf to package.
ced6c2c :doc: Fixed typo.
de811db obsync: if OrdinaryCallingFormat fails, try SubdomainCallingFormat
4e5283d ReplicatedPG: do not start_recovery_op if we are already pushing
656ab15 osd: fill in user log entry last after snapdir tran
a4fb9c1 :doc: Added tunables to cruch-map.rst.
911433f :doc: Removed old pg tuning. New section was added.
9256a29 :doc: Trimmed the old ops tree. Will remove when all porting verified.
203ba59 :doc: Trimmed the tree for failures/troubleshooting. RGW remains.
662fd03 :doc: removed. RBD now has its own section.
e614100 mon: adjust number of req args for loc
344fef7 mon: move loc map parsing into a helper
50c957d crush: constify loc map arguments
9636991 crush: add const string& versions of accessors
babef41 doc/control.rst: add 'osd crush create-or-move ...'
dd9819e doc: make note of crush usage change
0817b94 mon: make redundant osd.NNN argument optional
01a8146 ceph tool: add 'osd crush create-or-move ...' to help
44fa233 :doc: Deleting this. Wrote a new one, but will be revised a bit soon.
32f30f9 :doc: Removed old ops pool section.
0313365 :doc: Removed old authentication section.
d1053d9 :doc: Removed old resize OSD section.
ad909f3 :doc: Removed old mon resize section.
7d881dc :doc: Removed from old ops doc. Still needs to be composed though.
bf342d1 :doc: New cluster ops section addresses the todo.
e844989 :doc: Removed old OSD troubleshooting. New version to be updated shortly.
72f802c :doc: Removed old monitor troubleshooting. New version to be revised shortly.
fe609b7 :doc: Removed old mds troubleshooting. Still needs to be composed.
a4733b8 :doc: Removed old cephfs disucssion.
d4e00bc :doc: Trimmed toctree to last bits of legacy data.
922c59f :doc: Updated FAQ with a friendlier message.
f1b605c mon: parse '<id>' or 'osd.<id>' for 'osd crush create-or-move ...'
1da73e5 mon: fail on trailing characters after parsing numbers
b2409a2 mon: 'osd crush create-or-move <id> <initial-weight> <loc ...>'
adedd6b crush: create_or_move_item()
588b263 crush: get_item_weight[f]()
f8d9f86 osdmap: 4 decimal places for osd tree
d51d7b3 rgw: fix rgw_dir_suggest_changes() to set header_changed
f8c365e rgw: add missing ret code check
0cfac6d librbd: bump version
d77205d objecter: remove the now-unused "registering" flag on LingerOps
33def83 cls_rbd: remove locking methods
eeaa92c rbd: add locking commands
fd1c634 qa: update rbd tests and runner
18427ec librbd: use generic cls_lock instead of cls_rbd's locking
c4c4b20 rgw: encode total usage for backwards compatibility
06290f6 rgw: configurable swift auth entry point
03136d0 osd: fill in user log entry last after snapdir tran
928865b PG: create macro for simple events
e2129ab :doc: Fixed broken hyperlinks.
9bbe73c :doc: Addresses Documentation #3096. Also added new information.
793bebb rgw: rgw-admin filter usage by categories
9d878bf gitignore: Remove "nbproject", no idea what that even is.
ddaac56 rgw: usage now account categories
a5b9ba7 rgw: fix usage
3fed44a :doc: Minor tweak to heading text.
6957ae7 :doc: Modified the index page to point to the new cluster-ops section.
4ff60c7 :doc: Made minor changes to restructuredText headers.
8fa81ab :doc: Added comment redirecting editors to new page location.
c22ca72 :doc: Added index/toctree page for cluster ops.
b8dfe82 :doc: Added new auth settings to reference doc.
199dc5d :doc: Refactored and moved control.rst page.
d90fea6 :doc: Consolidated file system recommendations.
ab020da :doc: Minor syntax update.
64b9e9f :doc: restructuredText syntax corrections.
c94034a :doc: Added index page. This will be refactored again soon.
32398f3 :doc: Refactored and moved to ceph/docs/cluster-ops/pools.rst
c53a110 :doc: Removed. New section is in ceph/doc/cluster-ops/authentication.rst
f1c869c :doc: Fixed heading syntax.
78c844e PG: clear want_acting in choose_acting if want == acting
5868b00 cls_refcount: a new class for objects refcounting
df89c96 osd: initialize pg_log_entry_t::invalid_pool in default ctor
3fd5914 doc: explain what scrub, deep-scrub, and repair actually do
9013efd osd: deep scrub, read file contents from disk and compare digest
a0b04bc buffer: class for efficiently calculating CRC32 of >= 1 bufferlist
a08a28d pg: store scrubber state in its own object
f504679 osd: chunky scrub, scrub PGs a chunk of objects at a time
79b3054 crush: change default type from 'pool' to 'root'
a83fb79 FileStore: get objects whose names fall within a range
8bad708 pg: change _scrub() to take out parameters as pointers
195eda6 Monitor.cc:  Added include for limits.h.
2266876 :doc: Added a section for adding and removing monitors. Singificantly re-factored.
c1ff83d :doc: Incorporated Joao's feedback into the reference material.
0c78a03 docs: Add CloudStack documentation
2b8690b :doc: Added recovering from OSD failures. Will be re-factored again soon.
9db84be doc: Added monitor failure recovery. Will be re-factored again soon.
6dff5d5 doc: Re-factored adding an OSD.
32b44cb doc: Minor updates.
d233271 doc: Added admonishments for Ceph FS per http://tracker.newdream.net/issues/3077
4b774b6 doc: Updated to incorporate Sage's changes.
327969c doc: Added anchor references.
a50f73e doc: Refactored the debug section to point back to reference.
31d6328 doc: Added QA reference to --valgrind option.
ccfd841 Revert "ReplicatedPG: fill in user log entry last after snapdir tran"
fd76083 rgw: use prefetched buffer even when ofs != 0
4d2a05f rgw: implement user manifest (swift)
40fd6ba OSD::handle_pg_stats_ack: grab pg refcount while processing pg
0aad546 ReplicatedPG: fill in user log entry last after snapdir tran
1db67c4 PG: In Active, don't transition to WantActingChange
035cf96 msg/Pipe: kill useless onconnect arg
31b1c2f doc: Added PG states.
ef6814d doc: Promoting PG concepts into mainline docs. Redundant version still in Internals.
25b7593 doc: New section on placement groups.
3fcdbe4 doc: Moved from configuration to operations. Updated with new info.
9da4966 doc: Created a more robust doc for monitoring a cluster.
743e0b8 doc: Consolidated start and stop.
3e56200 doc: Added a new "Data Placement" overview section for added continuity.
2a1ac68 doc: Added a new CRUSH map section. Will need to incorporate new tunables info.
fc093f8 doc: Moving new auth section from configuration to operations.
e09b265 objecter: fix osdmap wait
c1e000b doc: Fix leftover "localhost" mention.
3302a2d doc: Added debug ref to toctree. Trimmed title names a bit.
4609639 doc: Added "how to" for debug/logging config. Trimmed titles too.
7465dbe doc: Added logging reference under configuration section.
4ab9f02 msg/Pipe: do not special-case failure during connect
7b6c773 doc: Added runtime configuration example.
73d016f test, key_value_store: added distributed flat btree key-value store
bfa9a59 vstart.sh: -r to start radosgw
8578b21 cls_lock_client: add ObjectOperation-based get_lock_info
e06031d cls_lock_types: add missing include
8ac8177 osd: defer backfill with NOBACKFILL osdmap flag is set
e920a61 Clarify CodingStyle with respect to tab compression of space runs Signed-off-by: Dan Mick <dan.mick@inktank.com> Reviewed-by: Greg Farnum <gregory.farnum@inktank.com> Reviewed-by: Josh Durgin <josh.durgin@inktank.com>
fb37917 Fix rados put from '-' (stdin)
49375a0 osd: pause/unpause recovery based on NORECOVER osdmap flag
07ad925 osdmap: add NORECOVER flag
0a28d79 osdmap: add NOBACKFILL flag
b273c37 PG: do not update stats in ReplicaActive from info
5ac52de crushtool: Miscellaneous cleanup.
fd4d567 osd/osd_types.h: fix pg_history_t::merge copy paste error
84216d5 osd/Watch.h: uninit var in ctor Watch
75acb7b osd/ReplicatedPG.h: uninit var in ctor RepModify
0e2efbc osd/ReplicatedPG.h: uninit var in ctor OpContext
f30faca osd/ReplicatedPG: pass PGPool to ReplicatedPG ctor by ref
6fbf9e6 osd/PG.h: uninit var in ctor NamedState
471787f osd/PG.h: uninit var in ctor OndiskLog
f84e776 osd/PG.h: uninit var in ctor IndexedLog
1063673 osd/PG.cc: PG constructor pass PGPool by reference
9a93eb3 osd/OpRequest.h: uninit vars in ctor OpRequest
d41c253 osd/OSDMap.cc: uninit vars in ctor struct qi
d235626 osd/OSD.h: big parameter passed by value, publish_superblock
db9e120 osd/OSD.cc: OSD::shutdown() leaks lock
b041260 osd/ClassHandler.cc: uninit var in ctor
e0b8cb7 osd/ClassHandler: uninit var in ctor
50ed1fc monclient: uninit var in ctor
0b4ddc2 mon/MonitorStore: uninit var in ctor
89add0f paxos: init vars in ctr
ea078e1 msg/DispatchQueue: simplify shutdown()
b7af8d8 msg/Message: fix possible null deref
650ec35 msg: pass by reference
a3bf558 fix accepter bind fix
4eb3146 msg/Accepter: move nonce init to ctor
46c08d6 log: protect m_stop with lock
f51f568 common/LogEntry: pass by value for contains()
929892f LogEntry: pass by reference
ec5133b msg/Pipe: make banner buffer slightly bigger
b960c62 librbd: fix delete[]
08a29f9 ceph-dencoder: don't leak object
7cb3d2e auth: fix uninit vars
3fd13f5 crypto: fix fd leak from get_random_bytes()
1b1a0bf msg/Accepter: check setsockopt return value
484fd0c mds: fix broken EMetablob inode_t* return value
139ba9f client: unconditional teardown
532d1b1 rgw: init RGWRados::cct in ctor
c67eda2 rgw: init RGWGetObj::sent_header in ctor
757457a rgw: init ptr
ca4e060 rgw: add missing ctor, init parent
2214e83 omap_bench: fix uninit var
2037212 test/osd/RadosModel: uninit value
26a822b test/osd/RadosModel: fix uninit value
7c10bdc test/osd/RadosModel: fix uninit values
8d9d4f6 test/osd/RadosModel: fix uninit ptr
1247d4d test/rados-api/aio: fix uninit ptr
220980c cephtool: fix uninitialized scalar in constructor
998e207 test/Object: comment out dead code
97bd084 mds: fix unused value
b9adc27 mds: drop unused value
1355a67 filer: add missing return
a6dfa3e rgw: fix use-after-free
ec0a266 test_librbd: add missing va_end()
dd4b9ca cls_lock_client: return error when decoding fails
1779d5a cls_lock_client: fix indentation
b4298fc cls_lock_client: change modified reference parameters to pointers
9c6752e cls_lock_client: clean up reference parameters
3de0d4a cls_lock: fix some spacing
649bdc1 doc: clarify rbd man page (esp. layering)
dcbb87c rbd: add --format option
1b27a7c client: renew/submit subs on startup
f85863e objclass: add remove operation
a23351e :doc: Added constraints and revised a description per joshd.
f2c4510 upstart, ceph-create-keys: Make client.admin key generation automatic.
0de7195 upstart: Make instance jobs export their cluster and id variables.
3b0e2a2 config: Add a per-name default keyring to front of keyring search path.
8b4a9ad doc: Modified index page with table. Pools and Auth will go to Ops.
b961a66 doc: Some improvements. This still needs review.
c41fa39 doc: Added additional note to mount data disk to data path.
b80a1b7 doc: Added a document for general config settings.
2407b0c doc: Added a doc for filestore settings.
17dee29 doc: Added a document for RBD cache settings.
69e1016 doc: Added substantial detail to OSD setting descriptions.
c0c9fe5 doc: minor edit to use # for comments.
98eaacc doc: Restructured ceph config. Added network and OSD config details.
3c9bc47 librbd: prevent racing clone and snap unprotect
465fcca rbd: add "children" command, update cli test files
78f6975 librbd: add {rbd_}list_children() methods
ac481e8 rgw: cleanup create_bucket
ef92157 rgw: remove static store object
be00f9b rgw: pool names are not global
ed8922d rgw: RGWRados holds domain root info
f71a416 rgw: rgwstore is not global
4d9802c rgw: remove unused block of code
e3834f0 rgw_admin.cc: Prevent clobbering the index when linking a bucket.
82c62bd rgw: clear usage map before reading usage
5f36b8d osd: fix waiting_for_disk assertion
745a3c9 rados_bench: wait for completion callbacks before returning
dfb7f80 Makefile.am: add missing .h
2d79a62 rados_bench: wait for completion callbacks before returning
a7867c2 doc: Completed and reviewed RGW config reference.
8d7912c doc: added admonishment. Updated header syntax, copy semantics and x-ref.
5507665 rgw: fix usage log read
3eea910 doc: Added internal references. Clarified language in disk prepare.
a466dff doc: added sudo for hdparm command.
080e572 doc: added internal hyperlink targets.
dd011ab doc: Clean up quick start to ensure nobody uses "localhost".
9755466 doc: Cleaned up syntax errors, and converted table to list.
2a3b796 objecter: fix skipped map handling
8d1efd1 objecter: send queued requests when we get first osdmap
e59b9da objecter: fix is_latest_map() retry on mon session restart
7d40cba monclient: pass EAGAIN to is_latest_map() callers
0adc228 monclient: document get_version(), and fix return value
0a1f4a9 Implement multi-object delete.
17ceec0 osd: requeue dup ops inline with in-progress ops
d5cacac osd: include notif pointer in notify debug output
0a2ec98 config: add 'fatal signal handlers' option
bc90c9a test/: renamed omap_bench.hpp to .h, fixed histogram formatting
aaeb551 librados,ReplicatedPG: add omap_cmp
7a631f9 cls_rgw_client: fix #include path
6f68ff5 cls_rgw: add cls_rgw unitest, test gc api
a30f714 rgw-admin: get rid of lazy remove option, other fixes
721a6be rgw: implement garbage collector
bd534bf mon: make parse_pos_long() error message more helpful
c7d11cd osd: turn off lockdep during shutdown signal handler
c03ca95 (tag: v0.51) v0.51
aa91cf8 mon: require --id
5fd2f10 mon: fix int parsing in monmon
31c8ccb mon: check for int parsing errors in mdsmon
304c08e mon: check for int parsing errors in osdmon
3996076 interval_set: predeclare const_iterator
ef4ab90 Makefile: update coverity rules
6b1f23c librbd-dev.install: package new rbd/features.h header file.
d9bd613 mon: describe how pgs are stuck in 'health detail'
bcd4b09 osd: fix use-after-free in handle_notify_timeout
e97f1c5 ceph.spec.in: package new rados library.
551628e obj_bencher: use async remove during slow remove-by-prefix
4bef576 obj_bencher: remove all benchmark files matching a prefix
048c7dc obj_bencher: cleanup files in parallel using aio
9e58d1b obj_bencher: remove benchmark objects by prefix
fab73c3 obj_bencher: store per-benchmark metadata
fb7238e obj_bencher: clean up objects after a write benchmark
4f1b04c obj_bencher: announce prefix during write benchmark
e43ba81 Don't package crush header files.
1cd89d1 ceph.spec.in:  package new rbd header and rados library.
e229f84 msg/Pipe: conditionally detect session reset
1c3111f osd: prefer acting osds in calc_acting()
af15ba6 librados: implement aio_remove
fed8aea rbd: force all exiting paths through main()/return This properly destroys objects.  In the process, remove usage_exit(); also kill error-handling in set_conf_param (never relevant for rbd.cc, and if you call it with both pointers NULL, well...) Also switch to EXIT_FAILURE for consistency.
f0e746a mon: name cluster uuid file 'cluster_uuid'
cada8a6 objecter: use ordered map<> for tracking tids to preserve order on resend
91d5c19 Don't package crush header files.
4905c06 mon: create cluster_fsid on startup if not present
7fde8e9 mon: create, verify cluster_fsid file in mon_data dir on mkfs
b207b15 cephfs: add 'map' command to dump file mapping onto objects, osds
0f9f63a perf-watch: initial version
1113a6c objecter: use ordered map<> for tracking tids to preserve order on resend
a5901c6 doc: Either use a backslash and a newline, or neither.
ec90d3f cls_rgw: add gc commands handling
e4a78d2 config_opts: add gc configurables
7dd5d06 cls_lock: specify librados namespace explicitly
eda5a76 cls_rgw: cleanups
e7c492b mon: implement 'ceph report <tag ...>' command
8f95c1f config: remove dead osd options
bfb24a7 Fix compilation warnings on squeeze; can't printf() snapid_t directly
bb1e65e rgw: use sizeof() for snprintf
4a0704e osd: fix requeue order for waiting_for_ondisk
1a09423 rgw: dump content_range using 64 bit formatters
ddbef47 Revert "rgw: dump content_range using 64 bit formatters"
2e8689a mon: fix monitor cluster contraction race
81694c3 Add manpage sections for flatten, snap {un}protect
6a9bcc0 mkcephfs, init-ceph: Warn if hostname "localhost" is seen in ceph.conf.
5ad013b "Removed 274 from xfstests"
5642a5e test_rbd.py: remove clone before image it depends on
cc435e9 rgw: dump content_range using 64 bit formatters
dd4c1dc osd: fix requeue order of dup ops
6ae216e osd: fix warning
60fdb6f init-ceph: use SSH in "service ceph status -a" to get version
5c70392 doc: mkcephfs man page, -c ceph.conf is not optional
7e417bd osd: make notify debug output less noisy
5e761b4 mds: do not return null dentry lease on getattr
19ea312 mon: add MonitorStore::sync()
223d6fa crypto: cache CryptoHandler in CryptoKey
cfe211a doc: fix key export syntax
f965358 Roll up loose ends from a marathon merge/rebase session
380b047 Review:
5a295c8 librbd: snap_protect: verify layering is supported
2b6863e librbd: review: don't call to the OSD to get current protection status
f38dd48 test_rbd.py: actually make unprotect_with_children work, and clean up
491bd8d librbd: change EINVAL to EBUSY on "can't unprotect because children exist" Add pool, number of children in this pool that caused failure to log
ff60940 review: librbd, test_librbd: make "protect protected snap" fail
e21bac9 Update protection methods to use parent_spec, parent_types.h, etc.
bd2e751 test_rbd: add test for denying removal of protected parent
bef9180 get_features requires md_lock and snap_lock to be held
c729e15 librbd: clone return codes: ENOSYS for no layering, EINVAL for no prot
27a4dea librbd, test_librbd: snap_unprotect: refuse if children still exist
460242d test_cls_rbd: get_parent with no parent: should fail and return null-pspec
1b32d78 librbd: cause add_child/remove_child to treat duplicate ops as errors
53868a9 librbd: review: add helper for 'scanning snapshots for this parent'
2ca8fb2 librbd: review: change get_snapinfo to get_parent_spec
31824b6 librbd, cls_rbd: move parent_info and parent_spec to parent_types.h
9a45ffb librbd: memcpy object_prefix must copy terminating NUL
c0c29f8 librbd: remove: keep ictx open until snapshots are scanned
2382425 Review: change to look for parent across base and all snapshots, and remove only if not present in any of them.
dc1e26f Enhance add/remove child tests
f1fc2b4 get_parent on non-layered image no longer fails; remove test case
d09e0e2 Add struct parent_spec Holds poolid,imageid,snapid triple identifying parent Allows for equality comparison of parents
80d4d38 poolid should be signed
a09052f run-rbd-tests: prefer local binaries over $PATH
fd60416 librbd: snap_set and open_image need to refresh parent info
2dc751e librbd: Manipulate rbd_children in flatten, clone, remove, snap remove
397285a librbd: make get_parent_info look at snapshot-specific info when needed
cb74233 Fix some trailing spaces on lines
767fdf1 rados: allow listomapvals to dump keys with nonprintable characters
93fed22 cls_rbd, cls_rbd_client: add/remove/get children
fefdf28 rbd: warn on 0-length secret
4ce0a51 doc: properly document 'rbd map' without touching sysfs
b403db1 rbd: update man page to avoid deprecated --secret, --user
2a36873 rbd: use generic options, keyring for 'rbd map'
e0b094b keyring: make --key, --keyfile override loaded keyring
7b57931 config: make --user a synonym for --id
b2d6ea7 librbd: add test for discard of nonexistent objects
a3ad98a librbd: hide ENOENT on discard
7141a6c msg/Pipe: log port number
1daeb2d cpu_profiler: drop start, stop commands
d01c126 crypto: remove old crypto globals
2bca756 doc: small RST syntax fixes for eu.ceph.com mirror
35004bb docs: Add EU mirror for getting Ceph source and packages
476e493 ceph-fuse: debug off by default
107ffc6 auth: move Crypto users to use CephContext
9b7482f auth: move Crypto{None,AES} definitions to header
becf206 osd: avoid dereferencing pg info without lock
130b559 mutex: add is_locked_by_me()
da48658 run-cli-tests: Check that virtualenv is found.
ef80abe msg/SimpleMessenger: fix leak of local_connection
34d626d test_librbd_fsx: fix leak
6e44e9e SyntheticClient: fix warnings
aaf0123 librbd: make aio_discard declaration match definition
7f4851c librbd: fix uninit var new_snap in ictrx_refresh()
cfd0d4f librbd: fix warning
17e9414 heap_profiler: return result via ostream
79bdcbe cpu_profiler: outout to ostream instead of clog
35753eb osd: avoid generate huge osdmap deletion transactions
8a4d563 osd: break potentially large transaction into pieces
e908cb9 osd: only commit past intervals at end of parallel build
da210be osd: explicitly requeue waiting_for_map in on_change()
fac699c osd: simplify how in-progress ops are requeued
1045472 osd: rename op_waiters -> waiting_for_map
9fd7d4d mds: fix some gcc 4.7 warnings
407c350 crypto: remove unused label
5bbd5dc do_autogen.sh: -n for nss
19063aa byteorder: fix gcc 4.7 warnings
8555875 do_autogen.sh: apply 'profiler' options to CXXFLAGS, too
3e50a09 do_autogen.sh: -p to pass --with-profiler to configure (google cpu profiler)
5962a9d obsync: add missing package specifier to format_exc
dc76a6c ceph-fuse: add --fuse-debug option to enable libfuse debugging
a15fde4 fix keyring generation for mds and osd
36e7b07 fix ceph osd create help
c6ae5e2 objectcacher: fix bh leak on discard
77745f9 mkcephfs: fix mon data empty check
3e7df78 PG,Message: move intrusive_ptr_* into top namespace
614417e mon: make 'clocks too skewed' message for accurate
24a26c62 mkcephfs: fix mon_data check
3d3d91d osdmap: apply mon_max_osd when generating osdmap from conf
1a5e12e osdmap: fix pg_num calculation when generating osdmap from conf
cca85af global: only print banner if type is daemon
615f85d mon: throttle daemon messages independently from client messages
9fc7958 filejournal: instrument journal write counts, sizes
2f3e03f perfcounters: add u64 average type
1eea43d global: fix version banner in log on startup
3267127 doc: document use of CRUSH tunables
b254ba7 mon: require CRUSH_TUNABLES when latest osdmap has tunables set
3dd5ebd osd: require CRUSH_TUNABLES feature of peers, clients when used
43f7d37 osd: put throttler on default policy
da35b4c msgr: make set_policy_throttler safe, act on default
73218a7 msgr: make set_policy() and set_default_policy() safe to re-use
5ab4939 doc: v0.48.1argonaut release notes, changelog
75172c7 msg/Accepter: fix nonce initialization
294c25b ceph-osd: log journal-creation failure with derr
8af2cf3 msgr: expose get_policy() through generic Messenger API
1740bd0 crush: add helper has_nondefault_tunables()
c8af0fa cephtool: make command wait for osdmap explicit
a4428bd (tag: v0.50) v0.50
ac02b34 msg/Pipe: discard_queue() -> discard_out_queue()
d58df35 msg/Pipe: simplify Pipe::tcp_read() return value
76954c1 msg/Pipe: document tcp_*()
5d5045d msg/Accepter: use learned_addr() from Accepter::bind()
1b8f2e0 msg/SimpleMessenger: push need_addr check into learned_addr()
8453a81 msg/Accepter: pass nonce on start
a0017fc msgr: protect set_myaddr()
c84b728 msg/Accepter: make members private
608c776 msgr: remove useless SimpleMessenger::msgr
b97f6e3 msgr: some SimpleMessenger docs
8c1632b cephtool: send keepalive to tell target
90e0ef9 cephtool: retry 'ceph tell <who> ...' command if connection fails
ee206a5 cephtool: set messenger policy
b30ad9a cephtool: fix deadlock on fault when waiting for osdmap
ce0bc11 rbd: show snap protection status
98286b4 MonMap: return error on failure in build_initial
5c116bf addr_parsing: report correct error message
1fd7acd rbd: fix test compilation on 32-bit
be6b5e1 test_librbd_fsx: fix warning
4d71ca6 rbd: fix cli tests
677934b rgw: modify some error messages
b28db08 rgw: use multiple notification objects
b15d639 radosgw-admin.rst: Misc doccumentation update.
45f7f06 rgw_admin.cc: Allow removal of a user's buckets during user removal.
53d7750 librados: add method to get the fsid of a cluster
cd5d724 librbd: fix memory leak on error in clone
c77f0fb rbd: add snap [un]protect commands
8d5f1e9 librbd: add methods for protecting/unprotecting snapshots
cc8eac2 rgw_admin.cc: Allow for deletion of objects through radosgw-admin.
f9359f0 doc: New example usage.
6bc1067 rgw: fix usage trim call encoding
04a0eac cls_rgw: fix rgw_cls_usage_log_trim_op encode/decode
3499c0e cls_rbd: add methods for getting/setting protection status
074c3c0 rgw: expand date format support
d39ea1d rgw: complete multipart upload can handle chunked encoding
03b787e rgw_xml: xml_handle_data() appends data string
3809e34 rgw: ETag is unquoted in multipart upload complete
52f03dc doc: Added debug and logging reference.
d78dfe5 mkcephfs: use default osd_data, _journal values
3c90ff4 mkcephfs: use new default keyring locations
c03f744 keyring: make from_ceph_context() a member
ece78c8 doc: some basic cephx documentation
69130d7 monclient: move keyring requirement where it belongs
35e79f2 keyring: simplify from_ceph_context()
ac9d429 keyring: simplify from_ceph_context() arguments
5e13fd6 keyring: check client requirement list too when loading keyring
e536889 monclient: differentiate clients vs daemons
e4e4882 mon: differentiate cluster and client auth requirements
d5704bd buffer: make release() private
bf4c5e7 mds, osd: require auth_service_required, if defined
4fd393f librbd: fix bounds of memcpy in info()
d48d1ff test_librbd_fsx: add cloning
745783c librbd: expose feature bits through librbd.h
12e2070 librbd: close parent after shutting down cache
9bf3d48 librbd: move flush on new snap outside of snap_lock
53947ed librbd: check new snapc for validity, not the old one
965271d test_librbd: add a simple io to clone test
12c9a7d test_rbd.py: refactor cloning tests
beccac9 librbd: don't open parent again during get_parent_info
90dc565 librbd: implement read/write from parent images
4329195 rados.py: add binding for rados_trunc
3671a37 doc: Explicitly state mount.ceph two first arguments are fixed.
17ad4e1 doc: mount.ceph is also needed for cephx.
c961a20 doc: Fix toctree structure for man obsync(1).
5db3a9e rgw_admin.cc: Disallow addition of S3 keys with subuser creation
4e40a78 ceph-authtool: Fix usage, it's --print-key not --print.
25de5e5 Revert "osd: peering: detect when log source osd goes down"
203dffa doc: cd to repository before running git status.
48de9b5 doc: Say what to do if submodules are out of date.
93cbab7 doc: Simplify submodules explanation.
6af560d doc: Correct Git URL for clone
0d3d75e osd: peering: detect when log source osd goes down
ca2c381 osd: peering: detect when log source osd goes down
bb6e0d0 wireshark: update patch
deec81b ReplicatedPG: clear waiting_for_ack when we send the commit
f22b95d rbd: fix off-by-one error in key name
e775ce5 secret: return error on empty secret
cda5e8e PG,ReplicatedPG: clarify scrub state clearing
6d464a2 PG::mark_clean(): queue_snap_trim if snap_trimq is not empty
1041b92 ReplicatedPG::snap_trimmer: requeue if scrub_block_writes
c6bc3e1 librbd: refactor synchronous I/O
ff2a96c rbd: fix copy-pasted snap remove error message
ea75d1f librbd: check for new snapshots in snap_set
bd11990 librbd: add method to get the size of an image
72dc665 librbd: make ImageCtx methods take snap_id parameters
902bbd7 cls_rbd: don't duplicate encoding
4111501 qa: add script to run rbd/librbd tests
9071764 qa: remove rbd image when done
d3b5ee7 librbd: split into multiple files
237f240 rbd: flatten command (copyup an entire image)
bbc2a4e librbd: round #blocks in image_info() for edge cases
26ed384 librbd, rbd.py, test_rbd.py: flatten methods
9e5d4e6 osd: initialize send_notify on pg load
f9ff8dd osd: replace STRAY bit with bool
8e40477 test: test_keyvaluedb_iterators: Test KeyValueDB implementations iterators
9dd8a33 os: KeyValueDB: implement snapshot iterators
fb1d549 os: KeyValueDB: re-implement (prefix) iter in terms of whole-space iter
effdec9 auth: introduce cluster, service, and client auth settings
ec6ecc1 auth: AuthSupported -> AuthMethodList
4a0a7e2 auth: (ordered) list of auth methods, not a set
9d43c8a test: workloadgen: Don't linearly iterate over a map to obtain a collection
bae8370 osd: peering: make Incomplete a Peering substate
d1602ee osd: peering: move to Incomplete when.. incomplete
d612694 config: send warnings to a ostream* argument
de4474a vstart.sh: apply extra conf after the defaults
bbc4917 msg/Pipe: if we send a wait, make sure we follow through
6c01d46 client: handle fault during session teardown
a879425 msg/Pipe: make STANDBY behavior optional
f69d025 conf: make dup lines override previous value
4dfc14c mon: remove superfluous "can't delete except on master" comments
5f3ef77 mon: make pool snap creation ops idempotent
53aa959 objecter: return ENOENT/EEXIST on pool snap delete/create
507f99e librados: make snap create/destroy handle client-side errors
3715d20 mon: check for invalid pool snap creates in preprocess_op, too
640e5fd qa: simple tests for 'ceph osd create|rm' commands
6f7837a mon: make 'osd rm ...' idempotent
4788567 qa: simple test for pool create/delete commands
a01e22d mon: make pool creation idempotent
5503376 mon: make pool removal idempotent
597f14a objecter: make pool create/delete return EEXIST/ENOENT
358d6b6 librados: make pool create/destroy handle client-side errors
46e819e objecter: fix mon command resends
c2e1c62 mutex: assert we are unlocked by the same thread that locked
6ec9555 cond: reorder asserts
9553c6e osd: fixing sharing of past_intervals on backfill restart
29aa1cf filestore: check for EIO in read path
0891948 filestore: add 'filestore fail eio' option, default true
aef10e7 librbd: fix id initialization in new format
17bb78a librbd: fix id initialization in new format
5601ae2 mon: set a configurable max osd cap
bcb9ab8 doc: updates to fix problem with ceph-cookbooks appearing in chef-server.
9767146 osd: generate past intervals in parallel on boot
d45929f osd: move calculation of past_interval range into helper
18d5fc4 osd: fix map epoch boot condition
11b275a osd: avoid misc work before we're active
278b5f5 mon: ignore pgtemp messages from down osds
08e2eca mon: ignore osd_alive messages from down osds
404a7f5 admin_socket: json output, always
0133392 admin_socket: dump config in json; add test
0ef8cd3 config: fix 'config set' admin socket command
f565ace osd: fix pg log zeroing
d67ad0d Wireshark dissector updated, work with the current development tree of wireshark. The way I patched it is not really clean, but it can be useful if some people quickly need to inspect ceph network flows.
52f51a2 wireshar/ceph/packet-ceph.c: fix eol
a3d57a6 os: KeyValueDB: Add virtual raw_key() function to return (prefix,key) pair
a16d9c6 os: KeyValueDB: allow finer-grained control of transaction operations
6c0fa50 doc: update information about stable vs development releases
48bd839 librbd: replace assign_bid with client id and random number
67832c3 osd: fix ACK ordering on resent ops
96dbc41 rados::cls::lock: move api types into namespace
ca6265d (tag: v0.49) v0.49
c8f1311 mon: make 'ceph osd rm ...' wipe out all state bits, not just EXISTS
f42e187 cls_rbd, cls_rbd_client, test_cls_rbd: copyup method
127ff61 librbd: drop unnecessary std:: and struct prefixes
c18c4b8 librbd: open parent image when opening a child
b82f595 librbd: move all side-effects to snap_{un}set()
8014d93 librbd: allow opening an image by id
df71c2d librbd: store parent info in snapshot metadata
233d44a librbd: allow an image to be opened without watching
4af1f98 librbd: move watch/unwatch to ImageCtx methods
02aba7b librbd: rename variables for more consistency
56bc369 cls_rbd: make get_parent return valid data when layering is disabled
d5e4541 cls_rbd: return negative pool id if parent does not exist
9b9efe7 cls_rbd_client: fix locking function indentation
5fcb22f mkcephfs: add sync between btrfs scan and mount
2d7e2cb crush: fix name map encoding
b497bda osd/OpTracker: fix use-after-free
7cf1f1f msg/Pipe: go to STANDBY on lossless accept fault
ef3fd1c msg/Pipe: go to standby on lossless server connection faults
9348bb3 osd: reopen heartbeat connections when they fail
ea7511b msg/Pipe: fix leak of Connection in ctor
60eb36e msgr: close get_connection() race
04fde51 msgr: drop CLOSED checks during queueing
adce6df msgr: simplify submit_message()
2e67b7a msgr: do not reopen failed lossy Connections
9a4e702 msg/Pipe: unregister pipe immediately on fault; fix mark_down
541694f msg/Pipe: disconnect Pipe from lossy Connection immediately on failure
cef8510 msg/Connection: add failed flag for lossy Connections
472d14f msg/DispatchQueue: fix locking in dispatch thread
9d94ed1 test_stress_watch: verify that the watch operation isn't slow
7b398a5 msgr: indicate whether clients are lossy
525830c msgr: do not discard_queue in Pipe reaper
8966f71 msg/IncomingQueue: make the pipe parent informational only
999c506 msg/DispatchQueue: give IncomingQueue ref to queue
5a62dfe msg/DispachQueue: hold lock in IncomingQueue::discard_queue()
35b7bca msg: kill tcp.{cc,h}
5ecc5bc msg/DispatchQueue: cleanup debug prefix
89b07f4 msg/Pipe: move tcp_* functions into Pipe class
d034e46 msgr: move Accepter into separate .cc
3e98617 msg/Pipe: get_state_name()
f78a401 msgr: rework accept() connect_seq/race handling
a6735ab OpRequest,OSD: track recent slow ops
9e207aa test/store_test.cc: verify collection_list_partial results are sorted
49877cd cls_lock: cls_lock_id_t -> cls_lock_locker_id_t
315bbea cls_lock: document lock properties
056d42c cls_log: update a comment
2c7d782 rados: lock info keeps expiration, not duration
d16844c rados tool: add advisory lock control commands
2f8de89 cls_lock: objclass for advisory locking
9c5c3ed objclass: add api calls to get/set xattrs
adc9b91 os/HashIndex: use set<pair<string, hobject_t>> rather than multimap
0b84384 mon: shut up about sessionless MPGStats messages
6580450 osd: clean up boot method names
369fbf6 osd: defer boot if heartbeatmap indicates we are unhealthy
dec9369 osd/mon: subscribe (onetime) to pg creations on connect
7f58b9b mon: track pg creations by osd
4c6c927 Revert "rbd: fix usage for snap commands"
42de687 rbd: fix usage for snap commands
58cd27f doc: add missing dependencies to README
6f381af add CRUSH_TUNABLES feature bit
e3349a2 OSD::handle_osd_map: don't lock pgs while advancing maps
c8ee301 osd: add osd_debug_drop_pg_create_{probability,duration} options
8f5562f OSD: write_if_dirty during get_or_create_pg after handle_create
ca9f713 OSD: actually send queries during handle_pg_create
5dd68b9 objecter: always resend linger registrations
76efd97 OSD: publish_map in init to initialize OSDService map
7586cde qa/workunits/suites/pjd.sh: bash -x
675d630 ObjectCacher: fix cache_bytes_hit accounting
4e1d973 doc: Fixed heading text.
ebc5773 doc: favicon.ico should be new Ceph icon.
3a377c4 doc: Overhauled Swift API documentation.
d78235b client: fix readdir locking
82a575c client: fix leak of client_lock when not initialized
90ddc5a OSD: use service.get_osdmap() in heartbeat(), don't grab map_lock
58e81c8 OSD: handle_osd_ping: use service->get_osdmap()
32892c1 doc/dev/osd_internals: add newlines before numbered lists
fe4c658 librados: simplify locking slightly
199397d osd: default 'osd_preserve_trimmed_log = false'
24df8b1 doc/dev: add osd_internals to toc
5a27f07 doc/internals/osd_internals: fix indentation errors
6490c84 doc: discuss choice of pg_num
36d0a35 log: simplify log logic a bit
96587f3 Robustify ceph-rbdnamer and adapt udev rules
b046549 doc/radosgw/config.rst: mended small typo
4eec4fc mkcephfs: nicer empty directory check
4e66a3b mkcephfs: error out if mon data directory is not empty
6b1835a vstart.sh: blow away mon directory on creation/start
54be9d0 mon: stop doing rm -rf on mon mkfs
52f96b9 log: apply log_level to stderr/syslog logic
de524ab log: dump logging levels in crash dump
3821f6c PG: grab reference to pg in C_OSD_AppliedRecoveredObject
64f7450 log: fix event gather condition
d4410e4 PG::RecoveryState::Stray::react(LogEvt&): set dirty_info/log
4afa892 PG: use stats from primary after rewinding divergent entries
c7fb964 PG::RecoveryState::Stray::react(LogEvt&): reset last_pg_scrub
5d82a77 doc/dev/osd_internals: OSD overview, pg removal, map/message handling
1b8819b PG: Place info in biginfo object
12d7073 PG: use write_info to set snap_collections in make_snap_collections
90381dc OSD: set superblock compat_features on boot and mkfs
470796b CompatSet: users pass bit indices rather than masks
b7814db osd: based misdirected op role calc on acting set
14d2efc mon/MonitorStore: always O_TRUNC when writing states
f94c764 mon: remove osds from [near]full sets when their stats are removed from pgmap
fe57681 mon/MonitorStore: always O_TRUNC when writing states
bf9a85a filestore: dump open fds when we hit EMFILE
a278ea1 osdmap: drop useless and unused get_pg_role() method
38962ab osd: based misdirected op role calc on acting set
6faeeda osd: simplify helper usage for misdirected ops
ed4f80f vstart: use absolute path for keyring
117b286 OSD: add config options to fake missed pings
ce20e02 crushtool: allow information generated during testing to be dumped to a set of CSV files for off-line analysis.
8a89d40 doc: remove last reference to ceph-cookbooks.
2011956 doc: cookbooks issue resolved, so changed 'ceph-cookbooks' back to 'ceph.'
5a5597f qa: download tests from specified branch
5360079 OSD: send_still_alive when we get a reply if we reported failure
5924f8e PG: merge_log always use stats from authoritative replica
3dd65a8 qa: download tests from specified branch
ce7e0be mon: use single helper for [near]full sets
30b3dd1 mon: purge removed osds from [near]full sets
bcfa573 ReplicatedPG: don't mark repop done until apply completes
10ec592 test_librbd: fix warnings
5450567 ReplicatedPG,PG: dump recovery/backfill state on pg query
508bf3f rbd: enable layering when using the new format
dfe29af doc: reverted file and role names.
f8478d4 upstart: Make ceph-osd always set the crush location.
5ceb7c7 doc: fix config metavariables discussion
d1054df doc: perf counters
f33c0be rgw: don't override subuser perm mask if perm not specified
09c60b4 doc: added :: to code example.
ad8beeb doc: minor edits.
63a1799 doc: cookbook name change broke some things in doc. Fixed.
65c43e3 debian: fix ceph-fs-common-dbg depends
cc8df29e rados tool: bulk objects removal
99a048d rados: more usage cleanup
0081c8e     rados: usage message     Bad linebreaks, wrapping, stringification, missing doc for bench args
0782db3 doc: changed role file names as part of update to roles.
e5997f4 doc: added DHO config.
173d592 rados tool: remove -t param option for target pool
31c8dcc crush: sum and check quantized weights for bucket
675a1b7 crush: Set maximum device/bucket weights.
c9fc5a2 crush: prevent integer overflow on reweight
d29ec1e     rados: usage message     Bad linebreaks, wrapping, stringification, missing doc for bench args
2c001b2 Makefile: don't install crush headers
22d0648 librados: simplify cct refcounting
c5bcb04 lockdep: stop lockdep when its cct goes away
7adc6c0 mon: simplify logmonitor check_subs; less noise
a542d89 mds: fix race in connection accept; fix con replacement
0f917c2 osd: guard class call decoding
0ff6c97 test_stress_watch: just one librados instance
ee1c029 ReplicatedPG: don't warn if backfill peer stats don't match
d3c97da librados: take lock when signaling notify cond
ec490d8 client: fix locking for SafeCond users
38e2de3 doc: No ssh -t -t, forcing a pty allocation there makes it hang.
79e3416 doc: removed the ceph directory per tommi's update to the chef-cookbooks.
5c84f01 doc: Adding apt update message. VM users didn't get the package otherwise.
fe5c0cd osd: guard class call decoding
2a6af20 rbd: update manpage for clone command
e353149 rbd: update cli test reference files
7b0c71c librados: pool_get_name handles "not found" wrong
6ad5961 rbd, librbd: add tests for cloning
64949d4 librbd, rbd, rbd.py: Add parent info reporting
a94fc8c rbd, librbd, rbd.py: cloning (copy-on-write child image of snapshot)
8cc4342 librbd: open_image snapshot handling Allow opening with no snap, but check for error for nonexistent snap
96a517b librados: Add mapping from pool id to pool name and ioctx to rados client
68bad03 msgr: queue accept event when pipe is accepted
fab6e82 msg/DispatchQueue: queue and deliver accept events
95f85df librados: add new constructor to form a Rados object from IoCtx
d4ef004 dispatcher: new 'accept' event type
1a4a133 msgr: drop unnecessary (un)locking on queuing connection events
e84565d msgr: move dispatch thread into DispatchQueue
9e291ba msgr: simplify checks for queueing connection events
bafcbde msgr: remove unnecessary accept check
bffd46c msgr: remove obsolete dead path
3490814 msgr: uninline ctor and dtor
912123f msgr: move Pipe, DispatchQueue into separate files
c7caf91 msgr: simplify IncomingQueue creation, pointers
fa4c192 msgr: use local IncomingQueue instead of Pipe
2d071b9 msgr: use explicit Connection for messages sent to ourself
35b1326 msgr: take over existing Connection on Pipe replacement
80111cc test_stress_watch: just one librados instance
782a17d doc: added cookbook path instruction.
8869621 doc: Added some pre-clarification for gdisk. Added DHO OSD hardware config.
fbe5577 CephContext: don't leak admin socket
74e6205 CephContext: drop obsolete ceph_destroy_context
074df64 librados: use CephContext ref counts
6aa9f49 CephContext: ref count
58f46bb test_stress_watch: just one librados instance
67a5e75 ReplicatedPG: don't warn if backfill peer stats don't match
645ac87 ReplicatedPG: fix replay op ordering
67361c1 librbd: return an error when removing a non-existent image
ec87a1e cls_rbd: add logging for failed set_parent steps
b23e4e5 doc: Removed legacy paths and keyname settings from examples.
b387077 debian: include librados-config in librados-dev
8e5fe62 doc: remove reference to 'ceph stop' command
03c2dc2 lockdep: increase max locks
b554d11 config: add unlocked version of get_my_sections; use it internally
01da287 config: fix lock recursion in get_val_from_conf_file()
c73c64a config: fix recursive lock in parse_config_files()
97c1562 rgw: handle response-* params
6646e89 rgw: initialize fields of RGWObjEnt
b33553a rgw: handle response-* params
74f6875 osd: add missing formatter close_section() to scrub status
020b299 pg: report scrub status
db6d83b pg: track who we are waiting for maps from
e1d4855 pg: reduce scrub write lock window
72bf66f doc: added some discussion to libvirt.
1316f86 cond: cleanup
da7a328 cond: drop unused Wait variant
9c6fdd5 librados: drop unused local variables
b5693a6 librados: take lock when signaling notify cond
7c919e9 workqueue: kick -> wake or _wake, depending on locking
8de0c22 cond: assert that we are holding the same mutex as the waiter
b486f2f client: fix locking for SafeCond users
540c2c3 doc: Minor cleanup on deploy with Chef.
3df5104 rgw: don't store bucket info indexed by bucket_id
27409aa rgw: don't store bucket info indexed by bucket_id
9814374 test_rados_tool.sh: test copy pool
d751006 rados tool: copy object in chunks
16ea64f rados tool: copy entire pool
960c212 rados tool: copy object
23d31d3 ceph.spec.in: add ceph-disk-{activate,prepare}
668ce00 osd: make on_removal() pure virtual
3d00130 osd: fix PG dtor compile error
09af670 PG,ReplicatedPG: on_removal must handle repop and watcher state
6917419 OSDMonitor: disable cluster snapshot
8e93e8b OSD: ensure that OpSequencer lives through on_commit callback
816d424 ReplicatedPG.cc: C_OSD_CommittedPushedObject move pg->put() to finish
fe14c18 OSD::PeeringWQ::_dequeue(PG*) drop pg refs
0475ee4 OSD,PG:;replica_scrub: move msg->put() into queue process
bdf09f2 OSD,ReplicatedPG::snap_trimmer: pg->put() in process, not snap_trimmer()
cab7b75 OSD: drop pg refcounts in OpWQ::_dequeue(PG*)
868168a OSD: clean up revcovery_wq queueing and ref counting
c70392a doc: minor typo
4d7bb07 doc: update copyright notice in footer
57bc8da doc: minor updates to the restrucuredText file.
0659f7c doc: minor cleanup.
1c9e1c6 doc: Publishing as described. Still requires some verification and QA.
7e26d6d PG: C_PG_MarkUnfoundLost put pg in finish
31db8ed OSD::activate_map: don't publish map until pgs in deleted pools have been removed
7f2354c doc/scripts/gen_state_diagram.py: make parser a bit more forgiving
9fc5db8 ReplicatedPG::op_applied: update last_update_applied iff !aborted
4ce17cc test/encoding/types.h: disable pg_query_t encoding test
99c23b6 OSD: split notify|info|query messages for old clients
193f18f FileStore: delete source collection if not replaying collection_rename
f0b2310 ReplicatedPG: RepModify track epoch_started and bail on interval change
7b5d8e8 ReplicatedPG: on_activate for a peer might happen before flush
87d1cdb OSD: _remove_pg not ruin iterator consistency
311a061 OSD: move watch into OSDService
442b558 PG: pass activate epoch with Activate event
f9282e6 Revert "osd: check against last_peering_reset in _activate_committed"
392df3b Revert "osd: reset last_peering_interval on replica activate"
1b558fb OSD: write_info/log during process_peering_events, do_recovery
c6db1b2 PG: delay ops in do_request, not queue_op
9b182d2 OSD: maybe_update_heartbeat_peers, don't print pg
0ee3d87 OSD: process_peering_event check for new map on each pg
c1f2a80 OSD: peering_wq is now a BatchWorkQueue
d8a68e7 OSD: do_(notifies|infos|queries) must now be passed a map
3ca6359 common/WorkQueue.h: add BatchWorkQueue
5c0e8b4 OSD: bail out of do_recovery if no longer primary and active
5dc45f7 PG: PG now store its own PGPool
b242c56 OSD: on pg_removal, project_pg_history to get current interval
a67a874 CrushWrapper: add locking around crush_do_rule
c7581b6 CrushWrapper: rmaps don't need to be mutable
73f5ce9 OSD,PG: issue pg removals in line, remove remove_list
7c1dc90 OSD: don't advance_pg() if pg is up-to-date
8079a48 OSD,PG: clean up _get_or_create_pg and set interval based on msg
a5bf3d7 OSD: lock recovery_wq before debug output on finish_recovery_op
3dcce50 OSD: only do_(notify|info|query) for up osd
040a22b OSD: map_cache should contain const OSDMap
4fec85f OSD: activate_map() in handle_osd_map only when active
2552a7f OSD,PG: _share_map_outgoing must not require osd_lock
35949c5 ReplicatedPG: explicitely block on not active for certain ops
e8d09d0 PG,OSD: prevent pg from completing peering until deletion is complete
b200710 OSD,PG: clean up pg removal
9a4a9b9 PG: flush ops by the end of peering without osr.flush
33b985d OSD,PG: added helper methods for creating and dispatching RecoveryCtxs
b80b500 OSD,PG: Move pg accesible methods, objects to OSDService
502c033 PG, OSD: info_map shouldn't contain the MOSDPGInfo*
f68f52c OSD: queue_want_up_thru in process_peering_event
492e635 OSD: do not drop osd_lock in handle_osd_map
14381b3 OSD: get map read lock during queue_want_up_thru
10ec5bc OSD: push_waiters is no longer used
90e3727 OSD: do not lock osd during dequeue_op
3d32712 OSD: don't assume pending pg removals have flushed
91355fb ReplicatedPG: change ReplicatedPG debug output to match PG
b6bf573 ReplicatedPG: do not eval_repop if aborted
f6fc1b3 OSD: remove superfluous pg get/put around enqueue_op
b0cb96bf PG,OSD: fix op checking in pg, take_waiters during ActMap
b5078bb PG,OSD: add OSD::queue_for_op, use in PG::queue_op
64b71c6 OSD: check for deleting in process_peering_event
fff0874 PG: use osd->requeue_ops for ops, pg->queue_for_peering to requeue pg
e10e81c PG: compound messages must carry epoch_sent for each part
b081bd4 PG: CephPeeringEvents can now be descriptively printed
65abfc0 OSD: initialize pgs in get_or_create_pg via handle_create
c7e3495 PG: include info and query by value in peering events
12e22b3 OSD,PG: handle pg map advance in process_peering_event
bbd8af0 osd/: Make pg osdmap be independent of osd, other pg maps
ddef446 OSD,PG: Move Op,SubOp queueing into PG
33bcbb3 PG: process peering events in a queue
36d1381 PG: use intrusive_ptr in CephPeeringEvt
6922f9c osd/: move history update from handle_pg_query into pg
d015823 OSD,PG: push message checking to pg
7c414c5 OSD: Remove handle_pg_missing, MOSDPGMissing no longer used
3691e3c PG: Move handle_* methods to PG
1ffd190 PG: CephPeeringEvt
18fec69 OSD,PG::scrub() move pg->put() into queue process
ea11c7f Allow URL-safe base64 cephx keys to be decoded.
7fa8579 osd: add missing formatter close_section() to scrub status
f67fe4e librados: Bump the version to 0.48
bcfcf8e librados: add assert_version as an operation on an ObjectOperation
39eaa23 ReplicatedPG: do not set reply version to last_update
e6e36c0 rgw: initialize fields of RGWObjEnt
35b9ec8 rgw-admin: use correct modifier with strptime
da251fe rgw: send both swift x-storage-token and x-auth-token
4c19ecb rgw: radosgw-admin date params now also accept time
6958aeb rgw-admin: fix usage help
ad97415 ceph-disk-prepare: Partition and format OSD data disks automatically.
a1696fe doc: removed /srv/osd.$id.journal  from ceph.conf example.
8f64647 CrushTester.cc: remove BOOST dependencies.
7e23aad doc: Updates to 5-minute quick start.
83c043f radosgw-admin: fix clit test
c667f5d lockdep: increase max locks
12ba580 config: add unlocked version of get_my_sections; use it internally
5674158 ceph: fix cli help test
fc18cca doc: Clean up of 5-minute quick start.
151bf0e ReplicatedPG: remove faulty scrub assert in sub_op_modify_applied
8ade74b ReplicatedPG: remove faulty scrub assert in sub_op_modify_applied
09dd8ca doc: Updating Getting Started with 5-minute quick start.
32833e8 ceph: better usage
8c95b5c doc: restructuring quick start section.
4bd7c05 IoCtxImpl: pass objver pointer to aio_operate_read
4e774fb ceph-disk-prepare: Take fsid from config file.
cd0314d config: remove bad argparse_flag argument in parse_option()
67455c2 debian: strip new ceph-mds package
6bb19e7 doc: Cleaned up rbd snapshots.
ad61bbd config: fix lock recursion in get_val_from_conf_file()
7009c32 config: fix recursive lock in parse_config_files()
b53cdb9 config: remove bad argparse_flag argument in parse_option()
14ec778 client: improve dump_cache output
8b46201 doc: release notes for 0.48
562cad6 doc: 'Configuring a Storage Cluster' -> 'Configuration'
b5287c1 lockdep: enable in common_init
f7d4e39 msgr: restart_queue when replacing existing pipe and taking over the queue
5dfd2a5 msgr: choose incoming connection if ours is STANDBY
b7007a1 msgr: preserve incoming message queue when replacing pipes
1f3a722 msgr: move dispatch_entry into DispatchQueue class
0344529 msgr: move incoming queue to separate class
0dbc541 msgr: make D_CONNECT constant non-zero, fix ms_handle_connect() callback
2429556 msgr: fix pipe replacement assert
204bc59 msgr: do not try to reconnect con with CLOSED pipe
e6ad6d2 msgr: move to STANDBY if we replace during accept and then fail
c2b20ca (tag: v0.48argonaut) v0.48argonaut
b5098b3 ceph.spec.in: Change license of base package to GPL and use SPDX format
a1fe589 mon: initialize quorum_features
d82a502 qa: add rbd remove tests
d04b2fb cls_rbd_client: check return code of operate
1c096a8 qa: run rbd tests against old and new formats
aa3255b qa: add tests for rbd ls with old and new formats
288bde3 qa: restructure rbd cli tests
0ad14c9 qa: add rbd command rename tests
6f096b6 librbd: use new class methods to access rbd_directory
f2d37c5 librbd: handle NULL old_format pointer in detect_format()'s logging
2628530 doc: fixed --cap error and a few additional bits of cleanup.
2472034 OSD::do_command: unlock pg only if we had it
841451f MOSDSubOp: set hobject_incorrect_pool in decode_payload
b91beca doc: Added sudo and cleaner instruction for unmap.
f16a9c4 doc: updated usage on RBD kernel object commands.
e186013 doc: drop mention of MDS capabilities from radosgw man page
deceb70 filestore: initialize m_filestore_do_dump
31ad263 doc: add design doc for rbd layering
398a229 filestore: set min flush size
0810ab6 osdmap: check new pool name on rename
5a93550 osd: handle pool name changes properly
d15385b CrushTester: add Monte Carlo generator to more accurately simulate a CRUSH mapping using a RNG
5de9af5 crush: style changes
cc4955a PG: reset_recovery_pointers in activate if missing is empty
657e86c vstart.sh: don't clobber keyring if not -n
a8d7fd9 mon: 'osd pool rename <oldname> <newname>'
02f1b0a doc: document new 'osd crush move ...' command
f5e3a67 mon: fix 'osd crush move <item> <loc ...>'
5e454bb mon: add 'osd crush move <name> <loc ...>' command
a2d0cff crush: add move_bucket() method
d22529d crush: get_loc -> get_immediate_parent
d7c18c1 PG::merge_old_entry: handle clone prior_version case
b907c88 ReplicatedPG: adjust log.complete_to based on rmissing
143afcf ReplicatedPG: clear peer_(missing|log)_requested in check_recovery_sources
090e510 PG: check_recovery_sources on each map
c3a02ea doc: radosgw: further simplify Apache rewrite rule
76c657e cls_rbd: add methods for dealing with rbd_directory objects
de62c4c objclass: add create method
4110707 cls_rbd: use already defined local var instead of constant
a1d477b librbd: add indirection between name and header object
5ae6e71 cls_rbd: add {get,set}_id methods
0a6ee69 doc: document osd tell bench
147114d doc: minor edits.
15ebf20 rest-bench: mark request as complete later
5c23d35 buffer.h: fix operator> and operator>= increment error
335b918 DBObjectMap: clones must inherit spos from parent
cc1da95 filestore: sync object_map object in lfn_remove when nlink > 1
218dd5a radosgw Apache configuration: simplify rewrite rule
5a06af7 Fix example radosgw Apache configuration
6a5c155 objclass: remove unused variable from cls_cxx_map_get_vals
f969b59 cls_rbd: fix signed-ness warning
9d6013e debian: move metadata server into ceph-mds
915f321 debian: move mount.ceph and cephfs into ceph-fs-common
0d9b558 debian: arch linux-any
8949232 debian: build with libnss instead of crypto++
9d7f048 doc/config-cluster/authentication: keyring default locations, simplify key management
f366173 pg: report scrub status
c94583e pg: track who we are waiting for maps from
ecd7ffe pg: reduce scrub write lock window
16d5565 mon: MonmapMonitor: Use default port when the specified on 'add' is zero
04e1c30 rest-bench: mark request as complete later
c5d19b6 rgw-admin: use correct modifier with strptime
17f433a OSD: disconnect_session_watches: handle race with watch disconnect
e34dfc3 doc: removing old 'todo' configuration reference.
efb74a9 doc: converted daemon references from nasty tables to lines.
4142ac4 doc: a few minor tweaks to radosgw to cleanup navigation.
0be2611 doc: Published RADOS GW docs and install as is for now. Needs more work.
9342573 CrushTester.cc: removed last broken bits of obsolete method
6d551c1 CrushTester.cc: removed obsolete method for collapsing a CRUSH map
df7729e CrushTester: eliminated compiler warning
88e3154 radosgw-admin: improve man page
63b562f doc: explain how to configure Ceph for radosgw
07029a4 rgw: send both swift x-storage-token and x-auth-token
80a939a rgw: radosgw-admin date params now also accept time
c87c83f rgw-admin: fix usage help
77fcf06 upstart: fix regex
840ae24 mon: don't tick the PaxosServices if we are currently slurping.
ef6beec objecter: do not feed session to op_submit()
4e45d60 ObjectStore::Transaction: initialize pool_override in all constructors
ff67210 objecter: do not feed session to op_submit()
9fcc3de osd_types.cc: remove hobject_t decode asserts
80649d0 mon: note that monmap may be reencoded later
77d836c mon: encoding new monmap using quorum feature set
de5b323 mon: conditionally encode mon features for remote mon
c399d90 mon: conditionally encode PGMap[::Incremental] with quorum features
0aaf7334 mon: conditionally encode auth incremental with quorum feature bits
06288a9 mon: track intersection of quorum member features
2355b23 mon: conditionally encode old monmap when peer lacks feature
2fe9816 OSD,PG,ObjectStore: handle messages with old hobject_t encoding
ddf7e83 doc: ceph osd crush add is now ceph osd crush set
448f5b0 logrotate: reload all upstart instances
58db045 docs: clarify example in radosgw-admin
7044192 filestore: remove btrfs start/end transaction ioctl code
990febd mon: make pool deletion dne error code consistently ENOENT
62a4ad6 docs: update usage logging info
1e539da doc: Normalized shell script syntax. Added generic cookbook path.
7d38758 doc: Changed libvirt-dev to libvirt-bin, and cleaned up ./autogen.sh
3e32dd0 doc: Typo.
c467d9d (tag: v0.47.3) v0.47.3
17dcf60 filestore: disable 'filestore fiemap' by default
88c7629 OSD: clear_temp: split delete into many transactions
b84e1ed doc: document usage log
25311e9 cls_rbd: note overlap units
156879f cls_rbd: fix uninitialized var in cls_rbd_parent
986d0e1 cls_rbd: clean up doxygen, whitespace a bit
4e73ca4 cls_rbd: include dumpers, test instances for our types
87cadff cls_rbd: rename parent size -> overlap
3948e06 cls_rbd: handle parent overlap
e8b36ed cls_rbd: make snapshots inherit the head's parent
f87c441 cls_rbd: check for LAYERING feature for parent methods
2f75b46 cls_rbd: implement get_parent, set_parent, remove_parent
c7f91e6 cls_rbd_client: use snapid_t type
145d1c1 rgw: set s->header_ended before flushing formatter
8a4e2a1 rgw: log user and not bucket owner for service operations
282e226 rgw: initalize s->enable_usage_log
f3f144a osd: use derr (instead of cerr) for convertfs
74658df osd: close stderr on daemonize
4ec9633 PG: improve find_best_info
5435a4d osdcap: make grammar build on spirit 2.2/boost 1.42
992faa4 doc: Added a snapshot page with outline. Needs additional info.
2be0291 doc: Added prerequisite of running Ceph cluster.
0d8970f PG: reg_last_pg_scrub on pg resurrection
b0e66b7 ceph_osd: move auto-upgrade to after fork
6feeff9 librbd: simplify refresh sequence checks
b101f4c doc: first cut of OpenStack/RBD w/out cephx. Authentication coming soon.
37e56e0 filestore: make disk format upgrade warning less scary, more informative
030a2e3 mon: include quorum in ceph status
2fc2cf0 mon: gracefully handle slow 'ceph -w' clients
8b96b9c doc: Added libvirt installation.
51fcef2 PG: best_info must have a last_epoch_started as high as any other info
2b92c73 doc: btrfs and parted chef recipes are not needed.
95ac5ba debian: fix python-ceph depends
d7fe0e3 debian: update homepage url
82cb3d6 filestore: fix 'omap' collection skipping
343cc79 run-cli-test: use new pip incantation
e3b6957 run-cli-test: use new pip incantation
3d4ba43 cls_rbd: do not pass snapid_t to vargs
5efaa8d msg: fix buffer overflow in ipv6 addr parsing
d9e902f ceph.newdream.net -> ceph.com wiki url -> docs url
f8a196f cls_rbd: drop useless snapshot metadata helpers
b08d7ba cls_rbd: use encode macros for on-disk snap metadata
07f853d PG: best_info must have a last_epoch_started as high as any other info
5b1b02b librbd: remove the set-r-and-return idiom from some functions.
b018bef librbd: add cooperative image locking to the C and C++ interfaces
668aa78 librbd: include the image lockers in the ImageCtx mutable metadata
48d2376 test: add rbd image locking tests to test_cls_rbd
71c7ed3 cls_rbd_client: expose locking operations
71e1b1f cls_rbd: add failure logging to all callers of read_key.
c88a455 cls_rbd: add locking functions.
1e899d0 filejournal: make less noise about open failures
b415fd2 rgw: obj copy respects -metadata-directive
2dd1798 librbd: only clear the needs_refresh flag on successful updates.
b5de839 osd: optional verify that sparse_read holes are zero-filled
1156f94 buffer: add list and ptr is_zero() method
614d5a7 LFNIndex.cc: escape null in append_[un]escaped
9d4ce4b filestore: disable 'filestore fiemap' by default
dbbbe21 osdcap: 'allow rwx pool foo' or 'allow pool foo rwx'
1bd5d24 nightly push to local repo
66df6be ceph-authtool: update docs to reflect no more osdcap deny
f916168 osdcap: make caps additive
b44092f radosgw: stop startup timer on failed start
6f30f1fc upstart: make id charset include - _ and .
7bfcc7c radosgw: takes --id, but not -i
92589f8 objclass: allow class methods to retrieve their triggering entity_inst
7515b05 doc: added qemu-img documentation for rbd.
5db4509 rgw: limit number of buckets per user
0adb33d doc: Added steps for OpenStack install with DevStack
446e5d8 doc: fixed bash syntax error.
97c9f01 qa: disable xfstest 68 for now
7f4d171 qa: disable xfstest 219 for now
051e168 osdcap: move semantics of cap check into OSDCap class
529c484 Makefile: fix leveldb dep for system library case
3dbad22 Makefile: fix leveldb includes for system library case
e48dab4 doc: Multi-monitor support means ceph::single_mon was renamed.
762f6d9 osdcap: whitespace to make grammar more readable
1cfd65b osdcap: use static const instead of #define
bf72a00 osdcap: drop unused 'auid' arg from get_cap(), is_match()
67710a6 rbd: fix usage test
66553d2 Makefile: link gtest statically
d1fc562 debian: install radosgw upstart configs, daemon dir
282277d radosgw: upstart support
c4a607a CrushTester.cc: eliminated old compiler warning of uninitialized pointer.
c06e407 osd: reimplement OSDCap struct
6e551f7 init-ceph: make 'status' report running version
f822c02 PG: track purged pgs during active
4ec4b47 ceph_argparse: make entityname parsing error more helpful
6f9ecef rgw: default keyring to $rgw_data/keyring
ca2010e vstart.sh: set data dirs instead of keyring locations
e958efa new default keyring location for daemons
eeeb599 mds: add mds_data config
ce79f9e config: improve variable substitution
d422bf1 config: expand any config variable in config
500c72e config: make meta expansion in set_val optional
72edd35 osdcaps: drop dead peer_type code
8b5336a osd: simplify session peer type check
4cc122c entity_name: is_*() methods
b88a5e5 crush: fix retry histogram array overflow due to indexing error
37dea2d cls_rgw: use updated internal omap api
6fd80d3 cls_rgw: fix CLS_LOG macro usage
1fdd411 crush: fix retry histogram array overflow due to indexing error
ddc9b27 mapper.c: fixed array indexing error.
c31b4e3 remove ceph-kdump-copy
d64600d debian: limit build archs
a3f86b8 rgw: usage statistics also count num of ops/successful_ops
d023cf5 debian: move ./configure to correct rules section
d63aca3 debian: remove dup python build-dep
af16f45 upstart: Read crush location and weight from ceph.conf.
8eb5c9b mon: allow keys to be cleared in ceph osd crush set ... loc key/values
6d8d059 rgw: fix cli test
9a1ea4b rgw: usage log cleanups
753207c doc: update examples in radosgw-admin man page
d2b6e49 rgw: rgw_rados related fixes for usage logging
046395c rgw/rgw_cls_api.h cleanup
9a56a5b rgw_admin: usage admin commands
744a1b3 rgw: usage logger
baa3aff rgw: access methods for new usage ops
ea2f955 rgw: new config options
9a70ec9 rgw: new class methods for handling usage information
d265bb6 rgw: don't fail initialization if socket path returns ENXIO
9851683 cls_rbd: add get_all_features method
ee7a027 mon: fix pg state logging
5cd33cd workunits/rbd: add workunit for running cls_rbd tests
031d42a workunits/rbd: disable remove_with_watcher test
3d22546 librbd: remove unnecessary notify from add_snap()
44e5f3d librbd: ignore RBD_MAX_BLOCK_NAME_SIZE when generating object ids
3d7925b workunits/rbd: allow creating images in different formats
a502630 rados: add commands to interact with object maps
123250b test_librbd, test_rbd.py: optionally use the new format
074ffc5 rbd.py: add support for creating images in the new format
857bbcc rbd: update for the new format
5b40b4b librbd: add create2 to create an image with the new format
b25f277 doc: Segregated set up git from clone.
8337775 debian: ceph depends on python
c526bdb CrushTester: drop range marking
2436457 crushtool: drop useless clitest
f2fa31b CrushTester: simplify, clean up mark down
c5042fe CrushTester: some whitespace
9b0195b CrushTester: randomize mark_down behavior
4921bbb CrushTester: remove dead code
7258076 CrushTester: some cleanup
2deac08 CrushTester: mark_down_ratio and mark_down_bucket_ratio
4551808 mon: add 'auth get-or-create' variant that outputs a keyring
bfbed50 librbd: use ImageCtx members instead of the old header in resize()
5bc34f4 librbd: validate order before creating an image
127b425 librbd: rename md_oid parameters to header_oid
ef38394 librbd: make rename work with any header format
f1d6963 librbd: use cls_client functions for calling class methods
8e51e06 librbd: remove on-disk header argument from helper functions
00f4e84 librbd: check that the current snapid for a snap name matches
4eb2138 librbd: update ictx_refresh to work with both formats
7376a77 librbd: Update ImageCtx for new format
dcc7c96 cls_rbd: add methods for interacting with the new header format
70686c5 librbd: remove useless ENOMEM checks
13aa578 DBObjectMap: remove extra semicolon
8c637f5 vstart: debug osd classes when debugging is on
49059b2 objclass: add methods to get keys without values, and set multiple values
23ebc09 objclass: rename omap methods to be consistent with other interfaces
715c1f1 objclass: allow classes to log at different levels
fe46a74 class_debug: add indent settings header
5750e53 test_librbd: don't include a .cc file
ba56d81 cls_rgw: add indent settings header
e0fda59 objclass: pass strings as const references
60c684a objclass: add indent settings header
fefedc1 cls_rbd: add indent settings header
92325d0 cls_rbd: remove unused test_exec and snap_revert methods
b2793c4 mon: require force argument for 'mds newfs ...'
3eca360 Cleaned some lingering references to "verbose"
c0a02a4 crushtool: refine tunables warning message
978d541 re-include assert after boost::pool
740aa3d crush: compile/decompile tunables
1a2959e crushtool: add --enable-unsafe-tunables option
cfbe34d crushtool: --show-* instead of --output-*
eaad984 CrushTester: clean up output interface
dba70ee CrushTester: dump histogram of choose attempts
c04de2b crush: generate histogram of choose tries
4abb53d crush: fix leaf recursion if we already collided
4873711 CrushTester: optionally output bad mappings
c4336a3 crushtool: arguments to adjust tunables
8b79697 crush: make magic numbers tunable
7332e9c mon: use mode 0600 throughout
07169d2 doc: Added mount cephfs with fstab.
7d1b32a osd: include past_intervals in pg query results
36a3979 OSD: _have_pg should return NULL if pg is not in map
fae1d47 deliberately break encoding macros when wrong assert is present
3571f43 misc assert #include cleanup, hackery
a1ae8b6 reinclude assert.h after json_spirit
e87a66b doc: Incorporated Sam's comments.
3939839 doc: Typo fix.
22863c3 mon: set policy for client, mds before throttler
71c2877 DBObjectMap: fix some warnings
0f6d90c make everyone use our assert #include and macro
a30601a assert: detect when /usr/include/assert.h clobbers us
165fbd1 keyserver: also authenticate against mon keyring
5d520f1 keyring: implement get_caps()
ca433f2 mon: share mon keyring with KeyServer
47b202e mon: put cluster log at /var/log/ceph/$cluster.log and/or send to syslog
78b0bea monclient: be paranoid/defensive about send_log vs log_client==NULL
58b02f9 crushtool: fix cli tests given new less-chatty output, help
af4d8db crushtool: allow user to select output reporting in blocks
87327c2 doc: Added mount cephfs and included it in quick start.
6c1558e logclient: fix warning
d4c30da mon: include pg acting in health detail
0167fd0 mon: include all types of stuck pgs in health detail
37bf2a1 test/cli/ceph-authtool: keyring.bin -> keyring
5b443eb doc: keyring.bin -> keyring everwhere
f918049 test/: Made omap_bench compatible with teuthology
02a9a01 doc: Added the root discussion to deploy with mkcephfs.
993caf8 doc: Added chmod for keyring, and moved client.admin user higher.
85fee04 logclient: fix crashes, fix which entries are sent
b6059cc monclient: send more log entries when first set is acked
235f927 logclient: not a dispatcher
dfd9f5f logclient: limit messages per MLog message
540865f mon: limit size of each logm paxos event
ee94512 config_opts: filestore_update_to defaults to 1000
d8f8b1f OSD: do not convert an entire collection in one transaction
50331ab FileStore,DBObjectMap: add SequencerPosition argument to ObjectMap
ffc5f7e ReplicatedPG: push_start, don't insert empty extent into data_subset
5250e24 test_filestore_idempotent_sequence: add omap
a2eedec osd_types,PG: handle new hobject format in object_info,pg_log
c64fc29 test_object_map: remove DBObjectMapv0
56cf461 OSD,FileStore: clean up filestore convsersion
875bec2 DBObjectMap,FileStore: Remove IndexedPath parameters from ObjectMap
ebfde20 DBObjectMap: update header comments for new structure
df7c407 FileStore: skip omap during list_collections
92807c2 OSD: exit(0) once filestore is converted
7c8aac7 ReplicatedPG: adjust missing at push_start
6ec74ac ReplicatedPG: remove_object_with_snap_hardlinks before creating temp obj
19c667f DBObjectMap::init: initialize seq and v to correct values
01ad679 DBObjectMap: update check() for new format
b6a9932 DBObjectMap: Implement upgrade from previous format
e083e0e DBObjectMap: restructure for unique hobject_t's
761140a FileStore,DBObjectMap: remove ObjectMap link method
9ceed87 DBObjectMap: version bump for new format
7a3a2d2 DBObjectMap: add parse method for old encoding
dab238b os/: update CollectionIndex filename encodings
927458c test/ObjectMap: Copy current DBObjectMap implementation
d5ab877 src/: Add namespace and pool fields to hobject_t
ec689e3 rgw: replace 'should_log' with 'enable_ops_log'
8e41ac1 mon: clear osd_stat on osd creation/destruction
fb6ea82 doc: Added S3 examples to the toctree.
62fe9f4 doc: adding code samples for S3 API usage (thanks, DH!)
644a615 Makefile.am: explicitly mention that -Wl,--as-needed is location-sensitive.
e83a84c doc: Added ${lsb_release -sc} based on Sam's feedback.
fc1f9e0 rgw: shutdown init_timer
5087997 rgw: try to create fcgi socket through open() first
000f9d3 msg: make clear_pipe work only on a given Pipe, rather than the current one.
dde85a2 CrushTester: allow build without boost stuff for chi^2 testing
11b24f7 crush: simiulate using rng; use chi-squared to measure result
aeb3a8f crush: check_item_present
4061ae2 ceph_argparse: with_float
a1c5ef0 admin_socket: only init if path is defined
3764ca6 upstart: simplify start; allow group stop via an abstract job
c48de3a paxos: warn on extreme clock skew
576dff8 omapbench: fix warning
ab5139b omapbench: fix misc warnings
6f3e7a8 ReplicatedPG: fix pgls listing, add max listing size
d8e07a3 objecter: fix pgls
b9ef314 mon: fix slurp latest race
f871d83 Makefile: include ceph-mds upstart bits in dist tarball
7a4e923 test/: Added object map benchmarking tool
e0f1952 doc: fix autobuild debian source line
97d4396 mon: throttle client msgr memory
7e3d90a Objecter: tone down linger op messages on tick
4a7683c test_stress_watch: exercise watch/unwatch/close from second client
95e0a88 qa: stress_watch.sh workunit runs test_stress_watch
fb7ce59 doc: Added preliminary rbd and ko info.
10b0db3 osd: Adding const to methods in OSDMap
8609caf vstart.sh: initialize keyring even if not using cephx
594f2bb perf_counters: use bufferlist instead of vector<char>
ea1c069 mon: fix admin socket lock dependency
fa2f1de admin_socket: fix unit test
51de7c1 osd: ack pending notify when unwatching
5adc85b admin_socket: pass args separately
895e24d admin_socket: streamline 'version' commands
ca8f3ba admin_socket: streamline command set
e30e937 admin_socket: register command prefixes
c80bd9d librbd: Simplify timing init
04e66b4 librbd: Add latency (elapsed-time) stats for rbd operations
767664d rgw: put_bucket_info does not override attrs
d8df1e9 rgw: return default policy if policy attr is broken
a24145f log: add missing .cc file
52187c3 log: uninline SubsystemMap mutators
a6f8fe3 filestore: fix my broken ifdef flow
188d171 doc: ceph.conf cleanup for cephx authentication.
695f92d doc: fix broken link.
d05d98c doc: Added -a to service ceph stop.
cb5c6b5 doc: Consolidated mkcephfs deployment files.
dd1d388 osd: fix null dereference
a3f4d59 doc: Added pools and authentication.
a167213 mon: fix reweight_by_utilization waiting
519fadb osd: fix rewewight_by_utilization
07498d6 filestore: log about syncfs(2) etc support
6dd93b9 doc: Updated authentication with header canonicalization.
26ecf60 workloadgen: Fix the statistics output and a bug triggered by coll destruction
f685f4d filestore: initialize dummy xattr buffer
5842dcd osd: fix misdirected op check
504c6ce doc: Add Paxos call chain to doc/mon/
05469b2 mon: add some info on can_mark_out function
15a30d9 mon: Do some aesthetic reformatting on the Elector class.
8c95e8b mon: add doxygen-format comments to the Elector class.
1816856 mon: Do some aesthetic reformatting on the Paxos class.
28a64fd mon: add doxygen-format comments to the Monitor class.
c5015ef mon: add doxygen-format comments to the PaxosService class.
7064a9c mon: add doxygen-format comments to the Paxos class.
b46b815 test_filestore_workloadgen: less noise
92fec42 test_filestore_workloadgen: write zeros, not random bytes
bb0c7c6 admin_socket: fix unittest
29e6f8c log: add log flush, dump_recent, reopen admin socket commands
4e2846b config: add 'set_config <var> <val>' admin socket command
6849f82 rados.cc: added listomap and getomap commands
a3f8137 config: add 'show_config' admin socket command
ab8f6b1 admin_socket: initialize explicitly on startup; disallow changes
f953c4c librados.h: update rados_object_list_next documentation for key/locator
1277a46 cephcontext: generalize admin socket hook
73e29b6 doc: needed carriage returns between headings, code tag and syntax.
d33f4fb doc: removed redundant install.
68874af doc: Filled in descriptions for object operations.
e868b44 ceph.spec.in: buildrequires libuuid-devel
5eda9b7 ceph.spec.in: drop unnecessary rmdirs
6601ef9 doc: Restored install for dev/unstable packages.
ba54062 filestore: make SNAP_DESTROY ioctl check more informative
07c9eda filestore: fix btrfs subvol ioctl tests
bea1e03 filestore: verify that op_seq is nonzero
18b0d65 vstart.sh: wipe out btrfs subvols in osd dirs
0f38d75 filestore: fix initial btrfs snap creation (on mkfs)
3ae84ee rgw: replace dump_format() with dump_int()
9a9418e librados, ObjectCacher: include limits.h for INT_MAX
8c1c882 rbd.py: Fix seemingly-random segfaults
2f963fa librados: Remove errant sha1
6e46de3 rbd.py doc: Fix markup on :class: references
7805978 filestore: make read_fsid() out arg be a pointer
386139b filestore: more informative fsid mkfs debug output
c96aa62 osd: verify fsid whoami to match on repeat mkfs
5bf5e91 osd: require cluster fsid for mkfs
a980d01 osd: do not clobber existing key with --mkkey
c18e4d8 filestore: mkfs: do not clobber exisiting journal if it has matching fsid
a074d0b filejournal: add check() method
c498827 filestore: drop useless mkjournal error check
b04b73d filestore: mkfs: less noise about leveldb creation
598dea1 filestore: mkfs: only create snap_0 if we created current_op_seq
ec7bf56 filestore: fix misplaced #endif
09192d6 doc/api/s3/bucketops.rst Corrected heading. doc/install/chef.rst  Added Sam's edits to the Chef install.
bf2028f rgw: replace all bad use of formatter->dump_format()
3956cb8 doc/api/s3 <-chipping away at objectops and clean up. Added Copy Object. doc/source <-fixed a typo, updates for installing on precise, rm $ from cmds doc/start  <-replaced clone link with tarball link. Link to Ceph Source Code.
36951d6 mon: use temp access_{r,all,cmd} variables to simplify the checks
f1e4d44 upstart: support mds
176a14a debian, upstart, osd: osd disk preparation and activation scripts
18af813 mon: drop redundant get_allow_all() cap check
1870e12 msgr: add mistakenly-removed msgr->lock.Lock() back in
475e07a debian: Create placeholder dirs for mon and osd data directories.
ab04d95 monmap: return ENOENT from build_from_host_list when no mons
80c6278 monmap: ignore conf mon entries when -m is specified
8bf9fde (tag: v0.47.2) v0.47.2
26843ad Makefile: do not install librgw.h
a330c64 Update ceph.spec for ceph-0.47
244992d libs3: remove make install target
cf6db40 Makefile.am: only append libs3 to SUBDIRS when needed
f461e13 monclient: sanity check on monmap size
d173c7b monmap: avoid dup addrs in generated initial monmap
75e9c0c monmap: aseert addrs are unique on add(), calc_ranks()
c31ab04 doc: librados: fix getxattr return code
311a23c mon: restrict mon 'join' message/command
e895d61 mon: apply 'r' and 'w' caps to mon and pg commands
fb6ed15 mon: apply 'r' and 'w' caps to mdsmap
c1c93e5 mon: apply 'r' and 'w' caps to osdmap
880e86b mon: allow health, status, log, etc. messages with 'r' cap
b7f2791 mon: fix error messages
def15d7 mon: push down 'auth ...' command auth checks
7d0552a mon: push down command auth checks to each command
c43c774 mon: require admin privs to issue any monitor commands
2dec922 vstart.sh: set HOSTNAME when -l is used
8701439 mon: fix 'get-or-create-key'
b01dbcd filestore: leave existing current/
b7a85a8 filestore: create but do not clobber current/commit_op_seq
79d6077 filestore: mkfs: only (re)set fsid if not already set
d923e33 filestore: pass target into read_fsid()
36503d1 filestore: mkfs: rename buf -> fsid_fn
143762f filestore: always open/verify basedir; clean up error messages
58d8faf filestore: do not wipe on mkfs
05db988 filestore: remove unused 'filestore dev' option
17c4624 osd: only (re)write_meta files if old content is incorrect
53b05d5 osd: only create superblock if not present
ff64818 doc/config-cluster/chef.rst <-fixed an error in upload command. doc/config-cluster/deploying-ceph-conf.rst <-added sudo. required. doc/config-cluster/deploying-ceph-with-mkcephfs.rst <-cd to /etc/ceph so keyring goes there. doc/install/chef.rst <-added update and install opscode-keyring, and upgrade. doc/install/debian.rst <-added ceph-common to the install
5326937 config: add --show-args option
1103079 objectcacher: fix infinite loop in flusher_entry
b0d6895 doc/config-cluster/ceph-conf.rst <-Fixed some formatting issues. doc/config-cluster/deploying-ceph-conf.rst <-minor edit. doc/start/get-involved-in-the-ceph-community.rst <-removed $ from command line instruction. doc/start/quick-start.rst <-added additional steps.
d7a8084 monmap: calc_ranks() on rename()
cfe261b crush: check reweight return value
5959ea7 doc: fix broken link in FAQ
cf58486 doc: added links from the chef install doc to the chef config doc and back
6149fb7 doc: Added a FAQ page.
828f619 msgr: pass a Connection instead of a Pipe through submit_message.
e3b3108 Added the Swift API as is. Still needs a lot of work.
de7fb97 obj_bencher: add --show-time option for dumping time
d93410c doc: document range of methods for cluster creation, expansion
c9e9896 obj_bencher: adding stddev to bandwidth and latency
812989b doc: misc updates
bc9e592 obj_bencher: add min/max bandwidth
133cd69 mon: fix 'no initial monitors' warning
3a2dc96 libs3: remove make install target
f5a9404 (tag: v0.47.1) v0.47.1
4e3807b Makefile.am: only append libs3 to SUBDIRS when needed
13b350a filestore: test xattrs on temporary file
6c0a122 ceph-object-corpus: add some old v2 monmaps
c06fb20 monmap: fix decoding of old monmaps
a4d034d qa: fix mon single_host_multi.sh test
731effb mon: rename ourselves if our name does not match committed monmap
cd9d862 mon: only rename peers in seed monmap
e1564af mon: move election msg check into elector
ee13867 mon: allow mons to rename themselves with the join message
b4d2b1e monmap: fix rename
29a158a mon: drop useless rank racalc in init
dae2f53 mon: fix leak of MonMap
7b2614b monmap: filter_initial_members -> set_initial_members
13c86ca Update leveldb to remove CompactionInputErrorParanoid
7d5fa4e man: Remove leftover --bin from ceph-authtool(8).
ad663d5 (tag: v0.47) v0.47
e2e7f58 keys: new release key
5d2ec1d builder: make reweight helpers static, void
63580a9 formatter: replace malloc with new
7eb29ae check malloc return values
c7daf7a crush: check malloc results
5b39ae7 osdmap: set name_pool correctly in build_simple*()
033be2b osdmap: use pg[p]_num accessors
deccc59 filestore: do not test xattrs on fsid file
bd5fc0a debian: fix ceph-kdump-copy.init
31102d3 debian: fix ceph-kdump-copy.init
3f38605 filestore: test xattrs on temporary file
34e8169 monmaptool: fix clitests
1314a00 filestore: do not test xattrs on fsid file
44fe8c8 osdmap: set name_pool correctly in build_simple*()
ba2488f osdmap: use pg[p]_num accessors
69e823e cephtool: restore osdmap handler
360930a qa: use full paths for mon bootstrap tests
3f637b8 mon: show quorum names in health warning
ece33e5 monmaptool: add --generate, --filter-initial options
1473ef4 monmap: move build_initial() from MonClient
a68c224 mon: move initial_members filtering into MonMap method
3c77192 mon: always mark seed/mkfs monmap as epoch 0
777b739 qa: add mon test for seeding bootstrap mon peers via admin socket
3920ce3 mon: add -or- update blank mon addr with join command
434c158 mon: send join message if we are in monmap with blank addr
6551298 mon: simplify/clean up dummy addrs used for initial members
dfac925 mon: learn peer addrs when probing
a5eba52 mon: set our addr when populating monmap with initial members
fc447bd mon: add peers probing us to extra peer list
b5bec55 mon: 'add_bootstrap_peer_hint <addr>' via admin socket
824122d mon: all starting with empty monmap
aa1ee9b cephtool: multiword admin socket commands
359fc7b admin_socket: match first word against command
262d5e2 monmap: move monmap generation from ip/host list into MonMap
b67bc0b mon: drop mon_initial_hosts
59ccf9c mon: clean up initial_members code slightly
0b74b8f qa: add a bunch of mon bootstrap tests
cba3ca7 mon: ignore election messages from outside monmap
6c8214f mon: include quorum member names in 'mon stat'
dc9122c mon: limit initial quorum to mon_initial_members
585adcf mon: only include monmap mon's in outside_quorum, new quorum
e1d34cc mon: add set of additional peers to probe
c7ba9fe mon: use current monmap for initial quorum
0088699 mon: take probed peer's monmap if it has ever joined a quorum
c52a4f7 monmaptool: don't increment epoch on modification
5b18665 mon: pass has_ever_joined in probe messages
e52093c mon: clean up "joined" flag
e197e79d mon: add initial quorum config options
7e6be86 mon: discover peer names during probe
52c2845 monclient: name resolved mon hosts noname-* too
2b5ee3e mon: include health in status
7d6facc mon: move health check into helper function
d599ede mon: fix a bug that was preventing us from subscribing to some log levels.
20df432 mon: fix the priority filter.
9fb3cd2 ceph-authtool: fix clitests
4832c46 ceph-authtool: fix usage
ca987d3 msgr: If the Connection has a bad Pipe*, replace it with a good one.
9125e90 mon: monmap first from 'status' command
9a1d757 mon: only log map state changes from primary
78d0d09 cephtool: aesthetic change to ceph -w output
13a9a15 mon: aesthetic changes to map change log entries
6b76ac3 Makefile: drop MMonObserve*
8931656 remove gceph
a586bdf ceph.spec: don't package gceph
f943f34 debian: don't package gceph
035bb12 src: get rid of the Observers throughout the code base.
8413724 cephtool: Slight rework and pub/sub log support.
6fe96cb mon: Add publish/subscribe capabilities to the log monitor and status cmd.
572c756 doc: fix sizes in librbd python examples
e721271 doc: fix link to hardware recommendations section
25e7889 doc: fix formatting and a couple config defaults
62db60b FileJournal: Clarify log message on journal too small.
96426fa ReplicatedPG: fill in data_off in OSDOpReply
1ec3245 config: improve comments for rbd caching options
49c6ad4 librbd: check for cache flush errors
5e3bc57 init-radosgw: skip sections without host= line
eaea7aa keyring: drop binary encoder
ec73281 keyring: always encode in plaintext
6d4e79a mon: make 'auth get-key <name>' return key
86f2486 mon: 'auth list' is a read-only operation
c9b220f mon: 'auth get-or-create-key name capsys capval capsys2 capval2 ...'
66e2737 auth: EntityName ==, != operators
d079018 mon: make 'auth get <name>' dump plaintext keyring
2886358 init-ceph: ignore sections without 'host' defined
23deb43 ObjectCacher: handle write errors
59c6816 ObjectCacher: propagate read errors to the caller
24fddf2 ceph-dencoder: add AuthMonitor::Incremental
7f14854 mon: use new encoder macros for AuthMonitor::Incremantal
7aaccac features: explicitly use CEPH_FEATURES_ALL instead of -1
5156495 mon: fix mon removal check
0f7bf5f rbd: allow importing from stdin
48d97fe doc: add ioctx parameter to rbd pybind examples.
1109c13 librados: avoid overflow in the return value of reads
2f1f808 ObjectCacher: only perfcount reads requested by the client
4bc63ce msgr: look for a pre-existing Pipe if the Connection doesn't have one.
1c53f34 osd: include age in 'slow request' messages
2b44662 workloadgen: Add transaction throughput infos.
3d2d0ec Additional documentation theme changes:
067cd5f monmap: new encoder
31cb3aa mon: conditonally encode monmap for peer mon during probe
a9f5d77 monmap: use feature bits and single encode() method
31dc394 mon: new encoding for MonCaps
d734381 Objecter: don't throttle resent linger ops
ac85b9e objecter: ping connections with lingering ops every tick()
7830f85 mon: use external keyring for mon->mon auth
7be7810 mon: keep mon. secret in an external keyring
784d1d3 Documentation theme updates:
ab717bc Updated link to publications
5922e2c crush: pass weight vector size to map function
376f0d5 crush: adjust max_devices appropriately in insert_item()
320d1eb mon: fail 'osd crush set ...' is osd doesn't exist
f2380f4 cephfs: pass -1 for old preferred_osd field
bb74b8b osdmap: filter out nonexistent osds from map
80bbe5e keyring: make child of KeyStore
7ce157d utime_t: no double ctor
90fb403 objectcacher: make *_max_dirty_age tunables; pass to ctor
82a3600 librbd: set cache defaults to 32/24/16 mb
d96bf6c test_filestore_workloadgen: name the Mutex variable
8bacc51 workloadgen: time tracking using ceph's utime_t's instead of timevals.
772276c workloadgen: forcing the user to specify a data and journal.
f2a2a6e workloadgen: add option to specify the max number of in-flight txs.
662729f workloadgen: Allow finer control over what the generator does.
6c2c883 libs3: trailing / does strange things to EXTRA_DIST
e20fbac Makefile: drop librgw.so unittests
99ee622 ceph.spec: kill librgw
caab859 debian: kill librgw.so
17114f2 osd: reset last_peering_interval on replica activate
f4befb3 libs3: dist and distdir make targets
a46cc71 Makefile: include libs3/ contents in dist tarball
e2ee197 Makefile: osdc/Journaler is only used by the mds
2e7251e Makefile: librgw.la -> librgw.a; and use it
aa782b4 Makefile: libos.la -> libos.a
938f4ac Makefile: libosd.la -> libosd.a
d96e084 Makefile: libmon.la -> libmon.a
7dbcc1c libs3: added 'make check' target
827d222 debian: build-depend on libxml2-dev
3851423 objectcacher: make cache sizes explicit
b5e9995 objectcacher: delete unused onfinish from flush_set
6f3221a objectcacher: explicit write-thru mode
c19f998 common: add C_Cond
38edd3b objectcacher: user helper to get starting point in buffer map
c8bd471 objectcacher: flush range, set
b50a4c9 mon: add safety checks for 'mds rm <gid>' command
a50fbd5 mon: move PGMap[::Incremental] to new encode/decode macros
8ec476e osd: do not mark pg clean until active is durable
86aa07d osd: check against last_peering_reset in _activate_committed
9d7ec04 osd: tweak slow request warnings
a4b42fc keyring: clean up error output
ae0ca7b keyring: catch key decode errors
6812309 debian: depend on uuid-runtime
3509b03 safe_io: int -> ssize_t
203a7d6 objectcacher: wait directly from writex()
991c93e mon: fix call to get_uuid() on non-existant osd
150adcc debian: add rules for rest-bench
53f642e rest-bench: build conditionally
f60444f obj_bencher: changed interface
d54ef1c rest-bench: change thread context for libs3 calls
6832231 rest-bench: change command line arg for seconds
9979132 obj_bencher: fix data encoding
76a5c89 obj_bencher: use better round robin for completion slot scan
e2eb825 rest-bench: reuse libs3 handle
e62fd7f obj_bencher: fix param order
7e96a4a rest-bench: use refcount for req_state life cycle
072c316 rest-bench: multiple fixes
4fe068e rest-bench: cleanups, initialization
6e04380 rest-bench: create workqueue for requests dispatching
13296a5 rest_bench: cleanups, implement get and put
54da3e6 rest_bench: some more implementation
e6026fe rest_bench: initial work
f9d9fb6 rados_bencher: abstract away rados specific operations
0fbc3c5 rados_bencher -> obj_bencher
1a8eea8 rados_bencher: fix build
a17124e rados_bencher: restructure code, create RadosBencher class
ddb858c rados_bencher: restructure code (initial work)
3e260ae librados: call safe callback on read operation
edd73e2 crush: note that tree bucket size is tree size, not item count
ce60e1b OpRequest: ignore all ops while the oldest one is still young.
f3043fe objectcacher: don't wait for write waiters; wait after dirtying
f3760da crush: update_item() should pass an error back to the caller
e0a636f crush: improve docs/comments for check_item_loc and insert_item semantics
878423f crush: comment and clean up checks for check_item_loc and insert_item
2629474 global_init: do not count threads before daemonize()
72538c0 Makefile: fix $shell_scripts substution
16461ac mon: simplify 'osd create <uuid>' command
42f2d2f crushtool: another simple test for update
9772d13 crush: document return values
1cd6f76 crush: compare fixed-point weights in update_item
c03b852 thread: remove get_num_threads() static
e50932c global_init: do not count threads before daemonize()
684558a crush: clean up check_item_loc() comments
27d98d2 OpRequest: only show a small set of the oldest messages, instead of all.
3228643 rgw: update cache interface for put_obj_meta
b5a18ad doc: fix some underscores
5125daa osd: drop unused CEPH_OSDMAP*VERSION* #defines
f15c0bb Fixed link to blog.
b2100ca Fixed another link to the blog.
5ac8b58 Fixed link.
7eca0dd Clean up. Changed ceph.newdream.net to ceph.com. Removed {ARCH} references. Added link to Source.
91c30b3 doc: more fonts
cabe74b doc: new theme
54991ff doc/install/debian: simplify more
c3dc54b doc/install: reorg, simplify
dc894ee doc: clarify path names for mkcephfs
bd8577d doc: simplify quick start
5465e81 doc: Whitespace cleanup.
93dcc98 doc: Rename to use dashes not underscores in URLs.
715a69c doc: Remove leading whitespace, that syntax means it's a definition list.
3226722 Updated URLs for the new ceph.com site.
be855d8 objecter: ping connections with lingering ops every tick()
d49c3d2 Removed "Ceph Development Status" per Bryan Modified title syntax per Tommi Modified paragraph width to 80-chars per Dan Moved "Build from Source" out of Install Renamed create_cluster to config-cluster Added config-ref with configuration reference tables Added a toc ref for man/1/obsync per Dan Removed redundant sections from Ops Deleted "Why use Ceph" and "Introduction to Storage Clusters"
d14b016 config: $cluster-whatever for admin_socket, log files
ad0330b config: Admin socket path had literal "name" in it instead of $name.
461e62f config: Admin socket path had literal "name" in it instead of $name.
28b1fc8 mon: make 'osd map <poolname> <objectname>' return pg and osd mapping
4dab4ac ceph-object-corpus: a few instances of the newly encoded types
7284637 ceph-dencoder: ignore trailing goop after OSDMap and OSDMap::Incremental
69dcd28 mon: drop 'osd crush add ...'
33e3547 vstart.sh: use 'osd crush set ...'
79edba2 mon: 'osd crush set ...' do an add or update
ee00095 crushtool: extent cli test to include --remove-item and --update-item
ce5842b crushtool: add --update-item command
5aadb57 crush: do some docs
8220ab2 crush: implement update_item()
bfa7635 crush: add check_item_loc
eca7eac crush: fix weights when removing items
76d166f rbd.py: add new error for deleting an image with snapshots
e20cd4b config: no -C shorthand for --cluster
ec99775 Edits.
0fb0ef9 Corrections.
ee44db4 Significant updates to introduction, getting packages, building from source, installing packages, and creating a cluster.
4cd44ec doc: document NOIN, NOOUT, NOUP, NODOWN flags and flapping
7d501fc Removed this. As part of restructuring of install to include admin host.
f53c820 Minor edits. Still WIP.
33dc4c2 The new files contain S3 APIs and a build from source doc.
9b48757 Minor cleanup.
f8b00f3 Added a new landing page graphic, and made some minor edits on the landing page.
d7922e0 Removed some files for reorg.
9f9b7f8 Added a plug for commercial support. ;)
859da18 Building out information architecture. Modified getting involved, why use ceph, etc.
bc857d8 Remove reference to Introduction to RADOS OSDs
b0ee6e8 Added introduction to clustered storage and deleted older files that have been moved.
541a875 Restructuring documentation.
a1b31dd Initial cut of introduction, getting started, and installing. More to do on installation. RADOS gateway to follow.
31fb8f9 Put change to rbd manpage in .rst instead, update man/ from output
d3a2c56 doc: move documentation build instructions to doc/dev section
ee26c5d Treat rename across pools as an error Fixes: #2370 Reviewed-by: Samuel Just <samuel.just@dreamhost.com>
2a93258 doc: add warning about multiple monitors on one machine.
b41f4d1 rgw: normalize bucket/obj before updating cache
695d377 vstart.sh: explicitly specify uuids during startup
09e0828 osd: --get-{osd,journal}-uuid synonyms for --get-{osd,journal}-fsid
5a2fe97 osd: allow uuid to be fed to mkfs with 'osd uuid' setting
8ec3920 filestore: allow fsid to be fed in for mkfs
779914b mon: 'osd create <uuid>'
78b9ccd mon: fill in osd uuid in map on boot
ca4311e osdmap: store a uuid for each osd
c3fb68e osd: make output less ugly
4d095e9 osd: create a 'ready' file on mkfs completion
29399ee osd: use fsync+rename when writing meta files (during mkfs)
bb7e5da PG: Add probe set to HB peers during GetInfo
b9a54b4 PG: check_new_interval now handles adding new maps to past intervals
06fd0b6 filestore: allow flusher+sync_flush enable/disable via injectargs
342e76f filestore: fix op_queue_{len,bytes} instrumentation
274cd0c throttle: count get_or_fail success/failure explicitly
81f51d2 osd: pg creation calc_priors_during() should count primary as up
75a107c throttle: note current value and max in perfcounters
1acdc57 .gitignore: ceph-kdump-copy
18790b1 osd: add is_unmanaged_snaps_mode() to pg_pool_t; use more consistently
22bd5df pick_address: don't bother checking struct ifaddrs which have a null ifa_addr
292ff7f msgr: include msgr name in dispatch_throttler name
be6a9a6 msgr: name messengers
36ac452 throttle: report stats via perfcounter
ccfb6b3 global_init: don't fail out if there is no default config.
845718d global: fix incorrect CINIT flag.
f3771b0 throttle: feed cct, name, and add logging
7413828 osdmap: do no dereference NULL entity_addr_t pointer in addr accessors
4c597fa OSD: add different config options for map bl caches
cefaa7d mon: fix nion -> noin typo
cb7f1c9 (tag: v0.46) v0.46
88dda3b librbd: use unique error code for image removal failures
580b520 run_xfstests.sh: drop #62
4465c3a osdmap: fix identify_osd() and find_osd_on_ip()
d64e1b9 osd: keep pgs locked during handle_osd_map dance
4ae857c mon: drop obsolete osd/PG.h #includes
d48549d osd: set dirty flags on rewind_divergent_log
f750c3f osd: use dirty flags in activate(), merge_log()
36b0257 osd: fix nested transaction in all_activated_and_committed()
3e84ce8 osd: use PG::write_if_dirty() helper
fc8ce16 osd: do not merge history on query
ff9bce9 osd: dirty_info if history.merge updated anything
a13672f osd: write dirty info on handle info, notify, log
7fd3360 osd: skip scrub scheduling if we aren't up
0c860c1 osd: fix dirty_info check for advance/activate paths
36bfdd8 crushtool: fix clitest now that --force is gone
8af46a4 run_seed_to.sh: clean out merge cruft
ebdf80e crush: remove parent maps
ed974b5 crush: remove forcefeed from crush_do_rule
c4c59a0 log: do not set on_exit() callback for libraries
254644a osd: always share past_intervals
352247e fix file_layout.sh layouts test
e205e11 mon: 'osd [un]set noin'
c971545 osd: set dirty_info in generate_past_intervals
944a431 osd: fill in past intervals during advance_map
0c65ac6 osd: drop useless PG::fulfill_info()
7e8ab0f osd: share past intervals with notifies
0c69140 osd: only generate missing intervals in generate_past_intervals
db8e20b osd: include past_intervals in pg debug printout
12d1675 osd: fix check for whether to recalculate past_intervals
90dae62 osd: PG::Interval -> pg_interval_t
f922dc4 Stop rebuild of libcommon.la on "make dist"
e44b126 mon: limit size of MOSDMap message sent as reply
d1df320 ceph-object-corpus: revert rewind
4274fd0 osdmap: fix addr dedup check
06d1bc2 osd: fix bad map debug messages
a477d6b Stop rebuild of libcommon.la on "make dist"
510eed0 filestore: fix error message
f03dc34 filestore: first lock osd mount point, next detect fs type
10c616a OSD: use map bl cache pinning during handle_osd_map
d0d6912 simple_cache.hpp: add pinning
92becb6 FileJournal: simply flush by waiting for completions to empty
155700d PG: in GetInfo Notify handler, fix peer_info_requested filter
dbd9912 librados: test get/set of debug levels
4e2e879 config: allow {get,set}_val on subsystem debug levels
7f3790a OSD.cc: track osdmap refs using an LRU
ec1ea6a common/: added templated simple lru implementations
873e9be osdmap: dedup pg_temp
ed1024f osdmap: use shared_ptr<> for pg_temp
207eec6 osd: make map dedup optional
0188d9b osd: dedup osdmaps when added to the in-memory cache
4cfbd81 osdmap: drop obsolete PG_ROLE_* constants
2a46564 buffer: make contents_equal() more efficient
36d4382 osdmap: dedup crush map
98b1d8f osdmap: use shared_ptr for CrushWrapper
e0436cb osdmaptool: kludge to load a range of maps into memory
d6359d4 osdmap: dedup addrs and addr vectors between maps
ee541c0 osdmap: filter out nonexistent osds from map
8f4dba6 librbd: the length argument of aio_discard should be uint64_t
fe76c5b filestore: interprect any fiemap error as EOPNOTSUPP
313c156 osdmap: use shared_ptr for addrs, addr vectors
06af38a osdmap: uninline a bunch of stuff
10914ca mon: consider pending_inc in {up,in}_ratio for can_mark_{out,down}()
2a22ff4 mon: thrash pg_temp mapping, too
6910d83 filestore: fix a journal replay issue with collection_add()
96108c6 filestore: fix a journal replay issue with collection_add()
ead5d2a osd: filter osds removed from probe set from peer_info_requested
3e88017 PG: get_infos() should not post GotInfo
7fe45fd Revert "PG: whitelist MNotifyRec in started"
cbe795a test_librbd: rollback when mapped to a snapshot should fail
f873a77 workload_generator: get rid of our lock.
436f5d6 TestFileStoreState: make 'm_in_flight' var an atomic_t.
9579365 PG: whitelist MNotifyRec in started
be9b38e RefCountedObject: fix constructor warning
35dc2de workload_generator: specify number of ops to run, or 0 to run forever.
823afcd workload_generator: Delegate store tracking to TestFileStoreState.
3903b5a TestFileStoreState: Fix issues affecting proper behavior when inherited.
22ade4a Makefile.am: test_filestore_workloadgen doesn't need gtests lib.
39f9935 RefCountedObject: relocate from msg/Message.h to common/RefCountedObj.h
70f70d8 librados: call notification under different thread context
8bc818c mon: 'osd thrash <num epochs>'
fa98479 osd: filter osds removed from probe set from peer_info_requested
f022a94 mon: add 'mon osd min up ratio' and 'mon osd min in ratio'
ba1d3b1 mon: use can_mark_*() helpers
75ccd81 DeterministicOpSequence: add 'ceph_asserts()' where we expect != NULL.
1966402 TestFileStoreState: distinguish between 'get_coll()' and 'get_coll_at()'
44dafc8 run_seed_to.sh: Add valgrind support.
4430c01 TestFileStoreState: free memory on terminus.
4bfcbe6 mon: decode old PGMap Incrementals differently from new ones
59957da mon: do not mark osds out if NOOUT flag is set
2673875 mon: do not mark booting osds in if NOIN flag is set
9ff535a mon: always remove booting osds from down_pending_out
addfb2c mon: prevent osd mark-down with NODOWN flag
f077386 osd: do not attempt to boot if NOUP
d84255e mon: prevent osd from booting if NOUP
d3f55dd mon: 'osd {set,unset} {noin,noout,noup,nodown}'
6003325 osdmap: add NOUP, NODOWN, NOIN, NOOUT flags
e51772c librbd: pass errors removing head back to user
ccf7d93 mon: clean up handle_osd_timeouts a bit
36ffed4 mon: fix pg stats timeout
7b832f4 mon: fix whitespace
2b30201 mon: fix pgmonitor ratio commands
d28f850 test_rbd: add tests for snap_set and more complicated resizing
7add136 librbd: reset needs_refresh flag before re-reading header
3ef3ab8 librbd: clean up snapshot handling a bit
e17b5a8 librbd: clarify handle_sparse_read condition
2bdaba4 run_seed_to.sh: rework the script, make it more flexible and broaden the tests.
e65b797 librbd: rev version for discard addition
19ba347 osdmaptool: fix clitests for lack of localized pgs
637de4d mon: load CompatSet features on startup
771fd05 mon: set auid for mon-created pools to 0
a514344 mon: ignore/remove localized pgs
f01b6dd test_ioctls: remove preferred osd
b3cdc21 cephfs: remove preferred osd setting
198544a mds: remove preferred from ceph_file_layout
21ef979 client: rip out preferred_pg thing
6d1344c libcephfs: disable ceph_set_default_preferred_pg
f164b87 osdmap: do not forcefeed preferred osd to crush
b8f4acf osd: remove preferred from object_locator_t
0138a76 osd: ignore localized pgs
94adf5d osd: remove localized pgs from pg_pool_t
43d1a92 run_seed_to.sh: remove stray arg
0112e74 run_seed_to.sh: rework the script, make it more flexible and broaden the tests.
e9ecd1b perfcounters: tolerate multiple loggers with the same name
97f507f Makefile: disable format-security warning
c8377e4 filestore: verify that fiemap works
7471a9b rados: fix error printout for mapext
07ddff4 librbd: instrument with perfcounters
fb9fdf4 librbd: fix ictx_check pointer weirdness by using std::string
888a082 FileJournal: don't wait flusher until completions are queued
d1740bd filestore: fix collection_add journal replay problem
92b299a FileStoreDiff: flip sense of diff*() methods around
ca369c9 test_idempotent_sequence: Use FileStoreDiff class instead.
5466ebc test_idempotent_sequence: Output missing options on "usage".
4746129 FileStoreDiff: check if two FileStores match.
4ddbbf5 librbd: allow image resize to non-block boundaries
165038d objectcacher: rename truncate_set -> discard_set, and use discard
7232396 objectcacher: implement Object::discard()
5b60343 librbd: fix debug output
81af4e8 librbd: make discard invalidate the range in cache
b94d6a6 librbd: fix zeroing of trailing bits on short reads that span objects
379c5e7 librbd: fix debug output for image resize
dd78c3d test_librbd_fsx: port newer xfsprogs version
e861e20 revert to xfstests' fsx, which has discard support
a8aaa93 admin_socket: add a separate debug subsys/level
f7699cc log: prefix dump with line numbers
a68b306 test_filestore_workloadgen: track pg log size in memory
6b28f55 test_filestore_workloadgen: whitespace
2834f60 organize test_filestore_idempotent*
8bb58bc remove hopelessly flawed test_filestore_idempotent
94ebe8d test_store -> test_filestore
77c645a test_wrkldgen -> test_filestore_workloadgen
27efa05 msgr: move locking out of submit_message to its callers
5a8019e msgr: remove useless block addition.
f00dab6 ceph-authtool: rename cli test dir
613d817 ceph-conf: rename cli test dir
ac874a6 OpRequest: mark_event output is now at debug 5
f2d4574 config: dump subsys log levels with --show-config
607a8a3 osd: do not create localized pgs
8335eb5 rgw: can't remove user that owns data
9df7f6f msgr: merge the send_message and lazy_send_message implementations.
a394fb2 msgr: do not establish a new Pipe for any server
42a49cf msgr: Create a proper Connection* lazy_send_message()
526cd9d msgr: merge submit_message() functions
56fc92c FileStore: don't read reference to writeq head after pop_write
758fa9b rgw: bucket HEAD operation should return 200, not 204
9cb796a obsync: section 8 -> 1
5c21f7e msgr: remove the Pipe::disposable flag.
c470e1a msgr: start moving functions around in Pipe
db6d467 msgr: fix some spacing issues in Pipe
fcc4481 msgr: minimally document the SimpleMessenger inner classes
d3e40e0 msgr: reorder the SimpleMessenger data members a little bit
501553e msgr: group private data members by type
146e1a4 msgr: make mark_down_on_empty() behave more consistently.
09100b6 rgw: HEAD bucket, don't dump rounded size
9c2251f osd: fix vector array out of bounds
e82c330 ceph-fuse: only call common_init_finish in child; fix admin socket
f1de0d6 qa: drop rgw.py from test_python.sh workunit
d3a57a2 ceph.spec.in: drop rgw.py
0995d08 Makefile: drop rgw.py
4390c08 mon: fix full/nearfull ratio initialization
7fbc0fc msgr: add error code returns to send_keepalive.
cb43eee msgr: add some validity checks to ~SimpleMessenger()
0c2c18c msgr: convert global_seq_lock to a spinlock.
dc4c759 msgr: convert get_policy() to return a const reference.
aab516d rgw: allow subuser creation on radosgw-admin user create
c9adf07 msgr: move SimpleMessenger function declarations into good order
dbe779a osd: dump old ops singly rather than all at once.
b0532aa osdmap: restructure flow in OSDMap::decode
bc458bf ceph-object-corpus: prune archive
ebb19e7 test/encoding/import.sh: fix
e1622e4 rgw: HEAD bucket also dumps bucket meta info
0769efa rgw: add x-rgw-* as a possible meta header prefix
c3bfe45 osdmap: remove bad cct reference
eea982e osdmap: workaround old bug that zeroed pool_max
ee22c97 python-ceph: remove rgw bindings
eb8a8fd pgmap: allow Incrementals to specify [near]full_ratios of 0
88525ea pgmon: add "set_full_ratio x" and "set_nearfull_ratio x" commands
882bd5b pgmon: convert PGMonitor::prepare_command to our standard infrastructure.
1242b75 pgmon: remove the PGMonitor update_full_ratios stuff
f1152e6 mon: only fill in full/nearfull sets if the ratio > 0
841f288 mon: unconditionally encode PGMap full ratios in the Incremental
5a6bbd0 rgw-admin: user create is idempotent
413d8be osdmap: dump pool_max
4627b67 msgr: Document remaining SimpleMessenger functions and data members
1f6b7f8 msgr: Group the SimpleMessenger functions following the Messenger's pattern
dcd34fc FileJournal: let peek_write return a reference
6561484 common: add blkdev.{h,cc}
82d7a68 rbd: fix probe of source when block device
41cb40a filestore: factor block device size probe out into helper
dea8536 FileJournal: clarify locking in header
377f75f OpRequest: mark_event output is now at debug 5
98e2369 librados: add methods to check and wait for safe/complete -and- callback
001aa46 msgr: add a little detail to mark_down_on_empty() and mark_disposable()
a422c47 msgr: remove out-of-date comments and function
2eb2aa5 msgr: group functions more appropriately
0be9718 librbd: 'rbd cache enabled' -> 'rbd cache'
6cbda4c qa: comment out xfstest 232
e0ec286 objecter: recalc pgid in case it wasn't a precalculated pgid
f22da6c cls_rgw: rgw_dir_suggest_changes move cur_disk_bl inside loop
31d0d1d librados: test get_pool_name
2dbea12 librados: C bindings for get_pool_name()
2f5af83 Filestore: fix guard errors in COLL_REMOVE and COLL_MOVE
6868ec6 rgw: skip empty entries when listing a bucket
f87a6a0 cls_rgw: rgw_dir_suggest_changes() don't try to decode cur_disk
73badda cls_rgw: don't zero out error code before reading value
20ab74e test_librbd: fix write sizes
81c8a7b test_idempotent_sequence: no config file
a40fe5b run_xfstests.sh: ensure cleanup on errors
3d187db run_xfstests.sh: pass test result via exit status
a4dd920 objclass: fix cls_cxx_map_remove_key()
b352a3e rgw: call dir_suggest_changes with correct bufferlist
a31392c objectcacher: name them
28e6181 librados: add IoCtx::get_pool_name() to c++ api
d80c126 ObjectCacher: use "objectcacher" instead of the CephContext::name for perfcounter init
f355875 ObjectCacher: group all the function definitions properly
6257a94 ObjectCacher: add a bunch of perfcounters
446b5e2 ObjectCacher: move functions out of the header.
72a7573 objectcacher: perf skeleton
2cc854f msgr: Document all the functions in the Messenger interface.
b8207dd msgr: remove several functions from the interface.
bf8847e qa: add run_xfsests.sh script
ee69f27 test/rbd/fsx: fix signed/unsigned warnings
812c7c7 librbd: implement discard
30805bf test_librbd_fsx: clean up properly
78d14da librbd: flush pending writes when a new snapshot is created
b26d702 test: port fsx to run on an rbd image instead of a file
5c2d5b1 test: copy fsx to rbd directory
9c8b3f7 .gitignore: clean up to not match so many things recursively
f464e6c ObjectCacher: include object when outputting a BufferHead
d9aa81b finisher: add indent settings header
55b6554 test_librbd: flush before opening another handle to the image
6cf2265 ObjectCacher: remove useless conditional
20be92e ObjectCacher: always delete callback in commit_set
ee9987b librados: debug logging for aio writes
7868dbe ObjectCacher: remove unused/unimplemented methods
1dd9c30 ObjectCacher: remove redundant 'public:'
7197825 Remove unused Completion.h header
d0b1f72 ObjectCacher: add some asserts about when the lock is held
68e2e00 librbd: flush cache before creating a snapshot
bb35ecf librbd: fix bytes read accounting in read_iterate
579d30b librbd: check for writes to snapshots
c007377 librbd: allow writeback caching
9546c15 librbd: remove writeback window
d6dbff0 ObjectCacher: remove dependency on Objecter
abbfd93 Filer: make file_to_extents static
cbbd5f9 ObjectCacher: check for read/write errors
34a10fa librados: do aio callbacks in async thread
a0fc333 librados: unconditonally associate IoCtxImpl with AioCompletionImpl
cc1ae67 filestore: flush log on failure injection
f052c82 run_seed_to: assume tool is in path, not cwd
4fc48e5 run_seed_to_range.sh: run filestore idempotent sequence tests over a range
a8b9b98 run_seed_to.sh: set -e
95bb423 filestore: use our assert
c772984 test_idempotent_sequence: simple test script
2cb0032 DeterministicOpSequence: writing to object being cloned in the same tx.
bb0499a test_idempotent_sequence: outputting collection being diff'ed.
21be4ad test_idempotent_sequence: Add more info on diff's dout's.
2d24eb3 FileStore: don't return ENOENT from object_map getters
56fb027 test_idempotent_sequence: make get-last-op return 0 if no txns applied
2d20b4c test_idempotent_sequence: return true from diff if different
08cf4d2 test_idempotent_sequence: include object name in diff output
a5f533a test_idempotent_sequence: fix diff return value, mount behavior
1b45129 test_idempotent_sequence: fix/enable do_coll_add
27cb82e test_idempotent_sequence: use get_obj_at() for clone source
794fc0b test_idempotent_sequence: fix collection_move arg order
84175c7 VerifyFileStore: delete from tree
4289911 Makefile: remove VerifyFileStore from test_idempotent_sequence build
2c940a4 test_idempotent_sequence: Remove references to VerifyFileStore
e270e0b test_idempotent_sequence: diff two stores.
5d30581 test_idempotent_sequence: add remove op
bec1e50 test_idempotent_sequence: remove existing target for collection_add
db3d14b test_idempotent_sequence: fewer objects per collection by default
51bc6df test_idempotent_sequence: make object names overlap
c056f60 test_idempotent_sequence: simplify clone
bc5dffe test_idempotent_sequence: replace on coll_move
a8c3205 test_idempotent_sequence: whitesepace
5786694 test_idempotent_sequence: implement get-last-op
795274b test_idempotent_sequence: include tx number in each transaction
9dba317 test_idempotent_sequence: require nonexistent filestore dir
5ced86b filestore: init filestore_kill_at in ctor
975e59a test_idempotent_sequence: Add commands and lose a couple of optional args.
a5a8395 filestore: name internally
01daa88 test_idempotent_sequence: no need to reinject value that is already there
4a6cfcb deterministicopseq: add collection_rename() support
dee47bb test_idempotent_sequence: Generate a reproducible sequence of txs.
6573690 VerifyFileStore: Check if two FileStore's match after applying a set of operations.
2f02a8a DeterministicOpSequence: Generate a reproducible sequence of operations.
8322755 TestFileStoreState: Represent a FileStore's state to be used by tests.
f400179 filestore: two-phase guard
dfcadc9 filestore: simple failure injections via --filestore-kill-at <n>
583c79a filestore: fix collection_add argument names
8d3acb5 filestore: replay collection_move using add+remove
c6551fb test_rados.py: add basic tests for the Object class
7679968 rados.py: fix Object.read argument order
5ce8d71 FileJournal: allow write_thread and write_finisher to run in parallel
dc44950 filestore: implement collection_move() as add + remove
dc10d04 OSD: improve information and format of OSDTracker messages
3d11455 osdmaptool: fix clitest for lpg_num 0
8a6c3c1 msgr: dispatcher: Documentation of security functions
9b2aff2 FileStore: don't return ENOENT from object_map getters
241c5e5 msgr: Reorder functions to reduce the number of privacy tags.
5cf7628 msgr: miscellaneous fixes.
8e5f562 DBObjectMap: check in clone and link that source is not destination
308c1fc filestore: use config observer to start/stop dumping/tracing
816a512 objectstore: tweak dump() a bit
7223f00 filestore: dump transactions sets, include seq and trans_num
ddbaf58 filestore: remove commented code, fix whitespace
9565a8b ObjectStore: Remove code duplication when dumping transactions.
6a7bbe8 filestore: dump transaction in json on error
6ee0b71 filejournal: dump injson
cfac4a9 pgmon: clear out osd reports after the OSD has gone down
119dd5a mkcephfs: update man page
4a4b799 ceph-authtool: update man page
ab08fb8 mkcephfs: note that btrfs (and --mkbtrfs) are optional and experimental
ee39291 ceph-authtool: add warning to man page
11b93d3 osd: disable localized pgs by default
8836b81 mon: alloc pgp_num adjustment up and down
58671a4 mon: command to disable localized pgs for a pool
83e1260 mon: set pgp_num == pg_num (by default) for new pools
7fdf25b debian: python-support -> dh_python2
ed0653b COPYING: doc/ CC BY-SA
6e83e11 README: update
84efc55 debian: drop unnecessary conflicts on librgw
9678c09 init-radosgw: start in runlevel 4
af50273 obsync: include man page in tarball, packages
838a761 ceph-rbdnamer: include in dist tarball and debs/rpms
292898a init-ceph: start at all runlevels
c3e4c5b filestore: cleanup: flip sense of replay guard check
85db25e filestore: fix fd leak on collection_rename
df4d7a4 filestore: fix collection_rename guard
4bd9d1b filestore: fix collection_add guard
be5b25b filestore: fix collection_move guard
43de5e4 FileStore: dumping transactions to a file
cd4a760 osd: fix heartbeat set_port()
1775301 osd: reenable clone on recovery
6fbac10 osd: allow users to specify the osd heartbeat server address.
4f030e1 osd_types: fix off by one error in is_temp
31f16a4 rgw: list multipart response fix
89fecda Makefile.am: remove some clutter
0aea1cb (tag: v0.45) v0.45
d348e1a configure: --with-system-leveldb
34cc308 filestore: fix leveldb includes
0b2e1cd cephfs: fix uninit var warning
f79b95e Makefile: add missing .h to tarball
8d5c87a rgw: fix object name with slashes when vhost style bucket used
853b045 OSD: use per-pg temp collections, bug #2255
bd518e9 encoding: fix iterator use for struct_len copy_in
36d42de buffer: allow advance() to move an iterator backward
dd8fd16 configure: HAVE_FALLOCATE -> CEPH_HAVE_FALLOCATE
8e1cc8a init-ceph: manage pid_file from init script
81d2cbe config: move /var/run and /var/log defaults to config_opts.h
dfa043d config: {osd,mon}_data default to /var/lib/ceph/$type/$cluster-$id
7680cda dencoder, rgw: make ceph-dencoder load much faster
9832696 encoding: use iterator to copy_in encoded length
689ac5d (tag: v0.44.2) v0.44.2
e0c4db9 FileStore: do not check dbobjectmap without option set
38e24b1 config: include /etc/ceph/$cluster.keyring in keyring search path
57dff03 config: expand metavariables for --show-config, --show-config-value
cfee033 config: parse fsid uuid in config, not ceph_mon
2c14c8b config: add distinct UUID type
2c0dc47 global: add -C or --cluster early args to specify cluster name
930a669 config: add cluster name as metavariable; use for config locations
bda562f config: implement --show-config and --show-config-value <option>
f18b219 test_workload_gen: fix logging
32b5d0f config: remove obsolete bdev_* options
0e5d087 README: update instructions
0df6fbd rados: fix rados import
0921c06 config: drop loud ERROR prefix
b9185bb osdmap: allow row, room, datacenter, pool in conf for initial crush map
4313a2d crush: don't warn on skipped types
56a6aa7 osdmap: set 'default' pool type correctly
dd7b84a ceph-fuse: fix log reopen when -f is specified
e859611 osd: define more crush types
2dbdadb test_rewrite_latency: check return value
493344f Makefile: add mssing header
d57d8af rgw: throttle at num_threads * 2
a31efd9 filestore: print Sequencer name in debug output
756621d msgr: clean up Pipe::do_sendmsg.
9f10a99 msgr: write minimal documentation for the tcp functions.
e966c39 msgr: make a bunch of stuff private.
096971d msg: update the Dispatcher and Messenger documentation
36ec8e9 dispatcher: fix documentation for ms_handle_reset
cbe13ab msgr: rename set_ip() -> set_addr_unknowns()
607f35e msgr: Remove _my_name and ms_addr, replace with direct access to my_inst.
77f4566 msgr: store the entity_inst_t in the Messenger.
6374d06 buffer: implement a contents_equal function on bufferlists
5681461 msgr: change the signature of get_myaddr()
45a76ea msgr: get_connection() is required to establish a connection if none exists.
e80126e test: fix monmaptool help text
e06436e cls_rgw: guard decode
ebb487a cls_rgw: reset return code in some cases
a893842 librados: fix exec test
57f5247 doc: disable broken 'doxygenclass' class in librados c++ doc
e40cf8c test_workload_gen: fix Sequencer ctor
addc744 rgw: check for subuser existence
e792cd9 filestore: fix ZERO fallback write
8434caf qa: test_rewrite_latency
f8a5386 osd: fix error code return from class methods
15f0a32 monmaptool: make clear you can set the fsid when making a new map.
208daeb ceph_mon: fix fsid parsing.
aa31035 osd: update_stats() on reads too
2878865 log: dump_recent in fatal signal handler
f7f65eb osd: fix typo in debug message
df5860f objectstore: name Sequencers
29c01f2 ceph_common.sh: Remove dead code.
ba6bb4c man: Oops, update ceph-mon(8) for real. Sorry about that.
541a543 man: Update ceph-mon(8) after reStructuredText syntax fixes.
2c54244 doc: Remove duplicate anchor from (unused) overview doc.
1ec47db doc: Convert the mailing list mention to not be a section heading.
b162696 doc: Fix reStructuredText syntax errors.
2d1a96d add include/stringify.h
b25817a FileJournal: check pwrite return value when zeroing journal
41f84fa filestore: set guard on collection_move
f89f98d osd: clear RECOVERING on start_peering_interval
3cdd8d5 osd: more heartbeat debug
efc27f1 osd: don't fail new heartbeat peers
21e6e2b osd: ignore peer epoch of 0 on ping reply
e1a5891 osd: discard heartbeat_peer in note_down_osd
33b9187 osd: rename hbin -> hbclient, hbout -> hbserver
fe5f033 osd: send pings from hbin
4e2f0d1 osd: simplify heartbeat logic
eebc9ec test: test_workload_gen: Add callback for collection destruction.
424b5b0 ceph: --concise by default, add --verbose option
409b648 config: drop old debug_* items
5d981b1 rgw: add unittest just to verify we link
69b0172 config: fix librados, libcephfs unit tests
1c8ec70 PG,ReplicatedPG: update missing_loc_sources with missing_loc
05ef3ba ReplicatedPG: fix loop in check_recovery_sources
c39ed56 test: test_workload_gen: Fixing a memleak.
b3069e5 ceph_argparse: drop useless declaration from unit test
4269f8d ReplicatedPG: ctx might not contain an OpRequest
135a11b FileJournal: optionally zero journal on create
d026cdc FileJournal: use DSYNC for directio path
2486c61 FileStore: Pass OpRequestRef into filestore in queue_transaction
533bbf7 osd/: OpRequest implements TrackedOp for passing into filestore
4f0d170 test: test_workload_gen: Change CLI option and add '--help' usage.
18d219e rgw: replace dout with ldout
a3bdf05 test: test_workload_gen: Default arguments, and minor changes.
37cdbcd log: fix up unittest
d172b40 test: test_workload_gen: Destroy collections.
8948ad0 test: test_workload_gen: CodeStyle compliance and cleanup.
3770096 test: test_workload_gen: Mimic an OSD's workload.
36c2f27 osdmaptool: fix clitest conf filename
ffc468f osdmap: less noisy about osd additions during buildmap
ca1f79b dout: no newlines on dout_emergency
d536096 throttle: fix off by one issue
a52d048 rgw: throttle incoming requests
30cadf0 prebufferedstreambuf: fix typedef
16b60b3 rgw: minor style fixes
4d74a7b osd: fix handling of recovery sources when osds go down
8fdde24 osd: remove down osds from peer_*_requested maps
1ee6087 osd: maintain missing_loc_sources
5dbb971 rgw: all intent log operations are now async
0b1e3ed osd: increase default heartbeat_interval to 6 seconds
6984449 rgw: remove pool_list(), can't list_objects() on system buckets
2e9079c rgw: intent log processing uses new pool_iterate()
2acf4ae mon: Paxos needs to store the latest version permanently on-disk.
c3b0464 paxos: share_state sends every unknown value, including the stashed one
d5c4015 uclient: We want to release cache when we lose the CACHE cap, not gain it!
d0ba27a doc: add a short thing on kernel client troubleshooting.
c89b7f2 (tag: v0.44.1) v0.44.1
6044c5b hadoop: define subsystem, fix logging
fe56818 config: configure log thresholds
ce61a83 log: throttle message submission, trim recent
339956d log: don't spam -1 to syslog; add err_to_syslog for consistency
17a95c2 log: use PrebufferedStreambuf
bfa2bcd prebufferedstreambuf: fix get_str()
0e3c0c4 bench_log: flush
3a87e45 log/EntryQueue: no implicit trim
f66e075 utime_t: sprintf() method
6ab8526 do_autogen: control optimization level
362ca19 log: move create_entry() into Log interface
8c5046f bench_log: simple util to time how long it takes to log stuff
23f0af3 test log performance with PreallocatedStreambuf
a450927 common: add PrebufferedStreambuf
abfadb9 assert: dump recent log entries on failed assertions
c7242bf log: flush on_exit
f41887e log: new logging infrastructure
974a201 objecter: don't call op_throttle_ops.take(1) unconditionally
679cd1f objecter: add in-flight ops throttling
d6b0cbd config: use our assert
c3dc6a6 msg: assert pipe->msgr == msgr
483fcf8 doc: include crush in toctree
3bd1f18 doc: few notes on manipulating the crush map
6db7715 doc/dev/peering.rst: fix typo
1a0360c osd/: OpRequest is no longer a RefCountedObject, remove puts/gets
ea377a0 osd/: Convert OpRequest* to OpRequestRef
2cb6c7d OSD: Add typedef for shared_ptr<OpRequest>
3ed784c osd/: add mark_event to OpRequest and move tracking into OpTracker
e478a75 vstart: enable omap for xattrs
3ab2895 don't override CFLAGS
d3bcac2 Makefile: fix modules that cannot find pk11pub.h when compiling with NSS on RHEL6
b5641ef rgw: don't #include fcgi from rgw_common.h
2ec8f27 rados_bench: generate_object_name now takes a buffer length
21a170e doc: dev/peering.rst edits from Greg
8fa904a doc: update dev/peering document
de86763 msgr: fix tcp.cc linkage
fd9935b cephtool: don't prefix log items
2e21adf Objecter: resend linger_ops on any change
52aff48 ObjectStore: Add collection_move to generate_instances
ec52eeb FileStore: remove src on EEXIST during collection_move replay
23313ee FileStore: whitelist COLLECTION_MOVE on replay
b47454b ObjectStore: add COLLECTION_MOVE to dump
1b2a066 ceph-kdump-copy: add tools for saving kdumps
3caa431 ceph: define and use a shell_scripts Makefile variable
d0e8f14 doc: update list of debian dists
7236178 Objecter: resend linger_ops on any change
3019d46 TestRados: Add watch
4760536 rgw: keep pool placement info also in cacheable location
2998368 rgw: remove unused definition
f1563a6 Revert "Objecter: add op->resend_on_any_change"
fc7a1bd ReplicatedPG: return -EBUSY on delete for objects with watchers
c53194d Objecter: add op->resend_on_any_change
2daff0e ReplicatedPG: osd_max_notify_timeout -> osd_default_notify_timeout
6a5cbec rgw: replace bucket_id generation
cdd5298 (tag: v0.44) v0.44
e42fbb7 rgw: process default alt args before processing conf file
e0b8f7a rgw: process default alt args before processing conf file
51a0733 rgw: incrase socket backlog
5b33198 rgw: fix internal cache api
f923b84 OSD: do not hold obc lock in disconnect_session_watches
fd85130 ReplicatedPG: there should be no object_contexts during on_activate
77c08f8 osd: fix object_info.size mismatch file due to truncate_seq on new object
619fe73 .gitignore: xattr_bench
3a6c085 heartbeatmap: use utimes(2) instead of futimens(2)
63ec06b osd: remove special handline for head recovery from clone
d8bcc1b config: fix recursive locking of md_config_t::lock
15d85af osd: explicitly create new object,snap contexts on push
d4addf5 osd: re-use create_object_context() in get_object_context()
58c5d5a osd: ReplicatedPG::create_object_context()
96780bd osd: create_snapset_context()
872bdd0 osd: ensure we don't clobber other *contexts when registering new ones
a49a197 ReplicatedPG,FileStore: clone should copy xattrs as well
2a593dd RadosModel: test xattrs with omap
14506dc FileStore: add support for omap xattrs
b09fb15 ObjectMap: use Index object for locking rather than path object
ecd875f tests/: Added xattr bench
8fc4317 config_opts.h: opts for omap_xattrs
fdb9274 test_object_map: update unit test for xattr
d8325e5 DBObjectMap: implement xattr interface
983fd19 ObjectMap: add interface for storing xattrs
9fd4a12 DBObjectMap: add support for storing xattrs
0904c7b configure: fix warnings
f2e6b8d ReplicatedPG: populate_object_context during handle_pull_response
4cfc34f leveldb: .gitignore TAGS
5db6902 leveldb: un-revert
89ccd95 osd: maybe clear DEGRADED on recovery completion
826d30f rgw: remove extra layer of RGWAccess
80e2a5e msgr: switch all users over to abstract interface
1e1453c msgr: introduce static Messenger::create() function
d26feff msgr: promote more methods to abstract Messenger interface
c2af646 rgw: put_obj() uses bufferlist instead of extra alloc/copy
2b3bfd0 rgw: remove fs backend
bec47b5 introduce CEPH_FEATURE_OMAP
8c96fd2 leveldb: new .gitignore entry
20d1171 osd: rev cluster internal protocol
a0bcab5 ceph-fuse: make big_writes optional via 'fuse big writes'
5912312 rgw: remove some more globals from librgw
d90298d ceph-dencoder: don't use rgw types if configured without rgw
213a3f5 rgw: fix identation
60524ab Added documentation for building the ceph documentation.
b909761 rgw: get rid of references to g_ceph_context where required
e455d38 doc: update project status/stability blurb
e696925 global: drop yellow warning on startup
e5934f1 qa: kclient/file_layout.sh: ...
16f9960 osd_types: use uint64_t for ObjectExtent offsets and lengths
095c3a0 OSDMap: make get_pools() const
db12627 ObjectCacher: remove unused and crufty atomic sync operations
5f92f33 librados: move methods that require an IoCtx to IoCtxImpl
8f27864 librados: split into separate files and remove unnecessary headers
98792e9 rgw: add more meaningful tests instances of encoded objects
dfe50bc build-doc: use alternate virtualenv dir, if specified
6869c57 test_idempotent: fix global_init call
401a571 qa: kclient/file_layout.sh poking
7e0e7ce rgw: modify bucket instance for encoding test
f20f6ea test: add test_filestore_idempotent2
6ca070a FileStore: ignore ERANGE and ENOENT on replay
9969bba FileStore: clarify debug/error output
e19417e Makefile.am, rgw: remove fcgi dependency where not needed
3ff5492 rgw: add more meaningful test instances of some encoded objects
31578c1 rgw: tone down some log messages
452b124 rgw: provide different default values for 'debug rgw'
2c88f85 config: alternative config options for global_init()
968d29d qa: use recent kernel for kernel_untar_build.sh
9316439 rgw: switch ops log flag to use ceph config
c9898f4 filestore: fix op_num offset/labels
7c75349 config: tmap to omap upgrade, true by default
3bba6b7 Makefile: link libfcgi to librgw
945218c qa/workunits/kclient/file_layout: escape *
a849787 filejournal: less log noise
0851b74 filestore: remove unused bool idempotent
6980ed9 filestore: fix arguments
9b2a5c5 filestore: sync object_map on _set_replay_guard()
c9550c5 omap: add sync method to ObjectMap
13afce8 filestore: remove old post-idempotent transaction trigger_commit
6613b41 filestore: guard collection_remove replay
51372a7 filestore: guard replay of collection_add
4ea6e0d filestore: guard replay of basic collection ops
dd284c4 filestore: guard collection_rename replay
63d2c93 filestore: fix collection_rename error code
e99940d filestore: guard clone replay
f8a047f filestore: implement _set_replay_guard, _check_replay_guard
3b47c6b filestore: maintain SequencerPosition during _do_transaction
e81bc97 filestore: fgetxattr helpers/wrappers
babb1e9 add SequencerPosition type
a6077f6 filestore: pass trans_num into _do_transaction
808812a filestore: use proper type for readdir_r tmp
1184497 levedb: fix commit
7f9cfdd RadosModel: fix omap_clear case in RemoveAttrsOp
799e6f9 rgw: fix rgw_cls_list_ret ctor
b71d814 ceph-object-corpus: added 0.43
b4f0578 test/encoding/import.sh: fix target directory
b66cdea Makefile.am: update link dependencies for some unit tests
09949b3 rgw: various encoding related fixes
e43546d osd: fix watch_lock vs map_lock ordering
80d9252 osd: update_heartbeat_peers as needed
619244d rgw: implement dump() for encoders
2277fb4 rgw: add stubs for dencoder test
ac28b60 ceph: document the way files are laid out
1ed1d46 librados: fix unit test for omap_get_vals_by_key rename
ce43bd5 osd: format time nicely in ops_in_flight output
934ee48 librados: fix map -> std::map in header, string -> std::string
fafbddd doc: example of diagnosing radosgw hang
99cb994 doc: explain how unfound objects happen
47ce7ad doc: make osd failure example include >3 osds
80864a1 testrados: fix omap_get_vals_by_keys call
e7e3bae osd: add zero_to field to PG::OndiskLog; track zeroed region of pg log
ed6cc47 filestore: use FL_ALLOC_PUNCH_HOLE to zero, when available
1468d95 osd: fix op_wq vs pg->lock ordering
465a88e rgw: append the currect bucket marker when removing bucket
72d678b cls_rgw: fix rgw_bucket_init_index
eaafc57 rgw: remove extra unused params from omap_get()
765962d rgw: add cls_cxx_map_clear
afe2598 leveldb: drop compaction unit test
4d6578c ReplicatedPG,librados: add filter_prefix to omap_get_vals
e074439 rgw: use prefix filter for bucket listing
4c90844 objclass, cls_rgw: add prefix to omap_get_vals()
a6b524f librados: add higher level call for omap_get_keys() with prefix
ffcf62f rgw: switch to new encoders/decoders
ffae4df enconding: add legacy decoder for 32 bit versions
b0c9d58 rbd: pass all mon addrs when mapping devices
65d170a msgr: remove declaration of undefined SimpleMessenger::write_pid_file
9dc7c65 msgr: remove SimpleMessenger::get_ms_addr() in favor of Messenger::get_myaddr
4d0bcdc objectstore: fix collection_move() encoding
0a59d08 ReplicatedPG,librados: add filter_prefix to omap_get_vals
6bf7201 rgw: some minor cleanups
5f8ffde objclass: fix cls_cxx_map_write_header
799c8ac cls_rgw: fix debug message
9ba96c0 osd: make degraded pgs count missing replicas as degraded objects
184a9dd mon: fix full osd detail
a300db3 mon: assign severity to each health summary/detail item
bd97923 doc: fix misc typos, bad phrasing
f266d5a objclass, cls_rgw: update to use omap
b0ed78c doc: 2 words about radosgw failures
0becb84 doc: talk about mon failures a bit
ab41d67 doc: fix link
25cceca doc: slow osd requests
75ad897 doc: diagnose full osd cluster
956e2e2 mon: list nearfull/full osd detail
2bec51a doc: describe 'stuck' states we check for
d72b821 doc: document some osd failure recovery scenarios
2b87d4f osd: list might_have_unfound locations in query result
2822fe5 mon: include unfound count in health detail
8b0bd12 mon: refactor health, include optional detail
8544629 rgw: switch to omap api
6c0cb55 leveldb: remove flawed unit test for now
7012c20 librados: rename omap_get_vals_by_key to omap_get_vals_by_keys
1fefb14 librados: add high level omap calls
7fc779a rgw: fix warning
f85ab71 rgw: read bucket through tmap_get
b6c2e83 test_rados_api_aio: add omap
4c4fcea osd: testing for tmap auto upgrade
adace1c ReplicatedPG: transparently upgrade TMAP
2abf377 RadosModel: Add omap operations to RadosModel
8228798 ReplicatedPG: Add omap ops to ReplicatedPG
81c22df librados: Added omap operations to librados
d2bf68d osdc: Add omap operation stubs to Objecter::ObjectOperation
b85f7d7 ReplicatedPG: add omap_header to recovery
d8dcb28 librados: add tmap_put to ObjectWriteOperation
195301e mds: respawn when blacklisted
769ef36 journaler: add generic write error handler
8618640 .gitignore: src/ocf/rbd
e3b4ba9 filestore: create snap_0 on mkfs
a14d44f filestore: drop useless read_op_seq() arg
affda7c rbd OCF RA: fix whitespace inconsistency
d36b6a9 osd: use new collection_move() operation
14929e4 filestore: implement OP_COLL_MOVE
f43c3d9 objectstore: OP_COLL_MOVE
5137f64 objectstore: use enum for OP_*
d874009 objectstore: remove _fake_writes, _get_frag_stat
737132b filestore: drop trim_from_cache, is_cached
3cd5e31 objectstore: remove cruft
97993f6 filestore: remove collection, attr faking
d0c6ad0 rgw: cancel bucket update if operation failed
1485758 cls_rgw: add cancel operation
4e9ebd6 rgw: make sure correct locator is used
e0650ce rgw: implement copy using new scheme
53a2ceb rgw: don't use locator for multipart uploads
dfcb841 rgw: multipart object working with manifest
578c051 rgw: manifest object contains source offset info
d409c31 rgw: basic functionality of new atomic get/put works
20244d6 rgw: get_obj uses manifest
c076e35 rgw: atomic objects hold manifest header
e36940a rgw: atomic processor writes to shadow object
3e95dfd osd: delay non-replayed ops during replay
702f09e librados: close narrow shutdown race
743da9b osd: don't trust pusher's data_complete
e1a9e18 osd: warn if recovery still has missing at end
c31b869 OCF resource agents: add rbd
75cbed6 DBObjectMap: remove stray ;
0272b59 LevelDBStore: #include types.h
004ec66 .gitignore: *.tar.bz2
6e2a16b msgr: start re-ordering functions into a better order
38bec5d msgr: remove refcounting of Messengers.
091b176 msgr: make nonce a required part of the SimpleMessenger constructor.
26e48f4 msgr: Require that init functions are called before bind() and start().
29be528 librados: remove gratuitous call to add_dispatcher_head.
cd174c5 msgr: promote the started bool to Messenger.
578bc9c msgr: Remove the SimpleMessenger::bind() nonce parameter.
ef24477 msgr: Remove the SimpleMessenger start/start_with_nonce distinction.
ffa5955 msgr: Remove SimpleMessenger::register_entity
3bd1d2a msgr: add start() and wait() stubs to the Messenger interface
70360f8 github.com/NewDreamNetwork -> github.com/ceph
cacf0fd filestore: fix rollback safety check
9fa8781 (tag: v0.43) v0.43
3a83517 RadosModel: separate initialization and construction
cd31388 librados: only shutdown objecter after it's initialized
2c275ef Makefile: add headers for distcheck
feaf44e ReplicatedPG: Add omap to recovery
9331e63 MOSDSubOp: Add entry for omap recovery
6a624b9 test: Add KeyValueDB atomicity checker
82199d5 os/: DBObjectMap and KeyValueDB interface with tests
2ab6f02 ObjectStore.h: Initial ObjectStore omap interfaces
e9dd01f os/CollectionIndex: Add debugging constructor and Path::coll()
d9b130f Added LevelDBStore
58a3b7f Added leveldb submodule
cddcc2d Makefile: make check-local relative to $(srcdir)
749281e Makefile: add json_spirit headers to tarball
85d04c6 rgw: don't check for ECANCELED in the _impl() functions
8634065 rgw: don't retry certain operations if we raced
b1f2644 msgr: fix race in learned_addr()
8a2b764 msgr: print existing->state before failing assert
052d64e osd: unregister signal handlers on shutdown
db96831 mon: unregister signal handlers on shutdown
8e9bf61 mds: unregister SIGHUP too
bb5c764 radosgw: handle SIGHUP
9c7b63e init-radosgw: add 'reload' command to send SIGHUP
e843766 osd: fix typo is recovery_state query dump
0e03e9d osd: add missing space to scrub error
2437ce0 msgr: discard the local_pipe's queue on shutdown.
7690f0b osd: remove down OSDs from peer_info on reset
23a0c03 rgw: check for bucket swift permissions only if failed
b9a675a mon: report pgs stuck inactive/unclean/stale in health check
bc80ba1 rgw: fix swift bucket acl verification
cc93518 rgw: implement swift public group
d10e1f4 mon: fix slurp_latest to fill in any missing incrementals
7b48cca test_osd_types: fix unit test for new pg_t::is_split() prototype
fd0712d Makefile: drop separate libjson_spirit.la
edd35c0 osd: drop useless ENOMEM check
a7de459 ceph-osd: clarify error messages
97926e1 init: Actually do start the daemons when 'service ceph start <type>' is specified
f317028 doc: beginnings of documentation of stuck pgs and pg states
1917024 filestore: make less noise on ENOENT
244b702 pg: use get_cluster_inst instead of get_inst in activate
b6a0417 osd: pg_t::is_split(): make children out param a pointer, and optional
85ed06e osd: bypass split code
15d5324 osd: fix pg locking flags
fc7b11a osd: partially refactor pg split
d9cf332 osd: implement pg_t::is_split()
6a08188 osd: factor hobject key into child pgid calc during split
ee4d990 journaler: log on unexpected objecter error
91b119a osd: fix recursive map_lock via check_replay_queue()
402ece5 init-ceph: stick with /var/run for the time being
41295b5 debian: /var/run/ceph -> /run/ceph
0d8b575 debian: build-{indep,arch}
3ad6ccb debian: sdparm|hdparm, new standards version
266902a rgw: initialize bucket_id in bucket structure
f8f6e4d rgw: _exit(0) on SIGTERM
732f3ec (tag: v0.42.2) v0.42.2
d85ed91 osd: fix array index
722e9e5 lockdep: don't make noise on startup
fdaed0a formatter: fix trailing dump_stream()
7ad35ce osd: include timestamps in state json dumps
e22adac osd: use blocks for readability in list_missing
6d90a6d osd: dump recovery_state states in json
a7c8bfb osd: query Peering substates
e22a45a osd: query recovery state machine
d3b203a osd: add tunable for number of records in osd command replies
91fbc68 osd: 'pg <pgid> list_missing <json hobject_t offset>'
6c257c4 hobject_t: decode json
2677c72 add libjson_spirit.la
0361a3c osd: pass in data to do_command
c9416e6 osd: 'tell osd.N mark_unfound_lost revert' -> 'pg <pgid> mark_unfound_lost revert'
6403852 lockdep: warn on stderr (via derr), not stdout
804f243 do_autogen.sh: -T for --without-tcmalloc
5efa821 rgw: swift read acls allow bucket listing
f09fb87 rgw: fix swift acl enforcement
7c7349e ceph: fix help.t
c3e1291 (tag: v0.42.1) v0.42.1
0281f1c debian: add ceph-dencoder
f6e42a8 ceph.spec.in: add ceph-dencoder
730b9ee ceph-dencoder: man page
cbf79a9 ceph-tool: remove reference to "stop" command
3bad945 mds: remove unused MDBalancer dump_pop_map() function.
4dfec57 rgw: enforce swift acls
065d6dd mds: clean up useless block
159f2b8 mds: fix Resetter locking
f5bf9d9 rgw: s3 only shows s3 acls
e8bc42f osd: only set CLEAN when we are not remapped (up == acting)
4d1d522 rgw: show swift ACLs
ddc9998 osd: conditionally encode old pg_pool_t when no CEPH_FEATURE_OSDENC
d85e915 mon: use pending_mdsmap for deactivate
a1544c0 doc: 'deactivate mds' instead of 'stop mds'
079dd6d mon: mds "stop" -> "deactivate"
2824c07 rgw: can use swift to set bucket permissions
700fe07 test: add basic test for the OSD's dump_ops_in_flight adminsocket command
5944016 osd: add "dump_ops_in_flight" to the AdminSocket.
21c4313 mon: refuse to stop mds if max_mds will make it rejoin
7700ea9 crushtool: add --reweight-item cli tests
286df2d crush: fix weight adjust for list, tree buckets
62a113a mon: unlock mon before msgr shutdown
d1fe2f8 mon: deprecate mon 'stop' command
962aa3e msgr: join dispatch_thread after it completes
86a54a6 filestore: use IOC_CLONERANGE intead of IOC_CLONE ioctl
49588e9 osd: drop "stop" command
560ddf4 osd: drop unused "stop" check
64ca584 osd: don't complete recovery if unfound
3628f90 mds: make EMetaBlob::fullbit::old_inodes non-ptr
7842bb5 mds: Add old_inodes to emetablob
26b5675 Fix ceph-mds --journal-reset
761ecc6 Makefile: include encoding check scripts in dist tarball
7fab4fa debian: add ceph-dencoder
cd5a8f7 ceph.spec.in: add ceph-dencoder
a6c7f99 ceph-dencoder: man page
8c48a8e rgw: read correct acls for swift metadata update ops
e67c0ff osd: make object_info_t::dump  using hobject_t and object_locator_t dumpers
55a6065 osdmap: dump embedded crush map in Incremental::dump()
2365c77 rgw: maintain separate policies for object and bucket
d2335fa crush: write CrushWrapper:dump()
27c8a3f test/rados-api/misc: fix LibRadosMisc.Operate1PP test
174f6b8 osd: refuse to return data payload if request wrote anything
7cafa25 osdmap: dump fullmap from dump()
0e4367a rgw: accepted access key chars should be url safe
17d3870 rgw: don't invalidate cache when adding xattrs
cedb3d7 ceph: if 'pg <pgid> ..' doesn't parse a pgid, send to mon
9927671 Makefile: fix misplaced unit tests
1ff7568 hobject_t: remove unused back_up_to_bounding_key()
4d3de03 osd: sched_scrub() outside of map_lock
0b7f6e3 global: resurrect lockdep
4432037 mon: disable pg_num adjustment
7d3ae37 mon: use encode function for new Incremental
f3a273a osdmap: successfully decode short map
f3020c4 osdmap: use FEATURE encoder macro
ebd29b6 qa/btrfs/test_rmdir_async_snap
1e407b4 ceph-dencoder: add OSDMap::Incremental
a4f2fdb osdmap: add Incremental::dump()
76cc71b osd: don't count SNAPDIR as a clone during backfill
24b470a crush: fix CrushCompiler warning
d74e029 test/encoding/readable.sh: sh, not dash
e33bf5a crushtool: fix clitests
0429aa7 msgr: fix shutdown race again
b205c64 (tag: v0.42) v0.42
76e88d1 msgr: fix accept shutdown race fault
ca04ee1 mon: test injected crush map
5dd24f9 crush: move crushtool --test into CrushTester
e42a0e9 crush: move (de)compile into CrushCompiler class
2c2b388 mon: fix message discard on shutdown
4dd8c35 crush: uninline encode/decode
6b5be27 crush: cleanup: use temp var for curstep
ff5178c mds: use want_state to indicate shutdown
481e629 osd: implement 'pg <pgid> query'
ffddb34 osd: dispatch 'pg <pgid> ...' commands to PG::do_command()
15016f0 ceph: direct 'pg <pgid> ...' to primary osd for given pgid
344c202 osd: fix up argument to PG::init()
2500a9b SimpleMessenger: drop unused sigint()
1f5e446 msgr: promote SimpleMessenger::Policy to Messenger::Policy
1001692 mds: ignore all msgr callbacks on shutdown, not just dispatch
1f240ca mon: discard messages while shutting down
787dd17 msgr: fix shutdown vs accept race
c3a509a mds: drop all messages during suicide
806285f mon: fix STUCK_STALE check
c08615e mon: add dump_stuck command
c0ab63e mon: constify functions needed to use dout from a const function
449d870 PGMap: extract method for outputting plain pg stats
bcb5059 PGMap: fix else indentation
6e89d9c osd: update_stats() in GetInfo state start
fb31f63 osd: don't update_stats() on prec_replica_info
9e309c4 filestore: hold journal_lock during
06a2202 osd: only complete/deregister repop once
4925e9c man: regenerate man pages
304389c man: move man page fixes to rst
a446f32 doc: fix snapshot creation/deletion syntax in rbd man page (trivial)
d373f71 PGMap: add indent settings header
9baa4b6 PGMap: add last_state_change to dump output
ff822fb PGMap: fix dump header fields
7837c19 osd: make op_commit imply op_applied for purposes of repop completion
d6c7674 osd: add REMAPPED state
8e6f9ca osd: refactor recovery completion
8c0e184 osd: introduce RECOVERING pg state
db41bdd paxos: fix is_consistent() check
d913e5e osd: change nested iterator name
2325da8 add missing #includes to build on gcc 4.7
d938246 mds: comment out unused code in mds dump_pop_map
95633b9 osd: fix _activate_committed replica->primary message
41425f6 osd: skip threadpool pause on shutdown when blackholed
35db2ea rgw: set default acls for certain swift operations
a4ff47b Revert "swift: auth response returns X-Auth-Token instead of X-Storage-Token"
4b3bb5a osd: fix _activate_committed replica->primary message
82eceb9 osd: fix do not always clear DEGRADED/set CLEAN on recovery finish
45701f5 init: Only check if auto start is disabled when the issued command is "start"
543e8b9 ceph.spec.in: Move libcls_*.so from -devel to base package
1a994be objclass: add debug_objclass knob, default to off
ba0ef62 osd: reduce watch/notify debug noise
ebbfdef msgr: mark_all_down on shutdown
c1b6b21 osd: do not sync_and_flush if blackholed
e6ffe31 workqueue: make pause/unpause count
40802ae osd: exit code 0 on SIGINT/SIGTERM
2aafdea signals: check write(2) return values
9cd0900 osd: semi-clean shutdown on signal
ec06682 mds: remove some cruft
395dc65 mds: remove pidfile
bbe5cd7 mon: do a clean shutdown on SIGINT/SIGTERM
eafe832 mon: install async signal handlers for SIG{HUP,INT,TERM}
e905564 osd: install async signal handlers for SIG{HUP,INT,TERM}
be704fe mds: install async signal handlers for SIG{HUP,INT,TERM}
afa1f9e signal: remove unused/obsolete handle_shutdown_signal
7951315 signals: do not install default SIGHUP, SIGINT, SIGTERM handlers
ecd2802 signals: implement safe async signal handler framework
4425f3b libradospp: add config_t typedef
06fa268 librados: use rados_config_t typedef instead of CephContext
e32668f doc: Balance backticks.
2281a00 librados: expose CephContext via C API
bc4e78d mds: use new tmap_get pbl argument
dd32285 librados: need prval for tmap_get
7842bf1 librados: add aio_operate for reads and tmap_get for ObjectWriteOp
7045096 osd: remove unused need_size
a53a017 ReplicatedPG: pull() should return PULL_NONE, not false
5a3ef17 ReplicatedPG: clean up push/pull
f9b7529 osd_types.h: Add constructors for ObjectRecovery*
7b1c144 test_filestore_idempotent: fix test to create initial object
6b30cd3 libcephfs: define CEPH_SETATTR_*
b54bac3 test/encoding/readable.sh: drop bashisms
ffa1de3 filejournal: drop unused variable
ccf8867 filejournal: aio off by default
9fded38 test/encoding/readable.sh: skip old version with known incompatibilities
3e1cc0b ceph-dencoder: add osd_peer_stat_t
9065dbd rgw: remove extra useless info in bucket entry encoding
1bf037b ReplicatedPG: refactor push and pull
fbbbd01 add CEPH_FEATURE_OSDENC
af38ce1 ReplicatedPG: consider backfill_pos to be degraded
d0ccf28 ReplicatedPG: add debugging for in flight backfill ops
94a198c ReplicatedPG: is_degraded may return true for backfill
2476dd7 MOSDSubOp: Add new object recovery state
f80e0c7 ReplicatedPG: consider backfill_pos to be degraded
4785ae3 ReplicatedPG: add debugging for in flight backfill ops
d43d5d9 ReplicatedPG: is_degraded may return true for backfill
389653e osd: remove peer_stat from MOSDOp entirely
4dfa4dc osd: new osd_peer_stat_t shell type
1f351cd qa/btrfs/.gitignore: ignore targets
c97c14f osd: use single helper for pg creation
04f175f osd: use PG::init() for newly local (but not created) PGs
cefa55b osd: move new pg initialization into PG::info()
72a5610 osd: protect per-pg heartbeat peers with inner lock
508be8e rgw: don't use SCRIPT_NAME and QUERY_STRING vars
3796c4a osd: flush pg on activate _after_ we queue our transaction
4d8e9a5 osd: do OpRequest dispatch into PG::do_request
eba609b filestore: make flush() block forever if blackholed
610da66 Revert "rgw: don't treat plus as a space in url decode"
053dc33 osd: emit useful scrub error on missing clone
43828df filestore: return error from CLONE
7c6dff4 osd: filter trimming|purged snaps out of op SnapContext
02bda42 mon: add {mon,quorum}_status admin socket commands
e4258ce mon: move quorum_status into helper
60067f8 mon: move mon_status into a helper
a414fd5 init-ceph, mkcephfs: try 'btrfs device scan' before 'btrfsctl -a'
a391b0d osd: fix MOSDPGCreate version setting
e09c90f osd: queue pg removal under pg's epoch
4834c4c osd: check for valid snapc _before_ doing op work
a0caa85 osd: some cleanup
7eff37b mon: validate osmdap input
7e32a3d rgw: objects can contain '%'
bd1a956 mon: fix MMonElection encoding version
22eca41 mon: remove the last_consumed setting in Paxos
6e6c34f objecter: LingerOp is refcounted
aecf4e0 mon: handle inconsistent disk states on startup.
0de1d55 objecter: LingerOp is refcounted
3c5dcf8 qa/btrfs/create_async_snap
7b5689a messages: populate header.version in constructor
0bd545f mon: add a slurping flag to the Paxos state
e369ec1 ReplicatedPG: don't put the op on -EAGAIN
3a7bb99 mon: initialize paxos state in constructor
8d90856 msg: check compat_version before decoding
989d678 msg: populate compat_version for encoded messages
811e629 msg: include compat_version in version header
5b8d0c7 new encoding for Log{Entry,Summary}
cb15eb8 os: new encoding for hobject_t
7d85c48 osd: new encoding for pg_create_t
f9d67f1 osd: new encoding for osd_stat_t
757e3b0 osd: new encoding for object_locator_t
4c3a41f osd: new encoding for osd_reqid_t
7a68fd9 osd: new ScrubMap::object encoding
92a058a mon: set last_changed when creating new pgs
a65586c mon: set last_unstale when marking PGs stale
88f1fbc osd: include state timestamps, mapping_epoch in pg_stat_t
00997f9 osd: new encoding for PG::Interval
9f3f119 osd: new encoding for PG::OndiskLog
14d6ed4 objectstore: new encoding for Transaction
fa779db osd: new encoding for ScrubMap
a4a9d52 osd: new encoding for object_info_t
c8cf0ae osd: new encoding for watch_info_t
156c6eb osd: new encoding for SnapSet
92fc5f0 osd: new encoding for pg_missing_t
02dd0a8 osd: new encoding for pg_log_t
18c8861 osd: new encoding for pg_log_entry_t
9304db0 osd: new encoding for pg_history_t
538e8d1 osd: new encoding for pg_history_t
0d79b1b osd: new encoding for pool_stat_t
9016658 osd: new encoding for pg_stat_t
3a547ef osd: new encoding for object_stat_collection_t
bd829e3 osd: new encoding for object_stat_sum_t
5b6b500 osd: new encoding for pg_pool_t
fc869de osd: new encoding for pool_snap_info_t
a03ff1b osd: new encoding for OSDSuperblock
7f10d5f osd: move object_locator_t to osd_types.{h,cc}
e255044 ceph-dencoder: add osd_reqid_t
01c7b3b ceph-dencoder: add hobject_t
b49a55b mon: add/use pg_create_t ctor
34158ed ceph-dencoder: add pg_create_t (formerly MOSDPGCreate::create_rec)
7479828 test/encoding/readable.sh: no \t
e492ffd ceph-dencoder: add Log{Entry,EntryKey,Summary}
93d7ef9 filestore: wait to start op if other ops are in line
1009d1a filestore: fix op queue quiesce during commit
f033467 ReplicatedPG: don't count deletions as ops
42db09b osd: don't remove pg from recovery queue if not enough recovery ops started
a6d7629 rgw: don't treat plus as a space in url decode
72bbaea osd: discard waiting ops when pg mapping changes
359dfb9 osd: flush on activate
6c4687f Makefile: check readability of object corpus on 'make check'
e261317 add ceph-object-corpus.git submodule
8e2ceb4 mon: fix [near]full_ratio conf update
3f94c15 mon: better MonCaps test cases
dfaa7fd ceph-dencoder: MonCap[s]
59a9e4e mon: fix PGMap::generate_test_instances()
d20d5c1 mon: refactor calc_stats()
4df4465 osd: is_zero() method for stat structs
dc5033f osd: fix ScrubMap::object ctor
d778cab mon: make [near]full_ratio config options floats
b6d1c0c mon: initialize [near]full_ratio during create_initial(), not ctor
8cf81cc ceph-dencoder: MonMap
bc7fd21 mon: uninline Monmap encode/decode
6686788 ceph-dencoder: PGMap[::Incremental]
5ce1097 mon: waitlist new sessions trying to connect while we're out of quorum
cbf50eb update amazonaws xmlns to correct url
1a028e5 mds: remove IntervalTree code
21a1dbd trivial_libceph: need O_RDWR
d63303d client: -EINVAL write if not opened writable
4784b98 client: clean up ctor a bit
b5a5a4b client: initialize initialized
1f86435 osd: always send scrub errors to cluster log
f28287f mon: make PaxosService::update_from_paxos return void.
1125d71 mon: call update_from_paxos() when we finish slurping updates.
675e4c4 mon: drop election messages with bad rank
0da793b rgw: cleanup url_decode usage
6df25e5 rgw: url_decode object name
f859f25 osd: re-take the osd lock in the init error path where it's not held
2e84c1e ceph-dencoder: ScrubMap[::object]
0bf3c54 osd: uninline osd_stat_t methods
c0711b0 ceph-dencoder: coll_t
8bf08ab ceph-dencoder: pg_t
8791cb9 ceph-dencoder: SnapSet
c5a5842 ceph-dencoder: SnapContext, SnapRealmInfo
fe39d58 move SnapContext, SnapRealmInfo to common/snap_types.{h,cc}
f07d283 ceph-dencoder: filepath
1fbb8eb ceph-dencoder: CompatSet
5b423b6 kill unused tstring
cba2674 kill useless [cn]string.h
c23d217 rgw: escape and list correctly objects that start with underscore
8ded264 crush: don't BUG_ON
9895f0b crush: don't BUG_ON within crush_choose
8427090 filejournal: flush needn't abort on write_stop
4b8374c filejournal: clean up check_aio_completion
fffee82 filejournal: get multiple aios at a time
f3dd583 filejournal: print aio mode on open
fb0e2a3 configure: add --without-libaio option
4842b3d ceph.spec.in: buildrequires libaio-devel
3f0a592 debian: depend on libaio-dev
30a77ac filejournal: implement aio for writes
b7c20e7 streamtest: show total throughput, avg latencies
a9a6046 client: init/shutdown objecter in init/shutdown
ba12f26 rgw: fix autobuilder errors
dba22f8 rgw: fix warning
90fe53c rgw: fix acl cleanup related regression
06ea2f7 doc: add the ceph mds stop command.
caabec9 mon: show full status in ceph health
7641a0e osd: signal dispatch_cond on ms_dispatch completion
13c8913 rgw: use request uri if script name is empty
eaa46f5 osd: reorder PG recovery_state initialization
d7f61c8 test/encoding/readable.sh: nicer output
5216eb0 ceph-dencoder: more helpful error message for messages
5103338 messages: set type in default constructor
ae67c2d pick object from random osd for primary recovery
05f66c4 msg: fix message leak on receipt of undecodable message
c3eacb1 Makefile: add test/encoding/types.h
d597dc2 encoding: document ENCODE/DECODE macros
625a89d test/encoding/readable.sh: nicer output
6e62fc4 test/encoding/readable.sh: check all version
e9b97c1 osd: fix another repop->ctx->op deref
2f5ba8f osd: avoid null deref of repop->ctx->op
a0dde42 encoding: document ENCODE_DUMP throttling weirdness
9687609 encoding: fix DECODE_START macro
9c2d779 encoding: add DECODE_OLDEST macro
690b991 osd: fix another issue_repop() ctx->op null deref
d926194 check-generated.sh: do self-decode test first
efe77a8 check-generated.sh: nicer output
153e89d ceph-dencoder: print errors to stderr
2a26295 osd: do not dereference ctx->op when NULL
8623c64 encoding: better DECODE_START_LEGACY_COMPAT_LEN
73e92b3 buffer: iterator::get_remaining()
83432af common/Throttle: throttle in FIFO order
c4ca114 osd: fix osd_recover_clone_overlap
cb75491 osd: use obc for size in calc_head_subsets()
36a4ca4 filestore: remove obsolete fs type check
824c3af client: add initialized flag to client
51ccce0 client: let set_filer_flags clear flags, toos
3365952 librados: discard incoming messages when DISCONNECTED
290730e objecter: track whether initialized; add asserts
4ef4d3f test_filejournal: fix warnings
030ad87 osd: mark_started() osd sub ops
da02c40 osd: d'oh again! Make this real exponential, not...ever-linear.
f7e6e18 osd: OpRequest currently_* needs to look at latest, not hit.
c81845b rgw: fix crash related to cleanups
00a2e84 do_autogen.sh: -e <path> to dump encoded objects to a path
91073a6 check-generated.sh: run on 'make check'
f125070 osd: pg_stat_t: fix member initialization
71c59da osd: add check_ops_in_flight()
63ad89d osd: fix PG::Interval member initialization
500f4c6 osdmap: finalize crush after building simple map
c41adac osdmap: make test instnaces deterministic
d4d1b64 import-generated.sh: fix to use ceph-dencoder syntax
290c4b7 ceph-dencoder: fix ctor
2d0da67 ceph_context: initialize member var
cb5f270 rgw: some more acls cleanup
fd3108e osd: "mark" OpRequests as they move through the system.
ba392e3 PG: switch op passing interface to use OpRequest
544ea29 osd: switch op passing interface to use OpRequest instead of raw Messages
4075d52 osd: add new OpRequest struct and an xlist to track it
25c5dae osd: PGLSResponse -> pg_ls_response_t
ac1fbd1 osd: PG::Missing -> pg_missing_t
a41679a osd: PG::Log -> pg_log_t
5263c12 osd: PG::Log::Entry -> pg_log_entry_t
460a462 osd: PG::Query -> pg_query_t
3353f57 cls_rgw: update bucket index when deleting object (with pending)
2529374 osd: PG::Info -> pg_info_t
1c5370c osd: PG::Info::History -> pg_history_t
64bdd38 osd: PG::Info[::History] dump, test instances
139db82 ceph-dencoder: remove message type dups
2b05000 ceph-dencoder: generate test instances on heap
1fdb5e5 osd: dump, test instances for PG::Interval
19313fb osd: dump, instances for PG::OndiskLog
9307edd ceph-dencoder: use g_ceph_context
19227b2 ceph-dencoder: OSDMap and osd_info_t
cbaf83d osdmap: test instances for osd_info_t
d0dbaaa osdmap: test instances
ad77bb4 osdmap: normalist encode/decode
a5366c8 ceph-dencoder: add all message types
32010d7 msg: add missing #includes for messages
1cb39fa msg: dump messages via build option
597e97a osd: fix assignment in PG::rewind_divergent_log()
9d385f5 msgr: Document recv_stamp and add a dispatch_stamp and throttle_wait.
ba4aad4 qa: test_backfill.sh: take osd.0 down
5a54483 osd: restart peering if requesting acting osd goes down
9dfa46f osd: rename recovery event NeedNewMap -> NeedActingChange
747b3d4 osd: use RecoveryContext transaction, finishers on recovery completion
f4e44e4 qa: test_backfill.sh: limit pg log length so we trigger backfill
f1c3538 osd: fix divergent backfill targets
9520ee7 filestore: implement filestore_blackhole hook
1fe75ee rgw: should remove bucket dir instead of sending intent
2b5bbe8 librados: fix a leak
2116f01 osd: disable clone overlap for push/pull
2adabbe mon: make 'osd [out|in|down]' succeed if already whatever
591a890 ceph-dencoder: handle messages
11de3f1 msg: implement Message::dump()
9987f8f msg: go const-crazy on messages
9279619 paxos: explicitly pass in send timestamp
0e8129a msg: no cct for decode_payload
0107aee msg: use absolute times for message encoding
5436bf5 msg: make decode cct optional
11f6a84 msg: no cct needed for message encoding
04497a5 mdsmap: move member initialization to monitor create_initial()
dabf1e4 msg: use explicit feature argument instead of Connection*
7999876 msg: pass features explicitly into message encoders
60ead1e qa: encoding: silence warning
d3590b5 qa: test/gather fix warning
e9e212f qa: test/rados-api/list fix warning
853c8b2 test_ipaddr: reverse ASSERT_EQ order
773acfd osd: remove unused var
9454102 admin_socket: fix uninit warning
483c089 mon: trim old auth states
9bb3875 filestore: fix rollback when current/ missing entirely
5e16974 osd: reset pgstats timer when we reopen monitor session
9e78d53 clock: ignore clock_offset if cct is NULL
5938d17 filejournal: add corruption test to check crc checking code
cc11721 filejournal: assume gibberish flags imply none
e2fbe43 filejournal: include crc in entry header/footer
6197b5a qa: test_filejournal: test lots of small writes too
4ddca46 qa: add test_filejournal
db3b9ee filejournal: fix header initialization
19f829d filejournal: clean up some errno checks
7f474ed filejournal: assert submit_entry gets >0 bytes
8673830 filejournal: initialize header before writing
8d439e9 filejournal: move zero_buf allocation
f9620d7 client: do not send release to down mds
e43db38 signal: use _exit() on SIGTERM
0f9c6b4 test: add script for checking admin socket 'objecter_requests' output
097bc5c objecter: add an admin socket command to get in-flight requests
39f6c4c admin socket: increase debug level for successful requests
c9cf7b7 admin socket: add include guard
dbda1b6 CephContext: add method for retrieving admin socket
56d164c mon: stale pgs -> HEALTH_WARN
61c54a7 mon: mark pgs stale in pg_map if primary osd is down
6e44af9 osd: add STALE pg state bit
c1345f7 (tag: v0.41) v0.41
374fec4 objector: document Objecter::init_ops()
6d37d5c objecter: fix out_* initialization
9472920 Revert "common/Throttle: Remove unused return type on Throttle::get()"
995ff22 osd: remove unused PG::block_if_wrlocked declaration
946da5a filestore: dump offending transaction on any error
6453123 objecter: warn when OSD returns mismatched op vector
0cc26a9 objecter: fix bounds checking on op reply demuxing
9b554d4 mds: remove test assert
b8e6a6bd assert: include timestamp
b3c80bc rgw: acls cleanup wip
91b547b osd: remove the unused require_current_map
2bc7105 filestore: fix typo
ec7a140 filestore: zero btrfs vol_args prior to ioctl
dedf575 mon: num_kb -> num_bytes in cluster perfcounters
625b0b0 osd: remove num_kb from object_stat_sum_t stats
acb164c osd: improve object context debug output
f16b38d osd: track obc for clone from log replay
44b1144 osd: set object_info_t::oid properly when recovering clones
eec87bb package *.py* files
2c2cc15 librbd: don't infinite loop when header is too large
746a230 ReplicatedPG: data_subset may be empty during sub_op_push
72cd121 rgw: acl changes compile
f3d200c filestore: fix non-::-prefixed close
a49a53d filestore: add debugging to each error case in lfn_open
ae36f59 filestore: TEMP_FAILURE_RETRY on ::close(2)
a43937f filestore: return -errno from lfn_open
0fd6ca9 filestore: audit + clean up error checks
2835d40 rgw: rgw_acl_s3.* compiles
9dc7b92 rgw: fix warning
cfe1d01 ceph: bail out on first failing command
54a7673 ceph: don't write output on error
c5e7a74 .gitignore: ceph-dencoder
7ce544e osd: ignore MInfoRec, MNotifyRec in WaitActingChange
d9eedf5 rgw: fix warning in 32bit arch
1a10b51 ceph-dencoder: needs ceph_ver.h dependency
92a8f5e pg: unindex entries when clearing or removing from the log
5451d87 osd: do not clobber log on backfill progress update
f002ed4 features: #include ceph_features directly where needed
0ced79d objectstore: remove unused setattr variants
56c5e85 osd: initialize fields in watch_info_t constructor
9985145 ceph-dencoder: fix up usage a bit
10b87ed objectstore: drop unused Transaction::p
5898892 ceph-dencoder: reenable generated types
abb0510 objectstore: implement generator
f09c01f osd: watch_info_t generator
37d38f7 osd: pool_stat_t generator
c095c35 osd: uninline pool_stat_t methods
e104471 osd: pg_stat_t generator
89b189a osd: uninline pg_stat_t methods
8e9c229 osd: generator for object_stat_collection_t; uninline too
ee82397 osd: uninline object_stat_sum_t methods
adcc9bf osd: object_sum_stat_t generator
e07178f osd: pg_pool_t generator
0b2cf7d osd: pool_snap_info_t generator
40f59b8 msg: entity_{name,addr}_t generators
fa20be3 qa: misc encoding scripts, in various states of usefullness.
47e2006 ceph-dencoder: implement 'version' command
f1af44f test-generated.sh
7ece278 osd: dump and generators for OSDSuperblock
2baa6c0 encoding: adjust ENCODE/DECODE macros
03b6113 ceph-dencoder: clean up usage
bbf1826 ceph-dencoder: generate object instances from static method
7d4c3db osd: osd_stat_t generator
7393ad1 ceph-dencoder: fix build
7c0a4da ceph-dencoder: ObjectStore::Transaction
3f30a6f objectstore: implement Transaction::dump(Formatter*)
c0bdb07 ceph-dencoder: support feature bits
e674f2b features: add missing features to default set
942f302 move feature bit definition to separate header file
354f2cb ceph-dencoder: encode/decode/dump test tool
cdeeed6 msgr: dump() entity_name_t and entity_addr_t
80b80b0 filejournal: use ::encode() wrapper func for Transaction
4564921 osd: implement watch_info_t, object_info_t::dump()
d321393 encoding: new {ENCODE,DECODE}_{START,FINISH} macros
a710642 encoding: instrument to dump encoded objects
aea6a30 rgw: read_user_buckets() fix redone
fdaf91e osd: implement --dump-journal
a52762a rgw: read large bucket directory correctly
802acb1 rgw: refactor acls, separate protocol dependent code
6c275c8 rgw: fix warning
e016cca Convert mount.ceph to use KEY_SPEC_PROCESS_KEYRING
8a9252f rgw: adjust high level debug level
148031b rgw: fix intent log processing
731c883 rgw: initialize tm before calling strptime
0aab089 objecter: some helpful multiop result debug output
6f35e32 objecter: make getxattrs set rval on decode error
f441adf objecter: add stat ops to op vector!
1d5c8fd objecter: gift reply data to outbl _after_ demuxing
905e8d8 osd: make in/outdata split/merge helpers static OSDOp methods
1a7c8b4 rgw: log_show_next() fix reading of the next buffer
06e7562 filestore: overwrite fsid during --mkfs
4c6c443 rgw: reset timestamp when processing starts
127bbd1 hadoop: fix unix timestamp calculation in hadoop lib
a85ea47 hadoop: check for valid filehandler, before using in next calls
bd8e32d doc: update control file for setting pg num on pool create
94f55f4 TestRados: fix {min,max}_stride_size initialization
79d1932 osd: fix bind error checks
7804046 Makefile: fix testkeys non-tcmalloc linkage
241cbeb rgw: add timestamp to high level log
db65295 rgw: log host_bucket, http status
0e8b12c rgw: simple request logging
63b94b6 mds: abort startup if we fail to bind
4f70acf osd: abort on startup if we fail to bind to a port
47db4d0 ceph: fix "run_uml.sh" script
549b780 TestRados: implement max_seconds, reimplement argument parsing
20f3f68 RadosModel: prefix line with m_op
7b2fd45 mds: fix uninitialized value in MClientLease::h
b5f8de7 msgr: move operator<< for sockaddr_storage to msg_types.cc
e93999f qa/workunits/rados/load-gen-mix.sh
ba83e8c qa: rados load-gen: use rbd pool
b7a1102 rados: load-gen: wake up on reply
51e402e rados: fix load-gen 'max-ops'
7d3b2c4 librados: allow ObjectReadOperation::stat() to get time_t mtime
706b691 osd: recover_primary_got() -> recover_got()
a4e2395 osd: clear missing set on replica when restarting backfill
a464294 msgr: don't assert on socket(2) failure
a6c0610 msgr: uninline operator<< on sockaddr_storage
6b02f9f osd: rev osd internal cluster protocol
7f123de mds: require OSDREPLYMUX feature bit
012a985 librados: require OSDREPLYMUX feature
436f8ca define new OSDREPLYMUX feature bit
9d0476c objecter: fix add_*() calls to use proper helper
42a6cef ReplicatedPG: munge truncate_seq 1/truncate_size -1 to seq 0/size 0
0ded7e4 ReplicatedPG: munge truncate_seq 1/truncate_size -1 to seq 0/size 0
44cb076 rgw: limit object PUT size
d575337 objecter: fix up stat, getxattrs handlers
7eea40e (tag: v0.40) v0.40
81c0ad8 librados: make new ObjectReadOperations arguments non-optional
7347538 rgw: use new librados ObjectReadOperation method arguments
4815caf ReplicatedPG: Update stat accounting for truncate during write
8ceb388 rgw: wrap cls_cxx_map_* with try/catch around decoding
05d8ecb rgw: bucket index creation and init in a single operation
876d829 librados: add ObjectOperation::exec
dc628a5 secret: move null check before strlen(key_name) deref
d41ddcd osd: stat op, don't compare in memory state to object
920bd56 librados: specify read return value pointers in ObjectReadOperation methods
fe07783 objecter: specify read return values pointers in ObjectOperatio methods
ff55d2f osd: put result data in OSDOp.outdata
a855828 osd: mux/demux OSDOp::outdata in MOSDOpReply
4f4b79c osd: include return code in OSDOp
f42c658 osd: fill in empty item in peer_missing for strays
10b0031 rgw: don't crash when copying a zero sized object
845aa53 ReplicatedPG: Do a write even for 0 length operation
80f57f9 ReplicatedPG: fix stat accounting error in CEPH_OSD_OP_WRITEFULL
cfa39bf qa/client/gen-1774.sh
6cf7753 osd: fix PG::Log::copy_up_to() tail
805513b osd: reset last_complete on backfill restart
1e56367 client: avoid taking inode ref in case of nonexistent dir
7113137 COPYING: note licenses for all files, not just the default
54e0dfc debian/copyright: note acx_pthread.m4 license
6b55b6b Makefile: Add headers that were omitted in make dist and prevented tests from building
c9e028f Makefile: Handle corner case of crypto++ correctly
c5144ee Makefile: Use ACX_PTHREAD in configure.ac and resulting flags in src/Makefile.am
7bf01b1 Makefile: Add recent acx_pthread.m4 that has a fix for nostdlib issue.
b93bf28 PG: gen_prefix should grab a map reference atomically
38b9b50 rgw-admin: add pool rm and pools list
e2c0254 rgw-admin: clean up unused commands
ac1e105 osd: bound log we send when restarting backfill
79085ad rados.py: avoid getting return value of void function
85552cf pg: remove unnecessary guard from calc_trim_to()
b1da511 pg: add a configurable lower bound on log size
734737f osd: limit size of log sent to reset backfill targets
8f9549f client: start caching readdir results after readdir_start
5d98960 monclient: fix resolve_addrs() call
f09b21e resolve_addrs: return ipv4 and ipv6 addrs
9e9b5c6 ReplicatedPG: fix typo in stats accounting in _rollback_to
d4815e5 osd: send log with backfill restart
c7d92d1 osd: fail to peer if interval lacks any !incomplete replicas
3b81fa5 mon: allow specifying pg_num and pgp_num when creating new pools.
69aface auth: Fix Doxygen warnings.
741f6d5 Fix several doxygen warnings, to minimize noise. Only changes comments.
b891652 librados: Make API docs use @note instead of @bug for now.
1f46e7c FileStore: assert on ENOSPC even for SETXATTR
ac9b2d0 mds: initiate monitor reconnect if beacon acks take too long
45897b5 mds: remove beacon_killer code.
ba00f95 osd: make less noise when filestore is already up to date
9490b36 doc: add librados C aio example
f99b3e0 doc: describe some rados_pool_stat_t members
ce53447 doc: add librados pool creation defaults
dd31ff2 doc: add short section on documenting code
0e19062 doc: clarify librados return codes
547e9e3 doc: @return -> @returns to match the sphinx output
1e8b8a8 doc: standardize rados_tmap_* docs
590520c doc: fix rados_version todo formatting
50c9cb1 doc: add a prefix to group names in librados.h
d9d9e6d doc: Put rados_ioctx_locator_set_key in a group so it can be cross-referenced
b464b75 doc: move rados_ioctx_get_id to the pool group
b148bef doc: fix some typos in librados C API
c960641 doc: Switch doxygen integration from breathe to asphyxiate.
78cc07f librados: Avoid using "crush_rule" as name of function argument.
aca3c62 doxygen: Use first sentence as brief description.
b5759df doc: add configuration and connecting to librados C api example
43952a3 doc: add librados C api docs
d3e3477 ceph: add a new "run_uml.sh" script to manage running a UML client
162ac06 rgw: adjust log level
1e0afb6 rgw: some cleanup
a90f34c rgw: only use plain PUT processor when !chunked_upload
c23cc23 osd: add OSDOp::outdata
6b38921 osd: move OSDOp vector indata split/merge into helpers
d8ebbf4 osd: OSDOp::data -> indata
b17736a osd: populate_obc_watchers when object pulled to primary
a59ee8f osd: handle case where no acceptable info exists
92ca3ef perfcounters: fix unittest for new admin_socket interface
d8e5499 Makefile: disable untitest_interval_tree
bcf2146 unittest_interval_tree: make it compile
a774d50 osd: clean up src_oid, src_obc map key calculation
3c60e80 osd: read op should claim_append data instead of claim
0d175cd rgw: remove object before writing both xattrs and data
469f3eb rgw: create plain processor for small objects
75acc0a rgw: fix multipart PUT
26b54ae rgw: rearrange PutObj::execute()
a0b5539 rgw: different atomic handling for small objects
199b14d mon: fix uninitialized cluster_logger_registered
bebd393 objecter: ignore replies from old request attempts
ac177d7 osd: encode retry attempt in MOSDOp[Reply]
b501efd mon: document quorum_status, mon_status
ca8df7e mon: fix misplaced else
643b9db ceph: speak new admin socket protocol
5a5dece admin_socket: fix, extend admin_socket unit tests
b389685 admin_socket: string commands
14a4943 mon: elector needs to reset leader_acked on every election start
435c294 mon: instrument elector so you can stop participating in the quorum
99e5f85 mon: kill client sessions when we're not in quorum
c83b2a0 OCF RA: fix variable name
b3f8b55 debian: build ceph-resource-agents
49a96fa osd: parameterize min/max values for backfill scanning
98881a1 admin_socket: refactor
b6c43d2 rbd: add a command to delete all snapshots of an image
a94b731 admin_socket: whitespace
96b7b0d common: default 'mon osd auto mark in = false'
a71a0d3 osd: log backfill restart
bd23391 librbd: don't remove an image that still has snapshots
4728f4f SimpleMessenger: clarify when ms_bind_ipv6 is used
4ea8ad4 qa: add a slightly more stressful anchortable test
c8a13f2 qa: fix mdstable script for proper injectargs use.
61c3a91 rados: fix run-length option parsing for rados load-gen
0fb88b6 move cluster protocol definitions out of ceph_fs.h
9986553 msgr: explicitly specify internal cluster protocol
b8be338 mon: rev cluster protocol
857b243 osdmap: include state names in dump()
80d9010 mon: separately control auto-mark-in of new OSDs
af53507 mon: maintain CEPH_OSD_NEW bit for new, unused OSDs
fcb8770 mon: independently control whether AUTOOUT OSDs are marked in on boot
9510f9c mon: track auto-marked-out osds
becb71b osd: don't add all strays in calc_acting()
adea084 osd: mark degraded only when < desired replica count
3166b37 osd: avoid querying missing set from (full) backfill target
d339533 osd: fix backfill reset on activate
8658f0d qa: load-gen-mix-small-long
5cebc74 obsync: make obsync run without cloudfiles installed
6a1cac9 osd: initialize backfill_target; include in PG operator<<
dcd1eba osd: initialize backfill_pos on activate
4bcdb37 osd: do not use incomplete peer for best info/log
a5d99ad osd: fix misdirect check for requests with old epochs
172dd3e osd: check that we're supposed to be getting a PG before waitlisting requests.
54f36f0 rados: gracefully report errors from 'ls'
ed9a4a0 osd: return EINVAL on bad PGLS[_FILTER] handle
2f1720d librados: return int64_t pool ids
a97aca7 rados.py: use uint64_t for auids
8e56e99 radosgw-admin: add eol following info
0e470c5 testrados: replace testreadwrite and testsnaps with testrados
9112405 RadosModel: check for out of order replies within WriteOps
f03e770 RadosModel: allow TestOps to pass data to their finish methods
ec6530d RadosModel: make object write ranges configurable
a66d90e osd: add a monitor timeout via MPGStatsAck messages
f4b0cda Fix invalid docdir_SCRIPTS usage with >=automake-1.11.2
f8929ba osd: trigger RecoveryFinished event on recovery completion
a125246 librados: take lock in rollback
4c23e9e objecter: assert lock held in op_submit
68ec8d8 librados: call aio_operate() with lock held
1c75418 osd: be a bit more verbose during backfill
0692bed cmp: fix 5-uple operator==
3dcaf6c osd: do not backfill if any objects are missing on the primary
949f24d rgw: create default constructors for some structs
251fc3d osd: handle backfill_target for pick_newest_available
a352589 osd: return EINVAL if multi op specified with no src object name
e686c1b hobject_t: fix operator==, !=
063ab2e cmp.h: define macros for creating comparison operators
6687ccf workunits: update rbd test for new error format
85719b0 config: use autoconf $libdir for default rados class dir
0d9507c .gitignore: src/ocf/ceph
9b6422d Spec: conditionally build ceph-resource-agents package
92cfad4 Add OCF-compliant resource agent for Ceph daemons
6617063 mon: fix full ratio updates
f2e4109 mon: don't ignore first full ratio update callback
a693438 mon: only update full_ratio if we're the leader
df84594 mon: make full ratio config change callback safe
585fb5c clitests: update for new error format
cec2692 clitests: update monmaptool test
48df71c init script: be LSB compliant for exit code on status
3b2ca7c keyring: print more useful errors to log/err
eba235f common: trigger all observers on startup
1f434da common: make cpp_strerror output prettier
04c8db0 librados: check for monclient::init() error
37013b6 qa: load-gen-mix-small.sh
1a59405 rgw: turn on cache by default
959fd71 osd: explicitly track leading edge of backfill
d24ea23 mds: assert if we get an EINVAL on our truncate
47013c2 osd: get fsid from monmap, not osdmap
05cc4eb monc: get latest monmap during authentication
300c758 osd: catch authenticate error on startup
5d5c9b6 osdmap: add const markers to some unfixed functions
e18b1c9 rgw: removing swift user index when removing user
997e35a rgw-admin: remove subuser index when required
1f40031 osd: fix push completion check
2dc90d0 rgw: clone operation should only update index for main category
bb52b18 rgw: fix cache interface (was not overloading method)
0db9a42 rgw: fix bucket creation
4ac04e8 rgw: write bucket info in one operation
60bbf68 Objecter: fix local reads one more time.
1f02e34 ReplicatedPG: objects currently begin backfilled are degraded
d2eb119 ReplicatedPG: fill in backfill_peer in on_activate
517ddf8 ReplicatedPG: only pull in one backfill peer at a time
855e93b filestore: fix config observer
decdc36 MOSDPGRepScrub: Fix typo in MOSDPGRepScrub
8b8aab8 PG: update stats from master only if not backfilling
298b134 PG: backfill info should be cleared on recovery reset
3b90df0 ReplicatedPG: init backfill infos to last_backfill
db04d68 ReplicatedPG: update last_backfill when pushes complete
fa6bd38 ReplicatedPG: simplify recover_backfill
c7fee72 MOSDRepScrub: use header.version for payload version
e93961c monmap: iterate over addr_name when printing summary
bfbeae6 monmap: clear addr_name map on calculating ranks
ea9f2f6 interval_set: fix truncation of _size
9eee1ec osd: remove SIGTERM cruft
e04109a mon: drop special SIGTERM handler
2daa655 mds: drop special SIGTERM handler
d1dbeaf exit(0) on SIGTERM by default
07e1186 ReplicatedPG: Initialize blocked_by in ObjectContext constructor
78030bc ReplicatedPG: take references for blocked_by and blocking
a85ab1e obsync: pull object metadata from swift store
7eb2873 PG: add some documentation
ffd1b43 ReplicatedPG: delay op while snapdir is missing/degraded
45b9659 ReplicatedPG: don't manage waiting_on_backfill in start/finish_recovery_op
3bea1ed rgw: fix subuser key name when purging subuser keys
9ddb802 radosgw-admin: add --purge-keys option
5e9d101 ReplicatedPG: apply_repop: apply local_t before op_t
97dd28c librados: return -EROFS when trying to write to a snapshot
68ba186 librados: make getxattrs ENOMEM return negative
a798a85 PG: Do not update_snap_collections for log entries > last_backfill
2401176 PG: Fix stat debug output
1362d3e calc_acting: Prefer up[0] as primary if possible
01f3f6a rgw: add timeout to init path
cc22f15 MOSDRepScrub,ReplicatedPG: Add scrub_to to MOSDRepScrub
2710bd8 mon: update man page to document --mkfs stuff
ed780fd mds: misc assertions about truncation
720bab9 osd: EINVAL on truncate to huge object size
33cb279 rgw: remove temp context in prepare_get_obj
5e73933 rgw: fix xml parser internal structure leak
a72348e rgw: fix a leak of acl structure (in req_state)
002eb58 rgw: remove temp context in prepare_get_obj
27da89f rgw: fix xml parser internal structure leak
3a8af0f rgw: fix a leak of acl structure (in req_state)
3af5fff doc: fix typo
dc97790 osd: --get-journal-fsid
ae8fbb8 filejournal: uuid for fsid
c8c5e5d filestore: make fsid uuid_d instead of uint64_t
c59eb8c osd: --get-osd-fsid and --get-cluster-fsid
a582209 osd: store osd_fsid as text in osd_data dir
dcceb8e osd: include osd_fsid in OSDSuperblock
237b19c osd: rename OSDSuperblock::fsid -> cluster_fsid
cd909ac doc: fix mon cluster expansion docs
f2a9599 mon: pull addr from ceph.conf, mon_host as needed when joining mon cluster
d959334 mon: fix setting of mon addr when joining a cluster
37e7a52 rgw: fix updating of object metadata
44b4e02 rgw: bucket cannot be recreated if already exists
e5f4910 man: Update the configuration example for radosgw
83cf1b6 man: It is capital -C instead of -c when for creating a new keyring
3e323e6 rgw: fix updating of object metadata
08f968f rgw: bucket cannot be recreated if already exists
f54f4aa obsync: add authurl to CLI
bfbde5b object.h: initialize max in hobject_t(sobject_t) constructor
061e761 ReplicatedPG: fix handle_watch_timeout ctx->at_version
5274e88 ReplicatedPG: add asserts to catch scrub error
3f3913c doc: fix filename in mon addition process
7d81a3b filejournal: preallocate journal bytes on create
739fd9f man: clarify mount.ceph auth options
e5a5ae1 man: update rule definition for ceph-rbdnamer
4eb8365 authx -> cephx everywhere it's used
b5c3259 ReplicatedPG: fix backfill mismatch error output
41f64be ReplicatedPG: calc_clone_subsets fix other clone_overlap case
5b41c47 OSD: use disk_tp.pause() without osd_lock
ec776f4 ceph.spec: Clean up and fix spec file and build for a couple of distributions
0e0583f init-ceph/init-radosgw: Don't use unspecified runlevel 4
7a7aab2 osd: wait for src_oid if it on other side of last_backfill from oid
ca2e8e5 osd: EINVAL on mismatched locator without waiting for degraded
0c54704 osd: preserve write order when waiting on src_oids
da28605 client: fix logger deregistration
62c830f ReplicatedPG: add_object_context_to_pg_stat, obc->ssc may be null
5a40093 obsync: add vvprint back in
cda5f0d PG: clear waiting_on_backfill during clear_recovery_state
d32fd8c ReplicatedPG: list snapid 0 on collection_list_partial for backfill
07b3ba8 ReplicatedPG: collection_list_partial also takes a snapid
1430c8a doc: Make overview.rst valid reStructuredText, so I can stop seeing warnings.
c119074 pybind: Add a description to docstring.
53f7323 doc: reStructuredText syntax fix.
7213c45 PG: Ask for digest at most once at a time
940a55e osd: track backfill target pg stats
b9eea70 osd: object_stat_sum_t::clear()
7832e17 PG: activate, backfill replica can have last_complete < log_tail
51deeef ReplicatedPG: calc_*_subsets must consider last_backfill
9d633a4 PG: A backfill osd can have last_complete < log_tail
f483df1 PG: there may now be backfill entries in the acting set
999846f PG: fix phantom entry in peer_info
71893b0 osd: remove bad !is_incomplete() assert
57baf9e osd: fix signed/unsigned comp
f1caaa3 osd: fix calc_acting()
f83a787 osd: some recover_backfill() comments
cd0c8fb osd: add incomplete, backfill states; simplify calculation
af7536d hobject_t: fix hobject(sobject_t) constructor
e1006d7 osd: more backfill changes
9bb77b4 osd: observe last_backfill in merge_log() and helpers
f1ae9ed objectstore: make list by hash *next > instead of >=
c03c49c osd: initialize repop gather set in issue_repop instead of new_repop
baa21c9 osd: implement PG::copy_range()
de19a6b Revert "osd: don't keep push state on replicas"
b99e135 osd: make backfill (basically) work again
88ee86d osd: keep backfill targets in acting set
9288f0e osd: advance last_backfill by keys only
f7a0b9c hobject_t: fix sorting by hash key
91ee337 osd: osd_kill_backfill_at
400c27d osd: track backfill with last_backfill, not interval_set<>
0e7f4af osd: pg whitespace
b5de19b osd: kill unused PG::trim_write_ahead
e63c595 osd: kill unused PG::Log::copy_after_unless_divergent
693950b osd: cleanup lingering backlog refs
d84a9f6 osd: cleanup
722ec7e osd: kill unused PG_STATE_SCANNING
d7f7bbd osd: remove recovery-from-backlog kludge last_update
9ceecc8 osd: kill PG::Info::backlog
7521c51 osd: remove backlog case from clean_up_local
257b85d osd: remove log_backlog from PG::Info
e7514f7 osd: state machine whitespace
6d29955 osd: strip backlog logic out of PG::activate()
3f5ced6 osd: kill backlog_requested
82a23db osd: strip backlog case out of merge_log
5b558dc osd: strip out some backlog logic
78b6447 osd: kill PG::Log::copy_non_backlog
b8ee27a osd: remove Query::BACKLOG processing
6e9d135 osd: simplify replica queries for finding divergent objects
b066485 osd: remove backlog generation code
73d15e0 osd: do not read backlog off disk
004e7c9 osd: add Incomplete peering state
4509e61 test_backfill.sh
910398f osd: recover discontiguous peers using backfill instead of backlog
e4ab0e3 osd: add MOSDPGBackfill message
353195d types: operator<< for multimaps
17b5d5c osd: implement do_scan
92d290d osd: implement ReplicatedPG::scan_range
55c2481 osd: implement ReplicatedPG::_lookup_object_context
8f14a35 osd: add PG::BackfillInterval type
9e51c63 osd: MOSDPGScan
2cdc6b4 osd: rewrite choose_acting process
99c614f osd: don't keep push state on replicas
10e481d osd: fix push_to_replica typo
d745ff8 doc: "ceph -w" clarification.
bc16ac3 doc: Fix sentence that ended too abruptly.
f5cfdbb doc: Split intro to talk about the DFS separately. Mention petabytes.
034dd58 doc: Add more missing commands to control.
81feae1 doc: Add misc explanations of Ceph internals from email.
75fd16a doc: Use todo directive, rescue list of missing commands from wiki.
196d427 doc: Link to manpage when command is mentioned.
b7a5a6a doc: More consistency on formatting placeholder names.
55639dc msgr: unset did_bind in stop().
41049f3 objecter: fix use-after-free
041d045 client: move PerfCounter into Client
e8e1e5d swift: auth response returns X-Auth-Token instead of X-Storage-Token
c9d0e55 osd: fix build_incremental_map_msg
1a473b7 osd: clean up _delete_head
6c8f60f osd: simplify creation logic in do_osd_ops
abecbc5 OSDMonitor: remove useless check
5804477 qa: trivial_libceph test
207c40b libceph: add missing #includes
2f281d1 libceph: catch errors from Client::init()
c87f31e client: return errors from init
7133a2f filestore: dump transaction to log if we hit an error
6b42567 objectstore: implement Transaction::dump()
3d13f00 objectstore: create Transaction::iterator class
6ff95e9 qa: rados load-gen workunits
6d5e5bd pybind/rados: add asynchronous write,append,read,write_full operations
fb8fd18 doc: Clarify documentation of reweight command.
db30716 doc: Add missing documentation for osd pool get.
7dce3e6 doc: Update the list of fields for the pool set command.
1867a74 doc: Document pause and unpause osd commands.
9aadd41 doc: Add documentation of missing osd commands.
78b7a25 doc: Import the list of ceph subcommands from wiki.
1dd173a messenger: fix up fault()'s "onconnect" parameter.
e6e6623 mds: mark_disposable when closing a Client connection.
0604647 SimpleMessenger: remove void send_keepalive.
711447d mon: add mds, mon info to cluster_logger
808a851 mdsmap: rename get_num_*_mds() methods
ac31d52 mon: report basic cluster stats via perfcounters
1f1b5fd crush: drop unused label
495307a crush: fix force to behave with non-root TAKE
14f8f00 crush: simplify force argument check
cf279a8 workunits: print tests pjd runs
864847b pybind: add object locator support to pybind pool listing
4ce7dd4 rados.cc: add --object-locator and object locator output to ls
111c12c ReplicatedPG: collection_list_handle_t is now an hobject_t
798ef38 osd: delay pg list on a snapid until missing is empty
e2a9450 obsync: add swift support to obsync
d21f4ab msgr: turn up socket debug printouts
891025e udev: drop device number from name
a5606ca pybind: trivial fix of missing argument
e4db129 crush: whitespace
808763e osdmap: initialize cluster_snapshot_epoch
c94590a crush: set max_devices=0 for map with empty buckets
ca002a3 crush: fix stepping on unallocated memory
d940d68 client: trim lru after flushing dirty data
1545d03 client: unmount cleanup
f3c90f8 client: wait for sync writes even with cache enabled
adbe363 client: send umount warnings to log, not stderr
2d3721c ObjectStore,ReplicatedPG: remove old collection_list_partial
717621f librados,Objecter,PG: list objects now includes the locator key
322f93a hobject_t: encode max properly
0807e7d hobject_t: make filestore_hobject_key_t 64 bits
997265a os/HashIndex: some minimal debug output
9ab445a ObjectStore: Add collection_list_partial for hash order
63e3d86 hobject_t: define explicit hash, operator<<; drop implicit sobject_t()
cada2f2 object.h: Sort hobject_t by nibble reversed hash
348321a hobject_t: sort by (max, hash, oid, snap)
2026450 hobject_t: define max value
745be30 gitignore: Ignore src/keyring, as created by vstart.sh
a1ebd72 ReplicatedPG: don't crash on empty data_subset in sub_op_push
8afa5a5 workunits: fix secret file and temp file removal for kernel rbd
03b0355 ReplicatedPG: do not ->put() scrub messages when adding to a WorkQueue.
bcd26fc workunits: make rbd kernel workunit executable
2bdf907 doc: Reorganize pip calls to use a requirements file.
200d7c8 doc: Switch diagram tools from dia to ditaa.
33753c8 filestore: send back op error to log, not stderr
20b7af7 doc: fix typo
66b6b1b workunits: add some tests for kernel rbd
fd9556f rbd: the showmapped command shouldn't connect to the cluster
16a211b ceph-rbdnamer: include snapshot name if present
274f489 rbd, mount.ceph: use pre-stored secret if available
0ad0fbf secret: add is_kernel_secret function
01d30e6 secret: fix error check
575f717 rbd: allow snapshots to be mapped
ddc11a8 test_rados.py: clean up after EEXIST test
9512aed doc: fix rst syntax
7178f1c doc: document monitor cluster expansion/contraction
16f7928 cephtool: fix shutdown
019597e filejournal: make FileJournal::open() arg slightly less weird
86c34ba vstart.sh: .ceph_keyring -> keyring
1e3da7e filejournal: remove bogus check in read_entry
dc167ba filejournal: set last_committed_seq based on fs, not journal
4a0b00a mon: stub perfcounters for monitor, cluster
8bbe576 osd: safely requeue waiting_for_ondisk waiters on_role_change
6dd8148 osd: rename {take -> requeue}_object_waiters
c883100 rados.py: add list_pools method
0622871 Doc: add a conceptual overview of the peering process
c45a849 mds: remove obsolete doc
0c183ec crush: ignore forcefed input that doesn't exist
faf5ce6 Revert "CrushWrapper: ignore forcefeed if it does not exist"
321ecda (tag: v0.39) v0.39
75aff02 OSDMap: build_simple_from_conf pg_num should not be 0 with one osd
2f5bd5f objecter: initialize global_op_flags to zero
813523a Doc: delete gratuitous index.html
48165af Doc: complete reversion of architecture.rst
3c7a82a Doc: deleted gratuitious PlanningImplementation.html,
fdf3f7b Doc: Restore the previous version of architecture.rst
4cfe081 doc: change state model from .svg to .png
1bbf9ae fixed ubuntu version typo
6fbab6d CrushWrapper: ignore forcefeed if it does not exist
363ebb6 librbd: report an error if rbd header does not match
d4aef20 hadoop: apache license.
348c71c mds: fix blocking in standby replay thread
f6ee369 global: make daemon banner print explicit
5828009 mds: fix usage text
353ee00 mds: adjust flock lock state on export
2443878 Objecter: loop the right direction when searching for local replicas
1c696b6 doc: Add peering state diagram
30ede64 Makefile: ipaddr.h, pick_address.h
77a62fd Makefile: add missing uuid.h to tarball
ebb585d Objecter: fix local reads in recalc_op_target
8788a40 osd: subscribe to next map if flagged FULL
c2889fe mds: encode truncate_pending in inode
98e0a6f uclient: remove filer_flags and use Objecter::global_op_flags instead
da2e0c3 Objecter: add a new global_op_flags that is passed to every Op constructor.
5138593 Objecter: remove unused variable in op_submit
4974a9c uclient: remove useless if-else based on snapid
cef1673 debian init: Do not stop or start daemons when installing or upgrading
ce65722 mon: search for local ip during mkfs
61b9db3 pick_address: implement have_local_addr()
84b0059 monclient: name nameless monitors noname-<foo>
7a45340 pick_address: whitespace
30def38 corrected variable (con) to be consistent with prior examples (cluster)
934e1e5 ReplicatedPG: Also count overlaps for snapsets on snapdirs
97d82ed ReplicatedPG: Account for clone space usage in make_writeable
ad13d0b ceph: fix shutdown race
414caa7 common/pick_address: Fix IP address stringification.
9870e2f mon: pick_addresses before common_init_finish
036ad4c mon: set default port if not specified...
36978a6 mon: calculate rank by addr, not name
0045c90 monmap: assign rank by sorting addr, not name
ebe5fc6 obsync: tear out rgw
3a20b42 mon: name self in monmap if --public-addr specified during mkfs
a859763 rgw: don't remove tail of lru if that's what we touch
aeeeade mon: mark down all connections when rank changes
bed3c47 mon: handle rank change in bootstrap
8b46409 mon: pick an address when joining and existing cluster
5ba356b mon: remove unused myaddr
0c9724d mon: simplify suicide when removed from map
eb8d91f PG: it's not necessary to call build_inc_scrub_map in build_scrub_map
c066e92 mds, osd, synclient: Pick cluster_addr/public_addr based on *_network.
0477f23 common/pickaddr: Pick cluster_addr/public_addr based on *_network.
eec61b4 common/ipaddr: Add utility function to parse ip/cidr style networks.
0f748d4 common/ipaddr: Find a configured IP address in given subnet.
97464bc msg: Move public_addr use outside ->bind()
0f9a060 common/str_list: Make unused return value void.
2bae350 osd: Remove unused variable.
3c8fec2 osd: fix 'stop' command
b47347b osd: protect handle_osd_map requeueing with queue lock
70dfe8e osd: lock pg when requeuing requests
811145f paxosservice: tolerate _active() call when not active
88963a1 objecter: simplify map request check
cd2e523 objecter: cancel tick event on shutdown
f607028 paxos: fix sharing of learned commits during collect/last
3b53b72 rgw: support alternative date formatting
9aabd39 paxosservice: consolidate _active and _commit
10fed79 paxosservice: remove unused committed() callback
b521710 mon: mdsmon: tick() from on_active() instead of committed()
becfce3 mon: share random osd map from update_from_paxos, not committed()
9920a16 config: support --no-<foo> for bool options
1a468c7 config: whitespace
cc5b5e1 osdmon: set the maps-to-keep floor to be at least epoch 0
45cf89c Revert "osd: simplify finalizing scrub on replica"
57ad8b2 FileStore.cc: onreadable callbacks in OpSequencer order is enough
dedf2c4 osd: error responses should trigger all requested notifications.
09c20c5 objecter: trigger oncommit acks if the request returns an error code.
9800fae paxos: do not create_pending if !active
fa58768 Revert "mon: don't propose new state from update_from_paxos"
66c628a mon: don't propose new state from update_from_paxos
6ae0f81 rgw: if swift url is not set up, just use whatever client used
ef5ca29 fuse: fix readdir return code
d61ba64 paxos: fix trimming when we skip over incrementals
367ab14 paxos: store stashed state _and_ incrementals
6bc9a54 mon: elector: always start election via monitor
685450b common: libraries should not log to stdout/stderr
f1dd56d objecter: set skipped_map if we skip a map
5afef02 objecter: add is_locked() asserts
bf91177 objecter: send slow osd MPing via Connection*
fa4b0fb osd: add pending_ops assert
17fa1e0 mon: renamed get_latest* -> get_stashed*
b9d5fbe mon: fix ver tracking for auth database
b425f6d mon: always load stashed version when version doesn't match
2e19550 rgw: don't log entries with bad utf8
0276eab rgw: adjust error code in swift copy failures
1fe1692 rgw: fix swift responses encoding
2445fd8 rgw: Fix some merge problems uncovered by gcc warnings:
cd90061 Resolve gcc warnings.
a5b8c85 osd: remove dead osd_max_opq code
f418775 workunits: rados python workunit should be executable
102c434 crush: send debug output to dout, not stdout/err
25eee41 test/run_cmd: use mkstemp instead of mkstemps
1800986 ceph-authtool: fix clitests
d476ae2 test_str_list: make sure ' ' and ', ' separaters work for str lists
ecd713c ceph-authtool: make error msg more helpful
4f39aaa keyring: don't print auid if it is the default
ee02a1e mon: implement 'fsid' command
73f99a1 mon: fix 'osd crush add ..' weight
1b843e0 osdmap: build_simple with normal osd/host/rack/pool hierarchy
ec97c85 mon: fix 'osd crush add ..' weight
0349fa9 vstart.sh: don't generate initial osdmap explicitly
30ddc85 mon: make initial osdmap optional
0d81225 osdmap: build_simple: create reasonable pools when numosd==0
8e150fb mon: add '--fsid foo' arg for setting generated monmap fsid
b51d817 mon: take '--fsid foo' arg with --mkfs
0c731ed osd: fix warnings
73705f6 monmaptool: fix clitests
36241da paxos: discard waiting_for_active events on reset
80ab656 monclient: use blank fsid (instead of epoch==0) for monmap checks
2253c01 use libuuid for fsid
07950bb crush: grammer: allow '.' in name token
cf0a53e mon: fix seed monmap removal
6d370f3 mon: allow monitor to automagically join cluster
d56485a osd: pass monclient::init errors up the stack
bf254de mon: verify fsid during probe and election
f1a98fb mon: tolerate won election while active
cd736b9 mon: clean up logic a bit
2633d71 mon: only re bootstrap if monmap actually changes
622fbad paxos: fix off-by-one in share_state
6c663d8 mon: fix monmap update
1134fdf mon: properly process monmaps even when i have the latest
c097e63 mon: fix up update_from_paxos() methods
f31825c monmaptool: new maps get epoch 0
65f797e mon: clean up mkfs seed data
e545af2 mon: remove empty monstore dirs
aea7563 mon: create initial states after quorum is formed
1533f1c mon: stage mkfs seed info in mkfs/ dir
9e941c4 mon: eliminate PaxosService::init()
0a926ef mon: include monmap dump in mon_status and quorum_status
8c3d872 mon: pull initial monmap from monmap/latest OR mkfs/monmap
0ecae99 mon: take explicit initial monmap -or- generate one via MonClient
dae6c95 test_filestore_idempotent: detect commit cycles due to non-idempotent ops
add04d1 filejournal: fix replay of non-idempotent ops
9f1673c test_filestore_idempotent: transactions are individually idempotent
8df0cd3 filestore: make trigger_commit() wake up sync; adjust locking
0981112 filestore: document the btrfs_* fields
69cd362 filestore: sync after non-idempotent operations
5407fa7 workunits: add workunit for running rgw and rados python tests
2fb7029 rgw: remove warning
71bfe89 test/pybind: add test_rgw
ea42e02 test/pybind: convert python rados and rgw tests to be runnable by nose
25cde7f rados.py: fix Snap.get_timestamp
b600ec2 (tag: v0.38) v0.38
2a7fbe0c common: return null if mc.init() unsuccessful
a177a70 rbd.py: fix list when there are no images
27bb48c mon: overwrite in put_bl
2f97a22 PG: mark scrubmap entry as not absent when we see an update
8794112 rgw: implement swift copy, fix copy auth
704644b PG: gen_prefix: use osdmap_ref rather than osd->osdmap
7fb182a OSD: sync_and_flush afer mkfs to create first snap
a3dd5bd PG: update info.history even if lastmap is absent
023ff59 Makefile: add MMonProbe.h
fd5fb99 osd: remove useless proc_replica_log() side-effect
78ad144 hadoop: update patch and Readme.
386c0db rgw: swift guesses mime type if not specified
78ccb2a osd: comment PG::lock*(), whitespace
5fa8df1 osd: improve last_peering_reset debugging
383dfa3 crypto: make crypto handlers non-static
b41b1fa PG: cache read-only reference to the current osdmap on pg lock
5df28ec OSDMap,CrushWrapper: const cleanup on OSDMap
0dffddf osd/: change type of osd::osdmap to a shared_ptr
9db994a PG: always add backlog entry
15da478 rbd: Fix the showmapped cmd usage
3354933 hadoop: return all replica hostnames
e6035a6 hadoop: make listStatus quiet
d7f911f hadoop: handle new ceph_get_file_stripe_address
619430a client: return stripe address replicas
c5c5037 client: fix bad perfcounter fset callers
808c644 Improve use of syncfs.
c51e2f7 osd: fix perfcounter typo
1ac6b47 os: rename and make use of the split_threshold parameter.
09455ee perfcounters: fix users of fset on averages
87634ce osd: don't open deleted map from generate_past_intervals
20cf1e9 automake: enable 'make V=0'
1bc1a24 mon: handle active -> electing transition properly
7609032 rgw: don't return partial content response with bad header
7a32cc6 rgw: swift bucket report returns both bytes size and actual size
a04afd0 rgw: abort early on incorrect method
2fb73bd paxos: fix race between active and commit
1ffb7b9 mon: add 'quorum_status' command
a8b28ee mon: do not participate in the election unless we are in electing state
64350c0 rgw: guard perfcounter accesses in rgw_cache.
42f5f02 rgw: initialize all the perfcounters, in order
e952e10 ReplicatedPG: use finc, not fset, on average counters
29e091b mon: 'mon_status' command to dump individual mon state
f0b9a33 rgw: use l_rgw_qactive perfcounter
9035ffb mon: add probe+slurp timeouts
cf56655 rgw: implement perfcounters
57b60b8 perfcounter: add some minimal documentation.
d0b226e7 perfcounter: assert when you try and set an average.
0fe0f9d rgw: create and tear down a radosgw perfcounter
2523b70 mon: slurp latest state from active monitors before joining quorum
100fba8 mon: fix osdmap trim
279661f paxos: last_consumed == latest_stashed; behave accordingly
c2fc986 monmap: simplify constructor
2f46e8c mon: revamp monitor states
18941dd mon: rename election_starting -> restart
628de54 mon: don't call out to mon->call_election for internal election restarts
40843eb rgw: fix warning
2836104 rgw: fix accept-range for suffix format, other related issues
2f881e1 Timer.cc: remove global thread variable
d4ef921 common: return null if mc.init() unsuccessful
480b826 rbd: add showmapped to clitests and rst man page
4e518ed rbd: Document the rbd showmapped cmd
34d8039 rbd.py: fix list when there are no images
ae41f32 OSD: write_info/log before dropping lock in generate_backlog
fb70f5c FileJournal: stop using sync_file_range
585a46c monclient: simplify auth_supported set
1014167 Makefile: use static add for test_libcephfs_readdir.
5b4e9d3 RadosModel: add DeleteOp to test object deletions
280a4d1 rgw: fix tmp objects leakage
fc6522a rgw: don't purge pools in any case
8d914f0 rgw: list system buckets through rados api
256ac72 rbd: document --order and list required args where they're necessary
0f98006 rgw: fix PUT without content length (non chunked)
b873347 gitignore: just ignore all test_ files
d4faf58 qa: workunit to run test_libcephfs_readder
120c3fb test: write a test to try and check on Client::readdir_r_cb.
58eb8c5 rgw: fix null deref, cleanups
7726e78 rgw: add support for chunked upload
0d4987d rgw: fix crash when accessing swift auth without user
376dad9 hadoop: remove unused fs_default_name
3191e0d hadoop: FileSystem.rename should not return FileNotFound
60e1e14 hadoop: ENOTDIR should be negative
6deea1c hadoop: fix unit test: testWorkingDirectory
ccb08e2 hadoop: remove deprecation warning
1c24fc7 hadoop: remove deprecated isDirectory()
a407da0 hadoop: remove statistics initialization
dcf2d62 hadoop: remove unused variable
9e8fa02 hadoop: remove initialization check
3006c6e hadoop: simplify workingDir handling; add home directory
a79b7e1 hadoop: emulate Ceph file owner as current user
e9adf73 hadoop: use standard log4j logging facility
c861ee1 PG: mark scrubmap entry as not absent when we see an update
f497132 debian: empty dependency_libs in *.la files
0b0f65a add missingok to logrotate
47b7036 debian: update VCS sources
ee34e09 debian: fix libceph1 -> libcephfs1 rename
26787ce debian: add watch
2fc01b5 osdmaptool: test --create-with-conf with racks
885d714 osdmap: assert that osdmap max_osds >= crushmap max_devices
0bcdd4f osdmap: fix off-by-one in build_simple_from_conf
b66847e osd: fix assert include
219141e rgw: swift prefix and path params fixes
143c572 .gitignore: test_str_list
aa5f697 Makefile: include/compat.h in tarball
99bcd7b common: get_str_list unit tests
79d9718 common: make get_str_list work with other delimiters, and skip the
7a4c232 monclient: fix else formatting
ba8c345 monclient: fail fast when our auth protocols aren't supported
d1e9513 PG: set_last_peering_reset in Reset constructor
ef51f0f monclient: fix else formatting
e15177a monclient: fail fast when our auth protocols aren't supported
9ea0223 osd: kill unused on_osd_failure() hook
1d9e806 RadosModel.h: use default conf location
b9a0b2b Revert "PG: call set_last_peering_reset in Started contructor"
f9b7ecd hadoop: Return NULL when the path does not exist.
5bd029e osdmap: fix g_ceph_context reference
0fa8618 ReplicatedPG: check for peering restart before share_pg_info
199e04a mkcephfs: build initial osdmap from information in ceph.conf
07c9de8 osdmaptool: build initial map from ceph.conf
3f67893 crush: make insert_item take float for weight
ef4b95c ReplicatedPG: Clean up old snap links when recovering a clone
bd3223f PG: Create new snap directories independently on replica
b497b38 rgw: canonical resource should use unencoded url
a845000 rgw: cleanup, remove unused user_id
7ee0747 mkcephfs: skip non-btrfs osds even with --mkbtrfs
3a17f02 debian: break redundant dependencies
b8979f4 MOSDMap: do not leave {oldest,newest}_map uninitialized when decoding old messages
6353d7b include stdio in order to fix snprintf compilation error
46bb82f client: fix return value for _readdir_cache_cb
943893e ceph: fix snprintf warning
6499211 auth: return unknown if no supported auth is found
1a4eec2 uclient: fix _getdents and add some documentation.
e37ab41 uclient: align readdirplus_r with readdir_r.
27ec04e cfuse: remove unneeded loop.
55aace7 uclient: readdir_r_cb documentation, and it only returns 0 or -errno.
354055f rgw: swift related adjustments
ed839f5 fixed graphic reference and headings
2c4eb07 fixed image reference
c57ed06 add images for documentation
7a02202 rgw: handle swift PUT with incorrect etag
cae7d5a rgw: handle swift PUT with incorrect etag
697bba3 rgw: handle swift PUT with incorrect etag
a817a38 rgw: handle swift PUT with incorrect etag
d9dfd14 rgw: handle swift PUT with incorrect etag
87224c0 rgw: handle swift PUT with incorrect etag
e4dcbd0 ceph: refactor for generic --admin-daemon <sock> <cmd> too
89dccc0 ceph: --dump-perf-counters[-schema] sockpath
6979eaa filejournal: journal_replay_from
b3e1e3e rados: improve error message
11691a7 radosgw-admin: fix key create check
921ce53 osd: guard checks for writes
0c78f0d rgw: handle swift PUT with incorrect etag
213eb13 Revert "hadoop: get hadoop bindings to build again" and fix.
e8e1015 rgw: rgw-admin --skip-zero-entries
180c744 perfcounters: fix accessor name
1a0a732 objecter: instrument with perfcounter
e747456 rgw: rgw-admin generate-key/access-key=false fix
9386a7b rgw: rgw-admin can show log summation
7fbf28a osd: read_log: only list the collection once
6752bab rgw: fix bucket suspension
f197e84 rgw: fix uninitialized variable warnings
952be11 hadoop: bring back Java changes.
d9f7360 rgw: fix attr cache
5151a8a common/ceph_extattr.[ch] > common/xattr.[ch]
ef48183 fix osdmaptool clitests
6287ccf mon: reencode routed messages
72e0ca0 MOSDMap: reencode full map embedded in Incremental, as needed
90f0429 mon: fix rare races with pool updates
6ca9906 mon: parse 0 values properly
03ad5a2 osd: fix last_complete adjustment after recovering an object
12b3b2d osd: fix generate_past_intervals maybe_went_rw on oldest interval
c30ab1e osd: MOSDPGNotify: print prettier
7de2f7a osd: print useful debug info from choose_acting
e2f3c20 osd: make proc_replica_log missing dump include useful information
f8e9289 osd: fix/simplify op discard checks
fa722de osd: move queue checks into enqueue_op, kill _handle_ helpers
3a2dc65 osd: move op cap check into helper
662414d osd: drop useless PG hooks
b1de913 osd: drop ability to disable op queue entirely
b17c9ca osd: handle missing/degraded in op thread
7aa0d89 osd: set reqid on push/pull ops
e2766bd mon: remove compatset cruft
024bcc4 FileStore: ignore EEXIST on clones and collection creation !btrfs_snap
6f1b65c ReplicatedPG: fix snapshot directory handling in snap_trimmer
4d88404 rgw: fix rgw_obj compare function
df2967a rgw: use a uint64_t instead of a size_t for storing the size
e161ce1 workunits: test rbd python bindings
b7aa57f rbd.py: update python bindings for new copy interface
2af32a4 librados: use stored snap context for all operations
ae91911 librbd: resize if necessary before rolling back
a5a8a9c test_rbd: add a test for rolling back after resizing
315ab94 librbd: propagate error from snap_set
bfb5ceb workunits: add rbd rollback and snapshot removal tests
93ccccd rbd: remove unnecessary condition
e2296c3 clitests: add rbd usage and invalid snap usage tests
f4aa69a workunit: check that rbd info returns the right size for snapshots
afa3479 librbd: show correct size for snapshots
46bb412 rbd: let all commands use the pool/image@snapshot format
8c6db18 rbd: specify which commands take --snap in usage
4b10cad rbd: check command before opening the image
88905b3 test/osd: Add TestReadWrite
5e4e797 mon: allow adjustment of per-pool crash_replay_interval
f57c33d rgw: fix check_disk_state; add a strip_namespace function.
927c357 rgw: add locators to the directory objects, and functions handling them
0da45ca rgw: rename translate_raw_obj to translate_raw_obj_to_obj_in_ns
f37b08f librados: behave if shutdown is called twice
c15e62a mon: need to print pool id for output to be useful
8a08772 mon: PGMap::dump: fix order in totals
1b94139 osd: make osd dump slightly more concise
34c2f6a osd: pg_pool_t: set crash_replay_interval on data pool when decoding old
6779eb3 osd: make osd replay interval a per-pool property
7cb4d25 osd: pg_pool_t: introduce flags, crash_replay_interval
f2816a1 osd: pg_pool_t: normalize encoding
54e2826 scratchtool[pp]: fix rados_conf_set/get test of log_to_stderr
9323f25 osd: fix PG::Log::copy_after wrt backlogs (again)
1b846f4 radosgw: drop useless/broken set_val daemonize
1f7cb75 config: separate --log-to-stderr and --err-to-stderr
e98cbc4 rgw: fix xattrs cache
30c34ab osd: trim past intervals when we complete recovery.
249ed56 osd: move may_need_replay calculation out of PriorSet
600bda4 osd: fix last_clean interval bounds
0359301 mon: fix last_clean_interval calculation
cf6a940 osd: eliminate CRASHED state
d6661f9 ReplicatedPG: Include pg version in MOSDOpReply on error
f8afd8b rgw: reduce rados bucket stats (and getxattrs)
a1756c5 rgw: object removal should remove object from index anyway
dd5087f osd: simplify finalizing scrub on replica
29899de osd: PriorSet: acting/up membership implies still alive
f94a44e OSDMonitor: reweight towards average utilization
49b6c11 osd: PG::PriorSet: make debug_pg arg const
fa66e65 osd: PgPriorSet -> PriorSet
7bc855a osd: PgPriorSet: rename prior_set_affected -> affected_by_map
78236e4 osd: PgPriorSet: remove obsolete comment
2a870c1 osd: PgPriorSet: move prior_set_affected into PgPriorSet
c2e66fb osd: PgPriorSet: kill whoami; make PG arg strictly optional
2b3bdea osd: fix requeue_ops
3b76f9f perfcounters: remove dout
863e5b0 perfcounters: fix unit test
28df1e9 filestore: measure commit interval, latency, journal full count
d2dbae9 osd: clean up perfcounter names
b000e4d filestore: simplify, clean up perfcounters
d31e78f filestore: simplify perfcounter lifecycle
d26488b perfcounters: fix addition/removal
7207b81 filestore: fix perfcounter definition
53ad579 filestore: fix logger start
daea03e perfcounters: use simple names
288ccc8 perfcounters: clean up interface a bit
f25879a encoding: add optional features
0aa40ea assert: no 0x before thread id
0f0c594 osdmap: uninline big stuff
a71455c rgw: properly handle cleaning up of listings
6dc0da4 cls_rgw: implement a dir_suggest_changes function.
470742d cls_rgw: move stat update code after error checks in complete_op
952ebba cls_rgw: add constructors to data structs; don't leak tags on races
9496732 rgw: write and use the check_disk_state function
a5ada56 rgw: fix bad snprintf
5de847f .gitignore: add test_filestore_idempotent
b57e896 test_filestore_idempotent: initialize var
7f5f1ec rgw: implement swift metadata POST
b297d1e osdmap: make encoding based on features
6e2018c osd: normalize encoding of pg_pool_t
cee1b27 crush: clean up encoder/decoder
954d3f9 use WRITE_CLASS_ENCOER macro when possible
9d93bfc encoding: WRITE_CLASS_ENCODER_MEMBER -> WRITE_CLASS_MEMBER_ENCODER
83914d2 test_filestore_idempotent: simple tool to generate a worklaod of non-idempotent operations
3e92aac filestore: tolerate EEXIST on mkcoll when not-btrfs
ba165fe rgw: some swift obj metadata related fixes
13b0bbb mds: handle xattrs on inode creation
7ea0783 radosgw-admin: fix conflict with KeyType in libnss
ed5e434 rgw: add content-type to index dirent
da6cdfd osd: PgPriorSet: cur -> probe
4e5242e osd: PgPriorSet: restructure lost checks for prior set
298dbbe rgw: workqueue suicide timeout is infinity
0a02759 osd: PgPriorSet: simplify (and change) CRASHED logic
f7ef94d osd: PgPriorSet: update comment terms a bit
bbb06d3 osd: do not short-cut up_thru update for new PGs
33b33f7 osd: PgPriorSet: remove unused PG member
5338136 osd: PgPriorSet: clean up comments a bit
57e0ab7 osd: PgPriorSet: clean up per-interval var names
113b783 osd: PgPriorSet: revert start_since_joining check
f89f4d9 osd: PgPriorSet: do not include UP osds in prior.cur
3dda446 osd: PgPriorSet: remove up_thru crap
9dfa110 rgw: fix swift account and containers listing limits
c5638b7 osd: PgPriorSet: any_survived -> any_is_alive_now
e6dbd71 doc: Change diagram to have radosgw closer to direct rados access.
edcd4d9 rgw: some more swift fixes
0bad37e streamtest: do mkfs
525a610 streamtest: print to stdout
9c95604 mkcephfs: copy ceph.conf to /etc/ceph/ceph.conf (when -a)
9baf5ef ceph.spec: don't chkconfig
21d941e ceph.spec: work around build.opensuse.org
195a484 ceph.spec: capitalize first letter to make rpmlint happy
a6f3bbb (tag: v0.37) v0.37
ca8f603 osd: fix assemble_backlog
2fdec7b osd: fix add_next_event Missing::item::have
c1cabf5 ceph: don't crash when sending message to !up osd
3a04677 osd: pull old version to revert to
615689a osd: implement lost_revert
7c05c1f osd: simplify share_pg_log
43bd49d osd: fix up PG::Missing methods a bit
5115882 osd: factor out recover_primary_got() helper
efe5abf osd: make C_OSD_CommittedPushedObject::op optional
22684f2 osd: pass version explicitly to pull
a3be665 osd: fix share_pg_log()
c3fa078 messages/MOSDPG*: clean up output a bit
81f36c2 osd: remove superfluous write_info calls
ad39d81 osd: all_unfound_are_queried_or_lost
03cd108 osd: adjust LOST log entry types; simplify log entry type strings
a8760e5 osd: fix up mark_all_unfound_lost so that it actually works
84a6f6e osd: implement 'flush_pg_stats' command
1cbcc95 osd: process commands in a workqueue
b35d96d mon: feed MPGStats tids back through the MPGStatsAck
f868e38 osd: remove some pg stats debug cruft
7f687fc osd: handle (and reply to) direct MCommands
a37d6d0 cephtool: ability to send commands directly to osds
beaca74 msg: entity_name_t::parse()
35dab57 msg: add MCommand, MCommandReply message types
502fbba paxos: trim extra state dirs
6d12306 PG: call set_last_peering_reset in Started contructor
b5c6062 filestore: assert on any unexpected error
ba41e6c osd: send full map if we don't have sufficiently old incremental
818cf8c mon: make number of old paxos states configurable
0cc7da2 osd: share oldest_map info with peers
607043e osd: send full map if we don't have sufficiently old incremental
3acb919 paxos: trim extra state dirs
474e368 osd: remove old osdmaps
dd3282c rgw: multiple swift fixes and cleanups
b3c68a5 PG: call set_last_peering_reset in Started contructor
ef30e69 PG: Fix log.empty confusion
fccd28d PG: Fix log.empty confusion
f658cb4 makefile changes for interval tree
d516f9b mds: Unit tests for interval tree
72d50fa mds: Interval tree implementation
87f8389 rgw: more swift fixes and adjustments
b6d9ed9 auth: remove global instance of auth_supported
1f3b12e osd: bound generate_past_intervals() by oldest map
45ebaf7 cls_rgw: remove the write_bucket_dir function.
0167e82 cls_rgw: rewrite rgw_bucket_complete_op to use update.
75f7e54 cls_rgw: refactor rgw_bucket_complete_op in terms of TMAP
2592e41 cls_rgw: refactor rgw_bucket_prepare_op in terms of tmap
83504c4 cls_rgw: refactor rgw_bucket_init_index in terms of tmap
15a3df8 cls_rgw: refactor read_bucket_dir in terms of tmap.
583e16d objclass: add map interfaces.
c98e1c5 ReplicatedPG: remove unused tmap implementation.
42c8ae7 test_librbd: expect copy to succeed
d0d265b librbd: return errors when read_iterate fails during copy
a50fbe2 PG: merge_old_entry: merged delete might not be in missing
42bbea8 rgw: swift key removal
05dae94 Revert "config: base default libdir, sysconfdir off autoconf values"
1216eb2 rgw: some swift api fixes
7e5dee9 config: base default libdir, sysconfdir off autoconf values
e07b956 rgw: implement some missing swift api, other swift fixes
5790a36 rgw: encoded swift key contains full user name
f883e63 rgw: multiple swift keys per user
9b18e55 PG,OSD: clean up xlist::items on pg removal
b43b864 osd: fix race between op requeueing and _dispatch
f7ec9f7 thread: whitespace
fc3aac6 filestore: clean up error output
cd2dedd filestore: tolerate missing current/
3f619dd ceph.spec.in: fix radosgw files
468c7dc rgw: find fcgi headers in /usr/include or /usr/include/fastcgi
032dd84 ceph.spec.in: more updates to make build.opensuse.org happy
465f1bf ceph.spec.in: add init-radosgw back
52bad62 rgw: push log list|show|rm into RGWStore
93a8815 radosgw-admin: push log listing into RGWRados
69e9f51 rgw: chdir to dir in conf (default /)
930d57f rgw: push intent log processing into RGWRados layer
d7f7a21 librbd: don't return >32bit value from copy().
42ac18c .gitignore: test_libhadoopcephfs build
9ec60b4 librbd: fix overflow on large large image copy
b6c4615 librbd: slightly cleaner
7060efa librbd: fix copy progress
6185517 hadoop: get the right class member, and ask for it properly.
dc40b37 auth: move AuthAuthorizeHandler registry into class
11a1d60 OSD,ReplicatedPG: expire and cleanup unconnected watchers
9d846d3 move ceph_mount call
039035b osd: discard requests that from disconnected clients
88de6ab ceph.spec.in: handle docdir properly
0121bcd clitests: add test case for crush exhaustive search
e5db7b2 Makefile: only reset docdir if it's not already defined
2f877f8 crushtool: fix --weight arg parsing
8ff1cbb crushtool: add --force N
af6a9f3 crush: try _all_ bucket items when doing exhaustive search
5a23694 ceph.spec.in: build on suse
6e29c28 mon: tolerate 50ms (instead of 10ms) of clock drift
ff31d3c rgw: fix printf format warning
8be9450 rgw: make log object naming configurable
3d2f89f mon: make other send_incremental variant handle map discontinuity
64935d4 auth: fix authorizer leak fix
6e04f60 mon: fix osdmap trimming unsigned overflow
4fe9cca objecter: cope with missing osdmaps in history
b344d79 osd, pg: ignore responses to obsolete queries
ad48ada pg: rename warm_restart and last_warm_restart
85bbc2f .gitignore: add multi_stress_watch
6bfae03 ReplicatedPG: assert *_FLUSHING unreachable for AccessMode
5840ae4 test/multi_stress_watch.cc: add watch notify tester for teuthology
088d0df qa: rados-api: try harder to make these pool names unique
646ef6a xlist: more assertive
d78b8c7 xattr: use sys/types.h instead of linux/types.h
960deb4 Makefile: include ceph_extattr.h to dist tarball
07c8860 Revert "osd: simplify the session ref-counting branches"
fce1761 osd: boot with map of oldest-1
d272146 radosgw-admin: UTC for time in 'log show', local time in separate field
e8dd1f8 utime: add gmtime() output function
77cfbfb radosgw-admin: for date filtering for 'log list'
d926201 cephx: don't leak Authorizers on each request
5d7e4bd osd: put session ref in ms_handle_reset
f002144 osd: simplify the session ref-counting branches
d78286e rgw: fix chdir result warning
ca3662c rgw: fix rgw_switch_url_previx printf arg
02be993 osd: same_acting_since -> same_interval_since
5ab7f8f osd: fix same_acting_since update
8f62c3b rgw: use conf for rgw_swift_url[_prefix] instead of fcgi env
85cf0a8 rgw: use conf for rgw_print_continue instead of fcgi environment
24e05e3 rgw: use conf for rgw_dns_name instead of fcgi environment
5235b97 rgw: add conf rgw_remote_addr_param instead of using fcgi environment
9d53b3d osd: fix pg stats encoding for unfound
1e15166 vstart: use normal name for .asok files
ed87871 rgw: fix initscript default user
4ab2a85 rgw: daemonize by default
5af012a rgw: set locator key before calling get_obj_state()
c4b51e3 objecter: normalize oloc.key
a3316f4 cli: fix test contents again.
e4a6900 osd: fix map epoch check in handle_osd_map
b38cba2 paxos: update first_committed
a76f8d4 rgw: fix mis-merge issues.
b5c27ae monclient: add an initialized bool to guard shutdown.
1c2ff9d rgw: remove the rgw_buckets files
f723f0a rgw: remove the rgw_get_bucket_info functions
1247278 rgw: move rgw_store_bucket_info into RGWRados.
5f960f8 rgw: remove select_bucket_placement from RGWAccess interface.
13d4803 rgw: remove rgw_create_bucket.
98f15e6 rgw: new command to add pools to the list of available places for storage.
a788bfd osd: fix PG::up calculation on startup
36aaa77 mon: fix maps sent after osd boot
d4340ba On FreeBSD, libedit should be linked in explicitly, because this library is present in the system, but it is not in the pkg-config database.
cb45fbc SimpleMessenger: pass correct address sizes to bind(2) and connect(2),                  otherwise they fail on FreeBSD (and possibly on other                  platforms).
3e0122c Change PAGE_MASK/PAGE_SIZE definitions to CEPH_PAGE_MASK/CEPH_PAGE_SIZE so they won't interfere with system definitions.
07b9bc0 SimpleMessenger: add new method addr_size() to return the correct size of the                  address object.  Also, do not assume ss_family is 2 bytes                  on all platforms.
8f19bb0 SimpleMessenger: getnameinfo needs the correct address size to be passed in sa_len on FreeBSD,                  not just a size of the whole sockaddr_storage placeholder.
5d75d69 Change extattr wrapper for FreeBSD to return ERANGE error code in case the buffer provided was too small similar to what Linux does.
3efa160 Fix endianess detection on FreeBSD.
71cc72f osd: prevent a potential huge memory allocation in case a error      code is returned from getxattr.
8140bdb Abstract out extended attribute calls in ceph_extattr.c so all the system-dependent extattr code can be moved into a single place.  Implement FreeBSD and Darwin support.
c4f4ea9 osd: use numeric values for OSD errnos, as ERESTART and ESHUTDOWN values      are system-dependent.  In future, we'll probably want to use system      independent values as Ceph result codes, not system errno values.
8ffbaff osd: Minimize amount of #ifdefs in src/os/FileStore.cc by allowing      btrfs_ioctl.h to compile and relying on the btrfs runtime checks      wherever possible.
2b9ba0b Use system-independent definitions for Ceph's setxattr flags parameter.  Ceph passes Linux setxattr flags on the wire without converting them, so use the same values for these defitions.
9fde4d9 First cut of FreeBSD support.  This patch allowes ceph to compile successfully under FreeBSD.
0cd3e56 Use /bin/sh, which is more portable.
64d2b97 osd: remove some dead code
167c091 rgw: write debug acl output to the debug output (not cout)
4e9969e rgw: more sane defaults
3b645fb common: CINIT_FLAG_NO_BANNER
09b23b4 rgw: rgw_log -> debug_rgw
37c8829 rgw: remove useless RGWConf::log_level
1433861 rgw: set dout condvar to rgw_log
27cf854 rgw: RGW_LOG -> dout
a7abb06 rados-api/test: don't srand(time())
f24216a mon: make MPoolOp*::print() readable
b2361dc radosgw: run as 'user' field in ceph.conf
8084272 rgw: set xmlns on ListBucketResult element
4f591b5 osd: get latest osdmaps before booting
6ff5793 osdmap: include addrs in json dump
ddbb2ca osdmap: show weight for out osds
cd93f18 osdmap: show old addrs for down osds
a47aedd mon: limit maps send on onetime osdmap subscribe
b8ada49 osdmap: include oldest, newest known epoch in message
e661bf8 osd: use pointers for handle_advance_map
71792e8 objecter: fix locking on is_latest_map checks
9c56070 monclient: use an async finisher
04b90cc monclient: clean up old version_requests on session reset
54ce544 monclient: implement get_version() to get newest _and_ oldest map versions
51fc234 osd: is_active() instead of !is_booting() for map sharing checks
2a9330f osd: do not request osdmap when loner if not booted
799323b mon: trim old osdmaps
906e1da osd: add last_epoch_clean to pg_stat_t
ea087e3 mon: implicitly mark lost_at when a fresh osd rejoins the cluster
b8aca4e radosgw: run as 'user' field in ceph.conf
8e37140 radosgw-admin: make 'log list' behave when .log pool dne
81c5f6a debian: don't recommend gceph
9f71bb0 rgw: don't specify create_pool and set_marker in create_bucket.
4ae8f1c radosgw: make stop succeed when not running
36f650b rgw: move rgw_bucket_select_host_pool behind RGWAccess as select_bucket_placement
c49c19c radosgw: fix init-radosgw provides
bbc644e rgw: remove withdraw_pool function.
1018673 rgw: remove preallocation of pools
df9c660 rgw: remove preallocating pools maintenance tick
04f825e rgw: set xmlns on ListBucketResult element
848a1f9 debian: add non-stripped exception for libcls_rgw rados class
2a078f8 Makefile: more radosgw_admin -> radosgw-admin
5d54398 mds: fix possible deadlock in multi-mds setup
b968ff3 workunit: clean up temporary files
12ce321 ReplicatedPG: reset return code after find_object_context
6103ee9 more radosgw_admin -> radosgw-admin
c5b0e3e osd: trim ondisk log using Log::Entry::offset
f85dfa7 osd: combine log_op into append_log
8111b61 mds: make jouranl writeable in MDLog::append()
f4e61db mdcache: tolerate no subtrees in create_subtree_map()
4922757 ceph.spec.in still packages libceph.so in 0.36
877cacb (tag: v0.36) v0.36
c00e06f doc: add documentation for librbd python bindings
683f4dc rbd.py: add class and method documentation
1c1785d rbd.py: use a dict to translate error codes
faeecd8 rbd.py: allow setting an image to no snapshot
da61e1e rbd.py: turn EROFS into an exception
b1bed35 rgw: don't remove on-disk bucket object in rgw_user::rgw_remove_bucket
19228d4 rgw: revert part of commit:30b814e2677659ddda4109a1421f33a47d83a05b
30b814e rgw: don't remove bucket object twice
b441ecf rgw: fix bucket-id assignment
48558bb rgw: separate bucket vs object owner tracking
cb2d366 radosgw-admin: fix acl vs content-length check
b269d3c radosgw-admin: rename clitest dir
44d311a radosgw-admin: fix help clitest
a47d7ad rgw: set log entry owner to user if s->acl is not set
a4e6049 rgw: simplify bucket info storage
aa7c5c5 radosgw-admin: pull 'log show' owner+bucket from first entry
560f90c rgw: fix RGWBucketInfo encoding of owner
4b8d72b radosgw: fix log retry after bucket creation
444ca65 rgw: store bucket information in the .rgw pool instead of .buckets
80ba05e radosgw_admin: we do want to set markers on these buckets
79fddd2 Cond.h: adjust nlock during waits
d38b9a5 ReplicatedPG: dump_watchers in do_osd_op_effects
1eb1ce4 librados: Make notify a linger op
2269dc2 test_async_snap: loop a finite number of times.
697e664 qa: btrfs: test_async_snap
4be3309 radosgw-admin: 'log list' and 'log rm'
120736a radosgw-admin: dump ints, not strings
a1942e6 radosgw-admin: fix bucket stats
fc8588f rgw: protect the id-based accesses from namespace collisions
47e5958 rgw: remove get_bucket_info and convert users.
e701177 radosgw-admin: fix 'bucket stats --uid='
8147841 radosgw-admin: include 'suspended' in user info output
6891761 radosgw-admin: clean up some cout usage
0870764 radosgw-admin: use formatter for 'bucket list'
ab25a4b radosgw-admin: 'bucket stats --uid'
0c75ec0 radosgw-admin: clean up 'bucket list' output
83c59cf rgw_admin: rip out format.empty() special cases
600126f rgw_admin: fix --pretty-format and --purge-data flag parsing
2f78faf rgw_admin: default to json output
17603ee radosgw-admin: use formatter for 'bucket list'
b69da17 rdosgw_admin -> radosgw-admin
1392bbb rgw: remove now-unused struct RGWPoolInfo
2f1fc5a ceph: make -o - the default
7eb15ce ceph: make --concise hide 'N byte written' message
0eb433d rgw: remove rgw_[retrieve|store]_pool_info and ".pool" pool
4884f06 osd: fix leak of src_obc references
a883c83 librbd: fix end_block calculation for read_iterate
1e4fdf5 librbd: don't zero negative lengths
c2fbde4 rgw: remove references to pool_id and replace with new bucket_id.
bd91444 Use LIBEDIT_LIBS in Makefile.am
a1521ae clientN -> client.N
214e7b1 monN -> mon.N
f5fd7f1 mdsN -> mds.N
4b09c1a osdN -> osd.N
594180a msgr: print entity_name_t with a .
fa2fdd9 osd: fix leak of src_obc references
fc2df62 test-rados-api: test tmap rm
21aa6d5 osd: error out current op only on tmap ENOENT
532c594 osd: some PgPriorSet comments, trivial cleanups, new FIXME
ce086ff osd: skip replay phase if osd_replay_window=0
390b790 ReplicatedPG: remove assert in remove_watcher
57ea6b6 rgw: don't encode the bucket name twice in RGWPoolInfo!
a28047b ReplicatedPG: clean up watched objects on role change
e3eb2f2 rgw: put bucketid allocator object in root (.rgw) pool
8953c4d rgw: use same prefix for locator key as for oid
e63b86d ceph-authtool: fix -C
607634f ceph.spec.in: radosgw init script
b690475 mon: auth: implement 'auth print-key <name>'
3a73606 mon: fix error return codes for 'auth ...'
edb2587 ceph.spec.in: add rbd python bindings
951ce29 debian: make python-ceph depend on librbd
58003d2 pybind: fix errors found by pyflakes
25ff9fd debian: move ceph and ceph-authtool into ceph-common
9be9f91 mon: auth: generate random key on 'auth add ...' if no keyring is provided
1a14a23 debian: ceph-client-tools -> ceph-common, now required, w/ ceph-conf etc.
68839a6 rgw: list buckets using bucket objects
9e2edce osdmap: remove dead code
d340e8e radosgw: fix content-length checks
e47c11c radosgw: tolerate race creating .rgw* metadata pools
916e49d librbd: fix end_block calculation for read_iterate
d71bf04 test_rbd.py: Add large read and write tests
8ca79a9 librbd: don't zero negative lengths
4bb553b rados.py: be paranoid about strings
a28eea8 rbd.py: remove useless version object
10157d2 rbd.py: be paranoid about strings
5cd6fad rbd.py: explicitly cast strings to c_char_p for type clarity
e8d476d rbd.py: pass 0 for the default order, not NULL
2d8f52f rbd: improve error messages
69a5e79 rados.py: make exceptions inherit from a base class
c53d05a rados.py: allow configuring rados through constructor options
c60abe1 rbd.py: make Image a context manager
c34e87d rados.py: make Rados and Ioctx objects context managers
a381294 rbd.py: make exceptions inherit from a base class
bc16878 Use cpp_strerror or strerror_r when appropriate.
5f9be6f rbd.py: add partial bindings for librbd
fa691df rados.py: raise specific error when write is too long
9983f07 rbd: init counter to 0 so errors don't say '-1% done'
0cea48a ReplicatedPG, tmap: return -ENOENT if the key to remove does not exist
74f07fb librbd: use pre-existing helper methods for tmap operations
afa3064 librbd: add debugging for failing to remove a header object
56ce7c2 mon: fix it again
e1eea2b mon: fix dup pool creation race
c780494 rgw: get bucket markers from the same object at all times
d27d9d8 init-ceph: more c* -> ceph-* cleanup
9cb6c55 osd: fix warning more
7cd4c68 radosgw_admin: 'bucket list' or 'buckets list'
3b10fd7 Makefile: include init-radosgw in tarball
0dc45be radosgw: shut down threadpool
774aa25 rgw: pass POD c-string instead of string to formatter
38c6fa5 osd: fix warning more
b582e7c osd: fix warning
8563b96 debian: include radosgw init script in package
b19a200 radosgw: init script
30d81fe filejournal: improve debug error messge
8aa15e8 osd/mon: make max maps per MOSDMap message tunable
8711c32 osd: limit size of osdmap messages
56071cc osd: drop map_cache_keep_from
59bcb0d osd: limit size of OSDMap cache
720788c rgw: only require content-length to be set on non-acl puts
4aa90a5 osd: don't finish boot unless instance in map is really us
9fe49f5 init-ceph: don't umount btrfs by default
ad38abc - Fix atomic set.
6709455 rgw: user async exec for index completion op
c8bd67b librados: add async exec
5369513 rgw: tmp objects can be removed async
6b9817a rgw: fix bucket stats
2417617 rgw: fix header encoding
230ec89 rgw: fix compilation warning
37f5da4 rgw: fix compilation
b7ec4d5 cls_rgw: substract obj stats only if obj exists
ca77ba7 rgw: integrate index categories
5a39724 rgw: only require content-length to be set on non-acl puts
00a7d3c Revert "rgw: tolerate missing content-length header on canned ACL puts"
cdecf71 man: c* -> ceph-* rename: Regenerate manpages.
7f30151 doc: Fix reStructuredText formatting warnings.
3fe96be Makefile: c* -> ceph-* rename: missed cdebugpack in CLEANFILES.
8506c5b Makefile: Add missing header test/unit.h
d32592e .gitignore: distcheck temporary directory.
e35d9de Makefile: include run-cli-tests-maybe-unset-ccache in dist tarball.
a62108b ceph-run: c* -> ceph-* rename: Use ceph-run as stderr prefix.
0c2cfa1 ceph-debugpack: c* -> ceph-* rename: use "ceph-debugpack" as temp dir name too.
da8fa78 udev: c* -> ceph-* rename: missed crbdnamer.
3fd3c6b debian: c* -> ceph-* rename: missed csyn, crbdnamer.
dea14f7 rpm: c* -> ceph-* rename: missed crbdnamer, cdebugpack.
98b55b3 Makefile: c* -> ceph-* rename: missed crun.
1ce18d3 doc: v0.35 is out, remove rpm build workaround.
c416649 doc: Add index into the sidebar.
b2d46ef doc: Search page is always in sidebar, no need to have it on page.
8ca4c5a doc: Add a space after sudoers "NOPASSWD:", as that seems more common.
76fbdfb doc: Add index entries, remove glossary as it's practically replaced by the index.
65d2c49 doc: Leftovers of the c* -> ceph-* rename.
29bbcee rgw: update index when doing put_obj_meta
05b06e8 rgw: tolerate missing content-length header on canned ACL puts
3b5cb69 cls_rgw: list entries return upper_bound of marker
2ffb04b rgw: fix a few regressions
e0be65c mon: remember source client address in routed requests
878fedb osd: fix race between handle_osd_ping and handle_osd_map
dd8d4ec Makefile: drop useless all_sources thing
0fdc863 rename source files c* -> ceph-*
5369c77 misc: use strncpy to prevent buffer overflow
4b8cf14 ceph-elaster: add parentheses around macros
1707181 test_store: parse args, don't link librados
5f95172 rgw: fix clone in case state is NULL
e241433 rgw: send correct object id to class op
abdb327 rgw: encode correct timestamp
10c5cee rgw: fix rgw_admin arg parsing
00e0332 rgw: generate tag if doesn't exist
9441c41 crushtool: add unit test for adding items to map
6eb8862 crushtool: fix argument parsing
33151a9 crushtool: crush_finalize on any map modification
e6eeaac Revert "crush: refuse to add item >= max_devices"
b873ec8 rgw: two phase commit for index updating
bfbda96 man: rebuild manpages
3e9a936 doc: more c* -> ceph-* renames
ba9271c rbd: set default pool when none is specified
fba541e libceph -> libcephfs
6f8f140 c* -> ceph-*
97aa1aa mount.ceph: use ":/" instead of just ":" as ip/path delimiter
e124b15 addr_parsing: null terminate safe_cat result
17b2451 mount.ceph: fix use-after-free
ac1a40d test/rados-api/test.cc: Add ability to set client id
4686b56 test/test_stress_watch.cc: added simple watch stress test
5503d45 PG: set log.backlog to false on corrupt log
a01a947 PG: set log.backlog to false on corrupt log
0fbf86c rgw: fix rgw_bucket_dir_entry encoding
6f519f9 rgw: list objects (almost completely) works
b36b01f rgw: obj listing doesn't stat object
98d0361 rgw: store more info for each indexed object
8cb5746 vstart: debug filestore = 20
68fe748 osd: fix PG::copy_after vs backlog
ca63faf mds: fix traverse snap vs forward check
82a1935 rbd: fix progress redraw
ebe6d08 cls_rgw: store more info for each entry, stats categories
1c2cc8b rgw: account object removal
8403daf rgw: account clone_range dest object
f488908 doc: Content for Getting Started with cephfs and rbd.
028ba54 rgw: class init_index
69fabca doc: Content for Getting Started with RADOS.
c3fae7e doc: Structure for Getting Started.
47dfe29 doc: Separate key management from mounting.
c01d36c doc: Move config reference to top-level.
093f4f3 doc: Split data placement into concrete operations and recommendations.
bc9477a doc: Reorganize ops/manage/
8648b7a doc: Move recommendations under /rec.
d292aee doc: Move ops/grow under ops/manage.
9888fc6 doc: Split manage into multiple pages.
331510f doc: Split install into multiple pages.
c448c4c doc: Clean reStructuredText syntax.
aa666b1 objclass: add stat operation
2ec5f15 cls_rgw: list marker uses lower_bound
894a8b6 client: tear down dir when setting I_COMPLETE on empty
b9e32ff rados: accept '-b' as an argument.
0afda37 (tag: v0.35) v0.35
2c28e1c Makefile: include config_opts.h
6068fc8 osd: set reply version for dup requests
43967f5 auth: keyring: whitespace
b39f080 mon: make fsync vs sync threshold configurable
0852ecf mon: remove unused MonitorStore::sync()
b2fbbf0 rgw: implement rgw_rados helpers for class calls
56413b8 mkcephfs: create /var/run/ceph (or wherever pid_file and admin_socket live)
f5c1632 cconf: do not common_init_finish
096e3b6 rbd: error out gracefully when snapname specified for command that doesn't use it
c329d00 mon: 'osd set pool <foo> crush_ruleset <num>'
3a8568b rgw: fix epoch check (greg)
f137a04 rgw: reuse pools
f4d63b0 rgw: fix bucket removal (old scheme)
b445c6f rgw: fix object removal
fdd98ee rgw: fix bucket listing (still using old scheme)
1c11b20 rgw: rgw_admin -- add bucket marker to bucket stats
0b0e844 OSD: return NULL when the OSD does not have the pg in lookup_lock_raw_pg
25499b6 pool sharing, initial work
4fc1e96 rgw: define rgw class api
726a583 rgw: Makefile changes, move around definitions
73bc771 rgw: make cls_rgw compile
0f7a490 ReplicatedPG: populate obc watchers on sub_op_push
a711f29 osd: remove throttle_op_queue()
741990c rgw: class for bucket directory
46cfda7 osd: preserve ordering when throttling races with missing/degraded requeue
4fb3d34 osd: set reply version for dup requests
6cce379 CInode: don't leak old default_layouts if they get overwritten
0ac8985 CDir: put delete with pop so we don't read free'd memory in output
8c8e1d8 osd: clear need_up_thru in build_prior as appropriate
d440a67 flock: clean up waiting records of a lock when adding it succeeds
39970c0 flock: add a replay parameter to add_lock
d64237a ceph_common.sh: Do not sudo to root unless needed
ea6986a flock: move operator<<() to flock header, remove extra line
3e3c0ba flock: remove doubled debug output
375b8f7 fix .gitignore for test_addrs
7c5a216 test/test_addrs: unit tests for addr parsing
362dea3 Remove various unused variables
b6f4de4 msgr: parse ipv6 addresses without []'s
cb7f553 doc/dev/logs.rst: Add performance counter writeup
89c06e7 doc: Add section about changing config values
7d3aa0e osd: use target obj locator for source object if empty
0d46f06 conf: allow ; as a list separator
2981cca Make g_conf constant for all conf variable types
dd01df7 const-ify integer config values
a052c2e config: define config vars once in config_opts.h
ec992be init-ceph.in: change init script status output
18e5be3 FileStore: use config observers
c704b52 cfuse.cc: use apply_changes API
1312f18 testmsgr.cc: use set_val / apply_changes
6a4a707 osd/OSD.cc: use set_val / apply_changes API
668afd7 doc: Typo.
95a3845 Fix double dash handling
ffe844a mds/MDS.cc: don't crash on bad injectargs
2f3cfa1 doc: Instructions how to build RPMs.
b68eaf1 doc: Say "radosgw" not "rgw".
ecd368c doc: Shrinking of MDSes is not supported yet.
ee6126b Makefile.am: fix test_librbd
e86f3bd osd/OSD.cc: don't crash on incorrect injectargs
6c81960 PG: fix typo in PgPriorSet constructor
5b57fb6 tools: fix compile
9a0f55d Get rid of silly unused parameter
8e141f4 monclient: reopen session on monmap change
613e906 monclient: use cur_con throughout
691794f msgr: send_keepalive to a Connection
7564035 test_librbd: remove unsigned/signed comparison
37f1b96 librbd: Update .gitignore after moving to gtest.
f74f603 get_*_compat_set: get ctor param ordering right
9a1e13c PG: assemble backlog directly rather than queueing on corrupt log
6228389 qa: add test_librbd workunit
e84996d Remove global ctors/dtors for CompatSet
923c60c librados: add conf_parse_env()
5cb7b37 librbd: move c++ tests to gtest
e2ec946 librbd: convert C tests to gtest
9b6f3e1 librbd: rev LIBRBD_VER_EXTRA for rbd_flush() addition
b90be90 librbd: implement rbd buffered write window
c9159a0 client: fix odd crash on rename
6a63223 rbd: show progress
2b0fab1 mon: stray PGInfo is not an error
8cb3754 osd: fix leak of osd_lock on pg lookup vs pool deletion race
79ee90b store_test: fix warning
405abf5 PG: generate backlog when confronted with corrupt log
92fa2ff man: Generate manpages from doc/man.
60aea05 doc: Convert manpages to doc/man/.
80f5460 doc: Hide TODO note in rbd.8
3f199be doc: Make rbd.8 "pool-name", like the old man page.
c25b955 doc: Remove duplicate paragraph from rbd.8
829ebaa ReplicatedPG: Fix src hobject_t construction in clone_range call
b37b61e workunit: use sudo when first reading /sys... too
efaf91b workunit: and delete root-owned file
d021b22 workunit: you need sudo to look at /sys/kernel/debug
9713666 rgw: rgw_admin, init gen_secret, gen_key
ba9cafd debian: no /var/run!
4281f02 PG.h: Initialize invalid_hash in Entry()
83c6dd0 debian: create var/run/ceph
a73d53f debian: radosgw: add dirs to package
be43ff5 ceph: avoid noise when there is no output
2eb9baa OSD: reset filestore_update_collections to false after do_convertfs
ff639c1 object.h: initalize hobject_t correctly
34822ad workunits: make file_layout.sh more robust
c16241f rpm: Include ceph.spec in release tarball.
0978178 rpm: Create the /etc/ceph directory.
b618528 rpm: Add newly-added files to %files.
b4bc9f6 rpm: Build without tcmalloc, by default.
3819beb ceph: -o - to stdout, not stderr
4c0125d mon: Clean up MonSession/Connection leak on MForwards
2f04acb osd: Clean up PG leak
11021e8 osd: clean up leak on old/unneeded peering messages
8c5cb59 osd: Sessions get weak pointers to Connections
228bd59 filestore: free fiemap used for testing fs capabilities
676dc9c WorkQueue: don't deliberately leak memory
1a44500 ceph: clean up command output
1986d98 client: some debugging
fc587d6 client: fix leaked Dir on rename
7077e67 client: clean up Inode ref counts slightly
be8c167 OSD: info.pgid gets removed from creating_pgs before _create_lock_new_pg
c332f97 rbd: --size is megabytes, not bytes
523283a osd: take ondisk_read_lock on src_oids
bf1963c object.h: make hobject key private, prevent objects where key == oid
c164904 rgw: make loop exit case explicit, removes warning
61708dc README: update a bit
fa14765 IndexManager: delete index during RemoveOnDelete
cd2716c OSD: use creating_pgs[pgid].history in get_or_create_pg for new pg
bce271e client: add inode on IMPORT
15cd43d client: factor out flush_cap_releases() helper
3444e48 mds: bracket LOCK|AUTH -> PREXLOCK transition with start/finish_locking
f9412b1 mds: _finish_xlock helper
8f7c72b mds: mutation: add start/finish locking hooks
c975bb8 mds: move Mutation + children out of MDCache.h
c46430f librbd: {remove,resize,snap_rollback}_with_progress
3fc9c2f mon: log when we get an error
c29b221 ceph.spec: spec file should be creating /var/run/ceph
22fa86c osd: nss build of OSD.cc needs CRYPTO_CXXFLAGS since
2d2746f rgw: fix arg parsing
22867fe rbd: fix command option parsing, honor --
4fa647b cephtool: add --concise option again
78a3646 rgw: prepare for supporting other meta headers
0f87638 osdmaptool: fix typo in argument
37c7067 doc: Note that mkcephfs can't do upgrades etc.
ecefa8e doc: mkcephfs ssh's directly as root@
71dc75b mkcephfs: Config $user is irrelevant when we want to run as root.
24939ce ceph tool: convert to new-style arg parsing
21dbec9 ceph_argparse: remove unused macros, functions
a00e9db cfuse: use new-style argument parsing stuff
64e5308 cmon: use new argument parsing stuff
b1da7ec cosd.cc: use new argument parsing functions
ba05e5e crushtool: use new argument parsing stuff
79ba942 rgw_admin: use new argument parsing stuff
d481797 rbd.cc: use new argument parsing stuff
316dd91 Add ceph_argparse_withlonglong
39538d7 monmaptool, osdmaptool: fix double-dash handling
1a1eab2 monmaptool: use new argument parsing stuff
a5fe5e2 cmds: remove unused macro
aca43cc TestSignalHandlers: use new argument parsing stuff
98edb3b osdmaptool: use new ceph_argparse stuff
1ccbfea ceph_argparse: add ceph_argparse_withint
b71f24a rados.cc: remove unused macro
7f45388 librados-config: remove unused old-style argparse
290da11 cauthtool: convert to new-style arg parsing
bb167e5 gceph tool: convert to new-style arg parsing
77153d9 rgw: set perm_mask for swift operations
988ff0f rgw: fix update_container_stats()
1a52cbd doc: Explicitly say ceph.conf host= must not include domain name.
47b09e2 mkcephfs: cosd and cmon setup must happen as root.
28539cc doc: Document mkcephfs-style installation.
fd7a422 man: mkcephfs: Typo.
703631e FileStore: close correct fd in version_stamp methods
3fa2103 FileStore: check write_op_seq return code during sync_entry
479e9ca ReplicatedPG: use the client_messenger for OSD Op replies
933e794 os/lfnindex: silence compiler warnings
abdaf98 client: only flush imported cap if it is now auth
bd4a247 Makefile: flock.h!
2a10fba cosd: Do filestore conversion after common_init_finish
78d13e4 rgw: fix include
c856a40 LFNIndex: Fix lfn parsing for hobjects with keys
b1b1808 rgw: rename source file
50d667e rgw: some var names cleanup
c16f260 LFNIndex: include index_version in the lfn attribute name
0f648c6 rgw: fix parameter passing to swift user creation
8be7f04 PG: Also fix the key when fixing an incomplete log event
88d73ee LFNIndex: Add support generating keyed hobject_t filenames
3b8614a FileStore,LFNIndex: Bump filestore version
9956e52 OSD: fix hobject_t construction
bdb3abe ReplicatedPG: Update hobject_t construction
613f111 store_test: fix hobject_t construction
a04b15c object.h: Update hobject_t to include object locator key
ba7ab2f rgw: rename openstack to swift
969c67a rgw: s/OPENSTACK/SWIFT/g
8b9ca2a rados tool: fix rados df formatting
b30e157 rgw: catch buffer::error exceptions thrown at decode
22cc333 mds: flock: remove auto-insertion of waiting locks.
327d0dd rgw: user info dumps json/xml
62f3c46 doc: Deb install should work now.
39b0354 doc: Write about deb installation.
6506d43 rgw: log of nonexsistent bucket config option
2641eb3 qa: test false
d6df086 mds: flock: tidy up comments
1d5cf73 flock: move implementation into a separate c++ file
e8b12d8 OSD: Fix flipped error codes in do_convertfs
d0eed62 rgw: poll allocation thread
7f640a9 rgw: user removal delets user index last
2aad7c2 rgw: multipart meta object uses tmap
e09d4a9 doc: Architecture, placeholder in install, and first appendix.
0a14c75 doc: Make object store diagram fit in 1024 pix wide browser.
66ee58f doc: Move internals into a new section, /dev.
c8c205f objectcacher: write vs truncate races are ok
b2c762b mds: truncate sanity checks
4fa62d5 rgw: configurable thread pool size
bcf9cb7 cfuse: initialize Fh to NULL
886440d client: clean up _{create,release}_fh
b71f3bc mon: fix 'osd create ...' error paths
a8ab69a librbd: cosmetic changes to progress stuff
2255a9a Finishing moving src/doc/object_store.dot to doc/
2e63eac Add object store architecture overview picture
7293537 ceph tool: convert to new-style arg parsing
9ff3505 qa: add multiple_rsync.sh workunit
82776e1 osd: one more flush before collection_list
f3325e6 mds flock: make get_overlapping_locks and share_space handle 0 lengths
f1cae57 osd: flush previous operations to fs before collection list + destroy
d519789 osd: whitespace
5bcea24 architecture.rst: describe debug logs, cephcontext
600bc8f MOSDSubOpReply/MSDSubOp: No need to update encoding version.
bcef985 FlatIndex: lfn_get needs to set *exist for short filenames
00e0b77 OSD: Fix encoding versions affected by hobject switch
9a26100 librbd: improve copy_with_progress
d08c784 Makefile: os/CollectionIndex.h
47a8063 assert: work around libatomic_ops vs assert in a less lame way
5b7f978 filestore: reorder includes
cf862c6 assert: use our assert
5ae3e13 crypto: reinclude our assert to clobber system one
3714862 global_init: make startup line consistent, less ugly
961260d Makefile: add os/*Index.h to dist tarball
4dce9fe doc/architecture: describe lib arch, config arch
6180c2c osd: fix osd reply message
5b70958 cosd,OSD: Improve filestore upgrade path
be2187c ObjectStore: Support older format on journal replay
f9b8537 librados: don't hide error in case of failed pool ctx creation
7a8ab74 client: plug leak of inode refs on seekdir(0)
6247df6 client: fix iterator adjustment in readdir assimilation
ed7ebf3 client: drop mostly-useless relink()
cc1cb8d doc: Hide empty and broken "module index" page.
df0f32b doc: Disable static file copying, we don't use it.
3144fd7 doc: Flesh out librados API example, to show doxygen & sphinx integration.
df38a70 JournalingObjectStore: journal_replay committed_seq fix
c85c2f7 doc: Adjust how table of contents is presented.
ae55253 client: additional sanity checks on link/unlink
8b8e47b client: simplify Inode operator<<
3d58d00 client: fix readder result merge
8d4c7e8 client: relink_inode -> relink
7017804 client: add some asserts
afd5236 client: fix readder result merge
89fb93e os/hashindex: fix #include
0598967 osd/,os/,osdc/: Convert collection_list_handle_t to a struct
e6c91f6 fsconverter.cc: Added fsconverter
279e163 FileStore: On mount, scan collections for unstable state
42742cc FileStore: Added update_version_stamp
341fb20 FileStore: Add filestore version stamp
e23e192 osd_types.h: Fix support for old object_info_t
d59f34a FileStore: Integrates HashIndex/IndexManager into FileStore
eb22b8d os/FlatIndex: FlatIndex encapsulates previous FileStore behavior
d0744cd FileStore: CollectionIndex, HashIndex, IndexManager
5492cbd ReplicatedPG: find_object_context now takes an hobject_t
5e927eb osd/: fix hobject_t construction
a09c491 dupstore: s/sobject_t/hobject_t
8fed10e src/messages/: s/sobject_t/hobject_t
f76baf1 src/osd/: s/sobject_t/hobject_t/g
1f591c2 src/os/: s/sobject_t/hobject_t/g
45d8296 object.h: hobject_t definition
de1f424 ceph/src/test/store_test.cc: added store_test.cc
71123b2 ObjectStore.h: const cleanup in transaction method params
1fe54bf FileStore.cc: Fix error in collection_rename
30856dc JournalingObjectStore: journal_replay committed_seq fix
afede55 Integrate Doxygen into Sphinx docs.
f1d8964 First draft of the documentation overhaul.
68f57f9 test: make escaping unitest happy
f2d19a0 json escaping fix
a2b0857 radosgw_admin, rados tool: don't use camel casing for json output
19f09c0 fix json escaping
cb89d00 testlibrbdpp: test copy_with_progress
9512796 librbd: add copy_with_progress API
8293dfa pg: warn about inconsistent object_info/on-disk size
281dae6 osd_types: add standard header so spacing is correct
e61fc66 pg: remove useless line
b140ff2 client: debug link/unlink and dn_set parent relationship
853658e heartbeatmap: fix reset_timeout with mixed-used threads
f8296ef rados tool: df dumps formatted data
c4219a1 rgw: log show dumps some information about bucket owner
8cb25ca bandaid for gitbuider
698df7e osd: remove dead lookup_lock_pg()
9d37c92 osd: set suicide timeouts on some workqueues
66b6289 mon: health not ok when up < in osds
502cf0b filestore: add suicide grace to workqueue
5fde401 heartbeatmap: add suicide grace
8d64fee testlibrbdpp: test librbd::Image::copy
68d1ba8 rgw: don't check for time skew when Expires was set
1bb0e3c client: simplify Client::remove_cap() args
b9c824c client: clean up Client::remove_session_caps() args
16a5761 client: don't falsely populate mds_sessions on bad MClientSession msg
04153ab testlibrbd: remove useless sizeofs
3dcb04b testlibrbd: fix assert side effect
66f1d41 FileJournal: Also classify kernel major version 3 as safe with disk-cache on
6c27367 osd: decode pg_t in old PG::Info
5d81c4f osd: requrie PGID64 of mons, other osds
d996ce2 mds: require PGID64 of mons
efd43bb mon: require PGID64 of osds and other mons
f093a2e pgmap: decode old pg_t
92b524e mdsmap: int64_t pool ids
6e58bc9 osd: add 64-bit pools to ObjectLocator
d1ce410 osdmap: encode/decode old + new version
eae1922 osd: decode old pg_stat_t
fbeafdf osd: make MOSDOp[Reply] encoding backwards compatible
7cedf7b osd: add PGID64 feature bit
468e28e osd: int pool -> int64_t pool
877aa92 osd: redo pg_t encoding with 64-bit pool id
d8f1f1d osd: fix pg_pool_t::get_pg_num return types
0b00350 ceph_context: whitespace
2f039ee (tag: v0.34) v0.34
44cb5ee rgw: use formatter->dump_string() instead of dump_format()
0e8bd0d rgw: get bucket info only if bucket name is not empty
fa757b7 Makefile.am: install coverage files for libtool outputs as well
67cc408 librados: watch request should wait for safe response
3a4d193 objectcacher: only want for commit
85496ff mds: fix shadow
09b08c5 fix utime.h #include recursion
528703b crush: comment fall-thru
75e53e9 mds: remove unused Mutation in do_rmdir_rollback()
b826749 workunits: make file_layout test setting only one parameter
4dba8bc cephfs: use strtol instead of atoi; handle 0 properly
df8f3cb cephfs: fix the stripe_count documentation.
d066cc8 mds: server: should apply new layout settings on top of old layout
65b3050 mds: allow setting all options on a file layout.
0506386 objectcacher: remove uncommitted xlist<>; fix broken purge() cleanup
a439e15 rgw: remove some compilation warnings
1e929ce rgw: don't override ret value in do_read_permisions
b7b5f2e rgw: return correct bucket missing error when needed
e478e92 rgw: fix 500 error on bucket creation
9538e87 rgw: fix clitest
5fb216e MonClient: fix possible null dereference
2488e44 mds/Server.c: fix memory leak in err path
44c68b1 rgw: don't check for zero content when creating a bucket
94fefce rgw: rgw_admin bucket stats dumps owner
6dce3b1 client: drop useless insert_trace timestamp argument
3ef32bc client: be careful about replacing dentries during readdir assimilation
0b1ad60 rgw: add radosgw_admin bucket stats
2a4cf8f client: factor update_dentry_lease() out of insert_dentry_inode()
53b3e14 librados: fix memory leak in error path
94af6a4 test/confutils.cc: fix resource leak
f2381f9 client: carry inode reference across calls to _flush
2ba01bb rgw: fix prepare_get_obj when ENOENT
ebae5a7 rbd: fix shared_ptr usage
57fd56c do_kernel_showmapped: fix resource leak
d69aa59 client: fix readdir + cap recovation/reissue race
a1afa6d rados_sync: fix resource leak on err
ad1b2b0 CephBroker.cc: fix allocation/deallocation mismatch
2e1f2c1 test_rados_tool.sh: test export with --workers
6fd4f3a rados_sync: make number of worker threads configurable
76718b0 rgw: clear warning
e9b739f journaler: fix waiting_for_zero clearing, again
23d94a4 Revert "pipe.c: #define GNU_SOURCE"
6c6fa6d client: only link directories into hierarchy once
eaaefec mon: fix store_state
ba44cde journaler: fix waiting_for_zero clearing
2144c7a add missing include, required for certain environments
adf1efe rgw: fix multipart upload
1a7eac4 parallelize rados export and import
b76e054 WorkQueue: don't be chatty about finishing workers
b20f362 test_rados_tool.sh: fix xattr test
3269476 librados: fix IoCtx copy constructor
d81d458 rados_sync:don't need to declare CHANGED_XATTRS 2x
31bf064 Some fixes to double-dash support, fix warning
301ae6c rgw: if pool is empty recreate
eecf4d6 ceph_argparse: handle double dashes consistently
18ec565 injectargs: binary flags only consume 1 token
42a65b8 config: print warning on injectargs parse fail
084fe47 injectargs test: test foo=true
ddc5674 mon: allow wildcards for mon cap command matching
3432729 common/config: fix get_val for booleans
ae9ba22 pipe.c: #define GNU_SOURCE
9c498e0 qa: add unit tests for mon cap 'allow command ...' stanzas
6c3d810 mon: whitelist individual commands in mon cap string
ea0f2f3 mon: adjust max_devices when adding to crush map
58f98e7 crush: refuse to add item >= max_devices
dc2be1d mon: 'osd gstcrushmap' or 'osd crush set' both work
a4f32ba mon: fix arg count checks
d896d40 mon: 'osd crush reweight <name> <weight>'
def8382 mon: 'osd crush rm <name>'
db8ad46 mon: 'osd crush add <id> <name> <weight> [<loc1=foo> [<loc2=bar> ...]]'
051c4a3 mon: return error message string when no other output string specified
29cf733 common/config: honor --
6d29239 mon: remove dead 'setmap' code
deb25e0 mon: make auto-marking of booting osds 'in' optional
09f4c46 client: kill dentry_of() macro
7ef44b7 osd_types: fix category encoding in object_info_t
d5a9301 qa: define _GNU_SOURCE for qa helpers; add btrfs dir makefile
ba4551d librados: whitespace
3205441 librbd: reimplement copy using read_iterate
f19e613 rbd: fix check_io for snap
76e18e3 librbd: fix copy
39b6a9c qa: add rbd copy workunit
b03a184 mdcache: documentation for path_traverse
e898fe7 mdcache: Reduce the gratuitous references to onfail
a1433a1 mds: remove the unused MDS_TRAVERSE_FAIL flag.
4a17d71 mdcache: handle unreadable null dentries
a585c4d librbd: specify copy src image as image handle
3ce4144 Define _GNU_SOURCE in src/Makefile.am
4e9a0b6 pipe.c: #define GNU_SOURCE
3d85872 mds: open+pin stray dirfrags on startup
3f13425 Revert "mds: do not complain/assert about stray inode rstat/fragstat consistency"
b00b6f6 common/pipe: add function to do pipe2(O_CLOEXEC)
93c0565 PG: Move reset_last_warm_restart to Initial::exit
abe5cd2 common/pipe: add function to do pipe2(O_CLOEXEC)
cf3b7cf PG: Move reset_last_warm_restart to Initial::exit
3e91525 osd: flush writes prior to PGLS
c412da8 osd: remove dead code, whitespace
3a623bb librados: prefix api test pools
2fb3af4 librados: statically link gtest into librados unit tests
6decfa7 Makefile: allow gtest to be linked in statically
239f61e .gitignore: scratchtool
b02a347 Makefile: rule to upload + submit coverity job
aa3a8dd addr_parsing: fix warning
7d2f4a5 escape: fix snprintf args
952009c .gitignore: scratchtool
febe232 librados: fix shadow
244b6ee mds: fix shadow
56b1484 mds: fix shadow
6de1e53 mds: fix shadow
6b8ccb2 mds: fix shadow
e6467ef mds: fix shadow
b3821cc moncaps: fix shadow
14096a8 monclient: fix shadow
0d73ad8 monclient: fix shadow
1cbc242 msg: fix shadow
87a5026 osd: fix shadow
3283e8e osdcaps: fix shadow
b5a2ad0 escape: use snprintf
41745a9 secret: use strncpy, snprintf
5fb99fa addr_parsing: use strncpy
05c38fa addr_parsing: avoid strcpy
ef80b0a mount: fix path leak
2ebf141 mount: avoid unguarded strcpy
40fcd2e test_ioctls: reduce stack use
8b0d065 formatter: less big buffer for dump format string
3ff9068 mount: avoid big stack item
b920fac mount: avoid big stack item
c615685 testlibrbd: add missing va_end()
29c1ce5 rgw: remove redundant line
d3d767a mds: do not complain/assert about stray inode rstat/fragstat consistency
f6c07ef paxos: fix store_state
0935673 monclient: be less chatty about stray messages
64ce303 debian: librbd headers require librados headers
c75f0fc scratchtool: not a test suite
ab40c3c Revert "Remove old rados tests"
331d0aa osd: fix compilation
c095f74 rgw: fix bucket removal
6fca624 osd: call incorrect osdmap addrs errors
3794bd9 rgw: fail operation when trying to clone to the same shadow
e5cf2a4 mds: xlocker_caps are supplemental to caps
a35ac29 mds: only client hold xlock in xlockdone can change lock state
1dfdc73 rgw: fix prepare_atomic_for_write
ac248f1 mds: update truncate_pending on O_TRUNC; pass old_size on O_TRUNC open
2d0bd2d rados-api: fix #include order
513f612 cconf: fix clitest
7204449 cconf: --filter-key and --filter-key-value
f5b012c mds: fix LOCK_LOCK_XLOCK lock state name/string
f3396bd rgw: add missing cache locking
0b216bd rgw: was missing return value
32db9dc rgw: some more race fixes
e759021 test/rados-api/misc.cc: update tests after API change
f0ab8b06 monitorstore: drop unused sync value
dfab2c9 paxos: use MonitorStore::put_bl_sn_map() to commit batches of values
bec7390 monitorstore: implement put_bl_sn_map
ed580c5 mon: whitespace
635bbe8 atomic_t: update spinlock implementation.
fb7831c rgw: reread obj meta on racing write operation
4a1a64e rgw: bucket removal through intent log, fixes
f336fef rgw: fix some issue, basic stuff works
40752e9 rgw: create preallocated pools
8db7daf ReplicatedPG: Don't crash when a clone is missing
9f5d163 file_layout.sh: add test for setting a new data pool
665fd82 Remove old rados tests
eb8925a rgw: fix locator for shadow objects
1546bea mds: share max_size on any client_range adjustment
87e20c9 rgw: add missing files
b8b8f9d add WatchNotifyTimeoutTestPP
0c0071a rgw: fix a double free in GetObj
93b484b rgw: prepare for bulk pool creation
3ebe6b7 rgw: store bucket info
d454c58 test/rados-api/misc.cc: test CloneRange
17ee7f8 test/rados-api/misc.cc: test CloneRangePP
9c8722a test/rados-api/misc.cc: test AioOperatePP
8ce6544 osd: fix _activate_committed() crash
0ae230b test/rados-api/misc.cc: test Operate2PP
2903de0 Operate1PP: test CEPH_OSD_CMPXATTR_OP_EQ
6d90796 compatset: dump json
f5f2cd1 librados: remove unused operate param
d21c918 uninline a bunch of buffer.h stuff
f6ff0f1 uninline osd types
df99cd9 mds: add debug_mds_locker
ff9537e rgw: prepare for bucket/pool decoupling
a724bc4 librbd: rbd_list: return buffer size, not element count
9274691 mon: add/remove data_pg_pools from mdsmap
a88c179 PG: last_warm_restart must be set to the current epoch
47d75af mds: explain weird encoding
a21a5ef mds: whitespace
b4fb82b mds: drop unused projected dirfrag_t arg for EMetaBlob::add_primary_dentry
93b7167 mds: drop unused snapbl arg
d011c62 mds: avoid explicit passing of projected_xattrs
a9998c8 mds: avoid passing snapbl around explicitly
213ce6a test/rados-api/misc.cc: test Operate1PP
08fb8a6 mds: use snaprealm projection for MDCache::snaprealm_create()
6ee52e7 mds: simplify sr_t journaling
d60d531 mds: journal inode on mksnap
79db9fc mds: handle O_TRUNC when size is already 0
45740cf client: send O_TRUNC open requests to MDS
266110d client: move Inode operator<<
f326064 Test rados_exec, C and C++ version
3c3089f test/rados-api/misc.cc: test tmap_update
d9df58e rgw: fix virtual bucket name handling
0ed2faf rbd: remove dup 'rm' command from man page
d314506 cfuse: take out accidental bad channel add
184c2f5 qa/workunits/rados/test.sh:explicitly invoke tests
930bd32 Add qa/workunits/rados/test.sh
2df3f2c cfuse: make use of fuse invalidate callback optional (and off by default)
1179a31 formatter: remove bad asserts
afdb1f3 rgw: list objects shows time in GMT, thread safety fix
a311715 src/perfglue/heap_profiler.cc: fix snprintf
14de6d2 client: compile with older libfuse2
cb1f050 osd_types: fix merge
340b434 (tag: v0.33) v0.33
89eeb34 osd: pg_stat_t: throw exception on unknown encoding
ce00564 qa: test rename into snapped dir
e98669e mds: mark newly created snaprealms as open
2dd5510 test/rados-api/misc.cc: test Rados::version
d45b0f6 test/rados-api/list.cc: C++ version
b8b14c9 test/rados-api/snapshots.cc: C++ version
65626ed test/rados-api/watch_notify.cc: implement C++ ver
9ca1527 test/rados-api/stat.cc: implement C++ tests
d8da2ce rados/librados.h: use rados_snap_t consistently
80a094d test/rados-api/aio.cc: test RoundTripWriteFull
9df4605 test/rados-api/aio.cc: implement FlushPP
4d9dab0 test/rados-api/aio.cc: test ReturnValuePP
8cc794b test/rados-api/aio.cc: test IsSafePP
3b81656 test/rados-api/aio.cc: add IsCompletePP
f4d7382 test/rados-api/aio.cc: Add RoundTripAppendPP
cc25266 test/rados-api/aio.cc: add RoundTripPP
8072bdc Fix bug in turning off logging. Remove log_dir.
77c780d osd: fix heartbeats after bad markdown
44d3193 monmaptool: don't inc bool
915aa41 crushtool: don't inc bool
8df56b5 mds: break #include recursion
3e66b80 rgw: some encoding fixes
3b9fbcf rgw: handle zero and invalid max_keys
b10b3a3 rgw: create CommonPrefixes section for each prefix
19ec8d0 rgw: adjust returned error when got invalid auth request
80dfc98 obsync: add SRC_SECURE, DST_SECURE
e2d4462 LibRadosAio: WaitForSafePP
ffab58f test/rados-api/aio.cc: SimpleWritePP
1d6224e rados_setxattr: return 0 on success
431e98a rados_write_full: remove offset parameter
361997a librbd: output copy progress
8c5e7dc mds: avoid issue_caps on snapped inodes
dc30583 test/rados-api/snapshots.cc:RollbackPP
8f2933f test/rados-api/snapshots.cc:SnapGetNamePP
2a766bc test/rados-api/snapshots.cc:SelfManagedRollbackTest
19ed6b6 SelfManagedSnapTest: test more
54810b6 test/rados-api/snapshots.cc: SelfManagedSnapTestPP
db36816 test/rados-api/io.cc: test XattrListPP
020f063 test/rados-api/io.cc: test RmXattrPP
4781fa8 test/rados-api/io.cc: test XattrsRoundTripPP
de681da client: use localized ldout macro
fc5923a mon: dump mdsmap in json
529c4d5 test/rados-api/io.cc: add RemoveTestPP
ceb8cd1 test/rados-api/io.cc: AppendRoundTripPP,TruncPP
a189574 test/rados-api/io.cc: test WriteFullRoundTripPP
fef049e test/rados-api/io.cc: test RoundTripPP, etc.
05e7157 test/rados-api/io.cc: test SimpleWritePP
a1d8013 test/rados-api/test.cc: add create_one_pool_pp,etc
2c1ea4a librados: add IoCtx::close
009968e mds: don't wait for lock 'flushing' flag on replicas
bbd4a26 librbd: deduplicate sparse read interpretation
4bf6f6a librbd: make read_iterate mirror AioCompletion::complete
30c97d5 testlibrbd: remove useless print statements
a631c46 testlibrbd: NUL-terminate orig_data
ac0c4d8 testlibrbd(pp): accept standard command line arguments
9d4f748 osd: don't request heartbeats from down peers
d745572 cfuse: properly invalidate page cache data via callback
5d40ed4 client: add callback for cache invalidate
2a0a5b5 client: use helper to invalidate/truncate cached file data
9e8f348 client: fix cached file data truncation
e643e4e fuse: enable atomic_o_trunc
49a89c9 fuse: allow big writes
61a712d Add test/rados-api/misc.cc
d172800 librados: implement/document tmap_{get,put}
78f0f2d test/rados-api/snapshots: add SelfManagedSnapTest
0e51231 librados:fix name of rados_ioctx_snap_set_read/wr
287b0a1 radosgw_admin: fix clitest
fb774ca mds: don't wait for lock 'flushing' flag on replicas
4a960e4 rgw: can specify time for intent log purging
8caef77 test/rados-api/snapshots.cc: test SnapGetName
3f9c0d0 test/rados-api/snapshots.cc: test Rollback
762e3e1 rgw: reduce intent log obj name time resolution
3dbf9d4 test/rados-api/snapshots.cc: test SnapRemove
75e6731 rgw: add 'temp remove' tool for rgw_admin
47ab2ba qa/fsstress: be verbose
c635c46 librados: document tmap_update
ba3ac0f librados: document rados_pool_list
e9d9201 rgw: update radosgw man page
32711fc rgw: remove original object in put_obj, instead of truncate
68bd54d librados: support op flags
07837c9 osd: don't request heartbeats from down peers
4260a58 test/rados-api/snapshots.cc: test SnapList
3841e06 Add test/rados-api/watch_notify.cc
5b6b569 test/rados-api: move TestAlarm into test.h
d61f7ae test/rados-api/stat.cc: test ClusterStat,PoolStat
3e4a9f2 Makefile: add rule for building coverity build bundle
b2a3623 objecter: fix compile error
2a5467d osd: don't try to remove head if it doesn't exist
b1539a2 objecter: allow setting of op flags for previously added op
45e7ac7 osd: add CEPH_OSD_OP_FLAG_FAILOK
5107813 Add test/rados-api/stat.cc: test rados_stat
7dcae35 auth: use set<> instead of map<,bool>
446f89e librbd: deduplicate sparse read interpretation
f7ec378 librbd: make read_iterate mirror AioCompletion::complete
d48bebe librados, rgw: integrate stats categories
a3219c9 test/rados-api/pool.cc:test PoolCreateWithCrushRule
fd0d26d test/rados-api/pool.cc: test rados_ioctx_get_id
5a06f0c test/rados-api/pool.cc: add AuidTest1, AuidTest2
54b9441 test/rados-api/pool.cc: test PoolLookup,PoolDelete
9e8a8b2 .gitignore: add test_rados_api_*
9935e9f create_one_pool: improve error reporting
b9348c2 Add test/rados-api/pool.cc
0ad5500 Add test_rados_api_list
bb3114c rados/librados.h: remove rados_aio_get_obj_ver
571608d test/rados-api/aio.cc: add RoundTripWriteFull
d0d7691 test/rados-api/aio.cc: fix shadowed class variable
3090322 test/rados-api/aio.cc: test Flush
c2f7adf test/rados-api/aio.cc: add ReturnValue
a507712 test/rados-api/aio.cc: test IsSafe
e9b433e test/rados-api/aio.cc: test IsComplete
b459070 test/rados-api/aio.cc: use rados_aio_release
ed19946 test/rados-api/aio.cc: add RoundTripAppend
03382be test/rados-api/aio: add WaitForSafe, RoundTrip
271ed93 Add test/rados-api/aio: SimpleWrite
291c3c2 test/rados-api/io.cc: add RmXattr, XattrIter
0a29e63 test/rados-api/io: add XattrsRoundTrip
039c5fc test/rados-api/io: add RemoveTest
5bee453 test/rados-api/io: add TruncTest
3509398 test/rados-api/io: add AppendRoundTrip
6349a13 test/rados-api/io: add WriteFullRoundTrip
87f2960 test/rados-api/io: add roundtrip, overlappingwrite
e442a2c Makefile.am: build gtest in debug builds
41f484d objecter: allow requesting specific maps in maybe_request_map
5cb2bd2 testlibrbd: remove useless print statements
52b90b7 testlibrbd: NUL-terminate orig_data
60b4588 testlibrbd(pp): accept standard command line arguments
5e9bdf8 librados: add missing method that was lost in merge
8942d2b rgw: add hour to intent log name for higher resolution
7cc208b rgw: log shadow objects removal in intent log
66050ad Add test-rados directory, I/O test
98ee76b pgmon: use pool.get_last_change whenever creating new PGs
5b260cd rgw: return ENOENT after get_obj() in some cases
84462a1 osdmon: maintain ceph_pg_pool::last_change correctly
fca7908 pgmon: call check_osd_map via a new on_active implementation
43a5cd7 pgmon: fix comments to output the right function
6d0192c debian: explicitly bind library users to matching version
258d743 rgw: ignore hidden objects for bucket deletion, fix namespace
68cbbf4 osd: missing ! in ifs on bad map after osd boot
857f2ad mds: fix Migrator::audit() for IMPORT_ABORTING
8d42c38 rgw: clone_obj can set mtime
265d29a librados: can set mtime for operate (mutate)
45ca940 objecter: halt compound operation only if result < 0
ad31db9 Remove unused dyn_sprintf
6ad7f46 config.cc: clean up includes
822d28b mds: chain rename subtree projections
7a3e750 client: whitespace cleanup
3d25879 client: send renames to the correct node
618b074 rgw: multiple fixes
9f608c7 config: more thread-safety stuff
d99333d injectargs: forbid unsafe string modifications
c409e70 test/daemon_config: add injectargs test
2d4f549 Add daemon_config, libceph_config, etc.
7be4b6d pgmon: create ALL pgs in new pools with correct creation epoch
6dcf379 add config unit test
a33b837 librados.h: fix out-of-date comment
fa2a406 debian: don't explicitly list deps; let debian figure it out
92e976a config: more cleanup
66c3d8f libceph.h: fix C compilation
2c9949e config: add proper locking, fix comments
f53cc37 rgw: mark ops as atomic
d305a5e osd: remove unnecessary history creation.
8bb4c0a osdmon: remove default values for prepare_new_pool
3b459ef rgw: conditional clone, depends on src_cmpxattr result
454d7de librados: modify src_cmpxattr interface
5bb07df pgmon: create PGs with a creation epoch that matches the pool's
84ee468 librados: get it compiled
476f5c6 rgw: prepare for conditional clone_range
128e948 rgw: adapt some more rados calls to the new atomic structure
a2bcbf2 librados: restructure ObjectOperation
bcf25bd rgw: a few more operations are using atomic infrastructure
b03930f rgw: atomic get, various fixes
10dda20 rgw: fix decoding
70cdd5d rgw: atomic get, basic flow for severl rados ops
71a6481 librados, objecter: add operations to support rgw atomic get
8d63e14 rgw: introduce context to specific access calls
76880e3 In RGW, use the common/Formatter
0bc7e28 filestore: remove unused var
22e2524 osd: Fix last_epoch_started initialization on new PGs
9baa009 osd: rename variables in project_pg_history.
0413e2a Formatter: add open_object_section_in_ns, etc.
041a22c test/formatter: test stream clearing
434be6c Formatter: must use str("") to clear ostreams
e2cbfb6 More changes towards using common/Formatter in rgw
72b0851 osd: expect heartbeats from anyone peering depends on
cd01d14 osd: restructure heartbeats
2f0d3b1 osd: refactor PG creation slightly.
a8f3602 osd: fix comment for project_pg_history
b4b61d6 osd: Initialize new PGs with correct info.history.same_primary_since
92f0237 messages: add print functions to the MOSDPG messages
cf88ce5 messages: change = to result = for less confusion!
9bdc43f osdcaps: allow the default UID to have full caps on its own pools.
309d157 osdmon: always send in the CRUSH rule.
7078c34 mds: add hooks to test multimds link/unlink failures
1c1d92e qa: move fsx.sh
ab537f1 Revert "qa: Remove fsx workunit."
6a920bb os/FileStore: print out BTRFS_IOC_SNAP_CREATE errs
efc1566 osd: add CATEGORIES incompat feature
a71adf1 librados: add create in specific category to c++ api
fdd9332 osd: allow 'category' to be set on object creation
ee4460d osd: segregate stats into categories
8981a23 rgw_rest: don't leak formatters
cec04ca XmlFormatter: add DTD option
ede86e7 Formatter.cc: add get_len method
24a7b5f RGWFormatter: get rid of one flush variant
dbbce93 rgw_formats: introduce dump_unsigned, dump_int,etc
7b23944 rgw: rename dump_value_str to dump_format
9dbeeaa rados tool: fix cmdline parsing for --block-size
77fed7b Formatter: add XMLFormatter::reset
8b5cda5 Formatter.cc: whitespace fix
8c4f729 rgw:rename open_obj_section to open_object_section
70f585c Add XMLFormatter and unit test
8003b77 Formatter: remove protected data, methods
97b6822 osd, objecter, librados: add SRC_CMPXATTR operation
acc8600 osd: change src_oid encoding -- FLAG DAY
23a46f2 testradospp: test cmpxattr (eq, str)
4fbdb99 osd: fix cmpxattr string construction
7401fea objecter, osd: fix up cmpxattr
83ad583 systest: add watch/notify tests with pool and object deletion
602365e systest: st_rados_create_pool: optionally wait before creating the pool
ee44761 systest: add object deletion to mirror object creation
cbaddc5 systest: add st_rados_notify building block for watch/notify tests
aa00e0d systest: add st_rados_watch building block for watch/notify tests
b8d7c22 systest: make pool configurable
e6ff13d systest: move pool deletion into its own file
73c8e81 librados: fix notify deadlock
50d7684 osd: document remove_watchers race avoidance
945cdd4 pg: remove do_complete_notify
8a8d9bf osd: put_object_context: tolerate pgs being deleted
3a6d8eb osd, pg: clean up watchers on pg deletion and shutdown
37dc931 mds: detach replay thread
43daec4 thread: detach()
6f39bb9 common/Formatter: add unit test
09a3576 mdsmon: send commands to all MDSes, not just the in&up ones.
3c77a45 cephtool: accept semicolons in commandline args
68a6291 testradospp: add version tests
0df20a0 librados: add assert_src_version
3a41aa5 objecter: add assert_src_version
a6d697e osd: add ASSERT_SRC_VERSION operation
dcaca3e3 osd: set reply_version for read operations
c06260f rgw: quiet down some log messages
e5dfa3d escape_json_attr: don't escape single quotes
1d3acd5 Formatter.cc: use common/escape.h
95d49de Makefile.am: always #define __STDC_FORMAT_MACROS
0dc235a mds: request attempt comes from fwd count, not retry flag
15c344c mds: fix create_subtree_map for new dirs
534afab vstart: static mapping of names to ranks
c08d08b (tag: v0.32) v0.32
360ab7f rgw: don't silently ignore bad user/group when setting acl
94239ec objecter: rename POOL_DISAPPEARED to POOL_DNE
9447ce6 objecter: check for updated osdmap when requesting a non-existent pool
6833f2f objecter: fix error check - error return code is negative
178c463 monclient: add method to retrieve the latest version of a map
9efd3a5 mon: add GetVersion message
5ba1dfe Makefile: include HeartbeatMap.h in dist
29158d7 mds: fix validation of (slave) request attempts
6ad7dfb mds: identify slave requests with reqid + attempt number
97c3bcb scatterlock: fix flag assignments.
7b574ff osdmap: in json dump, dump out/in, up/down status
c775c03 rgw: get current utc epoch differently
aba88f5 rgw: init correctly req_state->{bucket, object}
a4e4c08 rgw: fix total time reporting in rgw_admin
5c194f5 rgw: tweak content-md5 handling
86c7260 heartbeatmap: fix/clarify the commenting
925cb46 scatterlock: compress boolean flags into a set of state flags
acca584 scatterlock: rename scatter_flags -> state_flags
5219402 Makefile: remove from libglobal
90ce2f7 Add -ltr to libcommon
8524ed5 Makefile: -lrt for libglobal.la only
fadb5ae unittest_bufferlist: change include order
f82b629 mds: fix log trimming races
8fe50b8 mds: separate type for gratuitous debug ESubtreeMaps
61a5012 mon: 'ceph mon dump [--format=json]'
70dee89 heartbeatmap: unit test
3336665 heartbeatmap: we don't care about pthread_t
7815237 client: open session with all mds targets
a3ed402 Makefile: fix unittest_ceph_argparse build
c304c2c injectargs: complain about unparsed args
498dd53 injectargs: print out what is changing
0b66ed2 rgw: fix base64 check
ef509b3 rgw: check content md5 validity when doing auth
4a8d8f0 rgw: fix date checks
07e6061 rgw: fix authentication
dc4834b scatterlock: convert [un]scatter_wanted to a bitfield
579f2e9 mds: Handle unscatter_wanted in try_eval(lock, need_issue)
f5f6b12 mds: Split the CInode::scatter_wanted field in two
3d9621f heartbeatmap: fix mode
8e4a358 heartbeatmap: warn if previous deadline is missed
a981333 ceph_context: only wake up periodically if heartbeat_interval is set
6eb213d osd: no need to explicitly check health
9e8bb84 vstart: set heartbeat file
7265e5c ceph_context: check internal heartbeat in cct service thread
31d5cbb heartbeatmap: config options, method to touch a file if healthy
3dfe830 heartbeatmap: use atomic_t
e68e4f3 heartbeatmap: put in ceph namespace
058647f heartbeatmap: simplify api
7aad8f0 heartbeatmap: fix stupid race
f5db9af heartbeatmap: use a list<> instead of map<>
7c5f3bc workqueue: register and time out worker threads
d7b4588 workqueue: provide op timeout to workqueue constructor
bdfccb0 heartbeatmap: introduce heartbeat_map
cc82707 mds: mark ambig imports in ESubtreeMap during resolve
06ebba7 mds: pin inodes on LogSegment::truncating_inodes list
a20b15c mds: handle aborted slave rename while waiting for second prep
dac1dc8 mds: honor scatter_wanted while freezing
1bb12c7 mds: try_eval in many places
1531e88 mds: implement try_eval() on a single lock
3bf413d mds: better debugging for scatter_wanted flag
9c6ec61 mdsmon: Fix handling of follow-by-name MDSes.
c4a5380 vstart: use paired MDSes with a specified standby.
5c37057 PG: add an assert for negative entries in the scrub map
50c42bc osd: label ReplicatedPG::_scrub as virtual.
4b70d58 osd: turn down debug level on repop commit message
9d4f741 rgw: parse date from http header
29e0773 rgw: return required error when conent length missing on PUT
5089cf7 mds: make two passes on scatter_nudge
d22e48f mds: honor scatter_wanted flag in scatter_eval()
447d4f6 testrados_delete_pool_while_open: remove from make
77dd3b7 remove testrados_delete_pool_while_open
56f955b mds: fix projected rename adjustment
c7236d9 mds: clean out rename subtree cruft
208e8e3 mds: simplify subtree map after adjusting for rename
854ab3b mds: track projected rename effect on subtree map
7952bea mds: minor cap cleanups
699bbe1 mds: only create up renamed diri frag subtrees if they differ from parent
79b8374 client: reencode cap releases for each request
2458c89 admin_socket: implement schema request
28fa250 perf counters: add back inc type for collectd
68e4d68 client/Client.cc: remove superfluous check
c9fbef4 rgw: get object with range should return 206
6fab382 rgw: fix bad initialization
c08876a rgw: fix warning
03953df Makefile: sysconfdir for bash_completion install
35bebee rgw: return error on partial object put
857f18e rgw: modify print macro to log using default log api
dec6ef1 bash_completion: no more injectargs command
f82c254 Makefile: add bash_completion
440382f bash_completion: Add the bash_completion files to the Debian packages
0678e51 bash_completion: Add bash completion for ceph, rados, radosgw_admin and rbd
3e9a982 Add ObsyncException
b16fa97 rgw: return Bad Request on PUT requests with empty content length
be8b826 rgw: fix error code returned for bad digest
7a5e7ff admin socket: handle schema request
c9f4f90 sync_filesystem: er, fix #define
a7520e1 sync_files: #include _GNU_SOURCE for syncfs()
4a48e7a admin_socket: no sock for unprivileged daemons; rename default
74fdf70 osd: verify src range exists for CLONERANGE
a6d9d63 objecter: treat RESETSESSION like a reset
5f43751 admin_socket: change request 0 to get version
105a991 Add more debugging for pthread_create failures
6dd5f18 use glibc d_type macros, helpers
2bce766 perfcounters: no more stat/ dir, yay!
d32e5d3 mds: be careful about calls to try_subtree_merge
1f077a0 mds: fix subtree_map simplify, again
0c09377 mds: journal EImportFinish after updating subtree/import state
0e6b0dc mds: journal copious ESubtreeMaps if mds_debug_subtrees
f8c7bfa mds: fix stl iterator misuse in create_subtree_map
0b7e9fb perfcounters: remove stray #includes
937976f admin_socket: fix EINTR check
b98d765 admin_socket: fix busy loop
da689c0 mds: kill useless MDLog::writing_subtree_map
4a40c1a mds: submit_entry last
c8490aa mon: simplify 'mon tell ...'
04e5295 mon: rip out injectargs command(s)
0586d4d don't include all the type headers in Client.h
8f360e6 client: uninline link/unlink helpers
757ee66 move some types
b27fa8a client: MetaRequest.cc
dc1dbdf add Inode.cc
fad4a63 client: InodeCap -> Cap
59098fd client: move (most) types into separate headers
3945370 osd: fix OSDOp printer for CLONERANGE
ea5d016 mon: 'dump [--format=json]'
d3887b8 auth: fix compile error when using nss libs
94eb404 mds: remove broken delay of cap releases from a replica.
c81a8ea Revert "mds: Only change in->replica_caps_wanted when actually messaging"
440de00 mds: reorder timing checks in request_inode_file_caps
a2c761e mds: Only change in->replica_caps_wanted when actually messaging
9203184 mds: fix keep caps test.
18314fa mds: rename cache expire variables for clarity
9e4e660 update documentation on cache expires during exports
3c7318e mon: 'pg dump [--format=json] [all|sum|pools|pgs|osds]'
13d68ef librados: async pool creation
f7f9a48 ceph: understand -- argument
ee20a8d mds: cleanup-let: use is_leased() for lease revocation checks
1f47914 mds: revoke client leases on replica dn lock
9f8ab9a mds: fix ambiguous check when journaling subtree map
11eecce client: fix stalls on racing revocations can cap migrations
02b2068 osdmaptool: fix clitest
3882240 formatter: escape quoted strings
5059eb2 mon: rewrite pgmap json dump using Formatter
b3f7a47 formatter: dump float, simplify pending_string stuff
d4cf312 osd: dump osdmap in json
d6bb571 common: add Formatter class
56283eb admin_socket srv:set F_CLOEXEC on listening socket
555714c admin_socket: fix uninitialized accept() param
c663d1d admin_socket.cc: Use older sizeof syntax
7abaf20 rgw: socket path includes full socket name
72fff26 perfcounters: don't output trailing commas in JSON
e138f23 Add line break after add_key() failure message.
8f5e664 mds: more CInode un-inlining
81ef3b5 mds: uninline a few things
0c6b2c8 test/perf_counters: more renaming
7cb1edd ceph_context: remove set_module_type
a2627f4 Client.cc: rename client_logger -> client_counters
1b47332 Rename ProfLogger to Perfcounters: part 2
1b0d9ff Journaler: weaken a few asserts to let it pass errors back up.
3d0c314 C_Gather: fix comment.
1212ceb Journaler: return errors from probing back to callers.
3bb6313 mds: handle EBLACKLISTED in MDCache::do_file_recover; assert on errors
387e46b Filer: return error codes from probing up to the calling layer.
1cf5211 Rename ProfLogger to PerfCounters
9b1ad7b re-enable proflogger test
ffd92d2 rgw: dump is_truncated when listing bucket
8d1193b test/admin_socket: test message 0
b2a3899 Move ProfLogger socket code into admin_socket
73d66f6 mds: cinode: Add a little debugging and fix an output
b2b44d4 mds: Drop locks and auth pins when waiting for freezingtree
022c526 uclient: correctly initialize mseq in flush_snaps.
4adfd46 mds: mark rmdir with slaves as a master in journal
573e972 mds: fix rmdir slave commit, rollback
8692ed7 mds: simplify journaled subtree_map
a3e4731 mds: add mds_debug_subtrees option
4fe09c1 mds: set LogEvent _start_off, drop unused _end_off
a25374e mds: witness rmdir when subtrees are on other hosts
820b3f3 rgw: setup as external server is configurable
9eed12f rgw: clearer logging context
41f7acf config.cc: fix comments
019955a PGMonitor.cc: add force_create_pg command to monitor
43575c7 rgw: fix concurrency issue
bd89bd9 ProfLogger: add request codes
77fc561 ProfLogger: use double quotes, add commas
62e6f36 mds: clean up file flags to file mode translation
f412942 ProfLogger: enable by default for daemons
c3fa22f Put each ProfLogger's data into its own object
82faf3d client: check for invalid file mode
ff82b60 mds: check for invalid file mode
5e988b8 rgw: fix i386 compilation
a51b983 config: fix compilation in certain environments
626f0b1 mon: fix dump_json quoting
650f9f3 mds: fix O_APPEND file mode calculation
80c2064 ProfLogger: don't start threads until it's safe
3286048 vstart.sh: use out/proflog.$name
daeffbd proflogger: Fix compiler warnings
64d3314 proflogger: test multiple profloggers
51039da rgw: use thread pool for rgw work
48769e2 test/profloger: test fl_avg variables
6454ecc test/proflogger: test JSON formatting a bit
cbeedeb proflogger: Unlink our UNIX domain sockets on exit
59a8e65 mon: pg dump_json
431df83 rgw: radosgw_admin log show dumps parsable json
adafec4 test/proflogger.cc: read length of message first
f8b4aa3 ProfLogger: write out length of message first
325951d test/proflogger: Add TeardownSetup and SimpleTest
134a680 Add test/proflogger.cc, fix ProfLogger::init()
5517b8f Rework ProfLogger
6424149 osd: remove unused variables
d07c480 mon: remove unused variables
1dedbf6 mds: remove unused variables
7db65d5 tools: remove unused variables
442b5d5 clien: rados: bench: remove unused variables
73cf6b89 ProfLoggerBuilder: new API
09c8d12 ReplicatedPG: _rollback_to
c54aa7d testsnaps: use self managed snaps and other fixes
94c3763 Makefile: librados-config apparently depends on libcrypto++
35b60c6 gitignore: ignore Eclipse files/folders
c767b61 Introduce ProfLoggerBuilder
f71ab2a ProfLogger: don't return val from inc/set/etc.
77bcc06 Remove lingering references to g_conf
92df6e3 rgw: fix range dump
aef29ca mds: fix protocol versions
a7d791d rgw: multithreaded handling
d4ed22f recalc_op_target must give an error if pool gone
172dc20 Makefile: remove dup testrados_list_parallel_SOURCES
02abdca rgw: multiple fixes, prepare main loop for multithreading
4f08881 rgw: fix compilation for certain architectures
2955783 botol_tool: add --xattr argument for PUT
b4b3672 boto_tool: add --get-obj-xattr
5cb98c9 rgw_op: mime-encode ugly xattrs in PUT
ac07e76 rgw_common: remove unused variable
5f89399 mime encoding: encode control chars
91343a8 Add control character detection
5d606c2 rgw: fix log
0593001 rgw: cleanup, remove globals and static craft
8b1119f bloom filter: update to latest version
585239a filepath: remove asserts
56abfd8 honor CINIT_FLAG_NO_DEFAULT_CONFIG_FILE
d607be8 crushtool: don't parse any generic args
ba31462 rgw: configurable way to enable/disable cache
8a8c1e8 ReplicatedPG: project changes to clone_overlap
a9f815b CodingStyle: whitespace
bc6eb10 CodingStyle: final decisions?
357db1d ReplicatedPG: sub_op_push fix
143e2dd Don't build build tests unless requested
2de0156 rados parallel tests: prepend "test"
f4ea331 rados_list_parallel: add test of list-while-modify
2d757ac rgw: unwatch cache sync object before exiting
8e8bd67 testrados: fix
b7d12e5 systest_runnable: print line when joining runnables
a32bc89 Create rados_delete_pools_parallel test
585fab7 ReplicatedPG: data_subset may not contain data_needed
44ea232 encoding.h: need to pass by reference
5869591 ReplicatedPG: fix snaps decode in recover_primary
a8dc9a0 test/osd: TestSnaps now writes large, random objects with holes
aec7796 mds: fix handle_simple_lock on LOCK replica
1e31961 mds: drop useless from field from MInodeFileCaps
2539d16 mds: print cur+nested auth_pins on inode
a078aee mds: move to MIX state if writer wanted and no wanted loner
7fe5bb5 mds: print mds_caps_wanted on inode
314be34 mds: improve print() for MInodeFileCaps
a928f76 mds: migrate loner_cap state
f0409c4 mds: clear [want_]loner_cap on cap export
16bedd2 Move list objects logic to st_rados_list_objects
9b83072 rados_list_parallel: fix rados_ioctx_destroy uses
0c4f937 rados_list_parallel: add test4
6d7c86a rados_list_parallel: test adding objects + listing
a360b7d Add rerun.sh
b9c0a72 rados_list_parallel: make num_objects selectable
2b95a61 add CrossProcessSem::reinit, fix rados_list_parallel
27fbe8b Now we can put runnable logs into separate files
cccdd43 Add rados_open_pools_parallel test
aaa1a02 rgw: clean up temp object if failed to PUT
4089e4d rgw: clean up temp object if failed to PUT
5983604 rgw: remove include of curl/types.h
cb86978 test/rgw_escape: add JSON + utf-8 test
e8b6125 test/rgw_escape.cc: add utf-8 test
f29b9bd CodingStyle: Typos, whitespace.
6bca619 rgw: fix escaping clobbering utf8
da1f92c crushtool: Add call to global_init() to avoid dout segfault
8af8ec8 Revert "mds: handle importer failure on exporter"
fa48867 obsync: Depend on python-pyxattr instead of python-xattr
f44cffd mds: verify deferred messages aren't stale
bf768cb mds: handle importer failure on exporter
c9d6907 rados: fix warning
3698522 client: print ino along with &fh for ll_ file ops
ad20e71 rados: fix warning
41451a0 rgw: bucket deletion updates caches
d5c8b96 mime.c: avoid compiler warning
1fdf721 test/mime: test invalid decodes
1bfe9b8 mime.h: better comments
4f1d6ac Add mime encoding
cc40f11 rgw: fix lru
059019c rgw: restructure runtime config env
844186f mds: only issue xlocker_caps if we are also the loner
48837e3 mds: rely on master to do anchor locks for slave_link_prep
cd5c7f4 client: set I_COMPLETE after adding cap
84ff439 client: reenable local ENOENT
24faa3d CodingStyle
6a793f2 mds: journal renamed dirino on rmdir
d2cdbe7 mds: defer lock eval if freezing or frozen
9bdde93 rgw: cache lru
dc41c8d client: remove unused variable
4f73121 rgw: fix put of zero sized objects
9019c6c (tag: v0.31) v0.31
bae40ea filejournal: parse kernel version 3.0+
3f708ee rgw: fix copy operation (clean up acls)
44e76fb rgw: when listing objects, set locator key only when needed
3eb1ba8 qa: make dir tests run by default in rename all.sh
f200f0d mds: fix warning
2dd514a osd: use shared helper for WRITE, CLONERANGE stats updates
da89ef0 osd: clean up a few things in do_osd_ops
054fbc4 mds: refactor drop_*_locks() to use helpers
d72bdab mds: take a remote_wrlock on srcdir for cross-mds rename
025748a mds: implement remote_wrlock
4d5b053 client: clean up debug output
c3a4082 mds: add mix->lock(2) state
d6f35b5 rados: fix usage()
fbdb0a3 mds: check that dnl exists before dereferencing it.
a20d110 rgw: cache cleanups
61fdbbf librados: add conf_parse_argv, use in tests
ffdbcb5 systest: support passing in argc, argv
54ca67b handle_pool_op_reply: update osdmap even on error
75950ac rados_list_parallel: try to handle consistency issues
8845749 systest: add cross process semaphores
dbb122d systest_runnable: implement processes
5a51afa rados_list_parallel: debug hacks
fbadee0 Add rados_list_parallel to .gitignore
aece153 Add systest framework. Create rados_list_parallel
12a5bb8 mon: fix pool vs unmanaged snaps check
4f87d84 mon: don't use pending_inc in poolop preprocess_*
af93d81 mon: fix up pending_inc pool op mess
5dc09dd mds: set old and new dentry lease bits
616ff50 mds: conclude ENOENT during travrse if we have a readable null dentry
a91b1bf Revert "mds: fail out of path_traverse if we have a null dentry."
4761317 rgw: fix copy operation (clean up acls)
03b6c40 qa: mds rename: account for not being in the ceph root dir
b5e4a31 move mds rename tests to workunits directory
e483bb6 qa: mds rename: Rework so it will function in teuthology as a workunit:
088013b mds: cleanup: use enum for lock states
8f9eaf0 rgw: when listing objects, set locator key only when needed
0c6d2e6 rgw: async rados delete should be called with the correct object
1d7fbed rados: rename load-gen options
1da8f81 honor CINIT_FLAG_NO_DEFAULT_CONFIG_FILE
5b2de2b mkcephfs: Only create OSD journal dir if we have a journal.
2aa146a mds: always clear_flushed() after finish_flush()
fb7696f client: fix num_flushing_caps accounting
e9e3883 client: don't call flush_snaps when nothing to flush
933e349 mds: kill stray break
7e1f09f context: implement complete()
531f46c logrotate.conf: Mark stat/*.log as "missingok"; it's not always there.
8459f80 rgw: remove temp objects asynchronously
b670f31 Move stat/*.log to the end of logrotate.conf
6feab3c mds: fix file_excl assert
924a322 obsync: improve formatting a little bit
da917ad obsync: add man page, documentation line
f5cca2e buffer: remove do_cow,  clone_in_place
a6ffcc8 librados: close very small race condition
0e6de71 mon: add 'osd create [id]' command
1af8998 client: clean up cap flush methods
984e5a0 Makefile: libmds.a, not libmds.la
038a754 mds: fix off-by-one in cow_inode vs snap flushes
e6eef5e rgw: sync cache between rgw instances
1206625 rgw: fix of users are created suspended
ca6d239 Fix handling of CEPH_CONF
31d4973 rados: fix warning
6e49415 client: only send one flushsnap once per mds session
860c665 rados tool: load generator
2f5925e Add "How to use C_GatherBuilder" comment
f69fcc7 C_GatherBuilder: add C_GatherBuilder::activate()
16b6567 C_Gather: remove unused "any" option
728c132 C_Gather: hide constructor, convert uses
9771a8e C_GatherBuilder: more uses, add set_finisher
562a04d Filer.h: use C_GatherBuilder
4772bb6 Add C_GatherBuilder
5f53131 mds/journal.cc: remove deadcode
a157bbb Add compiler_extensions.h for warn_unused_result
648e50e obsync: Depend on python-lxml on Debian derived platforms
2fbba81 osd: don't spew spurious scrub unreserve messages
7779ca1 client: more inode ref counting debugging
9da44e6 client: do not leak MetaRequests on get_or_create() failure
553c8a9 client: do not assume MetaRequest's dentries are linked
490f7e9 client: pin dentries referenced by MetaRequest
3ef8671 client: fix dentry ref counting
bec489d rados: some more load-gen work
310032e mds: fix mds scatter_writebehind starvation
d918e67 msgr: simply set_ip by using is_blank_ip
d1c5fb1 messenger: rename is_blank_addr to is_blank_ip.
0b252e9 client: make tdout() work in header
aad529e rgw: merge chunks for clone range, truncate to 0 before
902f699 qa: add clone_range tool
7d75441 qa: file_layout.sh is kclient only
8bcc639 messenger: add a set_ip function to initialize the IP
1247a22 qa: fix file_layout.sh mode
cde5dc2 client: improve debug output a bit
92e0fac mds: fix snaprealm split for dir inode
b5510a6 qa: move file_layout into workunits/misc
c292cce radosgw_admin: fix cli test
4b16d6f radostool: load gen, wip
f7fb547 qa: make kernel_untar_build.sh output more helpful
016cf67 testceph: test file opens with extra slashes
f5cbe50 testceph: expand test cases
a851a15 filepath: don't parse multiple slashes as multiple dname bits.
d1fcffa Resetter: Check return values from Journaler.
2c70bb8 Journaler: pay attention to return codes from read head.
a440fd0 ReplicatedPG: Fix some obc leaks
33aa578 PG: simplify merge_log, remove old objects
b418896 PG: fix add_next_event and merge add_event
fab24c8 filestore: allow FIEMAP to be disabled via conf
033f2d6 qa: add file_layout.sh workunit
0568d5c mds: make cast explicit to suppress compiler warning.
fb81442 testradospp: fix compilation
1446d6d mon: Guard injectargs parsing to prevent crashes on bad input
6a7e635 mds: Explicitly initialize layout fields, and to the correct values.
64b1b2c (tag: v0.30) v0.30
842ec22 debian: drop python-support version req
e27a893 rados: encode bufferlist in watch-notify
0111835 rados: encode bufferlist in watch-notify
6d6b05d rgw: fix some issues with call to clone_range
a0dcf68 rgw: fix clone_range
e580172 rgw: radosgw_admin --help typo
d034042 rgw: implement atomic multipart upload, atomic copy
dbee699 rgw: atomic put
7bbdcdb rgw: radosgw_admin user rm --purge-data
ef25dbb config: remove unused iat options
19614bb testceph: actually call closedir on opened directory.
92b0e8e qa: initial commit of file_layout.sh
58e4dc1 filer: no need for tid_t here
c6f2c32 client: print cache size during trim for debug
ea73a5c FileStore: fix error in ALIGN and ALIGN_UP
034aa08 radsogw_admin: fix clitest
f7b2555 testrados_delete_pool_while_open: fix printf args
bd7e3e0 radosgw_admin: --help/-h
6a3626d create testrados_delete_pool_while_open
8ba05c4 PG: assemble_backlog - fix comparison error, tail is non-inclusive
24a26c66 client: fix trim_caps
15dd4f7 client: fix mds touch
4c47df3 client: prefer auth cap in caps_issued_mask()
4e2a8fa client: touch cap on lookup even if we use the dentry lease
00fa99b client: touch dentries during path traversal
283da88 testrados: add NUM_THREADS
008e02f .gitignore: update for test_libceph_build
13909c2 global_init: make global_init_set_globals static
7dd919c CephFSInterface: de-globalize
1ddc552 Fix C_NotifyComplete::notify
0115855 debian: obsync depends on python-xattr
a1c9bb3 cleanup
5c65661 mon: order degraded before unfound
b00eb9f osd: clean up pool/pg_stat_t structs slightly
178d63e FileStore: ensure that CLONE_RANGE ranges are aligned
2fbf215 PG: assemble_backlog - fix comparison error, tail is non-inclusive
5175851 ReplicatedPG: make sure that rollback target is not degraded
f6320fe ReplicatedPG,OSD: clone srces need to be non-degraded
6696b0f libceph: build without globals
5af5b9f libceph: de-globalize
bfef6c8 filestore: remove warning
00c5539 Filer, Journaler: deglobalize
86b41ff ObjectCacher.cc: de-globalize
757926a rgw: restructure permissions verification
1fc60a2 filestore: don't bother doing fiemap on small ranges
c260b25 update .gitignore
f347ea1 client/Client.cc: deglobalize
8190099 qa: wget -q for kenrel_untar_build.sh
d1a7555 librgw: eliminate globals
88e9004 update .gitignore
76dae02 librados, librbd, librgw: remove dep on libglobal
089255e osd: reorder, cleanup prologger metrics
d379484 osd: rip out old peer stat sharing
dfa6c8d osd: rename peer_stat_lock -> stat_lock
2506500 osd: instrument osdmap updates
560c082 osd: clean up numpg*, hb*
6a3741a osd: instrument readable latency too
a9b107f osd: remove lame rlsum/num
13b0289 osd: fix loadavg check
6e78e24 osd: instrument pushes, pull requests
74aaa02 osd: add sub_op instrumentation
74f4b4f osd: fix up log_op_stats to actually work
c72cfe0 osd: rename push applied, committed completions
6c5a7d5 osd: clean up client op stats
09f6d9f osd: fix compilation
d593b39 Revert "osd: make it compile on older boost libraries"
cbc06f0 test_ceph_argparse: fix build
80df03d push global_init_set_globals into preinit callers
116241e osd: make it compile on older boost libraries
7e33d12 create test_librados_build
ede3a0a librados: fix end_block calculation for aio_read
39da107 librados: fix end_block calculation for aio_read
4475945 librbd: track block_ofs instead of ofs in aio_sparse_read callback
e477e65 Add ceph_argparse unit test
f1f75df ceph_argparse_witharg: fix dashes in args
4549501 common/Throttle: Remove unused return type on Throttle::get()
c23d4c2 libceph: delogbalize, again
92a3a47 Makefile: add missing common/dout.h header to dist tarball
5da0662 librados: fix end_block calculation for aio_read
823a05c proflogger: only register one event for all loggers
629ac0d librados: deglobalize, again
9a3a685 OSDMap: kill some deadcode, deglobalize
0559f84 librados: deglobalize
e8b4573 AnchorServer: fix return values in add().
a8eac4f uclient: change snaprealm refcounting to erase at 0 refs.
8fd2472 mount.ceph, rbd: Output errors to stderr, not stdout.
151beff mount.ceph, errno: Avoid printing binary, clarify message.
21df29d mount.ceph, rbd: Avoid clobbering errno with printf and strerror calls.
02a2518 run-cli-tests: Pass through CCACHE_DIR and such env vars.
c9cf19c Remove "#include debug.h" from config.h
2305a7a librbd: Remove derr uses
6a1572c client: always use get_snap_context() accessor
0bf1dc3 librbd.cc: de-globalize
bc27395 AnchorServer: overwrite old Anchor backpointers when proper.
c9da307 uclient: Update statfs to match the kernel client and its block sizing.
7fcf29d uclient: fix flush_caps(Inode*,int)
787f03c uclient: only change the auth_cap if the mseq is newer
fd9bf2d mds: Include the pinner in nested auth pin debugging output.
30c4756 librbd: track block_ofs instead of ofs in aio_sparse_read callback
59ea9f8 Revert "debian: ceph-client-tools depends on librados2, librbd"
9edb566 librbd: fix read_iterate for the case where block ofs is not 0
b34e195 librbd: fix read_iterate for the case where block ofs is not 0
1635bff osd: fix merge
d42da23 signals unit test: fix
965aadc ReplicatedPG: clean up OpContext use in do_op
3f4e11e ReplicatedPG: Replica collection removal
923617d ReplicatedPG, PG: fill out state machine
34cb737 ReplicatePG,PG: SnapTrimmer state machine skeleton
e53c60d ReplicatedPG: factor object trimming out of snap_trimmer
33395c8 ReplicatedPG: split get_obs_to_trim from snap_trimmer
79f76dc ReplicatedPG,PG: update snap_collections on replica
05c3edf ReplicatedPG: update pull_info and data_subset in sub_op_push
7f29866 FileStore: die if we get an ENOENT on a clone
52e03b0 librbd: fix read_iterate for the case where block ofs is not 0
7cd50f2 Makefile.am: use libtool convenience libraries
a422d1a rbd: --help/-h
e214420 librbd: sparse read cleanup, fixes
6ddee81 librbd: fix and cleanup a bit read_iterate
bfe0d55 librbd: sparse read cleanup, fixes
e4f7d8e librbd: fix and cleanup a bit read_iterate
52e6e85 rgw: some cleanups
6725e74 qa: simple rbd import/export test
9761810 Objecter.cc: de-globalize
df2e3bc initialize g_ceph_context in common_preinit
a66d026 CephContext: not copyable
74e5c39 make misc items as not copyable
4e244f2 [dex]list: not copyable
d3d1159 msgr: avoid copying Pipe* xlist
ce6f578 mds: make avoid copying sessionmap by_state xlist
f94e2ab osd: do misdirected request checks before pg active test
c17d9c0 mds: avoid copying snap client_caps xlist
cdb500e mon: do not copy subscription xlist
abafef3 qa: clean up after snaptest-multiple-capsnaps.sh
0763221 Dispatcher: prevent copying
2e7d06c msgr: only SO_REUSEADDR when specific port is specified
4c1cb28 mon: fix log state trimming
888e880 mon: add 'log ....' command
112e569 Convert g_ceph_context to a pointer.
89dca91 gitignore: add test_libcommon_build
1ef9099 inode_load_vec_t: de-globalize
b02c8d6 Create test_libcommon_build
b64a48b DecayCounter: take a utime_t in ::decode
209d140 Thread.cc: deglobalize
fbf3f4a common_init: de-globalize
c48540a filestore: fix fiemap
39e2c6e rbd: fix read_iterate for sparse read
5ad52af rgw: use adapting window for put obj
9e9cec6 AuthNone: encode entity name in authorizer
7f92d37 osd: warn instead of error if cluster addr specified but not public addr
37a9762 include/atomic.h:fix build for non-atomic-ops case
8f1beb1 rgw: put data using a window
8147350 MDSMap: de-globalize
83020ad assert: de-globalize
fae8dde Messenger: de-globalize
4053204 DoutStreambuf: de-globalize
2b22c32 OSDMap: de-globalize
f6c7343 auth: more deglobalization
4615913 hex.cc: de-globalize
d5ec8b7 MonClient: deglobalize
dcc6448 ProfLogger: de-globalize
ba5b733 tcp.cc: de-globalize
0fc6ef2 LogClient: remove accidental g_conf references
ba61191 msg: remove globals
b0cb480 KeyRing: derr -> lderr
91065f4 auth: AuthSupported: deglobalize
fc43438 Create global_context.cc to house g_ceph_context
6ff09ef Move signal, pidfile to global
63bbadd move common_init to global_init
c46814d Makefile: put LIBGLOBAL LDFLAGS into LIBGLOBAL_LDA
c95062c libclient: remove client/SyntheticClient.cc
02c2ee1 mon/MonClient: use ldout instead of dout
b44ead7 mon/MonMap: deglobalize
8a0d486 SimpleMessenger: de-globalize
8069e83 common/DecayCounter: deglobalize
d224876 ThreadPool: de-globalize
f82611d common: de-globalize LogClient, ProfLogger, Timer
5d5a711 common_init: misc globals cleanup
01038fa auth: remove remaining globals
51ffa7b auth: CephxKeyServer: de-globalize
76c5f24 auth: AuthAuthorizeHandler: deglobalize
ab75f2a auth: KeyRing, RotatingKeyRing: deglobalize
17d22a9 auth: CryptoKey, CryptoAES: deglobalize
da2d429 Create ProfLoggerCollection to hold ProfLoggers
7735b35 g_clock.now -> ceph_clock_now
2452ef4 common/Clock: add deglobalized clock stuff
d6adc4e auth: de-globlize CephXAuthorizer
d03c96e auth: de-globalize AuthServiceHandler and pals
be8fe54 auth: de-globalize AuthClientHandler and friends
1dbb0ac auth: de-globalize TicketManager, TicketHandler
9085597 run_cmd: ret empty string on success;err otherwise
03c8379 include/atomic cleanup
bf2c226 include/atomic.h: whitespace cleanup
ff626f0 bufferlist: get rid of derr usage
07ff69a include/Completion: de-globalize
c0e804d ObjectStore: clean up includes a little bit
6c58da0 include/Context.h: de-globalize
f2bd39f common/MemoryModel: de-globalize
0fa7794 common/Finisher: use ldout
d80b331 lockdep: code cleanup and de-globalization
823eb26 Thread.cc: clean up
5a612f9 Create de-globalized versions of the dout macro
ee5502d Remove cdout
9678ad3 lockdep: add lockdep_register_ceph_context,cleanup
620d078 signal: const cleanup, don't use derr
1e5cb06 rgw: put_obj_data uses aio
128bfcf rgw: put_obj_data doesn't need mtime
10171ca filestore: fix fiemap
ca2f4e2 rbd: fix read_iterate for sparse read
cc644b8 mds: avoid EMetaBlob::fullbit copying with shared_ptr
f78de01 encoding: add list<shared_ptr<T>> macros
96ef8a6 debian: ceph-client-tools depends on librados2, librbd
04d10d1 qa: tiobench workunit: remove timeout
7335fbb librados: return value on non void function
93623fb common: fix descriptinos for -i, -n too
830f48d update clitests with new usage
1b9575e common: fix generic usage for -D vs -d
b9c3672 rgw: suspend/enable buckets through pool async api
e2150a0 librados: add async pool op operations
6fb971f qa: organize workunits
b2c803d secret.c: use safe_read when appropriate
7b8bf55 mds: fix use-after-free on ESession replay
9e4adf0 qa: make snap-rm-diff workunit clean up
e9f308d qa: wget -q
4efdc52 rgw: remove stray semicolon
4ca8054 rgw: cast RGW_SUSPENDED_USER_AUID
20e3ac2 mds: CDir::log_mark_dirty needs to flush before waiting
ad5ff23 mount.ceph: specify full path for /sbin/modprobe
f5f563d radosgw_admin: fix cli test
bc1782a osd: fix find_object_context debug output
447ea1d osd: fix snap_trimmer obc ref
1c5f655 mds: when prodding head inode on snapped behalf, avoid XSYN
3a59579 mds: fix transitions away from XSYN state
9974b7e rgw: user suspension
3aa6a4d qa: pjd must run as root
8b4b838 rgw: get multipart list marker to work
77d38e4 (tag: v0.29.1) v0.29.1
a379c67 rgw: some multipart cleanups, fixes
515f088 librbd: fix block_completion race condition
e9e3fee rgw: implement list multiparts
2d63264 librbd: add AioCompletion debugging
4a7a42b uclient: path_walk should notice when it gets absolute paths.
e90e041 vstart: put .journal outside of osd data dir
af9879d qa: Make snaptest-git-ceph.sh clean up after itself.
1aa2932 rgw: fix abort multipart upload
27f79fc auth: remove CephCryptoManager
ea3db17 librbd: fix AioCompletion race condition
eced4d6 monmaptool: implement --help
41d9335 test/bufferlist: don't alloc large array on stack
8c97e6c .gitignore man/Makefile
954e096 qa: do not use automake for workunit makefiles
40f5ab9 qa/workunits/direct_io: fit .gitignore
51b3651 radosgw_admin: fix clitest help
d2b7e29 crbdnamer: man page
e645152 crbdnamer: +x
cca3da1 qa: radosgw_admin: fix clitest
66229c7 qa: direct_io: fix warnings
7154324 configure: check for boost statechart header
e304fd0 radosgw_admin: log show can dump info in xml, json
28e1a89 radosgw_admin: fix log show (with new poolid param)
efe1aa7 radosgw_admin: pool create command
b91c2c9 librados: use empty(), not size()
8ce98b2 qa: test_sync_io: zero buffers prior to read
d89c9a1 qa: test_sync_io improvements
bc8e120 rgw: log pool id, and store/retrieve pool id info
34098a3 librados: expose pool id
1e96f71 qa: fix test_shorT_dio_read
f9e9490 PG: clear scrub_received_maps in scrub_clear_state
9d1e897 qa: fix loopall, runallonce scripts
d5bba79 qa: move compiled workunits into organized directory
d851dee qa: add short directio read test
8a12a01 qa: add henry's direct io tests
7087b2d qa: include $basedir/src/ (qa/src/) in path
8147076 qa: add direct and sync io workunits
adc98c0 qa: expand test_sync_io
f2aef3e qa: organize workunits a bit
953bb60 qa: move compiled items into qa/src/
f3617e5 osd: fix head_exists fix
056a0c5 osd: don't update snapset head_exists unless full transaction succeeds
11ad765 osd: fix make_writeable
35663de monc: protect msg source check with monc_lock
aa5c224 debian: Move python-ceph into section python.
efb8282 debian: Strip and do -dbg magic for librgw too.
061460b debian: Fix copy-pasto in librgw1 control paragraph.
6fc8819 debian: Depend on python-ceph in obsync.
822e777 debian: Depend on librgw1 in python-ceph.
762c87e debian: Package librgw.
ab9dda8 pybind: Open shared libs by their major version.
d444d5b debian: Make git ignore obsync, gceph* package dirs.
ddf0263 debian: Prevent git ignore from recursing on *.substvars etc.
0a0493d debian: Make git ignore all of the *.debhelper files.
5cf62c1 debian: Dev packages no longer have soname in their names.
0da30c3 debian: Properly package the python bindings.
edc6659 rgw: list bucket display the correct objects owners
3e284a7 boto_tool: add put_bucket_acl
7fa8b97 rgw: don't allow handing out object ownership
b282603 librados: remove useless reference holding
98a3b54 librados: get reference to the io context for the pending async ops
52e9e5e heap_profiler: if log_dir is empty, don't try and log to root dir!
f41773b coverage.sh: use .lcov instead of .info to avoid confusion
a6afb05 rgw: remove required indexes when modifying user info
9a705c7 mon: Follow the Message rules when forwarding tells
842f3ac rgw: remove required indexes when modifying user info
c2de9e6 mds: clear correct state bit in do_file_recover
35beabf rgw: remove clutter
c863f52 rgw: fix user anonymous permissions
dadf2a3 Thread: remove globals. Thread create must succeed
4e0ddae LogClient: pass in CephContext explicitly
03aef0b Monitor: pass in CephContext explicitly
2b5e011 mds, mon, osd: with coverage enabled, exit(0) when SIGTERM is received
befe422 Revert "mon: add all_exit and exit commands"
cf129ff Revert "mds: allow mds to 'exit immediately'"
dd9ea9c Revert "osd: add command to exit cleanly"
b6e5c08 mds: fix up MDCache::path_is_mine to remove a totally bogus assert.
3a582f9 mon: add new "tell" infrastructure.
4c79875 rgw: can specify alternative remote addr http header param
cf5e70d rgw: skeleton for list multipart uploads
2c4367f CephContext: initialize module_type in ctor
20d11b0 mds: be slightly more careful about checking if lock has caps
96f01b0 mds: fix xlock_finish do_issue checks
7c0ae24 mds: fix eval_gather callers passing pissue_gather as wrong arg
87ba043 mds: fix xlock_finish issue flag check
5b304bd mds: make pneed_issue required for eval(SimpleLock*)
bdd94ef mds: explicitly issue_caps after file_recover
b06fa1c mds: make pneed_issue required for *lock_finish()
bc69d4e mds: efficiently issue_caps for OOO or extra locks in acquire_locks
a340421 mds: explicitly issue_caps for rdlock_finish_set
ffeb59d mds: explicitly issue_caps for slave xlock release
cc398cc mds: efficiently issue_caps for scatterlocks unlock during refragment
f62f8de mds: efficiently drop_rdlocks and drop_xlocks too
3e52a33 mds: set or issue caps on lock state changes
88b2246 mds: make issue_caps from file_update_finish smarter
2a45bca mds: issue caps from drop_locks
c786391 mds: pass pissue_caps through *lock_finish()
6d4b93d CephContext: remove silly debug code
e6349ec Dispatcher should take a CephContext argument
4ef41c5 mds: fix tcmalloc check.
63073ab mds: xlock_finish should only do_issue in certain cases.
379dc6f MDiscoverReply: encode/decode wanted_ino.
58250fd mdcache: correct error message.
c1ea3a2 mds: replay: save the right dir!
f69bc30 debian: move gceph into a separate package
0b40f48 tools/common: fix C_ObserverRefresh constructor
3308aa6 rgw: implement abort multipart upload
802e9e5 rgw: implement namespace, use it in complete multipart
01df7c6 ReplicatedPG: make_writeable, use correct size for clone_size entry
1376a5a gtest: add -lpthread to AM_LDFLAGS
b2becef man: update cosd man page to include info on flush-journal option.
d224b3e Makefile.am: Add -lpthread to UNITTEST_LDADD
5922de2 mds: only target XSYN state if we have a valid target loner
7a5201e mkcephfs: fix ceph.conf reference
6f6ac75 Makefile: remove ancient comment
9202a4b ceph tools: de-globalize CephToolContext
92ee0de mds: drop workaround for embedded null decoding
6069fa6 mon: weaken pool creation caps check
80c039c rgw_admin: user info dumps auid
825cec3 moncaps: whitespace
4026247 rgw_admin: can reset auid
4e58308 mds: rename: remove illicit assert.
5b43419 mds: try_trim_non_auth_subtree if we rename a dir away from a non-auth subtree
072e80e mds: use CDIR_AUTH_UNDEF where possible
811dcae mds: remove unlinked metadata from cache on replay
2330281 rgw: set locator on all required rados calls
5cf6d0e rgw: put locator key in rgw_obj
8bd984d rgw: refactor rgw backend interface
f3688b7 Fix build errors in unit tests
2470130 monitorstore: return error codes for consistency
cfbcfd7 Fix typo in usage output for --num-osds
5d56dfb Fix segfault caused by invalid argument string.
a1a7147 qa: test witness subtree adjustment
e2c808a qa: test_sync_io
21795aa qa: add dir rename tests
00ec86a mds: open renamed import child frags during journal replay
44d1930 mds: journal open srci frags on srci import (master)
a7c083e mds: journal renames on witnesses if we have nested subtrees
5c870c6 mds: CDir::contains() should use projected hierarchy
1b0fdca re-fix ignore return value change
3a2ce92 mds: fix check for no-op rename of two links to the same inode
f225db7 rgw: remove parts after multi-part upload
a7012f2 cfuse: really ignore write() return value
37fd3b5 rgw: calc etag for multipart upload
2969161 qa: add rename dir checks
b32f00e coverage: add ceph-coverage to run something with the right GCOV_PREFIX_STRIP
0eda719 Makefile.am: add check-coverage to get coverage of 'make check'
1f2740a Makefile.am: install gcno files
e4f0541 Makefile.am: clean gcno and gcda files in "make clean"
2cb0c11 qa: rename tests
3e0352d mds: rename: add missing pop_and_dirty_projected_inode calls
569baab mds: rename: use temp *in in _rename_apply
bdfcc0d mds: rename: move unlink out of every possible branch
12bb308 test/bufferlist: add copy_all test
eb09764 coverage: add helper script to get coverage for a local test
6909273 mon: add all_exit and exit commands
c01961f mds: allow mds to 'exit immediately'
347dba4 mon: ceph tell mds * is a valid command
1cc78b6 osd: add command to exit cleanly
24195b9 configure: add option for building with gcov coverage support
7b9fa3c test/bufferlist.cc: retab for consistency
d9d3c78 cfuse.cc: fix warning
ea9c4fc bufferlist::iterator: add copy_all, use in KeyRing
6b2bf23 mds: rename: fix oldin pop
bf7d7fa mds: rename: some cleanup
b794aeb client: fix rename request target selection
084a1c7 client: fix mds selection for unlink
a228857 client: make debug prints for choose_target_mds more helpful
5e679d3 client: allow caps to be dropped on another inode for requests
0fb7973 mds: fix unlink new snaprealm check
dbe41a3 client: fix rename debug print
83e49cd g_conf: change to pointer
e61f5c5 simple_spin: fix compiler warnings
776d381 init: set cct->module_type in common_preinit
e36a4b2 mds: rename: fix handling of target that is remote dentry
a566229 client: fix mds routing for link requests
7770e1c mds: rename: only add target to stray if destdn is a primary
df7f895 mds: fix/clean up xlock import/export
3c6a7e1 gitbuilder: quiet
d11f471 rgw: silence gitbuilder (hopefully)
f292fb7 radosgw_admin: link bucket to user
b5011e2 mds: adjust subtree roots on rename
10750f8 common: add module_type to CephContext; use to initialize rotating keys
b28ba77 osd: use osd_op.soid in call
5cc146e osd: allow src_oids to be snapped
8e69c39 (tag: v0.29) v0.29
f9af9ce remove dumpjournal
0baa108 osd: src oid is in OSDOp now
5a86126 osd: don't crash on malformed clone_range (now really)
ea8917e osd: don't crash on invalid encoded clone_range
4d214b1 objecter: set src oid on clone_range properly
e2e6014 monclient: use default mon port if not specified in conf
ea56a55 monmaptool: use default mon port if not specified
69f9087 dumpjnl: call msgr->register_entity before start
4abdf6f simple_spin: use file-scope global not function
b198e5a messages: fix missing bit
b0afaac messages: fix test for multi op
ec18be5 simple_spin: fix linker error
53adde0 fix the MonClient problems for --with-debug programs. Still doesn't compile, though.
a635a9c rgw: multipart complete upload
8e55e18 librados: remove useless reference holding
a082747 osd: make CLONERANGE src oid encoding more sane
740eea1 Refactor MonClient, KeyRing
f2f2f42 osd: src src_oids oloc check
ed41f29 remove g_keyring
90b5354 dout:remove stream from dout_emerg_streams earlier
98226c2 DoutStreambuf: de-globalize dout lock
5b7049c DoutStreambuf: de-globalize emergency logging
6ed9a58 Add simple_spin
70d7709 Revert "cfuse.cc: use safe_write"
73ea844 librados: get reference to the io context for the pending async ops
1aee7f9 rgw: use clone_range for multi upload completion
befcff0 SimpleMessenger: Keep a disposable flag for use in reset
7bd016f rados_bencher: re-add written objects constraint to read benchmark.
b4eb5ef rados_bencher: re-add written objects constraint to read benchmark.
a97451f librados: support clone_range
d1d3e26 mds: remove now-erroneous comment
19949f6 mds: Clean up _rename_prepare journaling
4689073 mds: _rename_prepaer should only journal dest if auth for it
cd5049d uclient: reset flushing_caps on (mds) cap import.
c28b749 uclient: don't use racy check for uncommitted data.
2c6b560 uclient: call the right function pointer on truncate
39d50c1 mds: fail out of path_traverse if we have a null dentry.
350e650 mds: use XSYN state for rdlocks during EXCL
bbaf0b5 mds: add xsyn states
5fc6d92 filestore: compare dentry->d_type against d_type constant
ea76ea5 filestore: stat to test for file type if d_type is unsupported
ade2ccb osd, filestore: debug collection listing
637dfc3 rados_sync: add test for temp file deletion, fix
d4edd17 rgw: multipart: use locator on created parts
0f3224e rados_sync: in export, download, then rename
3766618 rgw: multipart additions and fixes
6fd694c Remove unneeded libcrush1 files
d6bbf3e mds: journal parents of srci when srcdn is remote
806646b journaler: also initialize safe_pos
a13b664 journaler: fix trim crash after standby-replay -> active
7ca240b mds: cleanup rename_prepare a bit
0bcd9ac vstart.sh: turn down debug ms
4d03e15 rgw: some more multipard upload list
52bf3fc rgw: extend multipart list parts response
a670b4b osd: implement clonerange
fc4cc39 osd: give obc refs to RepGather
4cf342a mds: pin inode while one renamed_files list
b152a93 rgw: more cleanup
3546cfd rgw: some cleanup
5073164 rgw: multipart upload parser test util
2f3f36a rgw: fix multipart upload complete parser
711a77c rgw: multipart complete fix
0cce0a5 filestore: allow clone_range to different offsets
502baea filestore: fix fallback/slow do_clone_range
6ca168e filestore: fix fallback/slow do_clone_range
7e2e477 mon: make sure osd paxos is writeable before doing timeouts
c5470e0 OSD: don't keep old connection over new one in update_heartbeat_peers
780322d boto_tool: add get_bucket_acl
65dc841 rgw: implement list multipart
e340bfe dout: use recursive mutex for dout
44770df lockdep: fix shadowed global, add printout
9b37f4f Allow embedded '\0' in bufferlists when copying to std::string.
7c6c6a9 rados_sync: don't hash paths with periods
4870393 test_rados_tool.sh: test hashed paths
b4bc1c6 rados export: better name mangling rules, fix test
5dd0e12 rgw: handle multipart completion
d29b3b7 rgw: parser for multi upload completion
33c39ab rados_sync: prefix user extended attributes
0806e65 rgw: some more xml reshuffling
f5d6be6 rgw: move generic xml parsing code to some shared location
efee746 objecter, osd: clonerange operation
07c1989 librados: implement aio_flush
6db2a4e crushtool: error out if uniform weights vary
35b19a4 osd: fix ScrubFinalizeWQ::_clear condition
1528d2c debian: depend on libboost-dev >= 1.34
0cfa911 osd: don't leak Connection reference
8aa67aa osd: ignore old/stale heartbeat messages
e5c9100 osd: fix map sharing due to heartbeats
5b7c8ae osd: protect recovery_wq ops with the recovery lock
b3fb58e crushtool: add -v verbose for --test mode
57ea502 Add content to obsync package
2324204 (tag: v0.28.2) v0.28.2
7e1de38 hadoop: track Hadoop API changes
232cd6b rgw: generate random upload id
4ddf8df SimpleMessenger: allow multiple calls to shutdown
8490b78 common/Thread.h: const cleanup
a0d521b rgw: fix signing for some requests
818bfd1 rgw: serve multipard init upload
574b58f mkcephfs: pass config to osdmaptool
d2ab764 drop useless cm.txt
1292436 osdmap: take default pool size from config
9e8484e rgw: handle POST requests for s3
9b8daa9 crushtool: update help
6f704e3 obysnc: rgw target: validate all users
22082c4 mon: remove pg_temp mappings when we delete pools
e0cbb13 test-obsync: test sync directly from s3->rgw
a93c86e crushtool: fix --add-item weight being zero when parent bucket(s) created
56d5d95 obsync: fix bucket creation through rgw target
b2c1bff test-obsync: test big objects, user-defined xattr
e9eeb16 mkcephfs: set rdir for local mon setup
5d51b8f init-ceph: ssh
05cfb4d obysnc: fix content-type on RGWStore
6cf67a2 test-obsync: compare_directory now compares xattrs
4cae0ea ceph-pybind-test: test embedded NULLs in data
a2d3529 obsync: more fixes for RgwStore
b76874f pybind/rados: correctly return data with NULLs
970897c pybind/rados.py: throw NoData on ENODATA
28c3026 mds: fix canceled lock attempt
596a3d6 librbd: make image contexts threadsafe
d38001c pybind/rados.py: rados.Object.key should be string
b255482 obysnc: RgwStore: make sure destination users exist
5d865fb obsync: fix DST_OWNER
73e28f2 rgw: return EACCES if acl xattr doesn't exist
ea76712 obsync: Add boto_retries, remove rgw_store.prefix
e3dd77d librbd: const cleanup
2aa9151 librbd: clean up md_oid use a bit
0adaa6b rados python bindings: handle xattrs with NULL
d4bfd96 PG: fix race in _activate_committed
7de7ba0 RgwStore: fix some ACL issues
3f5f562 test-obysnc.py: support librgw testing
e4e098b Rename RadosStore to RgwStore
1705373 test-obsync: refactor a little bit
42f873e Proper ACL support for rados targets
0aa18f3 mds: do not shift to EXCL or MIX while rdlocked
fe95588 crushtool: clean up add-item a bit; don't add item to same bucket twice
dd89ff4 crushtool: fix remove-item
1c334d1 radosgw_admin: update clitest
ab01d74 mkcephfs.in: print out usage if no actions given
f7ea7c9 rgw: Fix RGWAccess::init_storage_provider
c67dd16 mkcephfs: error out on bad usage
5532f89 make: fix build for rgw
203a43b rgw_admin: clean warning
ab278b4 rgw_admin: add key create
bd0eb9a rgw_admin: subuser and key removal
7330c3c journaler: tolerate ENOENT when prezeroing
bb13c92 test_common.sh: skip rm before put
e42736a radostool: rados put should use write_full
9ff7cc7 Create a libcommon service thread
2970268 librados: len should be size_t
ce04e3d osd: add ability to explicitly mark unfound as lost
87309e9 osd: make automatically marking of unfound as lost optional
cea7b65 mds: clean up get_or_create_stray
081acc4 mds: initialize stray_index on startup
d66c6ca (tag: v0.28.1) v0.28.1
9a660ac librads, libceph: store CephContext
13aed89 Add CephContext
1c7b982 Split common_init_daemonize from common_init_finish
478c6bb rgw_admin: make interface a bit more explicit
c167a28 rgw: subuser permissions
6360154 mon: verify that crush max does not exceed osd max
5d98280 crushtool: add --reweight-item <name> <weight>
e9754d8 osdmaptool: fail --import-crush if crush max_devices > osdmap max_osd
3a2acef common_init: don't init crypto until after fork
35ee7e6 ceph_crypto: add assert_init
ba7ef84 config: delete after new
4cc83a6 crush: fix signedness warnings
5baef8f rgw_admin: able to create multiple keys/subusers
cc1737b crushtool: --remove-item name
9a14402 crush: fix tree bucket encoding
d287ade crush: fix tree weight accessor, decompile
127dcde crushtool: default to hash 0 (rjenkins1)
2cf5048 rgw: user info structure supports multiple subusers and keys
4a83de1 osd: update last_epoch_clean in PG::Info::History::merge()
c22aca1 osd: small cleanup
e3191b7 osd: merge history when primary sends replica new pg info
a51bf3e osd: more heartbeat rework
b5ebe6b msgr: don't close close_on_empty until outgoing messages are acked
bac1021 osd: only forget peer epochs if they are down AND no longer heartbeat peers
bc960ac osd: show last_epoch_clean in PG::Info::History printer
726aebe osd: rework peer map epoch caching
27c0bce mon: fix parsing of 'osd foo N ...' commands with multiple ids
68021ce dout: reopen log files on SIGHUP
277dc66 dout: reopen log files on SIGHUP
960d2a3 Add SignalSafeQueue
74691e7 osd: clean up old _from target cleanup; fix one case; share map
0f1be62 osd: mark down old _to targets
3811d8b osd: share map with old _to peers
f87e1dd osd: clean up handle_osd_ping output
3a7931c osd: ignore stale requests for heartbeats
f9bea34 osd: don't prioritize heartbeat requests
7a574d8 osd: do not clobber explicitly requested heartbeat_to target addresss
e1830db osd: request proper log extent for missing
ff031ce osd: fix log bounds check
1dba8dd osd: osd# is in log entry header/prefix
d75f623 osd: log broken pg state to monitor on startup, activate
b7b8127 osd: fix proc_replica_log when peer log is empty
f400110 osd: encode keyring as plaintext after --mkkey
93709f8 keyring: make encode_plaintext method
bdc371e osd: take remote log when it is clearly superior
4c97cb5 osd: fix compensation for bad last_complete
332565f osd: remove some build_prior stringstream cruft
45e8627 osd: remove useless debug print
a2cb690 osd: include past acting osds if they were up
d4b44f9 osd: do not exclude me during build_prior
f7e6b1c osd: show final build_prior result
6f8708b mon: log mkfs as INFO with fs
dfe52d9 OSD, PG: ignore peering messages from before the last peering restart
628665b OSD: decrement message refcount before returning
4404116 mds: kick linklock on revoke_stale_caps
cef8eb9 debian: no shlibs:Depends for obsync either
4e2c1f4 debian: no shlibs:Depends for -dev packages
9443389 librbd: don't need to link against crypto libs
a71981c PG: add_event, add_next_event: ignore prior_version on backlog events
922f7cc expanding testceph to test open/readdir/telldir
3471d41 add ceph_readdir() to libceph
8f7d6c7 librados: add python bindings for getxattrs
3df86c3 client: hold FILE_BUFFER ref while waiting for dirty throttle
838067d client: clean up _flush callers
510f2dd client: assert(in) on _flush
67533e1 client: be more careful with FILE_BUFFER cap refs
3f43c78 client: _flush should no-op if nothing to flush
bc2c31e PG: choose_log_location: prefer OSDs with a backlog
fe298f6 OSD: send a log in response to a log query when the pg dne
57f423b librados: add rados_getxattrs API for C bindings
bcbcf30 ReplicatedPG: wait_for_missing_object in _rollback_to
4043059 testrados: retab with C-style tabs
6a580bf testrados: more getxattr / setxattr tests
1dd1743 Remove libcrush from packaging
f16903d client: do not retake lock in sync_write_commit
ce7f78d ceph.spec.in: fix obsync description
4d39f1b journaler: ENOENT is okay on trim
ecb7c96 mkcephfs: pick rdir based on whether current daemon is local or not
2a0f0cd PG: remove unused argument to adjust_need_up_thru
2452d41 PG: include ourselves in the prior set
cad3dfa PG: choose acting set and newest_update_osd based on a map of all osds
524ab3a PG: GetLog: don't fail if we get an outdated log
92706af PG: reset pg_trim_to in clear_primary_state
51daa43 PG: choose_acting: we need best_info to have a backlog, not the primary
dbb2c38 PG: _remove_pg, reset info.last_update and info.log_tail on log zero
0aeb8ef PG: merge_log- fix extend log case
9b97979 PG: prefer log with longer tail
8c6ce34 osd: clean up choose_acting output
5d161aa PG: make choose_acting a bit smarter
14a3f26 Move crush into libcommon
2fc13de Move crush into libcommon
0d79f1d man: update cosd man page
071881d (tag: v0.28) v0.28
b060f5c Revert "Makefile.am: link some utils with libcrush"
f1c82aa logclient: get rid of send_log; simplify monitor special casing
baba0a7 msgr: fix signedness in alloc_aligned_buffer
bd1995c logclient: log synchronously to syslog
4237da8 logclient: send entries once per mon session
38ba476 crush: fix clitest now that leading spaces are stripped
883a980 Makefile: don't clean up some files
c266498 Makefile.am: link some utils with libcrush
e3841dc Makefile: don't clean up some files
09810cb page: fix #ifdef guard
2f9ff02 page: redefine PAGE_* macros
ee7fa81 mds: do not shift to EXCL or MIX while rdlocked
9be7193 vstart: simplify mds keyring add
bfca7ac osd: add --mkkey mkfs option
8ad346a mon: 'auth caps <name> [svc value [svc2 value2 [...]]]'
a22511d PG: update same_acting_since when acting or up changes
50be4c4 crush: allow - and _ in crushmap type/item names
45494b4 crushtool: strip leading spaces from identifiers
73b9916 msgr: avoid clearing connection_state on pipe replacement
ec63ec3 mon: 'osd tree [epoch]'
108b2a6 osdmaptool: print crush tree + osd state
0e3f092 librgw: be quiet by default
d4c4fe8 pybind/rgw: fix python bindings for librgw
b5726e1 librgw: make API reentrant
34ffe73 ceph.spec.in: add obsync
28e175d debian: obsync
6d56c20 obsync: no .py
bbb1747 PG: Replicas send Notifies in response to queries
9c8f30f PG: choose_log_location, fix error when scanning up set
d90458a osdmap: set type 0 to 'osd'
f6dc19e crushtool: fix error handling for adding devices
c73e37b crushtool: fix unittest map
c9a257e crushtool: fix usage
e46804b osdmap: use straw buckets everywhere by default
d40010b crush: add add_item and reweight functions
042139d crushtool: include cumulative bucket weight in decompile
9a2def6 crush: fix up constness some
36fb084 Add Python bindings for librgw
b13bbb0 PG: PG can receive a log in WaitActingChange requested in GetLog
8ed372c rgw: ahrm.. now really fix logging
0b6cb47 rgw: fix logging
b7b47a0 rgw: fix typo
8836b84 rgw: don't log operations on unexisting bucket
e043962 obsync: preserve user-defined metadata
24233f2 obsync: filestore: separate xattr metadata nspace
265ab99 PG: Don't use exit to call proc_master_log
f863862 obysnc: preserve Content-Type
a4bd854 client: update ctime for auth, xattr
8e6b53f obsync: FileStore: test storing ACLs in xattrs
3865ca5 mon: health WARN if monitor quorum is incomplete
a82e062 obsync: FileStore: store ACLs in xattrs
ac6afe0 obsync: FileStore: test for xattr support
1db29a2 rados: don't force order on params
e93c0fc fix segfault introduced by commit de640d85fa3e0e5e5a31704eab5a8714a1ffe867
cd75a9d osd: lazily close connections to down peers
a5b5aea msgr: mark_down_on_empty and mark_disposable
5ecc42b PG: Remove downed osds from peer_missing and peer_info
ba75363 PG: Only pull the master log from a member of the prior_set
6af0379 rgw: Move rgw_log_level to md_config_t
56cab8c Makefile.am: add SimpleMessenger.cc to libcommon
924c000 librgw: only include rgw_acl.cc and librgw.cc
298e5c7 rgw_acl: move constructors, destructors to .cc
bf81df2 obsync: fix eventual consistency handler
12deaaa obsync: add DST_CONSISTENCY
6f4f702 boto_tool.py: add --rmobjects, --rm_rf
50e41fb boto_tool.py: fix old-style argument-passing
0dea92f boto_tool.py: use s3-tests config file
1c98da6 librgw: use dout for logging
883d180 librgw: small error handling fix
9847eb8 rgw: put XML-to-bin translation into a librgw
e8504c0 uclient: do not accept max_size changes unless they're from auth mds.
b8ddecc MDS: do journal on rename if we're auth for the inode.
a17db02 MDS: don't journal slave ops if we only have caps.
6e0e553 PG: search_for_missing takes the other osd's missing set
e0d83fe PG: search_for_missing takes the other osd's missing set
89a821c radosgw_admin: fix clitest
72ca96e add basic test case for readdir_r
8161122 fix null deref when callback invoked en route from readdir_r rather than readdirplus_r
84644dc uclient: compare _revoked_ caps when deciding whether to release.
932f4eb uclient: clear out cap->wanted when caps get revoked.
5e2b57d uclient: be more careful about sending caps.
91a268e radosgw_admin: dump log by object
30491e8 updated test to cover "." directory stat
4456b6c Add analogous special case for "." directory alongside ".." in _lookup
935f7dc mds: drop unneed default arg
a6417c6 objecter: set pgls start_epoch field
8a1644e osd: add pgls start_epoch field
222126e rgw: in S3 PUT, don't crash on Content-Length == 0
5c382d3 objecter: fix calc_op_budget bit mask checks
b6cccc7 Objecter: switch handle_osd_map op resending around
1d29cc7 rgw: in S3 PUT, don't crash on Content-Length == 0
5e4f6ba Objecter: implement operator<.
c155a2b osd: prepend missing objects to pgls results
d9896b3 obsync: handle eventual consistency issues
7083777 osd: remove weird commit_op_seq fast-forward
82f9a92 osd: key Missing::rmissing on version (not eversion)
f1af92f PG: choose_log_location, fix error when scanning up set
326d01b osd: support rollback to cluster snapshot
2dc891f Clock: add new clock_offset config option, and use it in g_clock.now()
7aed34c clock: remove cruft.
88641b8 osd: trigger a store snapshot when the osdmap says to
6db09ba filestore: add a snapshot command to create a snapshot of the entire store
918eeaf mon: add 'osd cluster_snap foo' command
2ced4e2 osdmap: add cluster_snapshot field
d3aa0c1 PG: Replicas send Notifies in response to queries
1429d77 test-obsync.sh: fix obsync unit tests
484e6e6 rados_sync: tolerate ENOENT when deleting an object.
8d201d4 librbd: tolerate ENOENT when trying to delete an object.
140886c mdcache: check return values when purging an inode.
0f42099 expand testceph to check xattrs
b0e0c36 client: support security. namespace
3521771 support for xattrs in libceph
3a8f36f journaler: tolerate ENOENT when prezeroing
d2243e8 osd: unlink of nonexistent object should return -ENOENT
f114cf1 monclient: fix crash on shutdown
6f34045 Revert "osd: unlink of nonexistent object should return -ENOENT"
de640d8 monclient: maintain explicit session connection; ignore stray messages
3425a8e rados tool: integrate rados_sync with rados tool
1575655 rados tool: change initial argument parsing a bit
203edac librados: don't crash if we call connect twice
a7f8796 osd: unlink of nonexistent object should return -ENOENT
331c01e rados_sync: implement --delete-after, fix bugs
357910c Allow dashes in ceph_argparse, etc.
001c18c test_rados_sync: test --force
6e55b23 rados_sync: support --force
d006c6f osd: initialize oi.oloc if on-disk value is bogus
f00edf7 rgw: switch bucket creation operations
8cb861c osd: rename Pending -> WaitActingChange
6d70592 osd: log debug output for Crashed state
7ada5cd osd: wait for up_thru updates
7a6b9b9 osd: fix pollution of peer_info
8a781f1 osd: fix osd$foo typos
70d8c99 osd: simplify build_might_have_unfound
8e1e45c osd: reset last_complete on mark_all_unfound_as_lost if no more missing
0ac419e osd: drop bad warning
d9ea95f rados tool: remove import/export
1cb611a .gitignore: rados_sync
25bfb98 osd: reassert our assert definition after including boostchart
f9ed988 assert: make our assert clobber any others too
ea0a139 osd: fix compilation for some g++ versions
588fe67 rgw: minor cleanup
7db4949 rgw: opening bucket io ctx stats bucket info if failed
fbe0bd1 test_rados_sync: check that second sync does nada
210c38d rados_sync: more fixes
85292b3 osd: warn when obc locator doesn't match ops
5a726ef rados_sync: fix memory leak, other misc fixes
5f7df9a osdmap: refactor mapping; don't assert on missing pool
a61484e test_rados_sync: test xattr preservation
6b870bb test_rados_sync: add import/export test
b169379 rados_sync: complain if import src is inaccessible
010ffce rados_sync: fix --create for import
e321271 add test_rados_sync.sh
e00a824 client: map file stripes to acting osds
f2c9445 rados_sync: fix import a bit
8a56a74 rados_sync: nicer error formatting
e9550b5 common: be a little less scary in our startup warning
f98475d rados_sync: misc bugfixes
6b6617e rados_sync: nicer printouts
a4936a5 man: mkcephfs: small fixes
73facc1 rados_sync: do_export: fix diff'ing
6c9698b rados_sync: more improvements to xattr_test
d74ecc2 mkcephfs.man: update man page
415db79 rados_sync: Add xattr_test
48d94f6 osd: used fixed size types for fiemap/mapext/sparseread encoding
739ab87 cfuse: don't -d
4fbd6c2 mds: assert auth on journal_cow_dentry
f757f13 mds: don't journal src when not auth on rename
621af5e PG: choose_acting needs the value of the osd, not its index
2315a64 Create rados_sync tool to back up rados pools
0edbc75 stop.sh: Avoid bashisms.
6ee6261 stop.sh: Whitespace.
6c366c0 osd: fix include in cosd.cc too
88875fb osd: rearrange #includes to get our assert
d6ebf60 mon: fix multi-osd 'ceph in|out N..' operations
3ee41ab ceph_argparse: ignore dashes after equals sign
2ab3062 PG: strays don't peer (only the primary does)
76febd2 PG: clear peering flag when we transition from Peering to Reset
dc9be20 osdmap: fix temp osd pg mapping
5c520fe mon: do not stop mds0 unless all other nodes have also stopped
6ac5572 PG: handle MOSDPGLog messages in Active state.
79b1a10 ceph_crypto: Fix ceph::crypto::init mutex for NSS.
44900d4 (tag: v0.27.1) v0.27.1
27a48c1 ceph::crypto::init: add PTHREAD_MUTEX_INITIALIZER
7d12d18 mds: fix --reset-journal
28ccdf4 obsync: remove misguided strip_owner
8606449 test-obsync.py: allow better nonce,better printout
8460cff libceph: initialize keyring after conf is parsed
2ca61c9 osdmap: small cleanup
e6dfcfd fix some shadowing arguments
921d4b3 crypto: fix non-reentrancy of ceph::crypto::init
429bf1f test-obsync: use s3-tests configuration file
b8055b4 osd: fix GetInfo down check
db4026d osd: some comment, debug output cleanup
a284e20 osd: reg_last_scrub on pg load
2b1c61e obsync: remove omit_owner for acls
8964359 obsync: implement --force option
24f641f obsync: be more verbose about set_xml_acl errors
b39bb46 boto_tool: add getacl, setacl
6d8ddbc obsync: Fix ACL parsing yet again
5d77c54 osd: GetLog, GetMissing cleanups, fixes
fe988b1 osd: only transition to Pending from GetInfo cons
d286550 osd: consistent naming
04e343c osd: handle notify+info explicitly in GetInfo state
ade1fcb osd: statechart whitespace
565de26 osd: initialize pg state event counters
c24859f osd: fix GetInfo querying
1fbefb3 osd: handle event notify/info/log from Initial
d634739 rgw: don't output optional DisplayName if not set
b5cb4c5 osd: debug handle_*
a544bda rgw: don't assume XML is valid
9ebcd36 osd: fix min_time in state stats
4d66199 osd: rename states to reflect nesting; fix enter/exit msgs
4d10126 OSD: fill in rctx properly for pg->handle_create in get_or_create_pg
d2c245c osd: first pass at pg peering stats
a347d18 osd: use const char * state names
228e857 OSD: assert contents exist when erasing from last_scrub_map.
ca7a372 PG: proc_replica_info, oinfo not info
db8f96c osd: move directly to Reset state on pg load
d622a6f OSD: start PG state machine when loading pre-existing PGs
c3fe4e3 PG: ReplicaActive must repond to requests from discover_all_missing
d417fb0 uclient: fill in InodeCap::wanted member on send_cap.
c9859c2 uclient: only try to update caps on the auth MDS.
9c192e5 PG: collapse crashed transitions to happen on any unexpected event
8d301d2 PG: use a state_name member instead of overriding get_state_name
879d6b0 Revert "osd: simplify check for unconsumed events"
31f6a8c PG: Primary should also discard the ActMap event
dda3261 PG: ActMap should be dicarded if no outer state handles it
ab34a3c osd: simplify check for unconsumed events
71abe26 osd: make debug output include state name
efcab96 osd: fix event names
28fdffc PG.h: transition to crashed on unhandled message
fdc6791 obsync: improve ACL handling again
0802cfd obsync: fix some bugs
c71583d osd: feed new pg mapping into state machine
d0dd549 osdmap: fix some constedness
39dc084 osd: turn off recovery oid sets
eac23e1 PG: remove peer_info_requested member
258fe7c PG: don't become clean in purge_strays
9c70fdf PG: send notifies when a stray or an active replica gets an ActMap
c96f3e9 PG: fix proc_master_log output
892e58d PG: handle info in proc_replica_log just like we did in _process_pg_info
b659fd0 osd: only specify start version for Qeury::LOG
f175d27 obsync: check if ACLs match
780ec44 osd: use enum instead of const static int members
a5f352c osd: leave recovery hooks in PG
90ee7cf osd: fix pg log entry types to not always be delete
8513122 mon: add 'ceph osd rm N...' command
f680eca osdmap: allow incremental to represent osd deletion
890dc2a objecter: remove useless mark_down code
f39f5c8 test-obsync: test ACL translation, run unit tests
472d7be obsync: remove --owner, elide owner from ACL XML
a6383e9 obsync: better usage
48eb343 OSD,PG: Peering refactor
09f6d22 OSD,PG: Move pg reset code from OSD::advance_map to PG
f06269d PG: choose_log_location
21d8e72 PG: Extract query map generation from recover_master_log
1477c06 PG: Refactor build_prior into a PgPriorSet constructor.
1b0dfcf PG: Add gen_prefix method for generating the pg error prefix
fe30d90 TestSnaps.cc: default to testing with the data pool
789b967 OSD.cc: handle_pg_create fix initial last_epoch_started value
a8a16c7 obsync: only require --owner if --xuser is set
441b54c obsync: implement --owner
5ac87ff cfuse: encode/decode dev_t properly
8bd2305 obsync: implement user translation (--xuser)
fa2da0c rgw: fix ACL XML generation
931b580 obsync: refactor LocalCopy
1701804 FileStore: use proper object names for linking
ac23196 MDS: fix handle_client_rename use of path_traverse.
7d19f18 mds: trim non-auth swallowed subtrees during resolve
9e4e345 mds: fix replay of EFragment rollback
a09eb0c rgw: log bytes received
6a16019 rgw: fix some logging problems
03d82a3 rgw_admin: dump also user email
e97ce8e test/ceph_crypto: Check that the shutdown/fork/init trick works for NSS.
fc36eb6 filestore: fiemap should close the fd
e4cdc58 filestore: fiemap should close the fd
264829b common, cfuse: Hook into daemonization and shutdown/init NSS.
98b0877 msgr, common: Refactor to extract daemonization out of messenger.
0e6bacc msgr: Rename SimpleMessenger::start(daemonize, nonce) to start_with_nonce.
84454c2 ceph_crypto: Assert that NSS initialization works.
4107e29 common_init: create common_init_daemonize
2d82fef config: Update sample config with more examples
2047b59 common_init: set log_file, not log_dir, by default
689a1bd common_init: don't modify log_per_instance
0a2d3f2 msgr: remove dup .start() call check, remove cruft
e0ec413 hadoop: cleanups for libceph type update
c9712e4 lfn: put lfn outside of user.ceph namesapce
3a146f0 mdsmap: show mds name in summary
f468742 hadoop: update libceph types
347bc9f hypertable: update libceph types
101506a libceph: error out if USE_FILE_OFFSET64 not defined
95cea34 lfn: don't return ENOENT if it's not lfn in some cases
e9fac67 mds: ignore fragment_notify when dft state doesn't match
1c58f80 mds: do not send fragment_notify to <= recovering nodes
27ca30d mds: fix uninint warning on cur
4f39fae mds: handle import cancel while logging EImportStart
2614583 client: do not send request to mds -1
aee2097 lfn: set hash and file name constants
9b3c3aa osd: remove warning about max object name length
87efc95 mds: try_trim_non_auth_subtree on any canceled import (including resolve)
e942a2a mds: make trim_non_auth paths complete filepaths (not dnames)
21cc059 mds: fix steal_dentry dir_auth_pins adjustment
81041de mon: use tcmalloc
8e4eed5 mds: fix export_prep trace format
47afbda mon: make 'ceph osd (down,out,in) N' take mulitple osd numbers
5d6718e libceph: no _t types
4b9c093 lfn: short fn length is constant and accurate
c8859f0 osd: bump up max object name size
7dd592a crypto: add support for SHA256
1fd2784 libceph: typedef struct mystruct *mystruct_t
deb27ef libceph: include 'struct' in declarations for C compilation
8aab0ec mds: fix auth_pin check
d2a18f6 config: Remove debug output in conf_get
a490d1e mds: handle freeze completion delayed by frozen inode
f998bf6 lfn: replace hash function
0a80865 mds: add 'mds debug auth pins' option
d994e8b mds: fix nested_auth_pin accounting on refragment
27135c9 mds: maintain dn pinning invariants during freezing for refragmenting
d6917cd mds: freeze fragments during split/merge
af6ed09 lfn: some more fixes
c9825f0 automake: Make debug targets known but not built by default in non-debug builds.
63b0cfa mds: remove erroneous fixme.
d111681 mds: handle discovers that race with refragmenting
a76d583 mds: Replay new client sessions on slave-rename importing.
33d1ea0 mds: pay attention to *stat staleness during split
7aef544 mds: merge accounted_* stats
512ab30 obsync: use lxml to parse XML ACL
698b1ea libceph: move header file to include/ceph/libceph.h
6f07424 lfn: some fixes
12542c8 lfn: amend long file name hashing
a68340e mds: ignore resolve messages received prior to resolve stage
68c2b57 mds: handle aborted export during pre-export sync
2f16916 lfn: push cid/oid translation down
f6d1ccb mds: drop messages to down mdss
dd183ca mds: do not send heartbeat when degraded
e37878e mds: fix discover tid assignment
35efa2b vstart.sh: remove cruft
1f5b620 mon: fix standby-replay assignment (again)
319c20f auth: Avoid const mismatch in nss_aes_operation
9854e27 configure.ac: check for supported compiler flags
00a2520 vstart.sh: set up pairs for each rank when -s is on
28edbe5 mon: rework assignment of standby-replay, expansion nodes
53a8e7d mon: fix standby-replay assignment logic
6025dee osd: move watch/notify effects out of do_osd_ops
0aeab99 obsync: implement RadosStore
ccf11fb osd: mention invalid snapc in log
896de0ac osd: include (some) osd op flags in MOSDOp print method
b08ee2c osd: add RWORDERED osd op flag
a44065d radostool: fix getxattr / setxattr return code
9c2f0f0 rbd: make showmapped output a bit prettier
539f671 rbd: showmapped
df1e1c8 pybind-rados: fix Ioctx::close
dd99226 mds: only include head dentries in check_rstats() rstat check
e643642 osd: move ObjectState side effects out of do_osd_ops
101ca58 objectstore: implement Transaction::swap()
f922b64 objectstore: transaction::append()
424116f buffer: use std::swap
604e76f test-obsync.py: add tests with --no-preserve-acls
3210fe7 osd: remove obsolete noop cruft
2413302 osd: move snapset_context into ObjectContext from ObjectState
a31a6c1 objectstore: drop decode support for <= v0.19 encoded transactions
08265b1 mon: fix pg stat summary
9b30040 mds: undump-journal
a4c0cfa buffer: break out read_fd method
55ae580 rgw: check if bucket is empty before removing it
87ad8da obsync: another fix for --no-preserve-acls
010cc35 obsync: fix bug in --no-preserve-acls
dcca146 mds: Don't twiddle lock states in the middle of an import.
904af33 rgw: send content length on put operation
99c347a rgw: send content length on put operation
e8847b2 mds: only move the journaler expire_pos forward
b31400d mds: always trim standby segments after rereading the head
68bafc0 mds: only write head once after expiring logsegments
7464473 mds: small journaler cleanups
885acf5 journaler: separate out trimmed_pos setter
6cc6788 mds: wait for blacklisting osdmap on standby-replay -> replay final pass
a59153e librados python binding: always use 64-bit offsets
57cfd76 pybind-rados: fix read API
6b830d8 hypertable: update bindings to use new libceph API
8cb9018 hadoop: re-add ceph_set_default_preferred_pg
5b4690d libceph: re-add set_default_preferred_pg
e8ac7b5 hadoop: get hadoop bindings to build again
4ebf73d Client.cc: fix mode/flags confusion
34a72e1 libceph: Remove *_precise
0da60ea client, libceph: clean up layout methods
ed7c583 CephFSInterface: don't include Timer.h
4d41507 hadoop: convert to new libceph interface
e9fb106 do_autogen: add -H for --with-hadoop
0bd7ee5 do_autogen.sh: don't clear CFLAGS, CXXFLAGS
f7e5155 testceph: add more tests
d3c0b42 libceph: fix some bugs
529ef2d libceph: avoid DIR*, combine connect and mount
66b84fa hadoop: whitespace fixes
bff3004 Client: unmount should not be able to fail
54782bf libceph API change
e38fc4f mkcephfs: Fail if there are no mons defined.
21504a0 mkcephfs: Fail if a mon has no address set.
3207c5d mkcephfs: Remove temp dir, not just its contents.
829ca52 journaler: fix flush completion when nothing to flush
aca14f9 journaler: default to readonly; fix asserts
0c38da2 vstart.sh: fix -s
a6ac930 mon: consisder osd recovery state in health check
2f95d92 mon: include unfound count in pg recovery summary
52b7481 mon: fix up osd health report
a9d12cb mon: fix up pg health report
70640bf mon: generalize health check a bit
4368e97 Makefile.am: add -fno-strict-aliasing
4fe53fc Makefile.am: Wpointer-arith, Wstrict-null-sentinel
793034c (tag: v0.27) v0.27
268f189 clitests: fix osdmap unit test
4b547cb Makefile: add some new warnings to CXXFLAGS
474be65 mds: don't daemonize when doing journal reset.
625e785 rbd: rename kernel add/remove to map/unmap
c87fc69 rbd: add commands for manipulating the kernel sysfs interface
9869859 mount.ceph: use common implementations of secret handling and address resolving
2ff3c82 addr_parsing: use strtok_r to be safe
def3666 addr_parsing: rename mount_resolve_dest to resolve_addrs and don't modify its argument
bffb9ed addr_parsing: move implementation out of header
20719c7 rbd: use rados' init_with_config because we already called common_init
4cc88f6 common, mount.ceph: move functions for working with secrets into secret.h
cb8237e testlibrbd: fix signed/unsigned comparisons
8cd3f1c osd: drop 'casdata' bucket by default
b419f3d filestore: lfn_unlink removes the entry as last step
00ffafa cmds: make journal-check mode run in the foreground.
804a6d6 mds: massage handling of oneshot-replay.
7979fa5 OSDMon: make the defaults in reweight-by-utilization work.
8109f74 testlibrbd: fix signed/unsigned comparisons
c805937 osd: drop 'casdata' bucket by default
1cff807 filestore: lfn fixes
4e21db6 auth: const cleanup
1421d70 obysnc: use python2.5 compatible exception syntax
1940875 filestore: fix getxattr
e209db4 PGMonitor: unregister the config obs in ~PGMonitor
527ecd4 config: add remove_observer
3d97c33 PGMon: use the config observer framework
f940ee8 ProfLogger: add NULL to KEYS in the config observer.
0e82841 config: add comment clarifying virtual destructor.
5b218b2 filestore: introduce long-file-names
7dc5a7f PGMap: fill in full OSD sets on decode.
8ebbd60 conf: reopen proflogger on conf change
6e49c06 conf: add observer framework
36f0068 cauthtool: -C not -c in man page
433deec dout: make dout a member of md_config_t
9a38acf dout: remove DOUTSB_FLAG_STDOUT
0b6a023 PGMap: add redo_full_sets() function for when ratios change.
515c767 osdmon: Clean up debug output on map full flag.
a2613f8 PGMap: add [near]full_ratio to the Incremental and encoding.
af92e8b PGMap: always decode pg_remove.
f9056d0 osd: better debug output on replay completion
634dfc9 mkcephfs: allow a prebuild osdmap to be specified
ad71955 cfuse, mds, dout: Do not create "rank" symlinks for log files.
4428d1e Revert "Revert "autoconf: Complain if tcmalloc is not found.""
f6179fc debian: Handle missing tcmalloc on Debian lenny.
0d98a62 debian: Build without tcmalloc on non-i386/amd64.
bd7922a remove old debian build helper scripts.
7c04f81 mon: remove class distribution infrastructure
deb0ee9 osd: move ClassHandler.{cc,h} to osd/
964a0a6 osd: load classes from a fixed location off disk
54284c0 common: add environment.cc/environment.h
d55399f mds: remove MDSlaveUpdate from list on deletion
87def51 common_init: move version printout to common_init
ae0f5f0 interval_set: slightly better API for erase
faffcc5 Change some global config options to env vars
2e41f08 journaler: fix do_flush adjustment
bb4cfab osd: assert on query on deleting pg
67721b0 osd: do not create pgs on query
b05f1ba journaler: truncate/zero ahead of write position
974d859 filer: remove whole objects on zero()
0f0c1c8 interval_set: implement erase(iterator)
e639352 journaler: check return code on _finish_write_head.
68863bb osd: make ZERO on non-existent object a no-op
42a7013 dout: remove references to g_conf
ab9dc12 vstart tests: specify ceph.conf
878f4a4 rgw: return appropriate error for unresolvable email in acl
b8e791b config: reorder config_option struct members
8038c49 clitests: fix radosgw_admin test
756a2ac config: remove unused OPT_NONE type
3f275bc clitests: eliminate use of old-style section name
6058a36 MDS: move slave rename xlock handling before finish_export_inode.
14dd299 improve debug printing
d857983 mds: Unify migration-handling code in _commit_slave_rename.
6bd2081 mds: _commit_slave_rename needs to drop auth_pins for exported xlocks.
1a6f437 MDS: Make _rename_apply inode import auth_pinning more intelligent.
478c617 mds: If we're a slave, clean up xlocks when we export an inode.
5299aab mds: properly drop imported xlocks.
97e357c MDS: Server takes auth_pins for xlocks on imported inodes.
216fd77 objecter: resub ops on full->nonfull transition
c966410 osd: show "full" or "nearfull" in osdmap summary line
796528c rgw: remove get_user_info() and clean up
d8fe208 rgw: store user info on all indexes in the same format
11f1e2e rgw_admin: can lookup user by access key
d778921 mount.ceph: behave when CONFIG_KEYS is not compiled in
d21bdd6 radosgw_admin: Update manpage to new syntax
1eccc01 MDS: Fix Locker::handle_reqrdlock for xlocked locks.
79cac5e mds: Always _open_parents when opening a new snaprealm
a028c89 mds: don't run all of try_subtree_merge on a rename across MDSes.
6250e82 mds: adjust LocalLock can_xlock_local().
5a65a04 mds: Extend use of find_ino_peers.
bea966a mds: Make use of find_ino_peers
22e8519 random commenting
ace54db MDS: Remove inappropriate assert from _logged_slave_rename.
ac045dc MDS: Server::handle_slave_rename_prep now accounts for dir snaplock.
597e30e MDS: Don't move inode to snaprealms if not primary inode.
08bd2ef MDCache: update assert to account for being a slave.
569cce3 Server: push_projected_linkage in _link_remote
5b825c3 Server: ensure slave mdses have full dest tree
544ce94 rgw: basic support for separate uid and access key
24f35e7 mds: fix null deref in debug
f855151 mds: keep import/export subtree_map state in sync with journal
d94c69e mds: fix export cancel during IMPORT_PREPPING
07098fa mds: clean up trim_non_auth_subtree output
e15d9ca mds: cancel exports in PREPPING state on any failure
c7385c1 mds: use helpers for import_reverse
777bcba mds: don't skip inodes in journal that may be trimmed during replay
92d349c config: warn about old-style conf section names
2c0b844 man: Update cmds documentation.
ff5bc8f mkcephfs: fix check for highest osd
e34e332 vstart.sh: use new-style section names in config
cc0e566 mon:don't check for old-style monitor section name
a6f0ce4 cconf: update man page
925a2e0 mkcephfs, init-ceph: tolerate complete lack of a type
a7e7bde objecter: log when we defer a write because of FULL osdmap flag
c9154c0 mkcephfs, init-ceph: tolerate complete lack of a type
a0a5ea4 config: do not accept old-style section names
b740670 cconf: fix usage; clean up some code
ba69603 config: normalize key names, cleanup
9b7f223 rgw: fix other err related issues
303420b rgw: adjustments to error handling
54bc4b6 libceph: implement ceph_conf_set and ceph_conf_get
13c6b90 mds: init metablob MDLog* for EImportStart
68653b3 init-ceph: no log_dir default
6150f58 mds: fix journal offset types
f5b566b mds: show migration state names on cancel
b5f6eb1 rgw: rework error handling a bit
4eb9d4f config: add test for override ordering, comment
a199416 config: de-globalize reading config file
22dbbe8 radosgw_admin: fix make check
a3a1a04 config: make md_config_t.name a value, not ptr
a3144a1 rgw: don't modify object owner when setting acls
6f730af rgw: allow changing acl using canned acl
54913d4 radosgw_admin: add 'bucket unlink' option
08e9855 mkcephfs: Actually do a mkfs.btrfs
141178f MonitorStore: use sync_filesystem when available
09d4c96 dout: log_per_instance should work with log_file
98911b6 RadosModel: error handling fixes
839b4ca filestore: fix do_getxattr check
9ac7825 FileStore: give better error message about xattrs
9e0565c mds: fix dn unlocking on export_reverse
7dc82d0 mds: during export list target second
607ce44 mds: do not start_new_segment on replay_start
7c17cd3 mds: fix bad import_state check on handle_export_discover
338c9a6 mds: queue rejoin_waiters on rejoin_ack survivor
c9ce4cf mds: fix resolve
4fe48ed mds: don't check_rstats on non-auth or frozen dirs
aa07489 mds: fix _freeze_dir assert for refragment case
4001b81 mds: fix choose_lock_state() on xlocked object
e341fe0 osd: Use syncfs when available
5c06fc1 rgw: create bucket with empty name should return a valid error
59309b3 rgw: recreation of bucket returns success
b7b66ac mds: update rstats on stray dir when you rename over existing inode.
cc16277 sample.ceph.conf: add log file and pid file
694c437 vstart.sh: use "log file" instead of "log dir"
fd0290a rgw: listing non existent bucket returns NoSuchBucket
02e9310 osd: move MAX_CEPH_OBJECT_NAME_LEN into object.h
4082808 osd: check obj name length to avoid ENAMETOOLONG
2380e70 librbd: don't write to stdout
1eae9d6 Add test_mutate
9c731ed mdsmap: initialize standby_for_rank
5e27a07 mon: simplify mds follow checks
2b59bc6 mon: simplify mds laggy check
e9afe17 mon: don't take over for a standby-replay
2b2766d rados-tool: use init_with_config interface
466306d mds: make _create_system_file dirty dentries properly
d7544dd mds: fix create_mydir_hierarchy to save dir
bc98fe7 mds: improve scatterlog debug msg
c7f9d2f mds: clear flush state on rejoin ack
c9872a4 mds: send any dirty scatterlock state on rejoin
43d7472 mds: reset dirty->flushing on rejoin scatterflush
2a1af8b mds: drop debugging cruft
0f10e95 mds: make _create_system_file dirty dentries properly
31fc9ed mds: fix create_mydir_hierarchy to save dir
f4d8677 radosacl: read Ceph configuration file
ceba04f cephtool: don't print anything on SIGTERM, SIGINT
21df042 mds: don't crash on bad export_dir command
fb8c09b mds: fix file_eval on subtree roots
7ca69eb osd: fix ref leak on pg when queueing
6768586 osd: take reference for RepModify
60b645e osd: fix race in op enqueuing
cc5dd6d mon: simplify osd health output
9c0d42f osd: only log scrub errors (not ok's)
eacfb8d TestSnaps: Fix compile error
c02b56e cfuse: pass through SIGTERM, SIGINT to FUSE
1cb4aae ceph_fuse_ll_main: restructure error handling
b3f5102 librbdtest: check for error on out of bounds I/O
46c761f librbd: check for out of bounds I/O in all forms of read/write
e34078b cfuse recognizing same xattr subset as kernel client
0e371de TestSnaps.cc: allow client id to be overridden
2b0e474 rgw: utility, not daemon
7f3a054 CDir: check_rstats will now print out dir stats whenever there's a bug.
f3f7383 obsync: preserve ACLs
556f06e obsync: escape obj names between S3 and local FS
4995117 osd: futz with stat again.
0de233c test/osd: Add latency stat collection to TestSnaps.cc/RadosModel.h
e26626a ReplicatedPG: fix error in snap_trimmer
84aaa6e crush, clitest: Port old test_crushtool.sh to clitest.
61ce52c osd: more futzing with stat
eb08daa libceph: Make header usable from plain old C.
eee1f92 crush: Remove dead code.
c494689 Don't crash during initialization when working without an osd journal.
aefa104 crush: Remove dead code.
38c6831 radosgw: Remove PHP setting from VirtualHost documentation
05596d7 osd: Remove dead code.
f81b505 msg, os: Remove dead code.
033e29a test-obsync.py: add test for --follow-symlinks
2506819 test-obsync: some fixes, be more verbose
2653361 boto_tool.py: fix rmbucket
42975b1 obsync: add --follow-symlinks
9599b66 ReplicatedPG: tolerate ENOENT when statting.
a66da4a qa: Remove fsx workunit.
d55e98b common, msg: Remove dead code.
4537d92 crush.old: Remove dead code.
e01cd3b ebofs: Remove dead code.
b293d45 osbdb: Remove dead code.
78716a4 clitest: Disabled problematic rados test, for now.
fe15727 clitest: Add more simple basic functionality tests.
8c30f53 librados-config: Distribute the librados-config.8 manpage.
536ae0c librados: Stop bundling the now-unused headers.
bcacb13 buffer: Move atomic.h include from buffer.h to buffer.cc
699c694 buffer, atomic: Explicitly include assert.h where asserts are used.
c26158b buffer: Move buffer::raw* out of the header.
ce76798 buffer: Move functions touching buffer::raw internals into buffer.cc
2bd9ce1 buffer: Move functions touching buffer::raw internals into buffer.cc
a752d83 buffer: Move functions touching buffer::raw internals into buffer.cc
f0f4b80 buffer: Move functions touching buffer::raw internals into buffer.cc
14cff95 buffer: Move functions touching buffer::raw internals into buffer.cc
4878575 buffer: Move functions touching buffer::raw internals into buffer.cc
3a80cc6 buffer: Move buffer accounting into functions, don't expose atomic_t.
456f2fc pybind: Distribute the test script, too. Fixes "make distcheck".
e5fce7b Revert "mds: rip out rename linkmerge support"
7470cc4 config: complain if --name gives an invalid type
cbb4861 ConfFile: add support for backslashes
24caedc pybind: install ceph-pybind-test on debug builds
3149649 rgw: fix decl vs goto error
64185b6 conf: small code cleanups
2dcfe21 osd: fix signed/unsigned comp
f3a00ce ConfUtils: new parser
f842bcf osd: simplify stat
b0f817a osd: process missing when log is empty
0139be7 librbd: remove unnecessary includes
b6084cf config: expand metavariables when needed
94fade2 config: add ability to complain about parse errs
4a27cec confutils: test unicode parsing
0e26ece config: fix metavariable substitution
9981ff9 (tag: v0.26) v0.26
32e422e configure: change gtk dep to 2.12 instead of 2.13 for lenny
3227405 config: remove some unecessary g_conf references
05c281b Revert "autoconf: Complain if tcmalloc is not found."
d941422 cclass: add bindir option
3ce9534 client: close snaprealm on last cap removal during reconnect
553da45 mds: fix trim_non_auth assert for base inodes
9ac44d4 MDS: change messenger name for replay mdses
b21fbab journaler: adjusted requested/received_pos when dropping journal tail
64afb9d confutils: more parsing tests
d4c4b4a journaler: fix partial tail entry correction
2630ecc config: Add confutils unit test
8ea9380 journaler: fix signedness
bb81475 journaler: fix warning
bafff04 mds: fix bounds on import
03c9365 mds: rejoin dirfrags explicitly
a01fba1 mds: set dir_auth between EImport{Start,Finish}
a47c225 mds: use try_trim_non_auth_subtree helper
6fcecbc mds: close exported dirfrag
5d998a7 MDSMonitor: MDS do not standby replay until other is active
ff2c2e3 journaler: fix requested_pos badness in _issue_read
65714c5 mds: show correct incarnation on mdsmap update
dec5b6b mds: fix discover_path
b60a3c9 boto_tool: often use get_bucket rather than lookup
06ed898 mds: fix find_ino_dir completion
c736d7f mds: find_ino_dir debugging
2d92696 mds: fix dir fetch on lookup_hash fix
9bed4e3 mds: fix discover_path
3bfc468 mds: don't query self from find_ino_peers
8408f83 client: lookup_ino command
2f82b39 client: fix lookup_hash request hash value
a603acc ceph_argparse: fix silly usage message
760bc01 config: typecheck initialization macros
ee48325 config: introduce OPT_U64
80d5873 client: fix lookuphash to use rjenkins
6b4fb92 mds: add LOOKUPINO op
1ff3ce1 mds: rename chained _lookup_hash_? methods
80b621b mds: also try to look up ino directly
5e4839b makefile: include MMDSFindIno[Reply].h
ddc06f1 journaler: fix comments
30bffab mds: try find_ino_dir if find_ino_peers fails for lookuphash
d31b76a mds: find_ino_dir
ce2fabc common: fix cmdline of indashes_to_underscores
0a63567 rgw: Properly support truncating on S3 PUT
3f1e9b0 mds: use helper to generate dir inode object names
2639289 mds: allow explicit finisher context for path_traverse
34b0813 mds: fix possible null dereference
705161b mds: add mds failure/recovery support for find_ino_peers
3970340 mds: try find_ino_peers for lookuphash requests
c2c333d mds: find_ino_peer
3afea8f client: lookuphash
cb2f966 vstart.sh: don't put quotes in generated ceph.conf
07ffd55 ceph_argparse: convert dashes to underscores
e6544a3 client: Use NULL instead of 0, for clarity.
9567ba1 man: Make </VirtualHost> be on its own line.
0258166 rgw: fix buffer overflow
4cc7dcc mkcephfs: Actually do a mkfs.btrfs
9606758 rgw: recover from partial bucket creates
f895e20 rgw: use tmap key (excl) create when creating a bucket
7a2b653 config: remove kill_after
d5f10bc testlibrbd: fix warnings
e44a547 testlibrbd: fix warnings
5141e90 testlibrbd: clean up and add tests for snapshots
e424171 librbd: fix snapshot handling
7b28d5a librados, librbd: add some debugging messages
ab6c036 librados: add selfmanaged_snap_rollback
3946779 librados: return -EROFS when trying to write to a snapshot
69f174c mkcephfs: minor fix
cf3bb44 mkcephfs: copy to daemon nodes for each daemon
5a1ccdc journaler: don't block when we adjust back write_pos
887a01f config: parse_argv fix
c6f1cce rados: print error message on exit
ab8871a rados: add 'tmap {set,create} obj key value'
58fc0cf osd: add tmap key (exclusive) create
5837a25 config: fix use of uint64_t* as uint32_t*
59923a8 config: tighten up uint32_t use
6f27492 mkcephfs: copy to daemon nodes for each daemon
c3746da common_init: fix keyring loading
a68ef60 common: Add strict_strtof, strict_strtod, unittest
493e2d9 OSD: ReplicatedPG: commits should be high priority, like acks.
9cde1f4 config: use std::string in md_config_t
3c94cc2 test/bufferlist.cc: Added append tests
172835f ConfUtils: move parsing into config.cc
1fb543c ConfUtils: fix up read API a bit
a854feb ConfUtils: decode to std::string
4410000 mount.ceph: Use LDADD not LDFLAGS to bring in -lkeyutils.
a2ec936 cosd: fix bind to specific address
3a1a318 mkcephfs: minor fix
92e0751 Add an RPM BuildRequires on keyutils-libs-devel.
4af786c config: temporary fix for monclient conf issue
138f360 cmon: fix typo
0f9e318 mount.ceph: fix missing includes
9aab8c6 Add a Debian Build-Dep on libkeyutils-dev.
bee8551 mount.ceph: Use kernel key management API when possible.
73671c8 common: Make armor.h safe to use from C.
69f2467 mount.ceph: Modprobe ceph before trying the mount.
9233889 mount.ceph: Silently pass through options "name" and "secret".
db3703a mount.ceph: Fix strncmp length comparing "secretfile".
ab03eda rgw: add bucket to user list prior to creating bucket
50ad51a rgw: create bucket object and xattr in single operation
9d0697a librados: add create to ObjectOperation
e8ceadb objecter: add create to ObjectOperation, known strings
12a82a5 SyntheticClient: const cleanup
59e2ef1 FileStore: convert dev, jdev to std::string
41899a3 cmon: add --inject-monmap option
de6338c mkcephfs: don't clobber osdmap when importing crushmap
dd5063b librados: compound ObjectOperation
eba5437 config: refactor conf_set_conf_val a bit
82039d7 config: be stricter in set_val
f18eac0 config: whitespace, code ordering cleanup
ddcd641 common: rename old argument parsing macros
51e21a7 common: more argument parsing into ceph_argparse
fc81de5 vstart.sh: Filter out IPv6 and localhost IP addresses.
d8096e7 common: separate file for strict_strtol
5c21823 objecter: ObjectOperation fixes
98dd2d1 journaler: remove obsolete journaler_cache thing
9f57360 rgw: remove extra read_acls
6966c3e msgr: move pidfile handling, signal handing out
b4d49df testradospp: zero terminate before printing strs
e1ce767 mds: include .ceph is root directory
0f241fc common: run_cmd: fix bad implicit conversion
009714b mds: fix client session removal on journal replay
5658857 Fix Debian librados1 -> librados2 package renames
ba4678d journaler: remove ack/safe distinction
2a53c83 obsync: Remove deadcode
e8d8643 rgw: if formatter gets too much data, print some
a5be372 rgw: implement JSON escaping
1bfabef rgw: init_rest: small refactoring
ede7e3d units: remove "performance test" from crypto units
50d0947 units: fix cauthtool usage test
1e7b371 rgw: escape XML attributes
7eca830 boto_tool.py: usage fix
aac1ef5 rgw: don't reject requests that don't have bucket
e1457a2 journaler: remove some dead code from read_entry()
a0704eb journaler: issue separate reads per period
c9d0ede journaler: fix prefetch to handle multiple in-flight reads
3129319 journler: make readahead/prefetch smarter
2ecbd02 journaler: reduce prefetch interval
921cb06 journaler: remove unused read_entry()
658b140 common_init: allow init without config file
227ff6e MDSMon: Add mon_force_standby_active config option.
1324c93 filestore: fix journaling for writeahead, parallel modes
d7f4323 filestore: include stat result (size) in debug output
64141a4 osd: let single large ops through the throttler
d053f53 rgw: fix str_to_bool
a9633ce rgw: don't validate bucket/object names if name is empty
7b6491a boto_tool rework
cd897e7 rgw: path paramter for pseudo folders
1236ce6 mds: drop dead journal flush code
39be6c4 mds: remove mds_log_unsafe mode
1324f8f bucket name: better ip addr detection, allow caps
7fa90ec validate_bucket_name: loosen up
0791dd4 boto_tool.py: add more bucket interaction stuff
399cae9 mds: reimplement laggy
e6b0302 mds: check safe_pos for _expired check
a56a813 mds: skip redundant flush before journal segment trim
9e6c80e mds: assert on mds table write error
597e6c2 osd: factor pg get-or-create code into common helper
70b021d calc_hmac_sha: fix access-past-end-of-buffer
dff2c5b Use macro for digest size, part 2: tests
54cc33c mkcephfs: minor fixes
ac5ad4e do_autogen: create radosgw
fd5fd94 RGW: validate bucket names and object names
e835700 mds: add FIXME for renames between snaprealms
c866536 FileStore: replace op_queue_throttle with op_queue_reserve_throttle
33a4190 mds: add FIXME for snaprealm on rename slave
b738b72 rgw: dump content type when listing objects (swift)
5d8e212 mds: remove bad open_snaprealm()
14c300f mds: simplify _rename_apply branching
d397cfd rgw: support pseudo folders in swift
6346702 ceph_crypto: fix undefined references
7affbd5 boto_del.py -> boto_tool.py
77be1da obsync: remove obsolete cmdline options
cdedfbd rgw: generated swift urls are more compatble with openstack
f30adbb rgw: fix compilation warning
b10a836 rgw: change the swift auth config a bit
942eae4 context: conditional context debugging
6788c3c Rename objsync -> obsync
ff1c7a7 Add boto_del.py
befb87e Add boto_del.py
aa8b7d2 rgw: save roundtrip when reading user info
f509c86 rgw: self signed tokens
1ded567 rgw: keep user info copy in the indexes
e49fa72 rgw: store openstack secret as part of the user info
656dc14 librbd: remove RBD_MAX_SEG_NAME_SIZE
5f14fd9 common: Add utf8 validation functions, test
8133ffd rgw: remove strerror references
c19f82e common: Add utf8 validation functions, test
8aaf93b mds: fix mdsmap dump formatting
21786af Rename osync to objsync
444879c Rename osync to objsync
157e6bd CDir: make check_rstats friendlier.
82f3cf0 MDCache: make linkunlink rstat propagation work properly.
5e1ffb7 MDCache: set up rstats properly in create_system_inode.
964486c MDCache: properly update and project the stats when removing inodes.
24b4fae mds: add check_rstats function and a few users.
c4ccbb7 osync: implement delete-before and delete-after
094aba3 osync: add osync-test.sh
b708307 rgw: fix logging env variable name
ffdc995 cosd: Close TEXT_RED with TEXT_NORMAL in a few places.
8c82f35 osync-test: test --delete in bucket-to-bucket xfer
de44dc8 osync-test.py: test --dry-run, --delete stuff
2602eb3 osync: implement --dry-run option
f2e146a rpm: package python bindings for rados
bede3fc osync-test.sh: test bucket-to-bucket transfers
0a5ceb1 osync: add AKEY and SKEY
b77a323 osync: fix automatic bucket creation
fc99cca osync: add alternate syntax for file:// transfers
e08b3a5 osync-test: test file-to-bucket transfers
453e1f9 osync: add SRC_AKEY, etc. environment variables
07ee631 (tag: v0.25.2) v0.25.2
41675b1 Fix manpage typos
e7abf59 Remove unused cdbs build dependency
e2f1d78 Change wording of Debian package descriptions
be97e60 Make Ceph Debian packaging Linux only
5959e76 Disable libatomic-ops on armel archs
9b969ce Add cross compilation support
1ad567e Add parallel building support for multi{core,processor} systems.
241e29b CephxProtocol.cc: invalid authorizer data should not crash the osd
54f7d83 ceph.spec.in: some CentOS fixes
47abc4f osync: fix hash compares
4f8efd2 osync: fix s3store iterator
1065bef pybind: convert to new API
9db1ecf backtrace: user the proper version header
07ba8ee libceph: use the proper version header
f772a16 libceph: pull version from new version define
55bb9ef configure: no ~
e7f3df7 use 'git describe' version
45e88eb librados: rados_ioctx_lookup -> rados_pool_lookup
0b70fe5 librados: bump minor version number
87e4aa2 librados: bump minor version number
624410f librados: rados_ioctx_lookup -> rados_pool_lookup
a347561 direct_io_test: use mkstmp instead of mkostemps
4db8801 Makefile: check for new enough version of gtkmm
1e342b7 osync: remove some debug printout
033eb9b rgw: dump content length for certain operations
609b9c0 rgw: handle swift auth requests
172f0a2 osync: s3 fixes
2aaf2c6 osync: first version
6b3baf2 msgr: move test binaries to updated msgr bind/start interface
acd7d74 msgr: fix start() return value
601f598 PG,OSD: activate pg during replay
68a2f46 blobhash: Avoid size_t in templatized hash functions.
ceb76ba msgr: temp hack to keep nonce unique
7670b26 msgr: let user explicitly set nonce
2fb9323 config: whitespace fix
e7e2bb8 config: fix get_val, set_val
70d92b7 librados: check whether objecter is initialized before shutting it down
d7c5c56 rados tool: fix fd leak in import
2dae8ad objecter: close all sessions when shutdown
17b98e8 rgw: fix plain formatting
cd40aab rgw: fix openstack list buckets with plain formatting
2489469 mds: fix replay of fragment ROLLBACK
6fa470b common: disable log_per_instance for non-daemons
cae43fc Makefile: drop libradosgw_a LDFLAGS
1fbd3a7 mds: resync fragmentation during cache rejoin
9b52da5 rgw_admin: show '-' if bucket owner doesn't exist (in log)
32fce3c rados_create: correctly handle null id
f06f4ee librados: always call keyring_init in connect
586fc66 librados: don't call keyring_init in init_internal
9e1828a objecter: make response_data bufferlist static
251fd50 rados_create_internal calls keyring_init
c548976 rados_create: set id based on parameter
b1c3321 librados: add rados_create_internal
d1cea6f rgw: use rados::init_internal
c9eccb9 librados: add rados_create_internal
a70b5a8 filestore: return negative error code if open fails
a772c8b rgw: merge crypto changes
3f442f0 init-ceph, mkcephfs: fix $name normalization
d7f6000 init-ceph: use consistent $type.$id naming
844093f osd: only update last_epoch_started after all replicas commit peering results
5d7a12c rgw: explicit case mtime to uint64 before encoding/decoding
6843a0b rados tool: export bucket
2319ae1 logging: don't add --debug
9862afa testlibrbd, testradospp: read default conf file
abc64b0 logging: --foreground options reorganization
22241f8 librbd: int -> ssize_t for aio completion wrappers too
d93c118 librbd: ssize_t return values for read, write
24342a7 filestore: instrument filestore, journal throughput and throttling
3ecfbfb filestore: adjust op_queue throttle max during fs commit
51b9372 testrados: test default conf file location
4c22c15 librados: add default to rados_conf_read_file
ca61378 rbd: int -> int64_t on do_export
174aa56 librbd: use int64_t for read_iterate
4ee75a8 objecter: fix leak of bufferlist from MPoolOpReply
58ffd37 rados tool: close dir after reading through
84b65b5 rados tool: recursively import from dir to pool
df8c009 cfuse: set proper defaults
7f4a161 (tag: v0.25.1) v0.25.1
db25852 cfuse: always daemonize hack
448010f osd: small pull recovery adjustments
4046c4b ReplicatedPG,OSD: Track which osds we are pulling from
a7fba4c vstart.sh: escape " "
7218b09 radosgw: first authorize user then try to read the acls
8126621 cpp_strerror: handle negative error code
52542be librbd: delete block completion in aio_read callback
2b8ef02 librados: initialize done in C_NotifyComplete
87056e1 monclient: fix leak of AuthClientHandler
a94cf48 testlibrbdpp: read conf file and don't double-delete AioCompletion
c52dc5e vstart: put logging options in daemon sections, not [global]
d99b5b6 mds: journal fragment rollback events
d01bd86 librbd: size_t -> uint64_t on internal resize
9bfdf4b librados: use uint64_t for extent len in extmap
b468d67 librados: fixup rados_trunc
1fe9c54 cpp_strerror: handle negative error code
aed8227 rgw_rest: fix printf format specifier
e55047d rados: fix map type
a0e8175 librados: fix size_t -> uint64_t
66603cf librbd: more off_t and size_t -> uint64_t changes
610c76d librados: rename statfs to cluster_stat
1695c0e librados: add statfs to C interface
fe91760 librbd: uint64_t for image sizes
b8280df rados, rbd: off_t -> uint64_t
25fcb6b Revert "librados,librbd: use 64-bit offsets and lengths"
7744441 logging: disable log_sym_history for non-daemons
bc5b27a librados: make AioCompletions delete themselves when released
8acdb91 mds: fix stray anchortable debug spam
34cf240 buffer: disable buffer alloc tracking by default
f6f1d63 librbd: delete block completion after it's finished
3a5b4ef librbd: don't leak rados_completion
e172de9 librados: Remove OperationOp from WatchCtx
e1605c8 librados: cleanup RadosClient's objecter instance when destroyed
7ae5c98 librbd: free RBD::AioCompletion when it's released
277d8ce rgw: avoid duplicate openstack users
b63d406 debian: Conflict on earlier -dev packages with sonames.
b0831f2 rgw_admin: typo
06d9262 rgw: remove bucket metadata object on bucket delete
2574968 rgw: configurable prefix for openstack urls
3fb4fd8 utime: fix operator double() to use the right number of zeros.
f294b26 librados,librbd: use 64-bit offsets and lengths
a373a3d mkcephfs: some fixes
2893187 autoconf: Fix typo that made --without-gtk2 not work.
5d0fa63 autoconf: Handle --without-debug, --with-debug=junk properly.
5613e36 autoconf: Handle --without-profiler, --with-profiler=junk properly.
d1d2e87 debian: add udev rules
8ec6fff osd: fix osdmap scanning on pg creation
55f2b31 Destructors for virtual classes should be virtual
bccffec autoconf: If given --with-gtk2, not finding it is fatal.
290637f atomic.h: fix "crappy slow implementation"
367131a auth: Let common_init (or CephCrypto::init) init auth crypto.
c58b0ab common: Initialize ceph_crypto in common_init.
a60ac55 ceph_crypto: Implement HMAC-SHA1 wrapper for NSS.
2921d6b ceph_crypto: Add unittests for the HMAC-SHA1 compatibility shim.
7e099f9 rgw: Make rgw_main use HMAC-SHA1 via compatibility shim.
edcf6a0 ceph_crypto: Implement MD5 wrapper for NSS.
efa2506 ceph_crypto: Add unittests for the MD5 compatibility shim.
d95367c rgw: Make rgw_op use MD5 via compatibility shim.
4a93e52 auth: Change header file guard define, to make room for non-auth crypto.
f81e545 rgw: use random byte generation in auth/Crypto, instead of CryptoPP.
55ab976 auth: Add a microbenchmark for AES encrypt/decrypt.
3424e3a auth: Allow using NSS as crypto library.
dfbb5ea auth: Make error message on bad AES key lenght say the bad length too.
ff24c82 auth: Use AES IV constant directly, not via local static pointer.
6cef992 auth: Drop "using namespace", it's almost always used explicitly anyway.
420289d auth: Add unit tests to check basic crypto sanity.
e639a93 auth: Removed unused function generate_random_string.
10b0da9 Add test/osd/RadosModel.h to noinst_HEADERS.
a2c02d1 autoconf: Complain if libatomic-ops is not found.
a9afdca autoconf: Complain if tcmalloc is not found.
5df13bb autoconf: Complain if FUSE is not found.
5c960e1 osd: wait for handle_osd_map transaction ondisk without doing a full sync
e731885 osd: avoid setting up_thru on new PGs
0cc4253 testlibrbdpp: include assert.h
f9e8380 librados: librados::WatchCtx needs virtual dtor
435470b osd: CapMap: add virtual dtor to virtual class
c077d6f crushtool: fix warning seen on i386
1f57d49 tests: add bufferlist unit test
4a8400b clitest: Fix tests after osdmaptool --clobber bugfix.
adaa2f0 rados: Add "stat" option, and fix "put" to work on larger block sizes.
863ef7c debian: add udev rules
95db4c5 debian: remove so version from -dev packages
924adaf filestore: assert on ENOTEMPTY
00f2dee rgw: can read old buckets format
d3464af filer: set RMW bit on probe
0abf2c9 osd: fix peer no missing optimization
f04b6ad rgw: can turn off logging
99ef6f6 osd: fix missing.rm()
62054fd osd: fix merge_log missing calculation at split point when logs diverge
d0abd58 mkcephfs: modularize
d1f9e5f osd: fix keyring loading
5c8146b osdmaptool: don't require clobber to create new osdmap
8e3abf3 Don't use -i to set id for non-daemons
33d6251 common: replace -I with -i, rework --name
79605f5 cauthtool: remove short form of --create-keyring
a6d0a99 librbd.cc: trim includes
9f32c50 cram: test --conf=foo cconf syntax
7fe7a81 common_init: Split common_init into multiple parts
88063e3 config: trim deadcode
2bbe83e rgw: escape certain strings in log dump
d0faba06 rgw: fix acl checking when object does not exist
c607219 rgw: log also includes the REST operation
d4d1a8c rgw: get acl explicitly return success
6a19790 rgw: fix log when object not specified
8148d69 ConfUtils::_parse: fix uninitialized var
20c1ffb config: ConfFile::open: return error code
326cb5c build:add common/entity_name.h to noinst_HEADERS
8f0fd62 makefile:Suppress hash warning in include/encoding
c913551 rgw: add logging
1f12028 Suppress gnu_cxx::hash warning a little bit better
058b353 config.cc: retab
cf6b1de uclient: Clear the CEPH_CAP_FILE_BUFFER ref on _flush, if safe.
dae26c5 common_init: call to ProfilerFlush is unneeded
e11bf6f Replace g_conf.name and g_conf.id with entityname
d789d55 makefile: Add -Wno-deprecated
0d7b953 rgw: cast size_t to unsigned long to fix a 32-bit warning.
deca678 librbd: cast offset values to uint64_t for unsigned comparison warning.
b9da5f9 common_init: no signal handlers for library code
37f1c17 Create common/entity_name.h
d79d4e3 Add missing includes
56548b2 mds: use projected subtree in rename anchor check
67b6187 librados: add append to object
065b518 osd: document last_epoch_clean caveat
425570a osd: include all stray peers in might_have_unfound
67c8b91 buffer.h: push_back,push_front of an empty buffer pointer should be noop
b533727 libceph: when calling common_init,set library flag
1cd878b Bump debian/changelog timestamp so it's greater than previous one.
6ef3b67 Make git ignore stamp files from debian build.
d97064e Typos.
468ce23 do_autogen: add -O2 when compiling for profiling
1b99add tests/cli/osdmaptool: default pg_num changed
d4e4af1 testlibrbd: signed return types
8fe0f48 filestore: fix signedness so we can handle errors from safe_pread
69c7e59 version: fix const warning
aa251bd safe_io: fix signed/unsigned comparisons
0cbfbee tests/cli/osdmaptool: default pg_num changed
7a529d5 crush: remove misleading comment
46d63d9 crush: fix memory leak
3fa121b (tag: v0.25) v0.25
4ac0881 Bump librados soname to 2.
82282f2 config: back to 6 pg bits for now
08af63d rgw: put object request returns etag
c07f357 test_missing_unfound: asdf
072a4bd rgw: rest put returns with etag on all APIs
43f6a39 rgw: remove warnings
2494d59 osd: requeue pg for recovery if we may have found someting
53428c0 osd: include all up peers in might_have_unfound when desperate
fbc7370 rgw: openstack HEAD on container responds with metadata
30c5091 osd: recover_primary if recover_replicas starts no ops
836f72a osd: discover more missing if unfound and do_recovery can't start anything
88cc244 do_autogen.sh: add -P option
3d62938 osd: debug the hell out of heartbeat thread
964f1e1 Fix test/signals.cc
ab74d49 librados: cosmetic header changes
e779a3c librados, librbd: use separate IoCtxs for data and metadata
37edd47 librbd: fix error message and unnamed constant
4934329 librbd: change RBD::open to take a reference to an Image instead of a pointer
fdd50a1 librados: remove unused member of IoCtx
1de0b27 librados: IoCtx destructor should put reference only if initalized
2e3b844 librados: can set up object locator
f45a790 librados:rados_ioctx_stat -> rados_ioctx_pool_stat
3ebaa4c object_locator: fix clear()
b2ceb75 librados: use atomic_t for reference count
6f797af librados: make IoCtxImpl a pointer in WatchContext
773f003 librados: decrement refcount of old io_ctx_impl in assignment operator
0e32cd2 librados: fix IoCtx::from_rados_ioctx_t
ecab94c Rename radios_ioctx_{open,close} to create/destroy
ae77624 librados: remove IoCtx::close()
7d06b1b Make git ignore core files.
7788041 Make git ignore python generated files.
7d6a4fc librados: Crashed on shutdown if connect was never called.
b734043 libradoshpp: put ceph stuff in namespace librados
b97388f librados: don't create unused SnapContext objs
062dd5e librados: fix copy ctor of ObjectIterator
46d6214 testrados: add object stat test
60482f5 testlibrbd: recreate test pool each time
2a4b0d1 radosgw_admin: change usage, improve uid lookup
1ed2d8c Fix test/signals.cc
a6ef907 librados, librbd: use separate IoCtxs for data and metadata
75f7ea3 librbd: fix error message and unnamed constant
9bd627d rgw: can show bucket size and count
8c3133e configure: fix profiler check
b941cfd common: block SIGPIPE everywhere we can
3b34e2f messanger: shouldn't throw sigpipe on failed socket
d1fce13 common: block SIGPIPE everywhere we can
a41865e messanger: shouldn't throw sigpipe on failed socket
bb42a71 configure: fix profiler check
ed01fa1 dout: Log version message when (re)opening log
82c5f3a Thread: don't mask signals except in library code
5c668d2 dout: Log version message when (re)opening log
b37facc msgr: fix typo
1ad48f1 CDir: Don't write out the header on a partial commit.
a712664 CDir: pay attention to the max_dir_commit_size!
f12e1a9 tcmalloc: warn if you try and dump without the profiler running.
d467fbf mds: rip out rename linkmerge support
f36e458 tcmalloc: create perfglue handle_command functionality.
aac1e95 locator: pool id is signed
3fccc0a qa/workunits: added fsstress.sh
39d70de osd: drop old ceph_osd_request_head
6fd6db7 osd: new encoding for MOSDOp when OBJECTLOCATOR feature is present
71e46d8 osd: add OBJECTLOCATOR protocol feature bit
3e09e1c encode locator information in osd op
07bf9b8 tcmalloc: switch the interface.
5edf58a testradospp: don't try to read /etc/ceph/ceph.conf explicitly
1a2e2a7 msgr: fix chdir after daemonize
f76cf9b librbd: change RBD::open to take a reference to an Image instead of a pointer
64186f9 dout: Reopen dout after parsing all config opts
bf1ae37 dout: remove g_conf.log_to_file
5ebd4f8 logging: default to foreground logging
75e2a07 cmds/cosd: Fix IsHeapProfilerRunning implicit return type cast.
a616733 mds: drop some dead code
b6bfa8c mds: fix one rename dentry linkage projection case
0c87dfd dout: Reopen dout after parsing all config opts
07b99e8 dout: remove g_conf.log_to_file
b9224d8 logging: default to foreground logging
c916905 osd: cache map bufferlists until they are flushed to disk
d5da4f0 safe_io: fix signed/unsigned comparisons
74f5bc5 mds: drop some dead code
49bbe0a mds: fix one rename dentry linkage projection case
7cd8ac0 osd: trigger discover_all_missing after replay delay
e55c2a9 osd: handle osd_ping (and ack requests) while !active
c031e5a CDentry/CDir/CInode: Add comment on use of boost::pool.
f353f59 osd: simple test for random missing objects during recovery
0b886a8 librados: remove unused member of IoCtx
b86461d osd: recovery cleanups, better error messages
29cb6f8 osd: update missing_loc when infering an empty missing set
f74593e osd: fix unfound output
f3bdfc5 osd: add object to missing if we find it missing on disk
1459234 osd: (semi-)handle case where primary copy isn't there
5997059 osd: continue recovery after encountering missing objects
5bc1a33 rgw: Remove unused CGI_PRINTF lines
3e4cf6f rgw: Remove unused definition of "SERVER_NAME"
a524c09 rgw: initialize bucket creation time
fa8fa40 rgw: bucket creation uses tmap for atomic update
3552c29 debian: remove extra dependencies
4ed8bec debian: fix libcurl dependency again
644bcb6 debian: add libcurl dependency
0a4f4d7 configure: add libcurl dependency for rgw
e2c1125 Makefile.am: update noinst_HEADERS with new rgw headers
0bad44a rgw: multiple openstack, rgw_admin fixes
be6f848 rgw: openstack put object fixes
4e3ad0c rgw: fix get obj
fecf37e rgw: openstack: implement some more functionality
93e56b6 rgw: openstack: list containers, list objects
543b986 rgw: add missing files
fc63d97 rgw: can output data in multiple formats
090a7c0 rgw: move authorization to the specific rest handlers
d3285d6 rgw: move things around, separate implementations
fe871d9 rgw: keep openstack user to rgw user mapping
3428fe3 rgw: verify openstack tokens
c77c753 rgw: disable cache
57d0c17 rgw: fix crash
3e62d8a rgw: add a cache layer for the backend
866b161 osd: enable cpu_profiler
7c2e4bf librados: IoCtx destructor should put reference only if initalized
35c4a9f Thread: don't mask signals except in library code
9359cb5 Makefile.am: fix for testlibrbdpp
afbd705 librados: can set up object locator
f3ff51f librados:rados_ioctx_stat -> rados_ioctx_pool_stat
26dfe15 object_locator: fix clear()
7a429d9 profiler: move perftools glue into perfglue/
18e9b66 do_autogen: add -P (--with-profiler)
9f95489 mds: cpu profiler hooks
8636313 add --with-profiler to link in google perftools libprofiler
a466800 librados: use atomic_t for reference count
412af3e librados: make IoCtxImpl a pointer in WatchContext
f013b8a librados: decrement refcount of old io_ctx_impl in assignment operator
0290074 librados: fix IoCtx::from_rados_ioctx_t
1f5fca8 Rename radios_ioctx_{open,close} to create/destroy
d134915 librados: remove IoCtx::close()
5724807 testrados: add object stat test
58d60e0 testlibrbd: recreate test pool each time
f191175 PG: unify scrub_received_maps and peer_scrub_maps
19bcd74 osd: trigger discover_all_missing after replay delay
7a2bb8d Make git ignore core files.
adb6750 Make git ignore python generated files.
d372c50 librados: Crashed on shutdown if connect was never called.
dd1bd2c PG: refactor scrubmap comparison and repair logic
d03bd60 PG: replica_scrub also should not block
88ced09 PG: make scrub non-blocking
2adb670 OSD: add scrub_finalize_wq
03135a3 OSD: activate_map should not do_peer on a replaying pg
ee53452 osd: handle osd_ping (and ack requests) while !active
399032c osd: share osd->osdmap with map cache
c76a4b7 Revert "move g_default_file_layout into ceph_fs.cc"
8d877ab Add comment to ceph_fs.cc
70564eb libradoshpp: put ceph stuff in namespace librados
a66fd3b librados: don't create unused SnapContext objs
13f6223 librados: fix copy ctor of ObjectIterator
e7f2972 cconf: fix clitest
3011349 unittests: remember to use AM_LDFLAGS
141509c Rename PoolHandle to IoContext: part 2
78ba46a testlibrbd: call rados_connect
040e546 pybind/rados: Fix invalid variable references in error paths.
8c2d572 pybind/rados: Remove unused variable.
9591729 pybind/rados: version call return type is void.
32cf5ac FileStore.h: reorder queue operations in _journaled_ahead
afe2d81 Revert "FileStore: fix OpSequencer::flush error"
96c2cb5 osd: simplify handle_osd_map flushing and map caching
74aa684 librados: Rename rados_pool_t to rados_ioctx_t
8903ea3 testradospp: update for new librados API
454854e testlibrbdpp: convert to new APIs
bde6dac test_common.sh: should rm objects before adding
4937854 rbd: de-globalize rbd, rados, Image
b654787 librbd, librados: fix my last commits to use the new librados API
2641a69 librados: add snap_get_stamp to C API
1526047 testlibrbdpp: initialize pointers
2cb86f7 librados, librbd: remove selfmanaged_snap_rollback_object
9758af7 testlibrbdpp: use new librbd api
f9fe949 rbd: update for librbd api changes
f54ba07 librbd: tweak C++ API
06bf77e librados: C++ API rework
037d662 Update Debian packaging for 0.26~rc.
8dfffd0 FileStore.h: reorder queue operations in _journaled_ahead
9570d6e Revert "FileStore: fix OpSequencer::flush error"
d15fe7f rollback rename
e3f3177 rbd: use new librbd C++ api
154a21f librbd: make C++ api nicer
827c950 v0.26~rc
7abf87a mds: fix gratuitous map lookup
d844602 mds: mark_down connections to any failed peers
3e691d3 mds: fix export cancellation vs nested freezes
7c66adf filejournal: fix type punning warning, drop unneeded cast
32c913a Some tweaks for the librados C API
fa3dee1 librbd, rbd: fill in the rest of image_info_t
71bbd55 Makefile: fix libatomic_ops linking
92870d7 mds: remove "N stopped" from short mdsmap summary
f027b08 mon: include mds gid in logs
9eb3532 mds,osd: print 'starting ...' message to stdout
298916b common: only print version to stdout for daemons
813ae59 mds: add 'exit' command
0f3fe7f mds: fix frag string rendering
18305fc mds: strengthen assertions in rejoin ack
c78b29a FileStore: fix OpSequencer::flush error
15fa05d mds: print waiter tag in hex
df7c7bd mds: make frag string rendering simpler
3b1fa97 mon: fix dup mds takeover
8d37002 mds: print msg when fragtree updates from journal
436153e mds: verify frags in more approrpiate places
f13e6a4 mds: refragment dirs when inode dirfragtree updates from journal
f6a9261 mds: fix CDir::take_waiting() on dentry waiters
0fb83f1 More fixes, additions for config API
efc20c6 Update testrados, rename functions in librados.cc
3c6736d rados_create: add id parameter
0f90d15 Fold common_set_defaults into common_init
5f73086 Splt rados_init into rados_create + rados_connect
871fa1b Add rados_conf_apply, comments
0d54e31 md_config_t::set_val/get_val
21544fd common: more include and copyright fixes
ebc9dbc common: Fix some missing includes, copyrights
713f9a1 cconf: remove second argument to cconf --lookup
29b6439 ceph_common.sh: remove get_val, get_val_bool
431a5bf Rename config.h -> common/config.h
f2e3d83 config.cc: doesn't depend on ceph_ver.h
96eddde testlibrbdpp: update for new librados and librbd APIs
c5bb735 rbd: update for new librados and librbd APIs
134f261 librbd: implement stacking on top of librados
b1d6e30 librados: add constructor to allow client re-use
15f20f5 librados: switch to noun_verb function names
b2ceebf librbd: stack on top of librados
7434659 ReplicatedPG: snap_trimmer should bail out while finalizing_scrub
4ddc5db OSD,PG: fix race between processing scrub and dequeueing scrub
89b743c osd: fix recovery pointer when pulling head before snapid
48f6989 osd: verify object version during push
e4b8274 osd: improve up_thru request behavior
4df3643 pybind: update rados python bindings for new API
0e4e5a5 osd: set correct epoch for up_thru osd->mon request
158889b PGMap: make osd_full and nearfull ratios configurable.
950e8c3 librados: more API cleanup; rados_conf_ stubs
1dc12e3 move g_default_file_layout into ceph_fs.cc
2de8b7b librados: add cluster handle to C API
0a96e6a Makefile: include ceph_argsparse.h in dist tarball
4ffe069 filestore: fix clone_range
2a59b21 common: Split argument parsing into ceph_argparse
349cb12 keyring_init: don't print error when explicit key/keyfile is specified
859aaf7 Revert "keyring_init: g_conf.keyring is not a list"
2fb6036 keyring_init: g_conf.keyring is not a list
b96f164 Revert "Makefile.am: remove unused libs from linking with librbd tests and rbd"
f51040c Clock: remove unused mutex
a2f0cd0 test: Add new memory tests, move to own subdir.
654dc79 vstart: remove directories, too.
eea1f09 OSD: convert waiting_for_pg from hash_map to map.
935eaf3 PG: remove the object locking stubs and some dead code.
f49909b PG: convert hash_maps to maps, remove unused.
5db1e50 debug.h: cleanup includes
d362874 common: Move hex dump functions into hex.h
61b661b Makefile: version.cc should depend on ceph_ver
ef0e07d debug.h: move Ceph version stuff into version.h
38f38a9 Revert "Makefile.am: remove unused libs from linking with librbd"
eadc3c8 testlibrbdpp: fix off by one error in read test
e5db46c Makefile.am: remove unused libs from linking with librbd tests and rbd
9bbd6c3 Makefile.am: remove unused libs from linking with librbd
b56cafe pybind/rados: write_full: remove silly extra param
3e4aaf9 pybind/rados: implement Pool.write_full
7171cf6 librbd: hold image context lock minimally
b93be8c pybind/rados: implement Pool::change_auid
23df5ba pybind/rados: add rados.version
8be3ad1 pybind/rados: Add Rados.pool_exists
09e01fa pybind/rados: Snap.name should be a py string
aeac6a6 pybind/rados: add snapshots
ae702b3 Add Pool::list_objects
0a3798e Add pybind-test
f06604c rados-python bindings: Fix pool deletion a bit
da41600 mkcephfs: fix premature tmp directory deletion
0406632 .gitignore: ignore testsnaps
dfafa9f .gitignore: ignore debian packaging outputs
fc1ce08 monmaptool: fix command-line output
651fac6 dout: don't print version when forcing fg logging.
e4ecddd dout initialization: remove unecessary flush()
e4054d2 dout: properly output ceph version on opening dout
5676253 monmaptool: set_foreground_logging
29b5ae0 simplemessenger: Fix num_threads bug printout.
03e56b7 msgr: complain if there are > 1 threads, not 1
e86e4cf init-ceph: use do_cmd for pid_file dir creation
3b03c5a osd: fix population on unconnected_watchers on obc load
6fb416b common: thread: get number of threads from /proc
fec2483 Remove ExportControl (we have better auth now)
2650468 init-ceph: status: use daemon_is_running
76667c4 init-ceph: fix status for multi-node clusters
b0862e3 test/osd: Fix indentation on RadosModel.h and TestSnaps.cc
28bb6fb testsnaps: add snapshot test
d496b65 Journaler: add some checks for expire_pos.
bfe2c3c Journaler: call set_layout after init_headers.
a9c330e OSD: ignore osd_max_write_size if it's set to 0.
31a17c6 common/lockdep.cc: don't use dout unlocked
16cd917 assert: allow assertions inside calls to dout()
3736192 dout: Convert _dout_lock to plain pthread_mutex_t
1543d36 assert.cc: some cleanup
dd21803 common/debug.h: use std::string rather than string
65bb14f common: Remove common/tls.cc
db188f0 dout: use DoutLocker rather than Mutex::Locker
a7b8e9c os/FileStore: use derr/dendl for dout locking
e7b584f os/FileStore: use ceph_abort rather than abort
97809ee lockdep: balance dout and dendl, fix whitespace
4ee35b0 Journaler: fix bad assert.
da69669 testlibrbd: fix printf args
4f4306e common: create dout_emergency interface and use it
6a80064 cfuse: use safe_read and check return value
81beac5 testlibrbd: check return values
a930c7a debian: add python, python-dev build-deps
940d58d msgr: clean up Pipe::queue_received locking
25c71ea MDCache: switch CDir::_commit so that it can limit max write size.
4328a55 MDCache: add max_dir_commit_size.
74c4d86 MDS: Don't always _commit_full just because we have a complete dir.
b7d1d05 objecter: set linger op target pg when a linger is resent
7e1ebd7 Disable lockdep for ExportControl, ConfFile locks
3129581 MDCache: switch CDir::_commit so that it can limit max write size.
12e14f7 MDCache: add max_dir_commit_size.
fa4a923 MDS: Don't always _commit_full just because we have a complete dir.
b7de2fd .gitignore: py-compile
cd85992 librados: include headers in dist tarball
0c97d79 ceph.spec.in: add librbd
e21034e Make git ignore librbd tests.
27a7b5a ceph: add --concise flag
09c019b monclient: fix weirdness when we explicitly start with non-master mon
f70d904 config: Remove g_conf.num_osd, num_mds, num_mon
718c42b Make git ignore qa/workunits/direct_io_test.
8a1906a MonitorStore: check for ENOENT, not EEXIST
a350296 common: bufferlist::read_file: use safe_read
d431295 auth/Crypto.cc: use safe_read_exact
22dece1 os/FileStore: remove unused variable
2cd2c56 (tag: v0.24.3) v0.24.3
b60444b make:add messages/MOSDRepScrub.h to NOINST_HEADERS
c695a61 cephtool: get_indata should use safe_read_exact
378ba0a mon/MonitorStore.cc: use safe_read
42b735c rados.cc: use fwrite to output data to stdout
c7886ba common/common_init: use safe_read
e5fbf5e os/FileStore: fix error handling
12a47f5 s3.sh: simple bug fix
1021f5e rados: add create op
ff85407 common/DoutStreambuf: use safe_io.h
2aabb90 tools/common: use fwrite to write stdout
70a8b62 osd: write_meta/read_meta: fix error handling
5987400 msgr: better error checking for write_pid_file
635c535 os/FileStore.cc: use safe_write
c3f0f09 common/buffer.cc: kill deadcode
0d4244d common/ConfUtils.cc: use safe_write
d249194 MonitorStore::put_int: handle I/O errors
56943de common/safe_io.h: warn about unchecked returns
e8ac5aa cfuse.cc: use safe_write
4a4c2ee mds/Dumper: use safe_write
ea80a06 btrfs_ioc_test.c: use safe_write
cd2a2d7 test_disk_bw.cc: use safe_write
4de7fd4 common: safe_io: allow C files to include safe_io
84b9089 client/fuse_ll: use safe_write
b161e6a os: convert some read/write uses to safe variants
a743e31 common:safe_io: create exact and non-exact variant
380ccfd common: safe_io: handle EOF on read
500edf7 rbd: fix signed/unsigned comp on i386
a476cce Removing files that look completely unused.
8f43d4e osd: avoid message leak in error path
5d3a129 config: fix -f option settings.
af755be filestore: fix fiemap
65560ef testlibrbd: change strcmp to memcmp, other stuff
82f5989 librbd: use watch/notify internally to keep ImageCtx updated
ec01b30 librbd: add C++ interface tests
e26b194 librbd: fully specify std::string in list function
f7475de dout: don't print time to syslog
061b8d9 pybind/rados: expand on error handling a bit
8284b6b Add python bindings for rados
820d1a7 On i386, pthread ids are 8 hexdigits. Adjust cli tests.
fe298fc msg/SimpleMessenger.c: fix signed/unsigned compare
76fd853 os/FileStore: fix signed/unsigned comparison warn
af77fa4 os/FileJournal: compare like types in MAX()
2ca337d tools/gui.cc: fix signed/unsigned comparison
eb20de4 rbd: fix watch tool
1ce2a55 rbd: modify watch
5d7f482 librbd: fix completion cb mixup
778902b make:add messages/MOSDRepScrub.h to NOINST_HEADERS
cc525b3 osd: discard scrub reply if pg changed
a948aa1 osd: avoid map_lock for scrub_map reply
36097c3 osd: never rewrite log after {advance,activate}_map
3055d09 osd: always write backlog after creation
19afe11 osd: fix no missing inferance
7d5fc1a common_init: don't force profiling_logger = true
c0416af common: Rename Logger to ProfilingLogger
2315759 common: combine set_fg_logging into common_init
0b862ec gitignore: ignore massif.out.*
e028cc4 config: kill more unused options
7d3e8af cfuse: remove high level fuse interface
4162920 PG: remove sub_op_scrub
212f977 PG: switch _request_scrub_map to send MOSDRepScrub
03c7b06 OSD: Adds handler for MOSDRepScrub
aed279e PG: added replica_scrub
cb4fcfe OSD: Add rep_scrub_wq
4cab203 rados: Adds CEPH_OSD_OP_SCRUB_MAP sub op
7245b6a MOSDRepScrub: Adds a message for initiating a replica scrub
ea3266b librbd: change tests to use new rbd_list and rbd_list_snaps interface
022faca librbd: depends on librados
6ce5e88 librbd, librados: cleanup
d3e6222 librbd: modify rbd_list() interface
e7312bd librbd: modify list_snaps C interface
e40bb79 librbd: check aio return values in tests
6a5c26a librbd: remove redundant casting in C aio completion functions
52f0945 librbd: add C api I/O tests
654a1f8 librbd: finish C I/O api
78c856c librbd: change bufferlist namespace
e8238bd rbd: revert to the old(er) export implementation
23426fc librbd: fix aio_read
b43a52c librbd: aio_read, still buggy
0d870c4 librbd: add C version of get_rados_pools
f1d5f1c librbd: add rbd prefix to C version of set_snap
4220598 librbd: add set_snap and I/O to the C API
5e1e362 librbd: use RBDClient directly in the C interface
18c3189 librados, librbd, radosacl: use new include paths
93d32c6 rados, rbd: move include files to their own directories
9bb5b55 librbd: Install the headers in the development package
c4ddbaf librbd: aio write
a2109d4 librbd: convert to dout
88a004a librbd: use a pointer instead of a globally constructed RBD instance in the C API
7aefb32 librbd: initialize order in C API test
8dd2500 rbd: dynamically link with librbd
4994174 librbd: re-read image header in get_snapc, and call it after snap create and remove
6de5908 librbd: remove unnecessary argument to trim_image
9b9a3c0 librbd: store snapshot names in image context and use them when listing snaps
f18c721 librbd: add packages for librbd
78fe393 librbd: update C interface and tests to use image contexts
0d8bcb1 rbd: fix misc problems
a411c00 librbd: synchronous read and write functions
2ac597a librbd: use helper to set ImageCtx snapid
74b5e97 rbd: use updated interface with image_t
ccb8659 librbd: use snapshot metadata from ImageCtx insead of refetching it on each call
014ecb8 librbd: remove pool_t parameter from some api calls
b443b7a librbd: remove set_assert_version on resize
747a5ac librbd: make ImageCtx stuff compile and remove it from remove/copy/rename
9942287 librbd: add ImageCtx and open/close image
58776ba librbd: implement some more functionality
691d23f librbd: update C interface and tests
92a03de librbd: return 0 on success in open_pools
3e9c183 librbd: remove do_ prefix from RBDClient methods
3ebefaf librbd: pre-declare RBDClient to avoid a bunch of casts
36c0c10 rbd: get it compiled with updated librbd
b93ddac librbd: make it compile
591fe95 librbd: modify interface a bit
a5362c5 rbd: update the command line rbd tool to use librbd
bd3d484 librbd: add tests for the C api
41036c0 librbd: initial implementation created from rbd.cc
e531ecd common: call closelog before openlog
6ad4d10 vstart.sh: -k doesn't take an argument
7e07ee0 config: call openlog to set ident
eb9e619 dout: force reopen after conf read, fg logging set
aa8a255 mkcephfs: fix bug in multi-node setups
0711599 safe_io: move to C
9a44295 ceph: use new safe_read wrapper
79983c2 add safe_{read/write} wrappers
6799b86 build_debian_image: include bind9-host
56e4aa4 build_debian_image: fixes
6bf53f1 filejournal: fix return code check
be8cdb0 qa: test for proper i_complete handling
8019878 build_debian_image: include libcrypto++ (need for runtime)
2635a3b kernel console debug output setup scripts
b5f7592 script: add script to build uml images
390786e remove old script
652fc3f remove ancient web content
d7af210 mon: ignore mds boot messages with zeroed port
5a50d33 client: more carefully gaurd local cache truncate
5b754cb msgr: make remove_pid_file fail silently if nothing to remove
f77c889 remove ancient mds_local_osd option
d5fced1 fakemessenger: remove fakemessenger and related dead code
0797b53 clock: remove tare function
ffd95ee config: remove (most) unused options
865d5cf client: set lru midpoint
f975fde logger: don't calculate variance by default
bd7a043 msgr: check return values
6c47bde msgr: check return values for write_pid_file
ff0e57d msgr: SimpleMessenger::start: fix unchecked return
a454f23 msgr: remove deadcode, warnings
4b1d86c msgr: remove_pid_file: fix unchecked returns
e58c371 os: FileJournal::do_write: fix error handling
b75846e filestore: handle read_op_seq errors
f54b793 osd: Return error code when a write is too large.
e22be43 config: add new osd_max_write_size option.
a2abe5f assert.h: Add ceph_abort
23d733a os: _check_disk_write_cache: fix error handling
712f589 cmds: check return code of chdir
cf1b969 unittest_encoding: build without -fstrict-aliasing
b5d2751 FileStore::mount: fix error handling
e1df71f os: fix zeroing first chunk of FileJournal
f45d556 os: FileStore::mkjournal: fix error handling
b1196b8 os: FileJournal::create: fix error handling
38877bb cmon: check return code of chdir
5be24ee tools/common: EINTR/unchecked return fix
00bd2cb rados: fix pedantic gcc warning on writing stdout
c956ee2 filejournal: fix unchecked returns, modularize
e49dced signal: fix redefine warnings
400813c ReplicatedPG: snap_trimmer fix leaked lock
7a02070 ReplicatedPG:snap_trimmer should return if !clean or !active or !primary
1778892 cosd: check chdir return code
2daa45e osd: Ager: remove Ebofs leftovers
5286675 Add do_autogen.sh
09c38e8 mkcephfs: clean up temp files, honor $TEMPDIR
b780b91 filer: fix probe
87c022c client/fuse_ll.c: const cleanup
5f18f20 Revert "client/fuse_ll: fully initialize callback struct"
f0059c2 Revert "client/fuse.cc: explicity zero fuse function ptrs"
5e6f556 filestore: fix wipe_subvol the rest of the way
9fd1ae4 filestore: fix (part of) wipe_subvol
c110812 msgr: add nonce parsing to entity_addr_t::parse()
6d1f358 os: FileStore::wipe_subvol: fix removing old dir
92ded7e cosd.cc: better error message if osd->init fails
af9bc4f auth/ExportControl: fix allow_def leak
18d882b mds: make SETDIRLAYOUT start with ancestor policy
02ce734 MonMap: add,remove,contains can take const references
88313ee SimpleMessenger: learned_addr can take a const ref
7b43f6b mds: handle_client_setdirlayout: init fl_pg_pool
8961ce6 librados: print out errs in do_import, check EINTR
ff64562 include/utime.h: avoid comparing float with 0
0bcbe7c crush: eliminate signed/unsigned comparisons
38b5001 client/fuse.cc: explicity zero fuse function ptrs
e983784 mount.ceph: put static at the beginning of decl
8b283ff tools/gui.cc: remove empty else statement
e533a56 mon/OSDMonitor: don't check if unsigned < 0
7e4cec3 osd/OSD: remove always-true assert
0c977e8 const-ify some unchanging static structs
e7e4c44 rgw/rgw_rest.cc: fix uninitialized static struct
800507e osdc/Filer: assert(0) on stat error
516ac99 client/fuse_ll: fully initialize callback struct
e0be4b5 mds/locks: fully initialize lock states
81c173b osdc/ObjectCacher.h: don't assert unsigned >= 0
5684a7e Client::readdir_r_cb: fix "always returns true"cmp
e251f51 direct_io_test: fix signed/unsigned, printf flags
f4f066b src/config.cc: fully initialize g_default_file_layout
fa18b74 crush/builder.c: fix signed/unsigned confusion
c9f4060 include/buffer.h:unsigned variables are always >=0
e3fe2db RGW: RGW::GetObj - signed/unsigned bug
960cd6d RGW: fix ret in RGWCopyObj::init_common
10ceea9 RGW: fix shadowed variable error
763fb13 RGW: get_service_secret returns a bool, not an int
d47789d RBD.cc: pread returns a signed value
4587f1f mount.ceph: option parsing fix
2b9cb24 Fix base64-decoding when input ends in newline.
acf40be Fix inner loop index variable. i and j are too close together ;)
c7ac6f9 osd: Fix compile-time warning.
cef3ce8 mds: Remove unused variable.
0b7174f rados: Make rados tool "put" objects in chunks.
0b166c3 mds: Remove redundant cap suppression code.
0972202 Speling fixes
eb3f65a Improve mount.ceph.8
471b189 monitorstore: check return values
8ebcc80 mds: check return values in dumper
cb897a5 confutils: check return values
05f2658 os: use scoped variables for fds
a4781df test: add test_csyn
2faf6a0 csyn: implement localize_reads cmdline option
e603015 osd: change unfound handling when using localize
a4c9bdf Hadoop: set localize_reads
7912f5c cfuse: add --localize-reads argument
087d415 libceph: iface for CEPH_OSD_FLAG_LOCALIZE_READS
e165f8e objecter: implement FLAG_LOCALIZE_READS
a28dbc9 objecter: send read to random replica if BALANCE_READS flag is set
ece4f61 FileStore: fix double close
06fe132 FileStore: fix double close
16ffcf7 common: config.cc: use "admin" as the default id
ffd549b common: move init_g_conf into md_config_t ctor
196b817 common: config.cc: whitespace cleanup
a437532 common: config.cc: de-globalize g_fake_kill_after
6a03ffb common: config.cc: de-globalize show_config
68f929a common: clean up g_conf.id initialization a bit
4380920 common: remove ceph_set_default_id
49e238b FileStore: fix error handling for mkfs, umount
79ed51f mds: make --dump-journal preserve offset
2373972 gitignore: ignore eclipse metadata
a45e8f2 remove ancient active/ stuff
f271333 osd: don't leak fd on error
4d50af7 crypto: don't clobber errno
0f3198e OSD: update_osd_stat take heartbeat_lock
cf59cdf mds: skip a few more inodes during journal reset
e405d4a mds: implement journal reset
f8f2cae mds: open mydir (along w/ root) inode from boot_start()
14c669c Locker: Drop loner correctly!
9b42e8e Locker: Drop loner correctly!
04728b8 librados: fix C interface const, too.
9e4325b mds: defer sending resolves until mdsmap.failed.empty()
f711508 mds: defer sending resolves until mdsmap.failed.empty()
aed862b mds: standardize option parsing
334a756 common: _dout_lock: initialize _dout_lock first
02408ec config: remove dead stringtable cruft
e373d95 common: Put debug.cc last in linking order
2a266bd os: FileStore: Add commit timeout
eda48fa rbd: Rados::init: clean up after failure
ba5cbb3 os: FileStore: ctor should init all class vars
184048c os: FileStore: remove default param
1ea8f2b os:FileStore:use std::string rather than huge bufs
3544274 osd: fix mutual exclusion for _dispatch
adffe53 units: add signals unit test
bb72d95 mds: cluster_fail instead of reset_cluster
e59007c mon: add mdsmap DOWN flag to prevent mdsmap updates
c3d4014 mdsmap: add flags
9ebd773 mon: add 'mds reset_cluster' command
73e7672 .gitignore: vstart generated files
0c2ec2d vstart: put tmp files in /tmp
fbcf669 osd: preserve ordering when ops are requeued
7d65f6e osd: restart if the osdmap client, heartbeat, OR cluster addrs don't match
47dc27a osd: avoid extraneous send_boot() calls
fce3c8d test_unfound.sh: kill cosds rather than mark out
6685bae disable scrubs during test_unfound
561224e librados: Remove rados_pool_t& usage, and pointless consts.
8aff0dd mon: implement PGMonitor::get_health
5c5408b mon: OSDMonitor::get_health: const cleanup
23a7e88 mon: MonitorStore::mkfs: use run_cmd
9ecd5fe os: FileStore: use run_cmd instead of system
b68e121 common: Add run_cmd
ba998f0 ReplicatedPG: _rollback_to fix the just cloned condition
81c0ec1 mon: remove PGMap::pg_set
b17de79 mon: PGMap::apply_incremental must maintain pg_set
5beec0b os: readdir_r: read into PATH_MAX-sized buf
f19ef8e dumper: rework slightly to prevent incorrect usage of g_conf.id.
bc98a0f MDSMonitor: fix bugs with standby-replay assignment.
0fbbbad os: FileStore::mkfs error handling fixes
212289f vstart: Add --standby_mds setting, for auto-creating standby-replays.
58637ac debian: fix publish.sh for ubuntu
f7572de (tag: v0.24.2) v0.24.2
4a49a87 msgr: make connection pipe reset atomic
3a30eb7 msgr: include con in debug output
943fd14 filestore: don't wait min sync interval on explicit sync()
f4a07df MDSMonitor: Don't create new map for standby-replay spam.
785c498 MDSMonitor: remove unused code.
1b45088 MDSMonitor: be more conservative with use of pending_mdsmap.
a9824b0 MDS: MDSMonitor: Make MDS set standby-replay preferences, not MDSMonitor.
69447f7 man: Update cmds manual.
76fbdf1 MDSMap: Update/fix print function.
74ce6e1 MDSMonitor: On restarting MDSes; set to standby-replay if appropriate.
95ed2e4 MDSMonitor: Try to assign unassigned standby-replay MDSes during tick()
b7bc471 MDSMap: split up find_standby_for into multiple functions.
cc207ca MDSMonitor: Adjust handling of MDSes asking for standby-replay.
54bdac7 mds: Adjust replay state changes and options parsing.
ea2266d os: fix minor typo in function defs
6b4ee9e os: fix some obvious error handling problems
ffb208e Makefile: use new Spirit headers where available
76a1e09 Makefile: remove unecessary header check
017495d Makefile: use CXXFLAGS more consistently
a2a7d03 test: Add test_rw
a139b24 messages: Let MMDSBeacon set_standby_for_name from a c-string.
28d08f2 config: add new mds_standby options.
4b60223 mds: Keep journaler in readonly mode until replay completes.
785bf0f ReplicatedPG: fix snap_trimmer log version bug
3e4a82e FileJournal: don't overflow the journal size.
de013c2 msgr: don't need to reinstall signals after daemon
444e930 mds: respawn must unblock signals before exec
59e8e16 common: move signal blocking into signal.cc
ba000d9 common: add signal_mask_to_str
aaed6eb msgr: always start reaper
027335a monclient: fix locking
78e31f1 mds: respawn must unblock signals before exec
f2ce966 common: move signal blocking into signal.cc
a01bc97 common: add signal_mask_to_str
3b6ce33 units: RandomRoundTrips: fix endptr for buffer
942eb0e workunits: direct_io_test: fix error message
6a20b83 workunits: direct_io_test: add cmdline options
42709d1 workunits: direct_io_test: test more iterations
f1d7af9 workunits: add direct_io_test
6c85b10 common: pthread_cond_signal: don't need lock
715bbca init-ceph: more verbose status
ad8951a signals: signal.cc: trim includes
189cf33 common: re-install sighandlers after daemon()
6041302 common: move signal handler stuff into signal.cc
ba57520 signals: signal.cc: trim includes
f33a33e mds: store migrator lock set over course of export
48ebab6 ReplicatedPG.cc: fix snap_trimmer object context error
d1b85e0 ReplicatedPG.cc: update coi version and prior_version to match log
e6b9731 ReplicatedPG.cc: fix use of potentially invalid pointer
4e3a4e2 ReplicatedPG,PG,OSD: snap_trimmer should run only when the PG is clean
79c5dc9 mds: use direct replay test when deciding whether to rebalance.
8e77b35 test: add new unit test "gather" for C_Gather.
820c54f common: re-install sighandlers after daemon()
2f72156 common: move signal handler stuff into signal.cc
35ef7bc signals: handle_fatal_signal: use SA_NODEFER
3326b75 signals: backtrace some more exotic fatal signals
22e2061 signals: Handle SIGILL, SIGBUS, SIGFPE.
457e3e0 mds: fix journaling of root default_file_layout
047ed15 cephtool: handle init failures correctly
b13efe2 cephtool: fix usage a bit
1b46b0d common: fix common_usage a bit
6152f52 mon: remove rank from failed when taking over for failed node
e45d859 mds: kick discovers when peers enter active|clientreplay|rejoin
e276683 mon: fix 'ceph mds fail <N>' command
7e99efc PG: fix adjust_local_snaps bug
d69e5f5 units: base64 should test more round-trips
88530e1 units: better names for the base64 test
219a1c1 units: don't need -lcrypto
08110f1 mon: Allow ceph mds fail <name>
e5b7869 health: fix health display for MDSes
93a729f mds: add comment explaining MDSMap::max_mds
9077fa5 automake: check for libedit
c8d1029 osd: avoid polluting peer_info with acting[0]
546d65f osd: make misdirected request warnings specify osdmap epoch
b9b8d7c vstart: set pgp_bits to a sane value
0a3eec1 osd: disallow pgp_num > pg_num on osdmap creation
fcab5e8 Revert "objecter: use raw_pg_to_pg when needed"
7e3d2ae mon: make 'pg map <pgid>' output more explicit
afefd73 osd: rebind heartbeat_messenger (with cluster one) when wrongly marked down
d27a0aa messenger: let rebind() avoid multiple ports
818fa33 osd: drop messages from before we moved back to boot state
ace8ef9 Make non-runnable source files not have execute bit set.
3c656ad Make run-cli-tests not abort on first failure.
fa7e469 Make clitests avoid existing ceph.conf files.
ba4de2e Add TODO note for cauthtool -c conflict.
886c7d3 Command line -c should still override CEPH_CONF from env.
5a0bc6b Sanitize environment before running clitests.
0c6fb52 cfuse: fix crash when bad address provided
7d7af85 auth: new rotating secret ttl should depend on now() + ttl
a90329a Revert "unit tests: do standard ceph init before tests"
0259e57 Make git ignore *.t.err files generated by clitests.
bdc1e26 Make git ignore more generated files in src/gtest.
dab99b0 Patch cram so it is able to write *.err files outside the source tree.
95d7d6e Clean up test virtualenv on "make clean".
a549955 Include the cli tests in a dist tarball.
58f6d09 Also distribute pre-downloaded tarballs.
5045695 Teach run-cli-tests about build dirs.
4385aa5 MDS: Use new C_Gather::get_num_remaining() in MDCache.
a93b970 C_Gather: Set debug #ifdefs to remove set.
55cf6ba C_Gather: Rewrite for thread safety.
b0fc2ca Rename variable in run-cli-tests.
f599b0b run-cli-tests is in srcdir not in build dir.
d8073c8 Include run-cli-tests in release tarball.
5f239fa Fix clitests for cconf usage change.
29825c7 mds: call MonClient::shutdown when doing a journal dump.
62d9de4 Fix clitests for cauthtool usage change.
1d7460a Plaintext keyring format is supposed to be user-friendly, so test it.
0d0e03e Now that cauthtool has two kinds of keyrings, test them both.
67bec9c Fix a bug where "cauthtool --create-keyring" (no --bin) wrote garbage.
1bae352 os: don't crash on no-journal case
c85d5ea common: Add CEPH_CONF override
77f9097 unit tests: do standard ceph init before tests
512cc97 qa: Add tiobench test
9af160c mon: Implement reweight-by-utilization
97b8eeb mon: some PGMap cleanups
6f36e9f osd: adjust_osd_weights: small const cleanup
08caffe vstart.sh: don't depend on /usr/bin/host
3f4434f mds: use common helper to journal a client session close
6d0dc4b mds: tolerate (with warning) replayed op with bad prealloc_inos
8633712 mds: improve debug output on ESession journal replay
b60ef3a OSD,ReplicatedPG: Do not run snap_trimmer while the pg is degraded
ef8a60f cconf: fix usage parsing, add --resolve search
cfae10b keyring: default keyring file name is 'keyring'
58a0f38 cauthtool: default keyring format is plaintext, add --bin
2b2d52c config: keyring uses a search path again
1b3ed03 ReplicatedPG: snap_trimmer skip removed snaps without collections
6e610a9 OSD: _pg_process_info refactor to use adjust_local_snaps
cd3b35a PG: added adjust_local_snaps, activate now checks local collections
cf39db2 PG: change snap_collections to an interval_set
f2755a5 PG: activate should not enqueue snap_trimmer on a replica
e060d7a filejournal: rewrite completion handling, fix ordering on full->notfull
34adf36 common: fix buffer::list::decode_base64
62024d0 qa: add xattr check
1869ffc Fix confusing comment about gtest automake hookup.
4b2ffba unit: add IncorrectBase64Encoding test
e7153f3 unit: Add test/base64.cc
983e62c Add a target to build but not run unittests.
1cdb01b ReplicatedPG: Fix oi.size bug in _rollback_to
9c80239 ReplicatedPG: register_object_context and register_snapset_context cleanup
688bdca Fix src/test/run-cli-tests to work with any cwd.
8f327d1 ReplicatedPG: snap_trimmer work around
903ed4a Adjust clitests after cauthtool changes.
f3bfbda Adjust clitests after cauthtool changes.
d3505a3 Fix osdmaptool error reporting.
838ebdd uclient: Switch how inodes link to dentries a bit.
735eb40 auth: change the plaintext keyring format
0568bee Revert "client: Remove the I_COMPLETE flag from the parent directory in relink_inode."
70f3c2c conf: ConfFile can parse bufferlists
3a822d6 osd: avoid creating some temporary coll_t objects
6fedbf8 osd: de-globalize PG::oldest_update
039aa1e osd: clean up loop in proc_replica_log
62a5c20 osd: remove unused PG global
095574b osd: call prior_set_affected only if we have one
cf54bd8 osd: prevent PG objects from being copied
540f42c osd: Put all prior_set fields into a struct
fad0972 Remove outdated TODO note.
f4a0c2f Add CLI tests for osdmaptool and friends.
9a5a7fe Git ignored files cleanup.
61bd155 osd: OSD::queue_pg_for_deletion: avoid double del
27f172f osd: OSD::queue_pg_for_deletion: avoid double del
6e6c22e mds: avoid double-pinning stray inodes
83d3fb2 debian: make update_pbuilder.sh a bit smarter
e9a70f1 keyring: can parse plain text keyring files
e189222 ReplicatedPG: Fix bug in rollback
1229af5 Port encoding tests over to gtest.
9b0d577 Use Google Test framework for unit tests.
1a9ef3f Make git ignore generated files.
1846355 os: don't crash on no-journal case
630565f3 (tag: v0.24.1) v0.24.1
eace439 test_split.sh: add many_pools test
a64ddbb ReplicatedPG: get_object_context ssc refcount leak
fde4b97 mds: fix _dout_lock recursion recursion
e6ee6c4 mds: take rdlocks on bounding dftlocks; clean up migrator lock code
63125ad mds: make thrash_exports select random frags
7f357cf mds: force dirfrag fragmention when replaying metablob
d2dbe9e ReplicatedPG: register_object_context and register_snapset_context cleanup
2da3ac1 librados: check for initialization before doing certain operations
7b20c29 librados: fix api declaration
baae4bc librados: add rados->version, include librados.h from .hpp
a342477 librados-config: add man page
98105ad librados-config: added a command line tool to dump librados version
8665370 ReplicatedPG: clone_overlap should contain one entry per clone
2a7aad1 osd: Create all_osds_die test
494b812 mon: mark osds down for not sending MOSDPGStat
396dce9 mon: Always forward the PGStats to the leader
fc032af osd: Introduce osd_mon_report_interval_max
5947769 mon: don't allow Monitor to be copied
668c0d9 mon: remove obsolete comment
a942071 osd: Rename osd_mon_report_interval
3a4afd9 mon: Introduce Monitor::leader_since
3df2374 mds: Add is_any_replay() method and fill it in as appropriate.
8dbe529 librados: add library api versioning
b0676cb journaler: delete Contexts on finish() in new functions.
60a4189 mdcache: change replay trimming a bit.
cd4cd01 MDS: rename replay Contexts -- they were ambiguous at best.
7472806 MDS: add gids to the logger file names.
8d88f3b mdlog: return EAGAIN if replay falls off the tail of the journal.
bf0675f journaler: Add init_headers function, call when reading head off disk.
ff7340a mds: After probing the journal, reset if we've fallen behind.
b8b172d MDS: make standby_trim_segments functional. Hurray, hot standbys work!
8ca291c mdlog: Add some helper functions for accessing segments map data.
ae4dda4 mdcache: adjust trim() to handle running during standby-replay.
d14c7dd elist: add a clear_list function.
f84a090 lru: change control flow and an assert to keep purpose clearer.
7561f80 MDSMonitor: Remove STATE_ONESHOT_REPLAY from takeover logic in tick().
92824b6 MDSMonitor: Do not set the rank of an MDS in standby-replay or oneshot-replay modes.
3f5371c MDS: MDSMonitor: if MDS is in standby-replay and its leader goes down, take over as the MDS!
b9aaa11 MDLog: don't change expire_pos or read_pos on replay.
3cb8c08 Journaler: Remove the unused read_pos field.
71f6a08 MDS: miscellaneous standby-replay fixes and cleanups.
7dcbfb8 MDS: make use of the hooks to start standby-replay.
d55a657 osd, rados: pgls filter cleanups
cfd87ce objecter: use raw_pg_to_pg when needed
a8a7e73 MDS: Implement the hooks for standby_replay.
87e40c0 journaler: add reread_head_and_probe function.
6337842 mds: add expire_pos to the ESubtreeMap.
e30cbaa mds: extend the use of uint64_t instead of (signed) loff_t, et al.
02d4640 mds: rename is_standby_replay() to is_oneshot_replay. This better represents its current purpose.
cc0eef4 mds: Create new STATE_ONESHOT_REPLAY for the MDS.
a34a0cf Journaler: make reprobe() an asynchronous function.
8da26fd Journaler: make reread_head an asynchronous function.
c9e1f99 Journaler: redefine states to make them all unique.
18d89d1 Journaler: Set the privacy of new functions correctly.
14829c4 Journaler: use uint64_6 instead of int64_t.
fb074f4 Journaler: Add function reprobe, to search for the new end of log.
cfd839d Journaler: Add reset() function, which returns it to the immediate post-ctor state
9359791 Journaler: Add a read-only setting, and asserts to make it fail on writes if readonly.
25d6576 Journaler: add new reread_head function and state.
8de5681 Journaler: remove unused vector<snapid_t> snaps from recover().
e1675f3 Journaler: set state to STATE_ACTIVE in _finish_probe_end.
4f15b8f objecter, librados: propagate extra pgls info to client
d386ea2 common: dout_create_rank_symlink: init if needed
1f3b9c6 mds: remove stray reference& in FragmentMarking context
17bc293 mds: change refragment journaling/store strategy
d1d26a5 mds: make adjust_dir_fragments always adjust fragtree
21d49d9 mds: fix can_authpin assert on post-fragment commit
15c5e0c mds: add mds_debug_frag option
2d781ff osd, rados: pgls filter fixes
8adaa04 common: make command-line programs log to stderr
bba356b rgw_admin: call common_set_defaults as non-daemon
f377168 debian: update scripts to build ubuntu (maverick, lucid) packages too
6dce7b0 mds: move flock types into separate header
4b2ba49 rados tool: Remove duplicate line in usage
065e2ac common: generic_dout needs to take the dout mutex
c46d8d5 osd: add pgls filtering by parent ino
edd5686 common: handle_fatal_signal: print threadid in hex
4a1c1b4 mds: fix ancestor backtrace encoding
3d04d96 mds: force fragmentation for ambiguous imports as well
a5f9a36 mds: make resolve adjust dir fragmentation as needed
4c53c72 mds: make get_dirfrags_under behave when dirfragtree is not coherent with dirfrag set
f66d472 frag: const cleanup fragset_t
1b0bb7a osd, objecter: pgls filtering option
fab6139 PG: Fixes bug in _scrub with checking clones
8f10424 osd: set default pg_bits higher; pgp_bits to old value
aafb79c assert: print thread id in hex
4a4a1e5 PG: Fix bug in scrub when checking clone sizes
3d4e1d9 client: fix frag selection code
062c4cc vstart.sh: specify keyring in ceph.conf
d257810 remove ancient uofs.h
9befd1e mkcephfs: Clarified numosd message
6c73da0 mds: assert no submit_entry during replay state
88c445b mds: start new log segment resolve start, not replay finish
462cb84 osd: clean up backlog generation checks a bit
ff035ab osd: generate backlog if needed to get last_complete >= log.tail || backlog
78f35a6 osd: send sufficient log to compensate for replicas with last_complate < log.tail
16c603b common: Implement max open files
5dc6624 osd: Make g_conf.osd_max_notify_timeout a uint32_t
b40e7dc mds: load root inode on replay if auth
20593b0 msgr: Unlock dispatch_queue.lock when short-circuiting queue_received.
4efa300 filestore: assert on out of order journal pipeline submissions
259c509 filestore: fix wake condition when journal submission blocks
62e4cde common: print thread ID in sig handlers and assert
15dcc65 mds: fix purge_stray for directories, zeroed layouts
266cc6c rbd: add watch option for rbd tool
6cdfa30 osd: PG::Info::History: init last_epoch_clean
1d5a69f debian: try to update pbuild env as needed
9ad05cf SimpleMessenger.cc: Fixes a dispatch_throttler leak in queue_received when the pipe has been halted.
924355d auth: CEPH_KEYRING overrides g_conf.keyring
13e8507 auth: make g_conf.keyring a plain old string
789cb9a osdmaptool: better error handling
e2c0f40 common: bufferlist: handle EINTR, check close rval
51462d6 common: bufferlist::read_file: return read errors
c846615 qa: rbd: small optimization to script
634cca9 qa: rbd: Update rbd test to use the new rbd sysfs
323ac1a qa: rbd: disable automatic keyring discovery
adbfd95 cconf: code cleanup
e1a1e1e auth: Fix buggy parsing of g_conf.keyring
27cba78 common: str_list: const cleanup
7e206df osd, librados: configurable notify timeout
a4223d4 osd: watch request doesn't use version
de8f021 qa/rbd: minor fixes
ace9097 makefile: ignore mkdir -p errors in install
fddbd90 cleanup: don't use __PRETTY_FUNCTION__
bbd0ce2 logging: clean up some error handling
22828b9 osd: PG::Info::History: init last_epoch_clean
b3bb892 signals: handle_fatal_signal: use SA_NODEFER
cbeddc2 signals: backtrace some more exotic fatal signals
ce81e6a signals: test infinite_recursion
ff6e4d4 common: make generic_usage a little prettier
247b11b signals: Handle SIGILL, SIGBUS, SIGFPE.
a410360 test: add TestSignalHandlers
532522d rgw_admin: fix compile error in usage
61f964c librados: Fix compile error by adding std:: namespace
180a417 (tag: v0.24) v0.24
69940e2 osd: compensate for replicas with tail > last_complete
0e510db objectcacher: Fix erroneous reference to "lock" with "flock."
b04b6f4 mds: make nested scatterlock state change check more robust
df7e3ff mds: issue caps on regular files created via MKNOD
7d33830 mds: set a writeable client range on regular files created via MKNOD
d64616b mds: set layout on files created by MKNOD instead of CREATE
7df4693 cephx: fix uninitialized value
3a235b0 filestore: make OpSequencer::flush() work for writeahead journaling items
285f351 mon: build_initial_monmap: fix mismatched alloc
caa4609 common: cleanups
28bcf0b osd: PG::choose_acting: fix major iterator mistake
f7dc1a9 rgw: fix fd leak on error path
795811d hadoop: fix a bunch of mismatched allocations
2f91608 auth: avoid mismatched allocation
3c7d30f osd: flush pg writes to disk before starting scrub scan
5184db4 filestore: add per-sequencer flush operation
2fb60da osd: debug scan_list and scrub a bit better
c3a24fc osd: refactor _get_pool / _put_pool a little bit
39aff22 osd: OSD::_lookup_pool: avoid double lookup
bf4529b test: create test_pools.sh
1cfad2e osd: clear INCONSISTENT if scrub detects no errors
b190875 osd: add assert that we're replica
1e291fc debian: don't strip rados classes
9c173bb debian: rename ceph.lintian -> ceph.lintian-overrides
b2746c9 logging: eliminate out-of-range dout calls
c4b5c33 common: more cerr -> derr conversions
30f752c gceph,ceph: replace cerr->derr
c76379f cosd: replace cerr with derr
73669d8 PG.cc: 	sub_op_scrub must set finalizing_scrub on the replica 	before waiting for last_update_applied to catch up to 	info.last_update.
4644247 osd: FileJournal: use derr
4fc1af5 logging: re-introduce derr
29480f4 ReplicatedPG.cc: 	_scrub must set head when it encounters a head snap 	curclone counts down, not up
c321620 osd: send notify message only to unexpired watchers
1e490ef osd: timed out watcher is added to unconnected map
619b45a logging: close file when reloading global config
060fd42 osd: fix watch timer, locking
914f6dd filestore: detect final version of async ioctl SNAP_CREATE_V2
06a2d7a mds: Save straydn in mdr so it's consistent across retry attempts.
e31f0a4 tools: don't start msgr thread before daemonize
530083c objecter: check for pg mapping changes in each incremental; refactor misc resubmission code
32a8aed objecter: add reopen_session helper
f6dc5d9 objecter: cleanup: rename op maps
065cdf5 objecter: track pending requests by osd, not pg
07e593c mds: fix inode ancestor attr encoding
5d44d59 msgr: mark down by Connection*
fdbd85e automake: ignore rmdir errors during uninstall
7b5e923 osd: send pending notification for reconnected watcher
f969464 automake: add osd/Watch.h to noinst_HEADERS
89d5c91 mon: trim pgmap less aggressively
b989087 crypto: catch cryptopp decrypt/encrypt exceptions
3e076c3 logging: use Mutex::Locker
bf31f3f logger: Fix DoutStreambuf::create_rank_symlink
4c37719 cephtool: rename tools files
056e91e librados: drop watch_lock
d4420a8 objecter: drop linger_info_mutex
215f332 objecter: simplify linger register
b60a9ab objecter: fix up linger ack/commit to trigger first time only
8a75086 objecter: clean up linger interface
a3fcf90 logging: Fix use-before-access in debug.cc
3932f08 osd: PG::prior_set_affected: const cleanup
9add26b mds: fix replay/resent vs completed request check
0e08cb0 osd: return ENOSPC for non-mds if full flag is set in osdmap
292414c gceph: Add gceph to rpm, deb
71a19a9 gceph: run shutdown functions at exit
bb82fd3 gceph: fix compile
1a201f8 gceph: add -h argument
b4ceb19 ceph tool: Create gceph
4984473 librados, objecter: fix unwatch operation
346a2aa rpm: update changelog
e23d620 rpm: fix ceph.spec to work with gcephtool
e5769b0 objecter: resend_linger copies ops
83612ef Fix overflow in FileJournal::_open_file()
d0fbc30 ReplicatedPG.cc: Fixes a bug in snap_trimmer where a pointer to a stack 	Cond is left in the mode.waiting_cond list.
329ae1b ReplicatedPG: snap_trimmer now acquires a read lock on the osd map 	before calling share_pg_info.
f68e6e7 rpm: don't try to package radosacl
6722b0c rpm: add pkgconfig to BuildRequires
9df18d1 rpm: set files-attr for radosgw
b4264fb filejournal: reset last_commited_seq if we find journal to be invalid
cc78bbf objecter: create a new op for resending lingering requests
027d5bf logger: tweak cmon log output a bit
fdc7414 logging: DoutStreambuf: handle daemonizing better
5cba1e6 objecter: a few lingering fixes
a9c098d mon: use helper for clock drift check; log relative instead of absolute time
986c2af logging: debug.h: use DoutStreambuf
c53ffaf logging: Remove _dout_check_log
8fdd0f4 logging: debug.h: minor cleanup
aeba6bc logging: eliminate dbeginl
0f0cb46 logging: Implement rank symlinks
6c4a7d5 logging: Support isym_path
e597d02 logging: rename_output_file -> handle_pid_change
116478a logging: _calculate_opath: use g_conf.log_dir
ea3414d logging: DoutStreambuf: better debug output
627399f logging: create_symlink:sometimes use rel symlinks
b00baab logging: implement get_dirname, move get_basename
ef22366 logging: fix normalize_relative
fe10300 mds: sync->mix replica state is sync->mix(2)
2000f69 mds: no not choose lock state on replicas
3825c4b mds: small rejoin cleanup
9b9b869 mds: rev mds cluster internal protocol
2ea9b2d mds: fix replay of already-journaled requests
b5fd2e4 mds: open undef dirfrags during rejoin
39c5933 mds: add missing try_clear_more() to scatterlock
c681ed7 mds: explicitly pass scatterlock dirty flag to auth on gather
9bbb33b mds: send LOCKFLUSHED to trigger finish_flush on replicas
681b010 mds: clear EXPORTINGCAPS on export_reverse
f97660f mds: fix LOOKUPHASH to avoid creating bogus replica CDir
4f64399 mds: introduce rejoin_invent_dirfrag() helper
42464fb logging: Add symlink helper functions
e2ba601 logger: fix EINTR handling
bacdd49 logging: rename_output_file: fix bug
d70851e logging: DoutStreambuf: Implement log-to-file
9521114 logging: Add log_to_file option
df5d4e6 logging: DoutStreambuf improvements
1e2e4aa automake: in scripts, use sysconfdir as-is
10b6887 automake: in deb pkg, use --syconfdir=/etc
d4043e8 logging: add DoutStreambuf::set_prio
6c7735f logging: DoutStreambuf must handle stdout + stderr
12544a4 logging: Add log_to_syslog option
57bcdc5 mkcephfs: require -k; update man page
5ac581d Rename SyslogStreambuf -> DoutStreambuf
d1e0a2a logging: debug.h: move some debug functions
c94e0d2d logging: optimize with likely/unlikely macros
9811fbd logging: Replace derr with dout
ab18aae logging: add g_conf.clog_to_syslog
ab61823 logging: LogEntry: don't pass enums by reference
fcae8a7 logging: MLog.h: const cleanup
82fa7f2 logging: LogClient: refactor handle_log_ack
4ef069c logging:Move LogEntry.h into common with LogClient
f2ead26 logging: better syntax for LogClient
87545d0 configure: detect crypto++ library
ebcc939 osd: drop not-quite-copy constructor for object_info_t
d69f3dd MDS: Encode a full ancestor trace on inodes, not just the immediate parent.
11c7dc0 librados: fix the C++ interface init
b1afea5 librados: fix error path in rados_deinitialize
aa3dda6 librados: fix the C++ interface init
9a60481 librados: fix C interface error handling in init code
130b8b3 librados: fix C interface error handling in init code
bf030ca client: resync ioctl header from ceph-client.
4e3c201 Tune Debian packaging for the upcoming v0.24 release.
27b70eb osd: search for unfound on osds in might_have_unfound
8aa7b39 Makefile: make radosacl build WITH_DEBUG only
23f3704 ceph.spec.in: update dependency
e005925 rgw: null terminate armor result
f2424df rgw: get rid of openssl altogether
a28b449 configure: check for the presence of libcrypto++ header files
8821377 crypto: change include
76e02c7 common: remove base64.c
e135e92 crypto: remove old openssl implementation
7fa9426 makefile.am: most binaries (except rgw_*) don't link with openssl
6ec622c common: use ceph_armor instead of openssl based functions
58f3ce4 crypto: test for allocation failure, cleanup
15d8bdf crypto: use crypto++ for aes instead of openssl
378d13d osd: remove poid/soid from ScrubMap::object; clean up callers
a457cbb mon: fix typo
a4cc929 make: create log directories and tmp directories
a529738 msgr: Correctly handle half-open connections.
39b42b2 make: create /etc/ceph if it doesn't exist
da5ab7c ost: object_info_t: decode old versions correctly
03eb4e7 man: add man page for cephfs
6518fae watch: some more linger fixes
78a1462 osd: fix log tail vs last_complete assert on replica activation
63fab45 rados_bencher.h: 	bench_write and bench_seq will now wait on any write/read 	rather than the one least recently started.
0ea601a Create SyslogStreambuf
a3d8c52 filestore: call lower-level do_transactions() during journal replay
9ecbc30 filestore: do journal mode autodetect and sanity check _before_ replay
f9fa855 filestore: fix journal locking on trailing mode
cbb5620 rbd: use MIN instead of min()
792b04b client: connect to export targets on cap EXPORT
5bdae2a (tag: v0.23.2) ceph v0.23.2
bde0c72 filestore: do not autodetect BTRFS_IOC_SNAP_CREATE_ASYNC until interface is finalized
4592c22 client: fix cap export handler
15c272e man: fix monmaptool man page
6d96104 osd: simplify scrub sanity checks
76b55c8 osd: only adjust osd scrub_pending if pg was reserved
260840f mds: fix import_reverse re-exporting of caps
fe9fad7 v0.25~rc
109e3f1 mds: turn off mds_bal_frag until resolve vs split/merge is fixed
0cc8d34 osd: refactor object_info_t constructor a bit
cee3cd5 osd: share_pg_log: update peer_missing
e9ccd7e osd: mark_obj_as_lost: fix oloc init, eversion
c29fbb1 osd: mark_all_unfound_as_lost: bugfix, refactor
b46f847 osd: mark_obj_as_lost: don't assume we have obj
5e243f3 osd: create lost2 test
55f7e56 osd: mark_all_unfound_as_lost: set lost attr
d5e6cae radostool: fix memleak in error path
c281e1e osd: mark_all_unfound_as_lost: wake waiters
b15a97c test_lost: add lost1 test
ad4e5f3 osd: ReplicatedPG::do_op: error on read-from-lost
136dfde osd: don't mark objs as lost unless we're active
08bd4ea mds: fix resolve for surviving observers
c0e60af test: dump_osd_store: sort dump output
e555899 osd: active replicas process logs from primaries
de09422 osd: object_info_t: add lost field
80f3ea1 Add ./ceph dump pg debug degraded_pgs_exist
fb4734b (re)add mechanism for marking objects as lost
1123b5c osd, librados: misc fixes, linger related issues
bf784cd osd: fix object_info_t() initialization of oloc
91a7559 mds: add debug output to make completions easier to track
ba1f3cb osd: fix misuses of OLOC_BLANK
2ad901b Revert "mds: resolve cleanup"
1b06332 osd: make recovery_oids debug list per-pg
05ad97b client: Set the DirResult buffer to NULL when deleting it.
559d4d2 ceph.spec.in: include gui files
9360126 debian: many many cleanups
5eb8ef7 filejournal: fix throttle vs FULL behavior
7af9ffd filestore: make sure blocked op_start's wake up in order
fac7266 filestore: assert op_submit_finish is called in order
5e391db filejournal: rework journal FULL behavior and fix throttling
79419c3 filestore: refactor op_queue/journal locking
0df9dd6 filestore: do not throttle op_queue in queue_op()
8003915 Makefile: add bloom_filter.hpp to noinst_HEADERs
62075f3 Makefile: Fix VPATH builds
0bcdc84 osd: osd_types.h: const cleanup
7ee50ad osd: don't try to load a PG in a nonexistent pool
6ab1723 filestore: simplify apply_transactions
c9f864a osd: PG::trim: fix inverted conditional in assert
b2bcf4b common: prevent infinite recursion on SIGSEGV
8519181 osd: Create pg_split test
fb60e11 logger: Fix a crash when the MDS shuts down cleanly.
b4db410 Timer: add some asserts to catch certain errors.
adbb545 osd: some notify simplifications and FIXMEs
ec15c46 osd: track unconnected_watchers and when they expire
376870f osd: add timeout to watch_info_t
239c0a1 rbd: fix version renaming
b305153 osd: fix up WATCH
2563905 osd: some cleanup
b722662 osd: use pg_t to find PG's again
a61f6b5 osd: add missing Watch.cc
0e62c42 osdc: spell out version
15ffbc8 makefile: add missing MWatchNotify.h
4dca64b osd: drop unused fields
463d624 Makefile: Add --as-needed to LDFLAGS
a77eb6b vstart.sh: don't specify journaling mode
e0b927b osd: PG::trim: add assert
756918b osd: _process_pg_info: add assert for replicas
3ab6009 osd: dump_missing: also dump missing_loc
da087e4 osd: discover_all_missing fix
d6e8e8d gui: some cleanup
1b1e040 osd: add a map for lingering messages
4c8bdc5 osd: don't notify notifier
520b523 librados: fix unnecessary locking
454ea06 rbd: notify about header changes
c4b9795 librados: last_objver is set on the pool, and not per thread
99e1e4d librados: assert_version on sync operations
38c8e38 librados: rename cookie to handle in api
a76de3b librados: complete C interface for watch/notify
2954799 librados: notify waits for completion
f36677f librados: update C api
a4864bd librados: enable object versioning
e7184e6 librados: start implementing watch/notify
7272bfe osd: send notify response from reset handler if needed
d5cc673 osd: some notify related cleanups
e0c548a osd: fix ms_handle_reset
cc62f2e osd: fix bad mutex lock
f8af4f2 osd: add watch/notify timeout
f7b7d67 osd: check requested watch version number
7bda45a osd: reply with either user_version or at_version, depends on the op
9437ea8 osd: add user_version field in obect_info_t
f5f3382 osd: send notify reply if there are not watchers
59e61d0 osd: discard of disconnected watchers
2b5e61c osd: send notification id
d66b52e osd: watch infrastructure
e493c7a osd: handle notify-ack
3110e36 osd: basic watch/notify handling
2bce34e osd: handle watch op, register client on object xattr
2f13dd8 gui: more reindenting
66a78c2 gui: reindent a bunch of code
d8652de mdcache: in trim_non_auth, only print out path if it has a parent dentry.
8768b52 mds: Reply checking_lock while reading filelock
5ed06ff client: remove inode from flush_caps list when auth_cap changes
4041bf0 mds: fix set_state_rejoin auth_pin check
e97eae1 init-ceph: tolerate failure in cleanallogs
5498c46 osd: fix recover_replicas() unfound check
5452dae osd: recover_primary() until primary has all found objects
7ea7a43 osd: only discover_all_missing if unfound
671b1c0 osd: add get_num_unfound() helper
413ecb0 osd: only search_for_missing if there are unfound objects
36f703e osd: removing unused variable, fix warning
285cc94 osd: fix is_all_uptodate()
55570ba osd: fix PG::is_all_uptodate
c0c301d osd: PG::read_log: don't be clever with lost xattr
0e15da8 Rename  peer_summary_requested to peer_backlog_req
8461228 Build might_have_unfound set at activation
36c6569 monmaptool: Return a non-zero error code and print a useful error 	message if unable to read the monmap file.
fc21254 mds: allow for old fs's with stray instead of stray0
868665d (tag: v0.23.1) v0.23.1
c327c6a mon: always use send_reply for auth replies
61dd4f0 mon: simplify send_reply code
2c71bd3 osd: add assert to _process_pg_info
a70943f osd: re-indent some code in _process_pg_info
7136954 msgr: tolerate 0 bytes from tcp_read_nonblocking
7ec0034 init-ceph: fix (and test!) cleanlogs and cleanalllogs
7b4a801 mds: fix rejoin_scour_survivor_replicas inode check
dd11fe2 types: Allow inodeno_t structs to alias.
8d95b5b messenger: init rc to -1, removing compiler warning.
ac6b018 Causes the MDSes to switch among a set of stray directories when switching to a new journal segment.
3f8f590 Timer must be initialized in Client::init and shutdown in Client::shutdown.
8eb4de9 generate_past_intervals:generate back to lastclean
80f2823 vstart.sh: 'init-ceph stop' instead of 'stop.sh'
27c6f21 mds: remove bogus assert
9e15ade mds: do not eval subtree root when replay|resolve
c0c81d5 mds: trim exported subtree _after_ adjusting auth
cd53719 mds: resolve cleanup
924b1fc osd: bind to new cluster address when wrongly marked down
1940976 msgr: implement rebind() to pick a new port
f7170f9 client: only encode_cap_releases once per request.
51abcaa mon: clean up cluster_addr code a bit, better debug output
28498a0 osd: send correct ip addrs to monitor for cluster_, hb_addr
2031364 osdmap: fix cluster_addr encoding; printing
ec434ed osd: unconditionally set up separate msgr instance for osd<->osd msgs
0dddf45 filestore: only warn about disk write cache on kernels <2.6.33
0856f57 osd: fix search_for_missing: old last_update implies object not present
6ef5c2f init-ceph: fix cleanlogs for no log_sym_dir case
fc9b097 OSDMap: const cleanup
2a5c389 mds-dumper: Define Dumper::~Dumper()
8566c5c ReplicatedPG::pull: fix test for unfound
2f5502f osdmap: fix printing, again
b91e14e multi-dump.sh: add diff mode
9cab522 Add multi-dump.sh
6e2b594 ReplicatedPG::get_object_contect: fix broken calls
43e0b26 ReplicatedPG: call finish_recovery when needed
ea5d1d6 osd_resurrection_1_impl: turn on recovery at end
4adfdee Makefile: fix builddir weirdness
7e9812b osd: rev PG::Info encoding for last_epoch_clean change
f6823a7 mds: adjust dir_auth_pins on steal_dentry
b705be1 mds: wrlock scatterlocks to prevent a gather racing with split/merge logging
66d43ac mds: fix subtree map update on dirfrag merge
7f6a256 mds: clear PIN_SUBTREE on split/merge in purge_strays
669b554 mds: don't complete freeze while parent inode is frozen
3777ff8 mds: move dirty rstat inodes to new dir on refragment
d538817 mds: flush log on fragment
cd5ee00 mds: initialize PIN_SUBTREE on split
b58b8d0 mds: fix discover requests, tracking wrt fragments
a63c06c mds: fix EFragment replay
a961049 mds: don't fragment mdsdir or .ceph
b54880e Detect broken system linux/fiemap.h
29a9e66 osdmap: don't include blacklist info in summary
c43455c client: Remove the I_COMPLETE flag from the parent directory in relink_inode.
d57181d config: added max_mds MDSMonitor: create_new_fs adapted to use the max_mds parameter
d1dcc03 mds: allow frag merge on subtree root
c493126 mds: make dirfrag thrashing join and split
8f24919 mds: add timestamp to LogEvents
56b9e92 osd: fix trailing + in pg state string rendering
d17f744 mds: be less noisy about cap imports
77c05fb mds/client: pass dir hash over the wire
3358046 mds: set dir hash on root inode
be29e4c mds: set mode before all the file type dependent inode initialization!
cc709df mds: add DIRLAYOUTHASH feature bit
e146767 mds: make dentry hash a dir layout property
267cd84 RadosClient::shutdown: call monclient::shutdown
dfb78eb osd: don't stop recovery when there are unfound
d014acb dumpjournal.cc: fix compile
da2d501 rbd: fix rbd snap rm class handling
c707511 Add ./ceph osd tell <osd-num> dump_missing <out>
755f575 search_for_missing:recalc stats if unfound changed
d883a54 mds: Use CDir bloom filter as appropriate.
be2da00 mds: Add bloom filter to CDir.
1fe31e1 timer: make init/shutdown explicit
d2af7b7 test_unfound.sh: start recovery at end of test
c293b9a test_common.sh: add dump_osd_store
05a16d3 test_unfound.sh: fix return codes
470b199 stray_test:don't use up/down. timeout extension
e3f6507 osd: add discover_all_missing
796ff1d Fix bugs in search_for_missing, _process_pg_info
e768bbd Add stray_test to test_unfound.sh
d3cf478 PG::finish_recovery: set info.last_epoch_clean
b0c22bd Add MOSDPGMissing
873e9bf osd: add incompat feature LEC for last_epoch_clean
184fbf5 osd: add last_epoch_clean to PG::Info
6a65cc4 test_common.sh: remove messenger debug for now
873180a osd: skip unfound in recover_replicas
d61bc3b osd: skip unfound objects in recover_primary()
9ea1d8b osdmap: make printing a bit easier to read
beae97f objecter: don't dereference null op->outbl
089cd12 include: Add bloom filter library to include/
556ba73 osd: unreg scrub when removing pg
975dd8f librados: pass provided buffer to objecter on rados_read
e8132cd objecter: post rx buffer to msgr if target bufferlist is present
7cb2d50 msgr: use provided rx buffer if present
2854dae msgr: add Connection rx buffer interface
c04ba72 msgr: implement get_connection()
6785235 buffer: implement list::iterator::get_current_ptr()
4af14db Objecter::shutdown: shut down timer.
2be4215 debug: don't print thread id twice
b61af6a msgr: cleanup: make queue_received non-inline; some helpful debug
f99c84e msgr: do not clear halt_delivery
d4746ab msgr: close enqueue/discard race
1071a9a msgr: protect pipe queue_item map with pipe_lock AND dispatch_queue lock
70fe062 msgr: add 'ms inject socket failures = foo'
cbf154e msgr: only close socket on reconnect or shutdown
20937e8 msgr: protect pipe queuing with _both_ pipe and dispatch_queue locks
20affc6 TestTimers: don't test (nonexistent) Timer
d5032a0 Rename PG::peer to PG::do_peer
c5b2d28 uclient: insert lssnap results under snapdir, not live dir
7ccdae8 msg: fix buffer size for IPv6 address parsing
ce6d639 timer: rewrite mostly from scratch
5484899 mds: hit inode created via CREATE
5d1d8d0 (tag: v0.23) v0.23
3d10b34 mds: fix null_snapflush with multiple intervening snaps
85e0890 osd: scrub least recently scrubbed pgs first; once a day
c12829a osd: don't scrub something we just scrubbed
9257291 osd: call sched_scrub on reserve reply
815c3d5 osd: fix sched_scrub
6548fb6 osd: do scrub schedule state changes inside scrub()
a87e890 osd: track last_scrubbed in PG::Info::History
4d941cf osd: scrub: change cancel behavior
231434a pg_state_string: use an ostringstream
d247616 vstart: stop logging to /tmp/foo
74be621 osd: fix scrub reserved state when starting scrub
8650418 vstart: turn down msgr debugging
9e4027f monc: cancel timer events with lock held
07bb675 Wake up clients waiting for now-found objects
b9191dd test_unfound.sh: test reading an unfound object.
fc605ce test_unfound.sh: verify that we have unfound objs
02ec721 Add num_objects_unfound to struct pg_stat_t
b518113 test_unfound.sh: shorter test
6a04ac5 PG::recover_master_log: rename a local variable
85c4e6e OSD::_process_pg_info:search_for_missing sometimes
5153ba5 Add PG::Missing::have_missing()
040c4bc PG::search_for_missing: minor refactoring, comment
8288a23 PG::peer: don't block if objects are unfound
e6b6c53 PG::peer: count/find cleanup
ef1f8ec PG.h erase deadcode
a46f15e PG: nomenclature change: talk about unfound objs
b80f3e6 PG: move ostream operator to .cpp file
82aa79f mds: fix inode->frag rstat projected with snaps
5deef24 osdmap: break up asserts for easier debugging
586c9e7 objecter: throttle before looking at lock protected state
5751373 mon: drop unnecessary state checks
84840ed debian: don't explicitly depend on libgoogle-perftools0
ca3693d mds: Enable --journal_check mode.
214b726 osdc: Fix bad assert in ~ObjectCacher.
5035c82 uclient: only update inode if version increased
255e34a decompile_crush_bucket: fix depth-first decomp
d1f15da CrushWrapper:get_bucket: ret ENOENT for no bucket
e8ad6d2 osd: small cleanup
28b4429 osd: scrub: list objects without lock held
966369a ps-ceph.pl: don't show self
6bc3151 gui: add missing #include
e991702 objecter: set READ flag on new objecter mapext/read_sparse ops
adac516 objecter: fix balancer for ops with length < 0
2006054 filestore: autodetect presense of FIEMAP ioctl
e548871 fiemap: include linux fiemap.h header; unconditionally compile helper
9f14dd2 ps-ceph.pl: display Ceph tests
2325a1a Fix example config file
2947d19 TimerThread:don't call pop_front before iter deref
1c7d8f1 Makefile: use openssl module check
954ad98 osd: shut down if we do not exist
ea56dfd osd: handle osds that no longer exist in prior_set_affected
29428b9 Objecter: initialize timer in Objecter::init
ec4200b Add test_crushtool.sh
019bb70 mds: turn on mds_bal_frag (dir fragmentation) by default
e15c956 mds: fix inode freeze auth pin allowance
ae13fc8 osd: handle osds that no longer exist in build_prior
f28b99b CrushWrapper::get_bucket_item: bounds check
9b48725 crushtool: don't create a dump we can't recompile
3107944 osdmap: cleanup: add parens
e1588dc mds: wipe out client sessions on startup
05a4738 mon: implement 'mds newfs <metapool> <datapool>' command
d80948a mds: use mdsmap data pool for root inode default layout
8a21c6f mds: add mds_skip_ino and mds_wipe_ino_prealloc options
aad3f7f ceph.spec.in: don't strip rados classes
64f95ad mds: add missing Dumper.[h,cc]
be9328a mds: tolerate/fix negative dir size counts
d5515a8 mds: add missing Dumper.[h,cc]
1ab7c7f Replace ps-ceph.sh shell script with perl script
deb9ef7 v0.24~rc
a4674af mds: eval: put scatter in MIX if replicated, otherwise LOCK
33c6e23 mds: do not scatter_writebehind in MIX state
bdc2fa5 mds: remove MIX_STALE
c1ee560 mds: don't fuss with versions when taking frag/rstat from frag; it's never stale here
1eb94da mds: introduce/use helpers to resync stale fragstat/rstat; update version
c203482 mds: ignore done_locking on slave requests' acquire_locks()
51b6a86 mds: don't use helper for rename srcdn
eb0a60d mds: never complete a gather on a flushing lock
bdf3bc5 mds: update version when bring stale rstat back up to date
a74054d mds: simplify stale semantics a bit
e27f111 mds: preserve stale state on import; some cleanup
4126d1c mds: add more verify_scatter asserts
ae670c3 mds: fix version check on resyncing stale rstat in predirty_journal_parents
4cee6ea mds: Fix bad inode deref.
93344fb Revisit std::multimap decoder
f015c98 autogen.sh: check for pkg-config
fd397ab PG.cc: build_scrub_map now drops the PG lock while scanning the PG        build_inc_scrub_map scans all files modified since the given            version number and creates an incremental scrub map to            be merged with a scrub map created with build_scrub_map.            This scan is done while holding the pg lock.        ScrubMap.objects is now represented as a map rather than as            a vector.
989fa67 mds: preserve version when recovering rstat from dirfrag in predirty_journal_parents
9586e90 mds: restructure finish_scatter_gather_update()
669a8af mds: do not bump scatter stat lock in predirty_journal_parents
663b470 mds: mark scatterlock stale on import of stale frag scatter stat
63c1ad8 mds: match bottom half of assilate_dirty_rstat_inodes with a dir flag
9b6d96e mds: fix inode version used for inest in decode_lock_state
62716aa PGMonitor::update_from_paxos: check for bad input
8f3672d Replace sprintf with snprintf
56179d1 start_profiler/enable_profiler_options:fix memleak
e6a751b Set HEAP_PROFILE_INUSE_INTERVAL based on conf
8c8bfdb CInode::make_path_string: don't coerce ino
53f6ed1 mds: mds debug scatterstat to print out projected rstat/fragstat
f23ba00 mds: verify single frag rstat on projection too
d3c2b9c cmds: Include journal dumper functionality.
e0a5de2 dumper: Add new Dumper class.
28f956a mds: fix optional frag asserts
86d6e51 objecter: add new wait_for_osd_map function.
8a41d09 osd: clean up active <-> booting state transitions
f917df7 TestEncoding: count number of ctor invocations
e90a3b6 mds: dump corrupt events; optionally skip them
1c934eb mds: wait for last_failure_osd_epoch before starting journal replay
f511286 mon: blacklist and update last_failure_osd_epoch in all failure paths
6345fcd mon: update mdsmap.last_failure_osd_epoch when blacklisting
0fb2297 mds: add last_failure_osd_epoch to extended section of mdsmap
c4e56e9 MonClient: start SafeTimer in MonClient::init()
8f33a41 cosd: start SafeTimer in OSD::init()
124d287 Monitor: start timer thread in init(), not ctor
0b9f2e2 Timer: add verbose debugging when debug timer = 20
b0e7374 TestTimers: add test for out-of-order timer insert
e4853fa SafeTimer: delete contexts under the event_lock
2c7d293 vstart.sh: turn on MDS debugging
1cf5bc7 cephtool: fix timer init/destruction
d3ead43 Logger.cc: avoid creating SafeTimer in global-ctor
571e375 SafeTimer: clean up copy constructor declaration
8279f14 Timer.cc: clean up debug printouts
d840e4f TestTimers: test cancelling single events
cd31665 TestTimers: call common_init and parse argv
e6b8dba Timer: fix timer shutdown, efficiency issues
0d1bfe0 client: print useful max_size waiting message
4f24fcb debian: add gtk build-depends
d0c29d7 mds: add 'mds verify scatter' and re-add some scatter asserts
fd57f4d mds: fix put_xlock() assert for slave masters
a98812f mds: rename 'mix stale' => 'mix_stale'
4d669c8 mds: request unscatter when MIX_STALE on replica
8b9342c mds: disable tempsync
563a9ba mds: finish_scatter_update on auth dirfrags too
0e079bc mds: use helper for scatter dirfrag update; use on local dirfrags
77ec378 Add the ps-ceph.sh tool
4e586dd encoding.h: fix compiler warning
c98b026 TestEncoding: add templated encode-then-decode fn
84e2da8 Create TestEncoding to test serialization code
60c59ae mds: add some scatterlock notes
0dc75a9 ceph: remove bad assert for old frag stat
3413518 mds: match conditions in finish_scatter_gather_update_accounted
33268e2 mds: handle MIX_STALE on auth too
14f4d22 mds: scatter_info_t ancestor for nest_info_t and frag_info_t
cbacc1d mds: only mark auth dirfrags stale in start_scatter
44574e8 mds: mark scatterlock stale if any auth dirfrags appear stale
4a0f731 mds: do not update accounted_*stat if auth and frozen
839371c osd: Added load threshold for scrub scheduling
3ae8c00 osd: Make a per-pg sched_scrub, and remove non-active accounting from the scrub_wq.
9d1984e mds: mark scatterlock stale if dir is frozen, not inode
e304a24 rados: benchmark using unique object names
38f96c6 debian packaging: set --sbindir=/sbin
68f7fed config: fix sigsegv handler
235aa1c filestore: disable 'filestore btrfs snap' when SNAP_DESTROY is missing
4cfd198 Makefile.am: include the libcrush headers when installing
5310ab6 uclient: Warn on truncate_[size|seq] changes for non-file inodes.
630db2a mds: Init system CInodes to have a truncate_size of -1. This should help with bug #518.
524c890 client: match initialization with mds
20e8a45 client: only do truncate on regular files
905ff76 debian: add pkg-config as build-depends
bc9bc4c init-ceph: make lockfile dir configuration (redhat)
85ba4f2 object.h: const cleanup
ee3fc3b osd: Add scrub to the names of scrub scheduling-related things.
993ba1c osd: refactor OSD::sched_scrub
8d200a7 osd: Move pending/active scrub accounting into the scrub work queue.
378f84c osd: Add the rest of infrastructure for scheduling scrubbing
7b68a40 osd: add variables to track scrub scheduling
3d85a7b logrotate: separate rule for stat/*.log
49153c2 osd::PG: Update PG comments
e6df807 test: create test_unfound.sh
1dd5042 fix make distcheck, make uninstall
c044829 filestore: automatically choose appropriate journaling mode
9f4fd4a (tag: v0.22.2) v0.22.2
5b06ca1 filestore: use updated btrfs ioctls
a831b2a btrfs: update ioctls.h
bb628d3 Get "make dist" working, fix gui build issues
7e8fc10 mds: detect small dirs that should be merged, and merge them
8a8e37b mds: hit dir popularity on unlink
73c6e4c osd: write potentially large pg info to object, not xattr [format change]
ed89d9a cephtool-gui : more helpful error on pixbuf fail
18bb14e osd: snap_trimmer: flush between collection sets
440cc43 mds: auth_pin head/snap pairs for all need_snapflush entries
0ce1d50 mds: Refactor need_snapflush into CInode helpers
9f86a79 configure.ac: default to --enable-gtk
c204528 osd: fix decoding of legacy (v2) coll_t
96e583d mds: use list instead of vector for trim_unlinked_inodes
4e180fe mds: fix use-after-free iterator no-no in remove_inode_recursive()
aa83e11 mds: log if trim_non_auth does anything, since it shouldn't be now except on rollbacks.
404c83e mds: Call trim_non_auth_subtree when appropriate.
2074521 mds: add function MDCache::trim_non_auth_subtree
8255a67 debian: fix changelog
ba6d931 Mutex: add more checks to lockdep
7f90cc2 ceph: gui: update copyright foo
329fbc2 cephtool: gui: handle bad input in view_node
89273b7 cephtool: only initialize the tokenizer once
819ad63 cephtool: fix initialization race
c13183e cephtool: join GUI thread before shutting down
c883903 cephtool gui: install and locate gui_resources
65fbd2e Add the Ceph monitoring GUI
10466c5 qa: add rbd test
b44901c SubmittingPatches: initial version
b6ffdf1 qa: add basic rbd test
b434bb1 osd: store locator with object_info; add incompat feature
ec8960f osd: make object_locator_t encodable
771c2c4 mds: Migrator needs to add_dir_context all the way to root. It was going to the default subtree root, which doesn't work when we've just created a new subtree root out of the given dir!
66e1d9f osd: fix unneeded get_object_context() (and leak) in _rollback_to
4fe3ec9 cephfs: remove unused variables
7a688a9 config: fix signal handler recursion
ee27a61 objecter: refactor interface with object_locator_t
8f08510 mds: pin NEEDSNAPFLUSH only when adding item
8d37b28 debian: change compat to 6 to match debhelper require
1a0ac01 osd: handle missing objects on snap read
69f5ccd mds: store dir inode in separate object; fetch from both.  incompat flag.
745a8ee clarify CDir/CInode content comments a little bit
c1d0781 filestore: can force use of stale snaps
c1a6ee5 filestore: don't revert to old snapshots on startup
bcc068e filestore: read commit_seq before mounting (btrfs ioctls)
ae78ed4 ceph.cc: delete deadcode
551711f Move ceph.cc to tools/
a14dd81 configure.ac: add ./configure option for gtk2
5fe0b5a mds: fix split use after free; merge works
b771ba8 mds: simplify fragtree_t printer
7bd00b9 mds: implement command 'merge_dir path frag'
05fa106 mds: implement frag.parse()
4c79f36 mds: requeue dir if we can't split now due to dftlock
4afbc52 mds: check/take wrlock on dirfragtreelock; unwind after freeze if needed
e79417b mds: move fragment checks into shared helper
a4b2144 mds: don't replicate new frags (at least for now)
332195a mds: clean up merge() callchain
e1b5379 mds: generalize split/merge call chain a bit
96d26e3 mds: reimplement split_dir
2f9c960 client: fix dup entries in multifrag readdir
0f8f02d mds: add 'mds bal split bits' config option (default 3)
96beaf6 messenger: always unlock existing pipes, even if they're lossy
b5d9bec client: Initialize Inode::truncate_size to 0 instead of -1, and check prior_size on truncation.
ef90cb5 filestore: some cleanup
54fdd64 filestore: escape the xattr chunk names
84b85aa osd::Missing: const cleanup
45f7110 osd: move PG::Missing implementation to PG.cc
4420287 filestore: some cleanup
f131f42 filestore: warn if btrfs_snaps enabled but no async snap create ioctl
e275e85 mon: remove pg from deleted pools from pg_map
00d5442 mds: fix up mds_bal_frag options
a8f6ba9 add cephfs to deb, rpm
b15e3b4 client: fix to handle new ObjectCacher pool requirements.
38d7ddf osdc: Add pool awareness to the ObjectCacher, to prevent unfortunate collisions.
7bb31f7 osdc: Fix release_all so it loops properly
e27f0b1 filestore: escape the xattr chunk names
961d3bc PG::Log::Entry: remove unused snap_t field
61b3fc3 makefile: add cephfs
d4bbde5 ./ceph osd setcrushmap: validate crushmap
394b071 crush: improve error handling in map decoding
a869b35 cap_reconnect_t: ignore embedded NULLs in the path
e912e68 (tag: v0.22.1) v0.22.1
96d4673 Makefile: add errno.h
a974cfd mds: be quiet about snaprealm push/pop
6907894 filestore: ignore ENOSPC on setxattr pending a better workaround
6826ce4 filestore: change xattr chunk size to 2048
76157d9 filestore: split xattrs to multiple chunks
3ee37ee rados: add getxattr, setxattr
22bb211 filestore: change xattr chunk size to 2048
b4fd986 mds: Remove scatter_pins.
db6759f mds: use set_stale() as appropriate: 1) When we update a lock but can't write its new data, 2) We load potentially-stale data off disk (ie, in restart).
47a5fc9 mds: Whenever we set locks to state LOCK_MIX, check is_stale() and set to state LOCK_MIX_STALE instead, if necessary.
372e8b3 mds: Add bool "dirty" to ScatterLock, plus manipulation functions. Also add is_dirty() to SimpleLock so we don't need typing in these checks.
f893a63 mds: rename Locker::file_mixed to scatter_mix
512a1da mds: Check for LOCK_MIX_STALE along with LOCK_MIX LOCK_MIX_STALE precludes writing to the protected data, but in general cases it's an acceptable state whenever LOCK_MIX is.
557e7e3 mds: Add new LOCK_MIX_STALE state to lock structs.
9d4f7b8 librados: add rmxattr
429b2d9 Revert "messenger: Make sure to unlock existing->pipe_lock. There are a few cases in the "open" section where we can go to fail_unlocked while still holding existing->pipe_lock. So unlock it."
242b599 test_lost.sh: put common functions in test_common
696da81 messenger: If we error out of accept() but have messages in our queue, save Pipe. This can occur if we're replacing another Pipe and hit an error in the process.
49d8fd8 messenger: If we're replacing an existing Pipe, steal queue when we kill it! Previously we could fail out after killing existing but before splicing its queue into our own, which lost messages.
bf0d347 PG::peer: introduce prior_set_build flag
b8c0d3d filestore: update btrfs_ioctl.h
1a7a341 filestore: use different encoding for snap async_create
bb451d2 filestore: use SNAP_DESTROY_ASYNC ioctl if available
a3d8c1f filestore: remove stray async_snap_test if present
953ef1d filestore: use new async btrfs ioctls
78352b3 osd: fix deadlock in map handler
f96eb80 filestore: split xattrs to multiple chunks
515efd5 rados: add getxattr, setxattr
6a88d57 mds: implement 'fragment_dir path frag by' command
7207476 PG::recover_master_log: replace count with find
3cbeaa1 prior_set_affected: log msg when we see a lost osd
17c615c osd: build_prior: clean up started_since_joining
831075c osd: PG::prior_set_affected: fix lost OSD detection
399d31f test_lost.sh: ensure that recovery doesn't start.
881bf02 include/utime.h: should include include/types.h
dec5b78 errno: add missing common/errno.h
ce050ef Create cpp_strerror to make error reporting easier
3d94b6a FileJournal: fix journal size calculation
4d1b9e6 makefile: simplify cdebugpack install rule
9c59a6a debian: 0.22-4
17b8b0d TestTimers: test SafeTimer as well as Timer
10ec8ce Timer.cc: add testtimers
1d8d744 test_lost.sh: update timeout, fix payload
f812f7e OSDMap: const cleanup
dca856d PG::build_prior: update comment
e3a53bb osd: track prior_set_lost
794cf70 osd: fix spacing in OSDMap::print
3e4e73f OSDMap::print: print osd_info_t using ostream op
dc18e7a osd mon: validate arguments before marking lost
ad270f9 osd: test: Add script to test LOST state
96692d2 messenger: Make sure to unlock existing->pipe_lock. There are a few cases in the "open" section where we can go to fail_unlocked while still holding existing->pipe_lock. So unlock it.
acc2e4d mds: show readdir frag
e380fc2 client: reset fg after _readdir_get_frag
0abf57b client: fix skipped dentry on readdir chunk boundaries
59426bd client: fix dcache removal during multiple frags
6c2f0f0 client: show file offsets in hex
28d8992 messenger: a 0 timeout on ::poll really means don't wait (as opposed to -1, which waits until an event occurs).
32ba776 mds: fix inodestat encoding when frags are present
cb82eb5 mds: do not finish_scatter_gather_update_accounted on dirfraglock
814f9db objecter: reconnect on osd disconnect
34da1ac rgw: return 204 on successful removal of bucket/object
44c7863 init-ceph: Make sure daemon_is_running() checks the correct instance
78660cd objecter: pause writes when FULL flag is set
66e493d objecter: always set READ or WRITE flag
58f2f37 include/utime.h: should include include/types.h
c1f2f9a rgw: return 204 on successful removal of bucket/object
a5f6da4 errno: add missing common/errno.h
1127e47 Create cpp_strerror to make error reporting easier
18b1f78 FileJournal: fix journal size calculation
9b4ec49 makefile: simplify cdebugpack install rule
9e3607f debian: 0.22-4
6620a5a TestTimers: test SafeTimer as well as Timer
1b0cf69 Timer.cc: add testtimers
99013ba mon: Don't force a wait of paxos_propose_interval seconds on every commit.
197928c Objecter::shutdown(): call SafeTimer::Join()
5aca728 btrfs_ioc_test.c: added a unitest
dac9ecd SimpleMessenger::Pipe::Accept(): fix open
b55af75 Revert "Revert "messenger: introduce a "halt_delivery" flag, checked by queue_delivery.""
fd42c85 filestore: deliberate crash on ENOSPC or EIO
aab2a36 debian: sign/publish specific deb version
c0db71f debian: update standards-version; fix ceph-client-tools-dbg
19c2c83 filestore: deliberate crash on ENOSPC or EIO
781874f messenger: Make sure to unlock existing->pipe_lock. There are a few cases in the "open" section where we can go to fail_unlocked while still holding existing->pipe_lock. So unlock it.
1b2e992 debian: update scripts to do packaging fixes
d44267c Revert "messenger: introduce a "halt_delivery" flag, checked by queue_delivery."
69b764a mon: add 'mds rm <gid>' and 'mds rmfailed <id>' commands
8a7c95f (tag: v0.22) v0.22
2bc159e debian: no libgoogle-perftools-dev on lenny
180f441 mds: cleanup: clarify issue_seq in cap release debug output
b8ab009 mds: cleanup: print waiter masks in hex
0e472d4 mds: use correct helper when pinning past snaprealm parent
d8ee92a mds: take nestlock wrlock when projecting rstat into dirfrag
8528ebb messenger: introduce timeouts on pipes.
6e1eeac rgw: small cleanup
b378cb4 Add RGW_PRINT_CONTINUE to control wether we print the 100-continue header
32e790c conf: only set sig handler if wasn't set already
dfc46f5 mon: do not assert if paxosv < monmap->epoch
406648e mon: do not delete mon->monmap which is not created by new
04189f8 mds: fix can_scatter_pin() to be only SYNC and MIX
9a8f1ad object store: create OP_COLL_RENAME operation
039a86f doc: add object_store.dot
966a5b8 conf: actually handle long long config options from conf file
ad12d5d Fix bug #487: osd: fix hang during mkfs
17de417 FileJournal.h: add attribute __packed where needed
69be0df messenger: introduce a "halt_delivery" flag, checked by queue_delivery. Defaults to false, is set to true by destroy_queue.
60bfc67 osd: fix MOSDBoot versioning
0ff6e41 RadosClient: clean up Rados::client use
36b61da mds: SimpleLock and subclasses: const cleanup
d5d4503 lists templates: const cleanup
7f493a1 qa: add ffsb
e6d28ce prefix git sha1 with commit:
dc295a3 mds: don't assert on mismatched rbytes
f35bdc2 add rc to release.sh
098a493 mdsmonitor: remove unused variable
fbb5a45 mon: add 'ceph health' command
219b476 mds: fix const-ness of is_dirty()
df265a2 mon: don't include endl on clock drift warning
dead368 Makefile: add cdebugpack.in to EXTRA_DIST
b438b3d mds: Fix projection in rename code paths. We aren't actually projecting the inode unless destdn->is_auth(), so check for that before projecting the snaprealm (which requires a projected inode)! Then on rename_apply, open the snaprealm on non-auth MDSes.
4ba060c mds: CInode doesn't always call assimilate_dirty_rstate_inodes_finish
c56ab53 mds: Locker::local_wrlock_finish now calls finish_waiters!
53fe418 mds: MDCache should adjust_nested_anchors once the op's been logged. Fixes crashes from assert(nested_anchors >= 0) failures when updating at the wrong point.
fc60984 mds: avoid EXCL if mds_caps_wanted in _do_cap_update
fa2c371 mds: bump dirstat.version during link/unlink/mtime update
9e5a203 mds: fix get_xlock() assert on slave xlock
f9b102e mds: bump rstat version in predirty_journal_parents
d2175ee filestore: don't start commit if nothing new is _applied_
a7ed2ee mon: const crusade
55370d3 cdebugpack: update Makefile.am, add missing line
3d9a93e mount.ceph: make -v a little more verbose
8efef66 mount.ceph: const cleanup
566292a mount.ceph: allow the user to omit ceph_options
0b26f31 mon: class library encodes/decodes activated class
932cfcb mount.ceph: add usage message
35c08d5 mount.ceph: argument parsing cleanup
873095b osd: fix merge_log cut point
6bcda25 osd: loosen caller_ops asserts
6679c27 osd: move to boot state if down OR wrong address in map
6545f3c cdebugpack: behave when /bin/sh is dash
af749e6 cdebugpack: man page
9805eb5 cdebugpack: include cdebugpack.XXXX dir in tarball
2c49ac4 cdebugpack: include .tar.gz in usage filename
3b1b8f8 cdebugpack: include in deb, rpm
f10906b mds: respawn (instead of suicide) on being marked down
a2bcb41 debug: always append to log
a7deada init-ceph: DTRT when cconf returns host = localhost
a18213d debugpack: add ceph-pg-dump
f6e49cb cdebugpack: save some more info
8b716c6 mds: Check the lock state, not the inode state!
b778f83 osd: on clearing corrupt logs, call pg::write_info
430377b v0.23~rc (new unstable branch)
e588298 osd: fix pull completion tests, again
47f2efb osd: log error instead of crashing on failed pull attempt
a280685 osd: save corrupt pg_logs to a special collection
f6b47e3 osd: clean out redundant (and wrong) complete calculation
1bb60b4 osd: make sparse data/clone push behave with partial object push
ed3976c rgw: change default content type to binary/octet-stream
1f94a8f monclient: fix leaks in build_initial_monmap address lookup
7935e30 monclient: fix off-by-one buffer overrun
16f053f addr_parsing: remove unused mount_path logic
109dcdf cdebugpack: add a utility to generate a debug package
4bc4cba osd: ignore info queries on deleting pgs
a4eb599 osd: cancel deletion on pg change
ed2eee5 config: fix address list parsing
414bc4f cmon: better error handling
bcf1bde conf: cconf return default values from config.cc if not found
12373a6 mds: allow do_null_snapflush on multiversion inodes
e064796 signal handlers: be more elaborate about caught signals
22c3846 mds: don't call mrk_dirty_rstat for base/root inodes
d600596 mds: fix EMetaBlob dir_layout lifecycle
11a24f5 mds: set root dir_layout during mkfs
09b2db7 mds: use helper to update inode from EMetaBlob during replay
f5958ad mds: set dir layout during replay
cdc2b89 mds: set root inode default_file_layout on mkfs
994525a mds: fix typo in EMetaBlob encoder
50d91f6 osd: less chatty in log about caps
95e273a mds: zero inode layout for dirs
3e56ac4 dump backtrace when getting sigsegv and sigabrt
e4d86f3 client: Fix truncate_seq/truncate_length initialization. Initializing to 0 was causing file_to_extents to get called on every inode since the MDS initializes truncate_seq to 1 and truncate_length to -1. This revealed itself as a crash on directory inodes, which have their layouts zeroed since merging the file_layouts branch. To make clearer, assert that anything being truncated is a file inode.
ede3763 mds: fix LocalLock xlocking by replacing default
5febcb9 osd: read_log: clear the pagelog if it is corrupt
f4581e0 mds: fix ESession/ESessions event id type again
ff463df filestore: drop unused parse_coll() declaration
2b4eb4a add set layout ops to ceph_strings
8938f27 cephfs: Wrote and committed cephfs
45fa4a2 mds: Conditionally encode default dir layout.
212c189 client: update test_ioctls to test new stuff
b588983 always throw by value; always catch by const ref
fbbf448 client: import ioctl header from ceph-client
64c3556 mds: fix setlayout truncation check.
cb7b360 mds: misc fixes for dir default layout projection
2d194c6 mds: If a projected inode has a dir_layout, we now encode it to disk.
42c7ed4 mds: Implement op CEPH_MDS_OP_SETDIRLAYOUT.
79d1893 mds: zero out the layout in handle_client_setlayout
54e95fe mds: Look for and make use of directory tree default layouts, if existent.
01ae1be filestore: make list_collections() list all dirs
940354b osd: make load_pgs verbose
0b7c1af mds: fix setlayout truncation check.
c9e6955 mds: zero out the layout in handle_client_setlayout
8a5008b mds: remove unused CompatSet mds_features.
f389afc mon: add 'mds fail N' command
cdf43d5 buffer::list::copy: complain about invalid strings
e87f751 mds: fix and use add_replica_stray() helper for handle_dentry_unlink
e18001c mds: fix stray replica push on _rename_prepare_witness()
26511cf osd: revamp forgetting lost objects
36067ea osd: revamp forgetting lost objects
5e45030 osd: move PG::Info::coll to PG::coll
e305ea0 osd: cache coll_t in PG
5b798a3 osd: fix recovery_primary loop on local clone
aaa58f5 gitignore: Ignore cscope and vim temporary files
a4138c9 osd: generalize coll_t to a string
0e67718 mds: drop bad assert
ea6286a Makefile: add missing include
7657a6d interval_set: hide data members
b9f2816 Makefile: add missing include
548df8e mon: Fix issue first addressed in 2c5a3d99aa3be5ce114072e84f73a0a6426e63fd. We were properly falling out of the while loop when we reached end(), but not checking for it in the following if-else. Now we do! Reported-by: Henry C Chang <henry_c_chang@tcloudcomputing.com>
0523ce1 osd: do not request backlog from peers with empty pg
aa04c8f osd: try to object from other replica(s) on EOF
3bab6ac Add the setup-chroot.sh script
2223b22 osd: clarify comment in recovery code
ab62aab msgr: Don't take over old pipes if they're lossy. Fixes bug #443.
d8f595e Implement interval_set::const_iterator
fb41b8f Rename interval_set::begin and end
5a9a5e7 rgw: send 100-continue response only if requested
da41f66 mds: set PREXLOCK next state to LOCK
f1921c3 mds: don't block request on freezing if we're already auth_pinned.
569d96b rgw: fix meta attr setting when doing copy operation
ead92c4 mds: block request is freezing
2ae0172 osd: add coll_t::is_pg() method
afa2d2f mds: fix ESessions event type
44587aa mds: fix xlock state asserts for LocalLock
1d7eb8a mds: fix locallock rule (missing column)
f4114cf mds: add rename failure hooks
87d5df1 osd: fix pull completion tests, again
0a719d5 ceph: make version in backtrace look nice
27f712a osd: clean out redundant (and wrong) complete calculation
574fc5a mds: Create struct default_file_layout and encoder/decoder functions. Also enable the state transfer when lock state changes.
eb0a3fa osd: make sparse data/clone push behave with partial object push
7ca8e38 mds: defer MExportDirDiscover until we have root inode open
ea49ea6 mds: alloc auth xlock on versionlock/LocalLock
63bc150 mds: defer cap release and update consistently when frozen
7f329df mds: refactor process_cap_update a bit
82e52b4 mds: drop old/incorrect comment
f0c89ba mds: always mark parent scatterlock when marking dirty rstat
416470d mds: mark dirty rstat inodes during recovery
c503d36 mds: error to log when inode/dirfrag rbytes get out of sync
143438a mds: stubs for printing projected fragstat/rstat
28a4c34 mds: assimilate dirty rstat inodes during scatter_writeback
c0d7e8f mds: maintain dirty_rstat list
29b1e84 mds: add dirty_rstat CInode elist, state, pins
810ff49 osd: remove assertion
628e28e qa: improved rgw tests
0ccdd6e osd: add checksums to pg log
f7f32b2 makefile: drop quotes on tcmalloc CXXFLAGS
043c9c8 mds: scatter pin frozen tree on importer too
c82bc1c mds: drop dead Renamer code
2fbd843 mds: clarify inode dirstat/rstat locking
b108b6a mds: fix bounding frag rstat/fragstat update during import
1c09263 mds: do not scatter_writebehind on nudge if replicated
d715338 mds: use scatter pins for migration instead of rd/wrlocks
961e186 mds: add scatterpins
690607c backtrace: include ceph version
113a9bc mds: always pass pick_inode_snap the head
1eaec17 qa: add simple rgw test
56ae116 mds: remove unused CompatSet mds_features.
0277823 mds: add policylock to the inodes. This will be used to cover per-directory default file distribution policies, and maybe other things that come up.
2e5fa67 mds: fix eval_gather() for non-auth inodes
79b6f2f mon: return errors (not 0) from MonitorStore::get_bl_ss()
a783f40 mon: move election start reset to starting_election() helper
79166a2 mds: distribute flocklock properly!
6efd1e8 mds: distribute flocklock properly!
96c08e4 mds: Make SimpleLock wait shift bits unique like they should be.
84a09ba mds: Make SimpleLock wait shift bits unique like they should be.
2c5a3d9 mon: Fix infinite looping, if failed_notes is empty.
2e71037 mon: add debug output
01b58f3 msgr: do no open connection when policy indicates we are lossy server
4b4bdb4 rgw: url_decode url prefix
8fc9adf rgw: url_decode delimiter
c336857 Makefile: move tcmalloc checks outside of FUSE checks. Whoops.
ca2f2d5 mds: enable tcmalloc profiling on MDSes. Add commands to start/dump/stop.
a850708 osd: enable tcmalloc profiling on OSDs. Add commands to start/dump/stop.
0ef684d config: build infrastructure for handling tcmalloc's profiling.
381447d qa: add snaptest-git-ceph.sh
6cb6aa1 mds: correctly set straydn->first for rename target
b7c4185 mds: do full pre_dirty()/mark_dirty() on cowed dentries
3aa948f mds: only return pdnvec for full path_traverse
fa277ae mds: don't instantiate null dentries for snapped namespace
f080bb9 rgw: url_decode delimiter
23b1b52 makefile: build cfuse with tcmalloc
f4be4b9 librados: throttle messages via the objecter
e64109e objecter: enable automatic throttling of all messages
0c800a9 objecter: add accounting to keep track of total in-flight messages.
c8de979 Revert "throttle: make count an atomic_t"
e4e37a9 (tag: v0.21.3) v0.21.3
df1d5d8 cauthtool: update man page
ce63cf4 client: increase default cache size to 16K dentries and lru insertion point .25
487b8a6 debian: allow builddebs.sh build a specific dist
67f1f1d rgw: get_data should not be initialized after being set
06e27d5 rgw: make gateway dns name configurable
5cf850f debian: make update_pbuilder.sh update a single dist at a time
2eee1af makefile: add some flags recommended for use with tcmalloc.
29c4037 mkcephfs: use new cauthtool --cap syntax
2dbc44e vstart.sh: use new cauthtool --cap syntax
028fdf8 cauthtool: add simpler '--cap key val' syntax
a6b1a5e mds: drop x/wrlocks before, rdlocks after sending reply
9b93367 mds: touch missed dentry when fetching dir on path traverse
2e5731b qa: update snaptests, add snaptest-multi-capsnaps.sh
22d2113 client: Make truncation work properly The previous if block didn't work because inode->size was usually changed well before handle_cap_trunc was ever invoked, so it never did the truncation in the objectcacher! This was okay if you just truncated a file and then closed it, but if you wrote a file, truncated part of it out, and then wrote past the (new) end you would get reads that returned the previously-truncated data out of what should have been a hole.
1a4bbb7 osd: copy truncate_seq et al to clone oi
0023c88 osd: fix is_pool_snaps_mode() for empty pools
3f8b3f7 throttle: make count an atomic_t
63898bf update TODO
fd0b1d2 init-ceph: fix log_dir creation
52f83d9 rgw: fix cleanup for certain ops
3c14051 rgw: fix cleanup for certain ops
2a6fcfd mds: update realm parent pointer and pin parent inode changing realm past_parents
1847dbf mds: need_snapflush for all snaps intersecting cowed inode range
973133e time: format dates based on ISO 8601
2af8806 mds: include tid in MClientCaps printout
7aae37c throttle: add non-blocking get_or_fail method
409bc41 addr_parsing: make more resilient; turn down debugging
902b1c1 monclient: parse named addresses, not just IPs
2dc3a01 client: in choose_target_mds, break parent lookup if inode is unlinked.
c6447c7 mon: only remove laggy standby mds's; mark others laggy
e77ca65 mds: don't suppress cap on eval following do_cap_update
c1faba7 Revert "msgr: Test reconnect protocol changes."
5dd9a45 objecter: remove unused bufferlist
fb6454f objecter: remove unused bufferlist
7349bce msgr: Test reconnect protocol changes.
08f5cdf msgr: when both ends support it, exchange in_seq values on reconnect to prevent gratuitously re-sending messages.
412f530 msgr: Let requeue_sent remove items completely, given a seq to remove from.
1d5e6b2 msgr: If one Connection/Pipe replaces an old one that faulted, fully replace.
ac0a178 client: don't crash on cache readdir of empty dir
d10d76f client: implement readdir from cache
1aa96a9 client: maintain dn->offset
850ac65 client: remove stray dcache items while insert readdir results
dc773de client: buffer name->ino linkage only; do stat at time of readdir
6346aae client: only parse readdir result once
100dd7b client: keep map<> _and_ hash_map<> of dir names
778c0bd client: avoid trivial helper _readdir_add_dirent
3be64f1 config: fix buffer overrun in env_to_{vec,deq}()
3695de1 osd: fix osdcaps parsing negative return value
c8da246 filestore: handle error opening fsid on mkjournal
0fd8934 filestore: handle error reading current_op_seq_fn
daa733a filestore: return on error creating fsid file
1a16c01 filestore: fix error paths for _clone()
eeeaf7a moncaps: fix array out of bounds in parsing
5f7a999 osd: handle nonexistant file in ager
ca4bb65 osd: check for errors in open, write in write_meta()
c7658de str_list: fix buffer index when start<0
ad8a0d9 mon: remove laggy standby nodes (instead of marking laggy)
23b8198 mds: re-add if standby and removed from mdsmap
c25d9a4 osd: don't create clone_obc on replica
ffad213 osd: don't leak map_in_progress_cond
ed1f0ca mon: less log noise
cf82ada init-ceph: mkdir log_sym_dir only if not default
8aa15c4 mds: propagate accounted_* into dirfrags on scatterwriteback
fb96c17 mds: don't xlock and wrlock same dn->versionlock
0f963b5 mds: drop useless virtual-ness for finish_scatter_gather_update
89af63e mds: journal dirfrag accounted_{r,frag}stat on inode update
30f9795 mds: in cinode debug, only show nl= if != 1
2a534d7 init-ceph: mkdir log_dir and log_sym_dir
e47cd48 mon: be a little more conservating in MOSDBoot handling
a34eddb osdmap: allow blacklist of an entire ip
33fdb9d mon: add 'osd blacklist ls'
ad40652 common: close fd after parsed config file
6bc8090 mount.ceph: exit with error code from mount
bdd5c16 mon: 'osd blacklist (add|rm) addr [duration]'
797950e mon: fix up variable names to be more clear this is an inclusive range
2a07960 mon: fix osdmap subscribe range
6cefd5f mon: fix send_incremental ranges; behave when sending just 1 inc.
e7462f9 mon: handle subscribe to osdmap=1
611ba9d objecter: remove unused bufferlist
448d3d5 mds: fix journal replay of session close->open after reconnect
9e383c7 objectcacher: fix use-after-free atomic_sync_readx
717f458 mds: fix use-after-free
bb4d45d mds: fix use-after-free in snaprealm_create_finish
5e98e2d objectcacher: cleanup release(), just to be clear
4ccf69b objecter: add missing return in list_objects
c30fde4 objectcacher: fix use-after-free
3eb332a mount: fix scope of secret[]
066a588 crushtool: fix bucket type array bound check
9434b12 rados: fix delete[] in aio_bencher
1de5617 client: move readdir code around
c8be0a5 client: reimplement getdir() with readdir_r_cb()
d558674 client: reimplement readdir
eefabc7 cfuse: use readdir_r_cb
561f302 uclient: implement readdir_r_cb (callback based readdir)
a4a1448 mds: sync replicas after finishing XLOCK gather
bc90591 mds: fix replica state for mix->sync
397e3a1 mds: don't export any system dirs
046a86f mds: authpin non-auth items we may need to REQSCATTER or REQRDLOCK for any lock type
b7b77ff Revert "Merge branch 'auth_change_waiters' into unstable"
2c47edc mds: lock path, parent dir scatterlocks _after_ freezing
4084bf3 mds: can next state lockability checks in eval_gather
f0e22fc mds: don't allow read in sync->mix2 state, request rdlock in sync->mix
8698692 mds: rename process_reconnected_caps()
ae7dcdf mds: make is_dirty() const in parent and child
f6f8e5c mds: choose lock states for nestlock and dftlock too
4205b7d mds: choose lock states on all inodes, not just those with caps
a478ab5 mds: choose LOCK if !replicated and dirty scatterlock
c80a1d0 mds: fix bad iterator usage in process_reconnected_caps()
518b95d mkcephfs: fix bad |
7f9bab9 osd: log error instead of crashing on failed pull attempt
59f75d5 rgw: send status: 100 after auth code to signal fastcgi module
52aa8be rgw: update the rgw_admin usage
5ae8e26 class: fix adding of class library, when previously existed
46a16b9 mds: fix bad iterator usage in process_reconnected_caps()
783d2ed mon: more useful class debug output
f24cee3 (tag: v0.21.2) ceph v0.21.2
85814d4 client: Make truncation work properly The previous if block didn't work because inode->size was usually changed well before handle_cap_trunc was ever invoked, so it never did the truncation in the objectcacher! This was okay if you just truncated a file and then closed it, but if you wrote a file, truncated part of it out, and then wrote past the (new) end you would get reads that returned the previously-truncated data out of what should have been a hole.
610b2e9 osd: fix class timeouts
79f86c9 osd: clean up class loading code a bit
412a1c8 osd: less log noise
20da360 osdmap: whitespace
9ee5842 osd: use cluster msgr to share map with old hb peers
c3b97ff osd: mark down old _from connections too; and fix old _from debug output
41cd1ea osd: don't mark down old _to peers that are still _from peers
d273c99 osd: always mark down old hb peers; send map update via cluster link
7d1179e filejournal: clean up journal initialization sequence, error codes, output
4e30032 mds: omit lock state in debug output when it's uninteresting (sync, no locks)
6dae938 qa: rename snapmove -> snaptest-parents
f429dc8 osd: don't reply on missing class
c1a8c30 mds: only wrlock filelock during max_size changes on the head
27cc3bd qa: add snaptest-dir-rename.sh
54d661a qa: add blogbench test to qa
4963675 debian: don't need to add .git_version in release script
7fde620 makefile: include .git_version in tarball
b33c051 mon: error out gracefully when we can't read the magic
655199a mds: fix invalid comparison.
98cf3c3 client: don't improperly conclude COMPLETE on empty dir
1c176ee qa: clean up snaptest-* suite a bit
4f3407d client: don't print inode, it might be NULL. This is especially bad because you can't start cfuse with debug level 20.
5b099f5 Revert "qa: remove random ordering from runallonce, for predictable resource matching" This snuck in by mistake in the leaks merge.
f07fdee client: only includee xattrs in caps msg if we are flushing that bit
99674a5 client: queue capsnap on any dirty metadata
d34c778 mds: fix cow_old_inode to properly save xattrs
c9b1c54 mds: fix snaprealm create split
ec02fe3 mds: no snaps in system dirs, but root is ok
2f2cccb mds: drop old debug output
f32a880 mds: rename project_past_parent -> project_past_snaprealm_parent
ac12b0c mds: drop unused projected_srnode list
7172a63 qa: snaptest-xattrwb.sh
10ed520 qa: chmod +x snaptest-authwb.sh
08920f4 mds: expose projected values for all locks to loner (not just filelock)
25cc145 mds: do null snapflush as soon as we have all file wr caps
cd92072 mds: fix null deref of cap in do_cap_update when doing intermediate snap updates
c4ab621 mon: add clock sync backoff to handle_lease_ack
6998372 mon: Adjust lease time checks.
067d8bb mds: don't auth_pin non-auth wrlock targets
8d46243 mds: don't auth_pin non-auth rdlock targets
aa226df mds: add wait on auth change machinery
fa11800 Revert librados portions of b0a8f6be815a03db36ef14e5006425c60951e396 and 6289b3e409acd050937bd23fba268f61e03ab30f. These were never meant to occur, just a tool failure.
46bf806 mon: ignore osd boot with bad addr
cde89c5 mds: only revoke client leases when there are leases in AC_LOCK handler
45ab5ac mds: fix retry on discover_*
8588100 mds: ignore reqrdlock if frozen
3adccf5 mds: handle REQRDLOCK on simple locks too
5ec305d mds: eval inodes with caps after import
d636223 msgr: release dispatch_throttle on reset connection
fc8176c qa: add test for snapcap writeback of auth bits
8950599 qa: test xattr snap wb
c85a499 osd: disable potentially dangerous dead code
1ac5675 backtrace: fix segfault in tcmalloc. The print function is only called when we're about to crash anyway, and the datamember 'foo' is allocated by ptmalloc, not tcmalloc. Freeing it via tcmalloc causes its own crash which pollutes our debugging and incorrectly sticks tcmalloc into the stack. So, just don't free.
0a98202 mds: fix get_projected_srnode. We might have projected nodes without projected snaprealms
ee912be mds: remove compiler warning in CInode
34dbf80 mds: fix get_projected_srnode to actually find an srnode, instead of returning the (possibly NULL) last projected_node has set
5835a79 mds: remove unnecessary silent fallout from add_primary_dentry.
f669adb mds: drop old thrash_exports time limit
cfdc5f0 osdmaptool: print useful error instead of crashing if osdmap is corrupt
ec80b10 crush: return error instead of BUGing on bad forcefed mapping
80c8902 mds: return error to client on invalid mds op
4007669 mds: fix ENOTEMPTY checking on rmdir/rename
6ea292d mds: drop projected_snaprealm_ptr
12a5801 mds: drop projected_xattrs_ptr
6aec681 mds: allow you to DELETE snapshots in root directory too
c60db74 osd: disable potentially dangerous dead code
6b92231 backtrace: fix segfault in tcmalloc. The print function is only called when we're about to crash anyway, and the datamember 'foo' is allocated by ptmalloc, not tcmalloc. Freeing it via tcmalloc causes its own crash which pollutes our debugging and incorrectly sticks tcmalloc into the stack. So, just don't free.
b1350c9 mds: fix pick_inode_snap
84e835f mds: fix intermediate snapped inode updates
22bd837 osd: disable potentially dangerous dead code
3b5a53f utime: microsecond -> nanosecond resolution
b18ee37 backtrace: fix segfault in tcmalloc. The print function is only called when we're about to crash anyway, and the datamember 'foo' is allocated by ptmalloc, not tcmalloc. Freeing it via tcmalloc causes its own crash which pollutes our debugging and incorrectly sticks tcmalloc into the stack. So, just don't free.
0d5829e mds: allow snaps in root dir. This may be too large a stick, though
8c5ffdb mds: CInode should set projected_snaprealm_ptr to NULL if we pop the last one!
233ed55 mds: project_snaprealm in project_and_dirty_inode. Fix users.
35ea515 mds: journal snaprealm changes in MDCache::journal_cow_dentry, if a new snapnode exists.
481402a mds: implement get_previous_projected_xattrs; use in MDCache::cow_inode().
6d8f0f0 mds: move snaprealm projection to operate cooperatively with inode projection.
2716c0c mds: move inode and xattr projection into projected_nodes list.
b279a50 start switching to use projected_nodes in projection and journaling code
e3aacf6 mds: CInode: create new projection_node with pointers for inode, xattrs, and snaprealm.
7aac992 notes on snaprealm projection in project_inode situations
228613f mds: CDentry. Remove needlessly redundant inline if-else.
c63ca5e qa: add simple snaprealm test script.
e3654df mds: make null snapflush helper, and call on cap removal too
02522af mds: simplify/fix early null snapflush check, clean up comment
d0f6991 osd: carry ondisk write lock for cloned objects
824de0d mds: fix crash when REQSCATTER races with an actual scatter/MIX
c8701f2 mds: fix null snapflush logic
f3b323f mds: don't send null ack in do_snap_update
466c002f qa: add snaptest-snap-rm-cmp
0bcdd0b mds: remove forward-on-nonauth-rdlock behavior
e8f56d3 auth: fix skipping of ~/ if $HOME subst fails
28d7a40 mds: oops, fix null snapflush fix
9908c0e mds: clean up {have,get}_inode() definitions
625ffd3 mds: fix null snapflush inode lookup
9092d65 rgw: fix commit warning. size_t is a long unsigned, not a long long unsigned.
5a89b8b qa: add simple snaprealm test script.
6d0ccd9 mds: handle no flushsnap
9dd2ffd qa: snaptest-capwb check no snapflush case first
d2205a9 qa: snaptest-upchildreams.sh should clean up after itself
2551651 qa: add capwb check for case where client doesn't send flushsnap
5f9cc44 mds: fix rdlock referral on snapped inode to head
60596c7 mds: drop x/wrlocks before, rdlocks after sending reply
caec5d2 client: direct requests in snapped namespace based on nonsnap parent
a4930d9 qa: add snaptest-estale.sh
4b6deda qa: make snaptest-2 output less ugly
945c62c mds: make inode first track dn first on rename
cc8f5ac mds: make new inodes follow dn->first
7beeecc mds: Use project_past_parent and pop_projected_snaprealm instead of add_past_parent hack.
b590b4b mds: use snaprealm projection in rmsnap
d7ac8ee mds: use snaprealm projection methods for mksnap
830b62a mds: Move SnapRealm::project_past_parent to the CInode and fix users.
e4ea064 mds: move snaprealm projection into CInode
bb0dcd2 mds: add SnapRealm projection methods
6289b3e mds: rename SnapRealm::snaprealm to SnapRealm::srnode
b0a8f6b mds: switch all SnapRealm users to make use of snaprealm.
ca1d1ed mds: create a new sr_t struct to hold versioned data of a SnapRealm.
2921e13 mds: flush log on cap writeback if !dirty and unstable locks
18cf92a mds: show cdentry authpin debug state
eb5213e qa: show rm/cp progress on snaptest-2
4e9ae5d qa: add test that client updates realm children on snap update
064c248 client: correctly direct snapdir requests
ab20269 qa: add snap-rm-diff.sh to look for issues with snapshot integrity. Currently passes the script, although running these steps manually (especially with smaller files) fails a fair percentage of the time for me.
1a0ab55 mds: only kick head on snap rdlock if in SNAP_SYNC state
cdb8a98 monclient: gracefully error out when given an invalid monmap path
2733199 osd: update missing_loc earlier in push
e5c0912 debian: fix tcmalloc dependency
165c5f2 client: fix xattr cap writeback
0be7dcf client: fix capsnap writeback of uid/gid/mode/xattrs
462d317 ceph.spec.in: require, build with tcmalloc
49f3ac4 debian: require tcmalloc
9069b8e mds: only kick head on snap rdlock if auth
c5e5237 filestore: fix throttling on journal, op_queue for parallel and writeahead
c3e0915 filestore: fix race in op enqueuing to ensure throttle limit is honors
bfee1fa objectstore: fix transaction get_num_bytes
c4b7c97 mon: mon_clock_drift_* for consistency
c1da827 msg: use RefCountedObject; overload get() only to cast return type
998d97f osd: whitespace
dcedfb8 osd: improve l_osd_buf accuracy
4280200 buffer: fix/improve debug
a3eefd5 msgr: don't leak message when sending to a closed connection
a406cfa osd: log push ops as push, not pull
d00f43a logger: fix logger counter reset
7aa332c (tag: v0.21.1) ceph v0.21.1
255bf71 mon: use elector's epoch
acd17a5 Makefile: include logrotate.conf in tarball
a234df0 debian: fix update_pbuilder.sh
13defe0 mon: rename mon_lease_wiggle_room -> mon_allowed_clock_drift
0e7cfc6 mon: backoff clock drift warnings
fd080d5 osd: write (empty) log, bounds on remove_pg start
d708a74 rgw: fix content length encoding
c8e7e1a mds: remove an extra m->put().
e5923ac mds: open_remote_dirfrag: don't lose an op if a remote mds is down, queue it!
062f531 mds: add documentation to MDCache, Server, Locker
0c6c48c mds: add documentation to Locker, MDS, TableServer, Objecter
43af88e MDBalancer: fix a few leaks, add documentation.
5cbbf10 mds: Server documentation and some leak fixes.
744e372 MDS: Migrator leak fixes and documentation.
3ebc768 mds: MDCache documentation, and a few missing puts.
195c382 mds: remove dead code
f1eb9a8 osd: clean up ReplicatedPG leaks and comments
6573a1a osd: put message before shutdown.
c81be3b osd: rename shadowing variable for clarity
a43897b mon: delete Subscriptions, don't just clear them. Fixes minor memory leak.
9c18972 auth: delete Exception once it's caught; fixing minor memory leak
8dd4b46 msgr: Fix leak of authorizer
5e04249 conf: fix memory leak
a8786f8 monclient: fix memory leak
6a3baec auth: fix memory leak
4cbe2b4 filejournal: fix small memory leak
ae6a530 auth: delete char array, fixing memory leak.
4916cc1 auth: no need to duplicate character arrays, just turn to string implicitly Fixes small leak.
9893269 osd: Remove PG::preprocess_op. It hasn't been used for a while now.
768eb41 osd: remove some very dead code from ReplicatedPG.
6b93dc9 filestore: flush using sync(2) hammer
8778bac qa: remove random ordering from runallonce, for predictable resource matching
9ac243e mds: fix snap lookups in CInode encoding
fc37591 tcmalloc: add support for tcmalloc.
f5487fd mds: don't try to recover filelocks if the client didn't encode any
fd43724 osd: simplify class waiter list
840530e rgw: make gateway dns name configurable
92665f8 client: fill in num_fwd in messages to mds
2cac166 osd: class load shouldn't hang when failed to load
8100841 qa: echo output
af96ba5 fiemap: fix include
185f4e5 fiemap: move read_fiemap from rbd.cc to fiemap.cc
bce3a63 mds: fix send_message_client_counted helper
ec91ea1 mon: add 'mds compat rm_* id' commands to adjust mdsmap compat set
823c36c autoconf: detect existence of linux/fiemap.h
d97e42e mon: automatically incorporate new incompat features into mdsmap
846e979 mds: include compatset in beacon message
9cdd4a6 mds: add incompat clientranges bit for the format change
7e00212 qa: add snap test for cap writeback
afb8cdf rbd: implement copy operation using sparse_read
4a4d687 mds: non-head requests always rdlock as_anon
af92287 rbd: use sparse_read op for export
6f38165 osd: implement sparse_read
1fba876 mds: write flushsnap cap metadata into old_inode if appropriate
acfcfa0 mds: ensure that rdlock on snap filelock flushes data
f8333de mds: rdlock head when snapped inode is snap->sync
81ab0a0 mds: do not clone caps to snapped inodes
2f03347 mds: group finishers after eval_cap_gather does all locks
77ee6dc config: set osd_min_down_reports to 3.
5a8a218 osd: only access failure_queue while under heartbeat_lock.
d979e48 osd: Adjust failure reporting.
83e5825 osdmon: Adjust failure reporting.
7f9cef0 makefile: define docdir for old automake versions
773dd82 monmaptool: man page typo fix
aa5eced osd: add a mapext operation for mapping extents (fiemap)
e2bb2e7 rbd: import using fiemap
5b5c006 osdmap: only decode internal addresses if map is new enough version
6f7523a rados: -i and -o are still there for other commands
a7038da ceph.spec.in: fix docdir paths
1cf4501 ceph.spec.in: fix sample.ceph.conf chown
1ecda51 rados: fix usage
ef711e2 osd: fix heartbeat to/from map updates
fa27b31 osd: cover map_in_progress by osd_lock instead of an individual lock. The separate lock is no longer needed and removing it reduces lock contention and makes it easier to avoid races elsewhere.
207a1bd osd: Unlock osd_lock in _dispatch before locking handle_map_lock
2fbf1e9 osd: switching dispatch_running to be a counter Now it works with multiple messengers dispatching.
c7d2352 osd: guard _dispatch to prevent execution of new messages while the map is updating
dfb85d2 osd: adjust map_in_progress guarding
c26cb72 cosd: adjust client/cluster messenger setup to be more consistent and poison better
b588a56 config: Error out when you can't parse an addr from the config file.
d7d615b osd: use the client_messenger for the logclient.
42c0085 osdmap: remove unused versions of get_[cluster_]inst
24989fe OSD: use get_cluster_inst instead of get_inst when checking other OSD instances
595543f osd: when checking OSD identities via require_same_or_newer_map, use cluster_addr
cec513f osd: add Mutex and flag to cover execution of handle_map_lock. Fixes a crash when the cluster and client messenger both dispatch an OSDMap and their handling gets intertwined.
28b5497 osd: be more careful with cluster/client messenger use.
582f928 osd: register the OSD on cluster_messenger if needed
d6c8f8c config: correctly notify when OPT_ADDR config options are found.
d0f7412 config: add OPT_ADDR type, move "public_addr"/"cluster_addr" processing there Necessary side effect: move public_addr/cluster_addr into g_conf.
382290e messages: add cluster_addr to MOSDBoot, use it in OSD and OSDMonitor
d290a04 cosd: move messenger existence checks to where they're useful
7eeca9b cosd: create separate cluster/client messengers if separate addresses are provided.
eb70820 msgr: set up bind and Accepter::bind to take in addresses and bind to them
6abf48d config: rename g_my_addr to g_public_addr, add g_cluster_addr
26ff6cb osdmap: move osd_cluster_addr decoding, and make sure that size matches osd_addr
ed28d5e osdmap: Make sure osd_cluster_addr matches osd_addr size on decode
ef9a4ee osd: remove messenger pointer, fix calls to it in PG and ReplicatedPG
abff099 osd: use cluster/client_messenger as appropriate.
7f70112 osdmap: add osd_cluster_addr to full map Include it in lookups and add get_cluster_inst et al to match get_inst et al
ded7b8e osd: make new cluster_messenger, client_messenger pointers.
bc9cb93 osdmap: make room in incremental for separate cluster/client OSD addrs.
4ea24d7 osd: fix replies to dup/already-committed requests
22a7d42 assert: only include acconfig.h ifdef __CEPH__
0ffb08c librados.hpp fix
be7d84b mon: fix signed/unsigned compile warning
4bcba12 osd: fix map sharing with old heartbeat peers
6573635 mds: fix cap encoding skipping when snaprealm differs
ccdfcd3 osdmap: show flags
0b964c3 msgr: Add CEPH_FEATURE_FLOCK to default features set, remove extraneous data from protocol
aed240c ceph_fs: use __le64 instead of __u64 for over-the-wire data
f30efb2 mds: new low-level debug output, and turn down previous debugs
3e42191 debian: add ceph-client-tools dep to ceph
f725f20 debian: move utils rbd,rados,csyn to ceph-client-tools
c61a6c3 debian: move mount.ceph to ceph-client-tools
9ccf9cb debian: move fuse-utils dep to ceph-fuse
baa69ad cclass: fix .so loading file
9bfb8da osd: send latest osdmap when we stop sending heartbeats to peer
4a7c355 osd: avoid most of handle_osd_map if there are no new maps in message
025bce6 osd: send heartbeat request from update_heartbeat_peers
30cdc3d mon: drop redundant pg_temp mappings
90a2f20 mon: make backward-compat mon id's start at '0', not 'a'
88c17f4 osd: add asserts when indexing pg log by reqid
e555ac6 mds: recover filelocks properly on client reconnect
e501da4 mds: debug output and some comments.
eb669ad mds: locking. Compare iterator to right list!
c0eccba mds: locking. Fix waiting lock count map deletion
8d85f34 mds: drop distributed locks on waiting filelock messages, so they don't block
40bb86a mds: better printing on lock messages
b4e9e4c mds: replace accidnetal __u64 with uint64_t
5850363 mds: Determine if there are file locks based on flockbl size, not dirty cap bit
fe0c511 mds: need to size values read from a bufferlist
fa058c4 mds: handle file locking in MClientCaps on a reconnect.
0d4bfea mds: locking. remove ceph_filelock* lists and replace with iter lists This allows for more efficient deletion of elements.
2cfbddc mds: Fix ceph_lock_state_t to use uint64_t
8dd1960 mds: locks. Fix possible naughty dereference, and fix existence checks
b443f13 mds: locking. Keep trap of neighbors and coalesce them
df81336 mds: locking. remove zero-valued client held/waiting lock counts from the map.
8315b5d mds: Move lock print function; add debugging; fix fencepost errors.
367ff97 ceph_fs: CEPH_LOCK_UNLOCK should have its own bit, for safety
cc84546 mds: use the right size mask for file cap bits
c14fa1d ceph_fs: Add cap bits for advisory file locks
6a3600a mds: Remove unnecessary if check.
8041253 mds: Now actually requeues blocked locks whenever locks are removed.
71cf9d6 mds: fcntl locks can efficiently remove all locks from one client.
cc652fe mds: fcntl. Keep track of how many locks/waiting locks each client has.
0dbcdd8 mds: implement look_for_lock, for fcntl F_GETLK-style things
5d375ea mds: ceph_filelock and filelock_change need to be explicitly sized
68e592a mds: cleanup
4ea76e8 mds: Implement file lock message handling.
4520fdf mds: add distributed lock support for fcntl/flock support
b7b349e mds: fcntl. add proper encoding to ceph_filelock and ceph_lock_state_t
18b1d77 mds: fnctl. finish remove_locks so it'll activate whichever locks it can.
e41056a mds: fnctl. add get_waiting_overlaps function; fix get_overlapped locks so that it won't do bad things if there aren't any.
1fe8ab3 mds: fnctl. implement half of remove_lock.
27ff76b mds: fnctl. implement adjust_locks method, with helpers
b75fe3b mds: fcntl. implement add_lock function Still need to write some of the helpers
f60e20e mds: fcntl. add skeleton [add, remove]_lock functions. Implement helper functions to be used later.
aab26ff mds: add messenging support for advisory file locking
eb3d9b4 msg: rename MClientReply::dir_bl to extra_bl. Fix uses
fd61e1b mds: conditionally include flock metadata in MClientReconnect
a11a319 mds: conditionally include flock metadata in MClientCaps
6be6c48 mds: remove size, mtime, atime from cap reconnect
2136ee7 mds: make mislinked dentry during replay workaround tolerate directories, too
67236ae move logrotate conf out of debian/ to fix ceph.spec
1d22196 auth: fix cast
e372163 rgw: Support a loglevel of 0
309f065 cauthtool: correct man page sample of minimal fs client caps
7153244 rgw: fix setting acls on the bucket
b502be7 move mkcephfs to /sbin
7465b5e debian: more cleanups
8b8fd7e auth: define AES iv in common header
325b41a add files to .gitignore
bcbad88 redirect stdout to /dev/null when reloading
b72c1bb monclient: use default port if not specified via -m
728c766 mon: we support MONNAMES feature
11dc1af mon: fix signed/unsigned compile warning
719aa18 debian: add update_pbuilder.sh script; don't do it during build
f3ac22a bump unstable version to v0.22~rc
090436f (tag: v0.21) v0.21
ea2ce9d cclass.in: fix libdir definition
fd4029c debian/ceph.logrotate: enhance postrotate for "service" util
6db8975 mon: trim old logm states
e1a9768 debian: ceph-cfuse: move ceph from Recommends to Suggests
183984e ceph.spec.in: create /var/log/ceph/stat dir
ce07f28 ceph.spec.in: rbdtool -> rbd
b0616f8 debian: drop gcc, g++ build deps
9c6ae54 release: drop wildcard
487f0e8 debian: remove gcc/g++ build-depends
58181fe debian: add trailing newline
39a3db6 debian: fix debhelper depend version
07d880e debian: update to latest standards version
47688a4 debian: fix weak-library-dev-dependency
3ed08a3 check_version: don't globber .git_version if we're not in a git repo
8b0bf8e filestore: add option to disable use of btrfs clone range ioctl
eb1f587 filestore: fix fallback clone_range implementation on short files
43d28db release: put .git_version in release tarball
9b8e2b4 pgmon: Remove creating_pgs which are from deleted pools.
425e052 osd: drop broken (and useless) PG::merge_log assert
05a18e2 mds: handle this log replay error better: Log it to the central log so it gets noticed, and delete the "wrong inode" instead of just unlinking it, to prevent later crashiness.
b01cc38 rgw: set default log level to 20
593937d librados: quiet down some log messages
801150a rgw: Support loglevel settings
6bd40ac qa: consistent snaptest-%d.sh naming
9127cd9 mds: fix uninitialized LeaseStat for null lease
5c714bf osd: log when we get marked down but aren't
7fbe165 debug: no name symlink when explicit --log-file
3de9c8d client: some whitespace cleanup
8195899 qa: add localized version of Thomas Mueller's snaptest-2.sh
2d35d24 rgw: exit after 5 seconds from SIGUSR1 anyway
a48b150 rgw: fix that we return data when partial content is requested
50a89fc rgw: handle sigusr1, get notified for shutdown requests
3d1f307 rgw: fix returned error code in If-None-Match
58cf95b rgw: Make sure all times are converted to GMT, so we can compare them correctly
a2ba0d3 rgw: make sure error structure is initialized
b628ba1 rgw: fix date/time format string
d9ff7e0 rgw: fix return code for prepare_get_obj() on the fs storage
577095b rgw: fix error status code
017588e We should sent back the Last-Modified header in GMT as specified by RFC2616
234b691 We shoud always return the Accept-Ranges header, with a GET or HEAD request, even when the client is not requesting for partial content.
0acfd01 rgw: support partial content (206) response
e2b1a4e mds: Use get_oldest_snap() (not first) in handle_client_lssnap.
49c2183 rgw: remove unused label 'done' (compiler warning)
0ae06c8 msgr: fix direct send to loopback connection
997d67e mon: revamp subscribe protocol [backward compatible protocol change]
fa48a1a mds: restore CInode::get_oldest_snap()
bc9a795 mds: defer anchortable updates before CLIENTREPLAY, not ACTIVE
0775c30 mds: get rid of old lease mask cruft
ac9305f mds: fix lease revocation mask vs type
9932e4b osd: on dups, reply if committed, or wait until ondisk
47fd7fe osd: helper should reply with ACK on error, op flags on success
fb359c8 osd: map indexed caller_ops back to relevant entry
b033259 osd: maintain pg last_update_ondisk
3733b17 initscripts: fix type.id check in ceph.conf
b219435 osd: make assemble_backlog more tolerant of races
b59cb10 osd: skip degraded objects we're already recoverying in recover_replicas
c611192 osd: create missing temp collection/dir
1d0c91d osd: populate in-memory snapset context with just-pulled SnapSet
dd68483 osd: clean up size learning during pull
9520917 mds: drop remove_client_lease return value
74fcb6b mds: fix dentry lease mask/lockid disconnect
c33171c mds: no return value for issue_client_lease()
34957ff mds: fix lease issue mask
15abbfb mds: create leases with non-zero seq
92273f7 osd: log/debug hb set changes
b33b53b osdmap: recalc num_osds after applying incremental
4ab66fa osd: clean_up_local should ignore snapped, snapdir objects
fdd13cb filestore: make stat print correct errno
622e9b4 osd: simplify heartbeat checks
9e3650b osd: red is good enough; don't blink
9c1ceb1 mds: only try and lssnaps on a dir for as long as it's been around
7bba844 qa: runoncfuse shouldn't start cfuse in background any more.
f731d4d mds: fix snap lookups in CInode encoding
ff53e9b mon: don't crash on 'osd pool set' command
e986721 osd: zero ondisklog pointers when starting pg deletion
16c0fea librados: remove use of snapid_t
6b7693b objecter: default debug level 0 (no 'laggy' messages)
d665d49 initscripts: use $type.$id, not $name, when possible
de9262e initscripts: accept osd0 or osd.0, regardless of what conf uses
ad1cd81 mds: be careful obeying REQRDLOCK
b8c1bda debian: fix typo in libcrush description
1271fdd mds: initialize snaprealm created, current_parent_since on creation
93a2ba8 rgw: fix calls to finish_get_obj() with uninitialized handle
0bd671f debian: drop unused *.modules.in
68fc3fc debian: no more ceph-kclient-soruce
dd9d23b debian: cleanup from Clint Byrum <clint@ubuntu.com>
ef2ecda fuse.cc: make license GPL
6cb3ea7 mon: specify default new pool size/rule/pg_num in conf
24c7516 clean up new pool crush rule values [backward compatible protocol change]
9ddb6ab osd: infer missing map is empty when last_complete==last_update
e8eec86 mon: set/clear pause{rd,wr} osdmap flags
856999e osd: clear failure_queue when marked down
618f7f2 osd: clean up pulling first/complete business
4624764 osd: push in chunks
f3eb964 rgw: fix content-length reporting
190df1c debug: fix log append
538ceed debug: say 'append' or 'new' when opening log
2483096 osd: wait for non-existant pools (w/o crashing); clean up handle_op()
a0cd80c rgw: fix copy
925e209 rgw: get/put read and write by chunks
1e30dea osd: refactor push code
eed7f72 rgw: lay groundwork for chunky read/write
1d20183 osd: recover degraded objects _before_ modifying it
2e521b8 osd: make client op version actual at_version
f7cc6e8 osd: fix subop version in snaptrimmer
71ff557 osd: observe osd_recovery_max_chunk when pulling objects to primary
be8359a intervalset: implement span_of()
2e137c9 osd: clean out temp pg on startup
e0b6255 osd: create temp collection during mkfs
a108774 osd: give coll_t an explicit type in {meta,temp,pg}
b4b6a82 osd: add osd_recovery_max_chunk
0b36674 mon: check command length on osdmon
bf8aa18 rbd: add removal of snapshots
9810f7e librados: don't read attributes until the callback is done!
7315f4f rgw: rgw_rest: Properly return the content-length. From wido.
344c431 rgw: rgw_rados: initialize the position in list_buckets_init!
bee69c8 monc: be quiet about 'continuing hunt' too
f00992c librados: librados.hpp should be standalone
0656d0f mds: small EMetablob fixup
fdd79de osd: always set snapset context if can_create
8ea9cd5 mds: journal dirty items in order
1ac265f mds: helpful journal replay debug output
6364222 client: drop unnecessary #include
74e3d79 mds: simplify rstat/dirstat debug printing
00fae3a mds: remove bogus 'oldest snap' floor on lssnap result
eb17387 lower loglevel for successfull mon hunting
cf02db4 messages: fix MClientRequest::is_write(), rename to may_write().
2d358a4 msgr: use in6addr_any extern for is_blank_addr()
0d9b998 msgr: put brackets around ipv6 addrs
5f6d077 mds: throw std::bad_alloc on boost:pool<> depletion
1f7e11a rbd: fix usage
d565ae3 rbd: rbd tool can parse embedded snapshots name
b0a5cc2 rbd: update man page, other external tools
851a734 mon: limit size of MOSDMap messages when subscribing
17a31fd debug: fix append to log file
cf6cc8b osd: oops, fix pool thing
787ecb8 osd: MOSDOp: print snapc if snap_seq != 0, not when snap list is empty
e8991f1 osd: use client or pool snapc based on _pool_ snap mode, not client op
af65f15 rgw: delete bucket objects from root pool on destruction.
27bd901 rbdtool: rename rbdtool to 'rbd' tool and change usage
1454291 cfuse: return EROFS when attempting to modify snapshots
9c90f7b mds: Check all write ops to make sure they aren't in a snapshot; return EROFS if they are.
4884f74 rbdtool: fix add-snap
8b96c3c rbdtool: rearrange usage
2b02afd rbdtool: rename should first check source
e61ceee debian: override lintian warning unstripped-binary-or-object
d19f05a debug: fix debug rank symlink rotate when log_per_instance
e0229b0 rbdtool: implement copy
8f0da0a rbdtool: use canonical image name (pool/image)
98bdd8d rbdtool: can read data using snapshot
8921a18 mds: fix up snap cap issue logic comments
372db05 mds: fix acquire_lock() calls in handle_client_open()
3cbf578 mds: issue all snap_caps allowed given locks, not by current cap
f5c4fc6 fix FCGI detection and specfile
878a7de mon: avoid OOB m->cmd access in auth proprocess_command
c91c8a3 msgr: brackets (not braces) for ipv6 addrs
71b9daa debug: only truncate log file on open if log_per_instance is set
876cca9 mds: termiante client sessions before flushign log during shutdown
84d4c11 ceph.spec.in: create /var/log/ceph directory
8ec5134 ceph.spec.in: add a build option for radosgw (--with radosgw)
bf047a6 ceph.spec.in: add /var/lib/ceph/
19886eb ceph.spec.in: add logrotate configuration
293299f ceph.spec.in: set correct path for rbd classes
9b74eb6 osd: print debug write before adding to transaction
4701e83 msgr: return error and dethrottle if message decode fails
b81273d debian: make helper scripts remember most recent release
f456b51 osd: fix delayed pg creation use after free
6612a1f vstart: specify osd class tmp dir
9fd3f59 monc: make hunt, ping rates configuration
a396fcb client: increase client mount timeout
89c7d92 filestore: improve lseek64 error checking, and use buffer::list::write_fd()
a3fa966 buffer: make write_fd() const
303a1e3 mount.ceph: handle ipv6 addrs, colons, braces
25ff6e4 ceph.spec: require libedit
e0d443c ceph.spec.in: require binutils
c5d86f9 debian: require binutils
fd8ba5d debian: explicit postinst/postrm for shlibs
ae82dd5 rbdtool: fix export
1e08e4b mon: create new pools using rjenkins hash
0764630 rbdtool: should support files larger than 2GB
b977f4e debian: _do_ strip cosd
cf38e86 class: make class tmp directory configurable, not /tmp
2096d8d logger: shut up
d5e3962 config: can use '-' as a config option
0198990 msgr: remove fake orig_source_addr fakery
6ae95b6 mon: fix message forwarding to use Connection to fake source addr
243491e debian: do not strip cosd
ed66dd5 classhandler: print error when dlopen fails
cc5fcb9 ceph: drop version from ceph_fs.h, use autoconf VERSION macro instead
6cca139 shell script fixes
9432a95 mds: fix logger init on startup, rank symlink creation
f6e1fd5 debian: do not strip rados classes
a321ae4 debian: add postinst, postrm for ceph package
4fb67c3 Makefile: cleanup
0bf19e5 debian: put rbd classes in ceph, not librados1 package
8d2393c osd: consolidate osd stats in _refresh_my_stats
929f672 debian: include rados-classes
b0e6e4f cclass: $libdir/rados-classes
83d1ea6 logger: huge rewrite, cleanup
1ca446d auth: rename supported_auth -> auth_supported
74bd8d7 client: handle_client_session now careful opening mds sessions while unmounting
0c345a9 client: put MDSSession pointers in the msd_session map, rather than the sessions themselves. This is a bit cleaner and clears the way to make it more closely mimic the kernel.
c39ee59 paxos: send summary if observer has fallen behind first_committed
5b09760 msgr: immediately drop messages with null dest
a40631f mds: fix handle_dentry_unlink to handle remote unlink (no straydn)
0fbb8ee mds: be less noisy about memory usage in log
08f7406 ceph: --in-file, not --in-data
89a40b3 osd: track pg_num by type in logger
013df04 librados: add pool set_snap_context
84bca03 client: take the first inode as root, rather than whatever comes out with ino=1.
4a80e5e ceph.spec: install /etc/logrotate.d/ceph
de66815 osd: document some of the logger stats
fdcc241 rbdtool: modify usage
cff705b config: allow optional parameters
100b677 mds: do not include snapped inodes in EOpen or LogSegment::open_files
a497c61 mds: print useful error on malformed EOpen event
26b67ff Makefile: drop unnecessary dist-hook for make_version
2950580 debian: simplify release.sh
1d45074 Makefile: distribute check_version
0f8099a radosgw: fix usage syntax
b0056ad mount.ceph: ignore noauto, _netdev options
b433625 debian: include libcls_rbd.so.*
e240a27 cclsinfo: fixes for dash
b150b68 ceph.spec.in: make -j and unpackaged files
5338e7d Makefile: fix up ceph_ver.h autogeneration
d724d2c Makefile: fix build when WITH_DEBUG not set
0e70f21 debug: don't create rank symlink if log-file
d059aa6 client: update ctime on setattr(no mask)
cf7d180 client: return errors from setattr
8b886df client: fix lookup error codes
377a531 client: better debug output
adf2f98 client: return ENAMETOOLONG where appropriate
56cc68d qa: do untar_snap_rm on two different tarballs (medium and big)
525063c client: fix f_namemax returned by statfs
e5cef56 Makefile: make more random crap only build with WITH_DEBUG
1b363dd rbdtool: implement import
1cb1c25 client: remove typo
818e793 client: synchronize metadata on fsync, when requested.
ec2c31d rbdtool: cleanup
da9353e osd: cleanup: move pools can into advance_map()
d847a4f osd: fix null pg deref, put auid in PGPool, cleanup.
2170c64 msgr: add config option to set stacksize of reader&writer threads
76d2392 thread: force stacksize to be multiple of page size; clean up
86111a0 thread: allow setting stacksize when calling create & check return value of pthread_create
b031d11 update authors
14a871a rbdtool: implement export
3204f45 shift feature supported/required specifications into Policy
3253ed4 msgr: add set_policy_throttler
efc187e ceph.spec.in: remove mkmonfs manpage
340cb06 ceph.spec.in: initrddir, not initddir
7eb12d5 ceph.spec.in: some fixes
9c3fc0a mkmonfs: remove all traces
e63d3f7 mount.ceph: add mount options/flags
9be9762 Makefile: add/fix ceph_ver.h dependencies
89a6554 filejournal: make journal alignment max of block, page sizes
67b9fa6 ceph: fix decoding of class incrementals
9154b5f msgr: handle ipv4 or ipv6 addresses (untested)
640eaad osd: caps configuration file uses pool names
c6969f1 vstart.sh: added -c to the cclass execution
9108858 osd, class: introduce public class methods
ece7098 osd: pgpool keeps pool name
a08c6f7 osd: modify caps calculation
ed02afd cfuse: log_per_instance by default
c2debcc man: install cclass, cclsinfo man pages; include in ceph.deb
57aeed1 debian: add logrotate.d/ceph
0233257 Makefile: link ssl to libceph
7e5e519 libceph: Add check before umount in deinitialize
139e820 hostname override option for ceph init script
10476ad buffer: fix logic in write_fd()
2c25029 mon: break loop if config file parsed successfully
e006e79 msgr: fix dispatch throttler release
bbbf240 cfuse: daemonize by default
a7d4987 config: -f just means foreground; do not change log output
21432ec client: start/stop objectcacher thread in init/shutdown, not constructor
e38ed51 config: disallow -d|--daemonize
2c7cd49 common: break init into set_defaults and init steps
8043ee2 debug: fixup
85e626d common: disable logger by default; make daemon settings explicit in (3) callers
c253873 debug: add max count for name symlinks
633af04 vstart: normalize pid file names
79991ed debug: revamp debug/logging
1bd46c0 client: set MetaRequest::inode to the inode or directory inode whenever possible. Provides link to caps, useful when requests come back ESTALE or similar.
e5b60fa client: set inode/dentry fields where available
beeb08b client: remove now-unused authority and pick_replica functions
fa62e9d client: rewrite choose_target_mds to more closely mirror kclient logic and be correct.
39796b4 client: make fragmap updates a little more space efficient.
60f2672 client: add mds_num to MDSSession struct
0992001 client: clean up Inode::authority
4f2f78d client: move all mds selection code into choose_target_mds
060d22d client: remove dead code
194986a client: remove Inode::dir_auth data member
abd26ee client: initialize auth_caps in Inode! Prevents bad pointer derefs.
18c305a qa: set runoncfuse.sh to run cfuse in background and kill at end of tests.
bfd335c rbd: some header cleanup
77a1664 rbdtool: implement snap rollback
2fdd43e buffer: handle write_fd() on empty bufferlist
8410e6a osd: fix, cleanup ack/disk reply logic
aa30dd1 buffer: make write_fd() tolerate zero length ptrs in the bufferlist
3235abe msgr: clean up aborted message handling
7cedafd msgr: release bytes reserved from throttlers in failure paths
3c80b9d uclient: rename make_path; cleanup/move make_request_from_Meta
e76ce44 man: add man pages for cclass and cclsinfo
2f9ea76 filejournal: fix buffer realignment condition; useful debug output on error
134a0d0 rbdtool: fix uninitialized variable
0627965 rbdtool: implement rename
015faa8 config: update __isarg before reading config param
4d9f49a debian: include cclsinfo
013f9e5 Makefile: include cclsinfo; lose the old .cc
0812b8f Makefile: include cclass.in in dist
f9dc4b9 buffer: write_fd should skip empty buffers
96b1db8 rbdtool: init rbd block id, later will be used for rename
c993090 cclass.in: LIBDIR=.libs in certain cases
0f4ddba cls: cls_read, cls_cxx_read return the number of bytes read
2ec729d config: use <<20 for MB
2df8b9f script/plot.pl: don't pause
fcc39c8 msgr: use dedicated reaper thread
3e33402 osd: removed unused RepGather::indata
852ab94 osd: change write osd logging timing
419bd91 osd: always use original Connection when replying
def4b40 osd: always include osd op result, result code in the first reply
e85d98b osd: track open repops in logger
ff8df7d osd: add 'logger reset' command
fc1d166 journal: set max journal write to 10MB
1d51798 conf:  fix parsing when there's no eol at the end of file
d9dc7cb msg: fix entity_addr_t::parse() to return false on failure
0cb7a71 mkcephfs: Fix wrong maxosd when OSD ids are random ordered in ceph.conf
50f254d filejournal: fix journal write_pos advance
d9554d5 mount.ceph: update mount options
6bae200 msgr: fix throttle deadlock
8f2731b crushwrapper: gracefully handle crush error
928512f crushtool: add simple test function
59b114a crush: fix "in" threshold to be 1.0, not 0.1
19b4a5f cfuse: remove some NPEs with ESTALE from MDSes.
bef0629 mds: keep cap follows above in->first in FLUSHSNAP
eeede27 qa: read recently written/deleted data back from snap
9795fab mds: fix client cap condition
478fe72 ceph_fs: add CEPH_LOCK_IFLOCK so its inclusion elsewhere continues to build
6282715 mds: add IFLOCK to wait bits to prevent collisions with lock branch
7ce0338 crush: fix recursion through intervening types
241d011 crush: make CHOOSE_LEAF to behave when leaf type is encountered
8f7df4e client: resync with kernel's ioctl.h
07cfbad mds: fix SimpleLock wait_shift()
5634ce8 ceph_fs: add CEPH_FEATURE_FLOCK to ceph_fs so its bit doesn't get covered again
58f4dce osdmap: negative osd ids do not exist
b7ad8aa crush: behave when chooseleaf is given leaf type
364521a mds: handle_export_caps, copy cap_import map (instead of swap content)
43a7ec4 client: properly handle ESTALE by redirecting to auth MDS
c89afb4 client: don't send cap snap message to MDS if not dirty or writing.
2e73f73 mds: only acquire_locks once in handle_client_open
2cd04f4 mds: rename handle_client_opent
027b6c3 rados: more descriptive ls usage failure, stdout set implicitly
4d86180 rbdtool: fix --list
9051112 osd: fix incorrect logic check on fsid comparison
9bbeec4 osd: Warn and shutdown on a mismatched fsid, instead of failing an assert
c9af6de add helptext for option "snapdirname" to manpage of mount.ceph
bf3d52a journal: initialize applied_seq during journal replay
2540ea4 mkcephfs: push conf to remote machines
3bfabd4 mon: allow 10ms clock drift before complaining
775506e debian: include cclass
d4173fa initscript: fix for dash
1f2725b cclass: fix for dash
6d83347 initscript: remove class loading for now
b3dc5ec vstart: only need to load classes once, not for each monitor
3a2c916 Revert "class: able to add classes when doing mkfs"
fb1ad6e filestore: op_start when op is _queued_, so that q is drained on commit
6a261eb journal: maintain applied_seq, use that value during the commit.
ed768c9 buffer: fix includes for writev/iovec stuff in write_fd()
a3e906e filestore: make sync() and friends actually sync!
ae90ba1 initscripts: fix verbose output for root commands
10d41d2 filejournal: only pad to align for data segments above 64 KB
f98c0b4 filejournal: make alignment optional (<0 == no preferred alignment)
3fbc2a2 buffer: remove debug cruft
d162609 filejournal: pad entries on disk based on preferred alignment
f59d77b objectstore: track offset, alignment of largest data segment [encoding change]
0995f28 buffer: list::rebuild_page_aligned()
25116b2 client: if checking caps on a snap, return, don't assert
bd4188a filejournal: use buffer::write_fd() instead of open coding
ca9b756 osd: implement bench command
e4b9dd4 msgr: avoid calculating data crc is peer didn't either
2bb94b3 msgr: Fix crash in policy.throttler->get(message_size) when message_size == 0
3509543 qa: another mds test fix... wait long enough for the previous death to trigger
c606713 msgr: ref count Pipe to avoid use after free
920b2d8 qa: fix mdstable failure tests
4d66a72 ceph: fix straggler header ifdef guards
f4b9d9d Bug #98: Unique names for include guards
6de2dde ceph: remove leading _ from macro
9013832 Bug #98: Movement of an underscore for a data structure identifier
57d79aa Revert "mkcephfs: cosd mkfs as root, then chown"
081bbe1 mds: fix cdir head/snap items/null accounting
e6b033a osd: make clean_up_local remove hardlinks from collection dirs
af2d023 osd: don't requeue null OSDOp on apply_and_flush_repops
8c5ee65 osd: fix snap_trimmer AccessMode interaction
f976bbd filejournal: journal write cache is safe on >= 2.6.33
583f9f4 mkcephfs: error out of journal dev is included in btrfs devs
b472722 osd: optionally periodically check pglog for corruption
b30ff17 logclient: clean up interaction with monclient, monitor
d7b9f39 filejournal: log if journal item is larger than journal
5dfc411 osd: warn when failing to mount journal on ENOTTY
5c001f4 conf: can specify environment variables for substitution
d599566 conf: fix buffer initalization
ce909c2 osd: error out when failing to read journal header
d971bb0 osd: mkfs failures are colored red
bdda73f monc: handle mon0 or mon.a syntax when pull mon addrs from .conf
aabaa06 monc: more debug info on monmap receipt
690ea1c mon: MONNAMES feature is supported by all userland
ddf739f mon: simplify request forwarding
8cc096f monmaptool: don't allow dup names, addrs to be added to the map
658d51d mon: make send_reply always consume reply ref (even if not sent); fix caller hackery
e5ff518 mds: add force_wrlock to lock states; use for filemax changes
6a40008 mon: make send_reply always consume reply ref (even if not sent); fix caller hackery
33850a2 monmaptool: fix usages tring
9fddee9 mkcephfs: behave with new mon naming scheme
3336d9d rgw: put_obj uses write_full
0b0009c cls_rbd: use write_full when writing image header
5d2e85d class: implement write_full interface
f34c5b9 cls_rbd: fix snapshots seq number
912e3c8 osd: fix rollback when head points at the rolled back snapshot
ae5bb84 cclass: add some options
3bb153c class: modify startup scripts to add classes on mon startup
7584fef class: modify scripts, fix configuration
e737e63 class: more flexible class loading, new cclass.sh script
6537148 class: able to add classes when doing mkfs
d87c057 cclsinfo.sh: better architecture detection
057ccbb cclsinfo.sh: shell script to dump class info
203af22 cls: export relevant functions
d071cb1 cclsinfo: replace error message
e3b23bd cclsinfo: some fixes
80d2afc cclsinfo: utility to display class information
94308d1 cls-rbd: some adjustments, debug info
e297aa0 rbd: snap revert header manipulation fixes
a6e50c2 rbd: implement snap revert header manipulation via class
2991c30 rbd: add snapshot creation via rbd class
c5abf58 class: add CLS_LOG macro
4716b48 rbd: snapshots management via class mechanism
b58e1b9 rados: update documentation to mention mkpool and rmpool
7739caf testradospp: add a test for librados trunc
42ff45b librados: add trunc operation
3de397f testradospp: update test, use write_full
d1c779c librados: implement write_full
92f2ecd osd: fix null dereference in dout
effe5db mds: be extra careful
607ba5d mds: fix another instance of bad stray trimming code to use proper helper
673fdc7 mds: remove erroneous return statement
8be5b02 mds: a checker function like _is_dir_nonempty should only report results.
214a427 mds: handle dup anchorclient ACKs gracefully
c35cb29 mds: fix export caps
0349c78 mds: allow import caps pin from multiple replicas at once
1a3fac4 osd: return EINVAL when snapc is invalid and trying to write
e74250d osd: don't clobber racing pg_info on active pg
4273809 osd: refine SnapContext::is_valid()
2648e40 osd: implement SnapContext::is_valid()
7c78059 init-ceph: don't fail if we fail to umount
12798de osd: add --dump-pg-log command
464fcd0 monmap: use this here vector size to be clear
16a4671 mon: send old format monmap to old clients (backward compatible)
fb1c3b9 osd: clear newly_removed_snaps on osdmap update if unchanged
15a7a83 mds: use helper to send message to client; fix send to null connection
c992d02 mds: remove erroneous bracket
2a88e2e add checks for being a snapshot root to dir_is_nonempty
e3c4459 monclient: track cur_mon by name, not rank
1d16297 mon: rename whoami rank, simplify rank change logic
26a4d0e throttle: allow take(0)
0dc9569 mds: fix stale lease trimming xlist iterator abuse
2fa4a06 mon: identify monitors by name, not rank
7c85646 mon: fix memory-leaked messages
76fb75e buffer: fix padding distances
c196851 osd: init auid to CEPH_AUTH_UID_DEFAULT in case authorizer doesn't set it.
80c42d0 mds: scan stray dir, eval strays on mds startup
da520d7 mon: clean up monmapmonitor warnings, style
76191d2 logclient: clean up interaction with monclient, monitor
0ab54c7 monclient: make get_monmap_privately() clean up after itself
0b44ef0 monclient: Make MonClient update cur_mon on getting new monmap
2e1b0d3 mon: make mon lease clock check protocol change backward compatible
bc9fba0 Introduced ceph mon remove command
58fe4b8 qa: add untar_snap_rm.sh
ac10d83 osd: print rollback osd_op nicely
470a6fd mds: wire Connection to Session when Session already exists on connect
6d770ab mds: funnel mds->client messages through single Session* helper
29a42ef mon: simplify clock drift checks
527d5fd monc: behave in ms_handle_reset if cur_mon is < 0
6ff2a87 msgr: don't throttle.get 0
191cb2e throttle: allow put(0)
e505fb5 msgr: don't thottle.put 0
4ecd8fa mds: use cap on head if there is none on the snapped inode
5be2660 osd: use low-level helper getting obc in sub_op_push
61555cc throtle: add asserts on max and change parameters where appropriate
8413ed4 throttle: fix assert count to actually use count
520a2c3 crypto: don't clean up EVP table on every decrypt()
d57b629 crypto: don't leak memory in CryptoAES::encrypt()
21a97d1 mon: don't leak MAuth
ba63a7a Removed all copies of the whoami value
989c9ee throttle: use signed counters and assert that count never drops below 0
800da08 msgr: Fix uses of get_[data, payload, middle] to use throttling-aware functions.
3b333f7 msgr: put throttler usage on Message destruct
246415b osd: fix compile issues
46040a5 msgr: switch to get/set functions for Message:throttler
0d4bdfa osd: add osd_client_message_size_cap option to config; default 500MB
0c38b3d objectcacher: add verify_stats() debugging helper
dff7cb3 objectcacher: fix stat accounting when resizing bufferheads
a76d8fc objectcacher: cleanup formatting
462552a objectcacher: fix use of  invalid iterator in map_write()
12a5d7b objectcacher: match states before merging in map_write
522c12e osd: fix rollback when head points at the rolled back snapshot
33b947c msg: remove copy_payload and copy_data functions; change set to use throttler
7b6aea6 osd: clean up rollback debug output
1b5920f uclient: handle inode with no caps from mds
e79a3fa osd: filter_xattrs on a rollback op
48555f5 osd: fix naughty iterator usage after invalidating it
a70a366 osd: _make_clone now properly duplicates xattrs
c730b85 osd: add filter_xattrs function to remove non-user xattrs from a map of them
f60be8e progress
84b279a mds: fix straydn->first part deux
97f00ae debugging output
d386327 rados: print out pool instead of object
c4e6482 mds: only purge dentries with no extra refs (besides dirty)
9ed0c30 mds: set straydn first to match inode on unlink
ec0aa43 mds: don't export stray (~mdsfoo/stray), and ignore in balancer
074a9b1 mds: make discover work for multiversion inodes (e.g. dirs)
9ead80f mds: fix CDir::take_sub_waiting vs dnwaiter pin
791ca28 mds: kill open_foreign_stray; but open remote mdsdirs instead
551a12f mds: fix cap clone logic to look at matching first, not last
ff0e871 libatomic: fix assert.h compilation
900d4c6 msgr: add Throttle pointer to Policy
3989ae4 osd: make sure we don't return EAGAIN to client
62b900f mds: open past snap parents at end of rejoin phase
26449e7 mdsmap: show individual mds states in summary
09185a0 osd: improve snap_trimmer debug output
2b33d99 mds: another cap_exports message/mdcache encoding fix
55da048 mds: only adjust dn->first on lock msg if !multiversion
5f90596 mds: more fix cap_exports typing
054669a mds: fix scatter_nudge infinite loop
40b2322 mds: fix ESessions type
5cd7919 mds: drag in->first forward with straydn in handle_dentry_unlink
394d9c3 mds: fix anchorclient dup lookups, again
980f234 mds: only log successful requests as completed
fa1e560 mds: anchor dir on mksnap
c09d610 mkcephfs: error when creating journal file in a directory that  differs from OSD data dir
5dd4a2d mds: fix mismatched cap_exports type between msg and MDCache
609e657 mds: fix trim_unlinked iterator badness
915ab3c mds: define MDS_REF_SET in unstable
ef095e1 mds: clear dirtyscattered in remove_inode()
2682216 mds: allow dup lookups in anchorclient
8a2a9bd assert: fix assert vs atomic_ops.h breakage
f5ccc66 mds: ensure past snap parents get opened before doing file recovery
c0e9d21 mds: relax lock state before encoding export (and lock state)
3768ef9 mds: do not bother tableserver until it is active
7c0df05 mds: do not reset filelock state when checking max_size during recovery
15c6651 mds: lock->sync replica state is lock, not sync
1c930f9 msg: add missing msg_types.cc
5262a96 mds: add export_dir command
4075b95 mds: add MDCache::cache_traverse()
eac36cb initscript: unmount btrfs if we mounted it
0d1e5db move addr parse() into entity_addr_t
a3323c9 tcp: parse ipv4 and ipv6 addresses
08afc8d mon: fix unsynchronized clock logic; change output for clarity
b441fbd mds: lookup exact snap dn on import
38cb240 mds: update dn->first too when lock state adjusts inode->first
9248cd9 mds: don't change lock states on replicated inode
afadb12 mds: fix root null deref in recalc_auth_bits
364f3cb mds: adjust subtree map when unlinking dirs
c4bbb00 mds: discover snapped paths on retried ops
464e46c mon: add wiggle room for clock synchronization check
7f8a743 mds: add case for CEPH_LOCK_DVERSION to LockType
00c3daf xlist: add assert to catch invalid iterator usage
79b3962 ObjectCacher: do not try to deref an invalidated xlist::iterator
83094d9 paxos: fix store_state fix
62e290e msgr: print bind errors to stderr
6060bdd rbd: some fixes to conform with qemy code style
3a705de paxos: cleanup
3c3e82e paxos: only store committed values in store_state
187011c initscript: fix typo with $lockfile stuff
6b72d70 paxos: set last_committed in share_state()
8c44825 osd: fix compilation
4b79774 mds: fix null dn deref during anchor_prepare
bb8b139 mds: fix invalid use of connection
9380441 mds: switch some session->inst send_message calls to session->connection; switch an MDS broadcast from instance-based to Connection *-based send.
892a0e2 config: parse in $host from conf file
594d456 osdmaptool: include raw, up, acting mappings
0a1d526 osdmap: assert maxrep >= minrep
a1a1350 mkcephfs: pass -c to cmon --mkfs
330e1e2 osd: warn, don't crash, on purged_snaps shrinkage
d2c4005 initscript: incorporate Josef's fedora fixes
7cc3ab6 rados.h: should use __le64 instead of __u64
edffc12 librados: update C header file to proper name for rollback function
bd9cf96 osd: set clone_overlaps properly on rollback
9dd3558 rados: add rollback functionality to rados
0292f2e librados: add rollback_object functions.
91fb924 objecter: add rollback_object function, which rolls back a single object to a prior snapshot
b82ba82 osd: implement rollback functionality
be1030d rados: add snap.snapid to ceph_osd_op, to replace use of MOSDOp's snapid
2333656 osd: create _delete_head function, move CEPH_OSD_OP_DELETE handling to it.
e935b8e osd: add rollback to ceph_osd_op_name
b83b073 rados: add op for rollback
08f6966 ceph.spec: build-required libatomic_ops-devel, not libatomic_ops
f95e1e0 mds: add Connection * to Session
a3dc4bd sample.ceph.conf: include debug options, commented out
05256bb rados: you can now set the crush rule to use when creating a pool
8044f7a librados: add crush_rule parameter to create_pool functions
a9e1727 objecter: add optional crush_rule parameter; set in pool_op_submit as needed
78375cf mon: add crush_rule data member to MPoolOp; use it in new pool creation on mon
648ce97 mds: LAYZIO is not liked, but it is allowed
297d3ec client: update ioctl.h (lazyio, invalidate_range)
a13b5b1 mds: include LAYZIO cap in sync->mix and mix->sync transitions
a92df20 mds: include LAZYIO in CEPH_CAP_ANY set
75de272 mon: warn to log, not just dout, on clock drift
9b4d25b mon: detect and warn on clock synchronization problems; change MMonPaxos::lease_expire to lease_timestamp
bee74a1 ceph: add conversion to qemu coding style
a1c9981 paxos: use helper to store committed state; fix master mon catch up using stash
c0df916 cfuse: bail out on mount() errors
e6b9055 interval_set: fix union_of, intersection_of size accounting
2b9ef64 init-ceph: use = not == for comparison operator
701d267 mds: better debugging on rmdir
29ca21f mds: fix scatterlock gather, writebehind
f8f9e6c mds: make export targets stay in mdsmap for a while
7f0ef1c mds: balancer cleanup
da42d06 mds: warn on dn release that dne
06b86ea rbd: modify rbd on-disk header
7cf4861 rbd: fix push_to_qemu.pl
7113775 mon: roll mkmonfs functionality into cmon --mkfs
be082f0 filestore: make mkfs() zap any file or dirs it finds
5e8a609 rbd: modify header, add utility to ease sync with qemu tree
0d98fc6 osd: keep recovery ops in sync with pull
a9b494c mon: no need for 'whoami' file in store
56c4043 reword blacklisted output so it's clearly discussing MDSes and not OSDs
f7708de uclient: don't unlink null dentry when getting null linkage in mds reply
bf1cb87 mon: trim pgmap states even when we don't have a full quorum
357aa03 paxos: recover using stashed latest when state histories don't overlap
51c5823 mds: anchor multiversion inode before unlinking it
fbbff74 librados.h: add other TMAP definitions
929048f mds: fix readdir pingpong on snapped dir with multiple mds
cd1b071 monc: pick a different mon when repicking
3ec4605 monc: hunting by default
16ab067 librados: update librados to define CEPH_OSD_TMAP_SET
0050dd8 mon: fix mon injectargs, and simplify
9e4e53e osd: simplify --mkjournal, add --flush-journal
1d9ab26 osd: nicer debug output
f3ab812 interval_set: fix union_of _size accounting; optimize ==
e162aab mds: fix interval_set copy of projected_free
155efe2 mds: fix interval_set copy of projected_free
f6c4827 osd: use blank reqid for snapdir events, too
8dfe74f osd: do not index by reqid if reqid not defined
4ed3acb osd: update purged_snaps in PG::Info on trim completion; and replicate
9149dfa rbd: fix snap_seq type in rbd_header
99690f6 initscripts: remove 'flushoncommit' from default btrfs mount options
46891dd osd: trim snaps via replicated osd ops
ff94c3a osd: make build_removed_snaps, is_removed_snap consistent
e031548 rados: update documentation to mention mkpool and rmpool
ee218a1 osd: fix peer_info updates on active primary
baba34b msgr: remove unused utime_t now
a776975 automake: some clean up
1ea0f85 poolop: fix MPoolOpReply decoding
736d837 throttle: allow large items if we're under our max
d006ae9 osd: purged_snaps in PG::Info, queue snap trim on primary
47ba928 osd: include snapdir objects in pg log for proper replication, recovery
ffd72a9 strings: clean up pool op names
d1c78fc mds: allow readdir result limit in bytes
7be27f4 debian: put proper distribution in debian changelog
33bf1a2 version: use next version ~rc for unstable branch
0e177d2 radosgw_admin: die after first bad argument
c54d6cd objecter: separately track pgmap, osdmap state machine version
52e544b mon: return correct state machine epoch in replies
ecc4f68 testrados: fix aio api usage
c3a8ada librados: implement rados_stat_pool()
e741d43 rados: fix typo
342fc87 osd: add CEPH_PG_MAX_SIZE to header
7f43cf8 filestore: update btrfs ioctl.h
856bdf2 client: un-"fix" u64 types in client/ioctl.h
c9b1aee msgr: fix possible overflow when sending seq
65074e5 msgr: print message encoding version to aid debugging
afa1993 ceph_strings: checkpatch fix
80dcc28 ceph_fs.h: checkpatch fixes
a902bf0 cmpxattr: null termination fixes
07fdde4 rados: add 'tmap dump'
b502916 osd: set obs.exists in projected object state during recovery
dbcb4f8 mds: warn, don't crash, on trailing garbage in dir objects
8fbabe0 msgr: put msgvec on heap
876a0cc msgr: tolerate incoming seq #'s that skip ahead
a576e6e ceph: return error code returned by server
12f7c0b mds: drop 'closed' bit from MClientReconnect
7a23b5f msgr: set outgoing msg connection before encoding
f6c2e1c poolop: make new encoding backward compatible
ffc3e63 osd: fix compile error from cmpxattr, cleanup.
0ebf259 osd: fix layout return type
4a7118e msgr: be less noisy about msgr throttling
f857a2e osd: add cmpxattr op handling
4d667dd debian: remove pull.sh calls from helper .sh scripts
324fe82 atomic: cast away const on read()
99cdd52 osd: 'stop' command
d37c9dc mds: fix max_size==1 bug
6f00c8f types: clean up printf format warnings
0aa2208 rgw: clean up dup #define
edc9249 types: standardize on uint64_t
737b504 endian: simplify __le* type hackery
2741e18 ceph.spec.in: --without-hadoop --without-debug
91b9f01 rbdtool: --list on empty pool returns correct message
404938c time: include _ between date and time
a8579eb osd: remove bad assert in get_object_context()
906d3e6 mds: always release snap cap after flushsnap
76e40e3 osd: don't put() null ctx->op (message)
8580aa5 scripts: fix check_pglog.sh
fe7a8be script: add check_pglog.sh
a290fc5 mdsmap: lose angle braces, use tabs
f0e6af9 osdmap: initially osds don't exist; create them as they boot
dc24ab0 osd: resurrect CEPH_OSD_EXISTS flag
1959f87 logger: be more careful calculating variance
a8fa528 debian: use 'testing' or 'unstable' in place of 'git' in version suffix
e9cc4a3 librados: separate callbacks for aio ack/complete and safe
66350d2 osd: clear pg REPLAY when we reinitiate peering
642be31 rgw: admin uses --secret instead of --key (as --key is already taken)
ec600db osd: fix critical cap parsing bugs and documentation.
33b5e42 msgr: fix local_pipe peer_type
89d1b5d msgr: existing connection may be OPEN on connection race
9bbb545 osd: add CMPXATTR defines
3d7d7d1 osdmaptool: add -h; don't assert on bad filename
3278466 ceph.spec.in: run configure
f28dece poolop: do op immediately, instead of waiting for timeout
8a37ac6 rbd: update rbd image header format
cea221c MPoolOp: rearrange parsing, for easier kernel implementation
1c098c2 osd: add removed snapid to removed_snaps for unmanaged snaps
7ec68dc mds: add removal snap_seq to removed_snaps
14dd8a9 mds: acquire anchor_create locks in caller
11184b9 objecter: fix ~Message() calls (use ->put())
53a5b4a mdsmap: cleanup up braces
632b24f mds: fix EXCL rdlock rule
409a54f mds: fix lock->sync rdlock rule
291c0ab filejournal: create if mkfs and journal is small OR dne.
b53d0ed filejournal: return error instead of asserting
60095d9 mon: correctly update up map when taking over for creating|starting mds
266d207 (tag: v0.20) debian: fix up debian scripts
b022a28 ceph.spec.in: updates
f244067 ceph.spec.in: from Josef
974f2ee mds: fix trim_dentry on dentry under unlinked dir
aebc239 osd: fix pg_to_acting_osds() calculation to consider pg_temp
17a2dcb objecter: show osds in laggy debug output
0b0e120 mds: fix trim_dentry on dentry under unlinked dir
1b3e4fb osd: fix pg_to_acting_osds() calculation to consider pg_temp
5210d6c objecter: show osds in laggy debug output
0cb8ad4 filestore: fail to mount if journal open fails
dc84acd filestore: fail to mount if journal open fails
7ad4202 msgr: fix sigint/term signal handler to actually quit (by chaining)
3480dc6 msgr: fix sigint/term signal handler to actually quit (by chaining)
269d142 librados: fix blank pool stats
96a90ef librados: fix blank pool stats
61b4b29 qa: make pjd clean up
ebe05ae mds: clean up MIN/MAX, client_ranges
d595ad4 msgr: remove pid file on SIGINT, SIGTERM
8fcb0cc qa: make pjd clean up
3a9439c mds: clean up MIN/MAX, client_ranges
30561d8 msgr: remove pid file on SIGINT, SIGTERM
a31ea46 config: post-process default config options too
d144146 config: post-process default config options too
318dfbe mon: use (robust) buffer::list::write_fd() to write to disk
63385d0 mon: use (robust) buffer::list::write_fd() to write to disk
1f55b17 mon: m->get_session() may return null if session has closed
84c386e mon: m->get_session() may return null if session has closed
a846236 configure: remove second AM_INIT_AUTOMAKE line
6e7ff1a msgr: fix segfault sending msg on closed Connection/pipe
48c086a string fix
2e2222f msgr: fix segfault sending msg on closed Connection/pipe
59e77b3 msgr: add message throttling; with a default max of 100MB waiting for dispatch
b8cca8f replace nstring with std::string
07e1a2f throttle: add fairness
218f031 mds: fix snaprealm split on capless inode
f688ffa mds: fix snaprealm split on capless inode
b3bb8c6 buffer: clean up namespace pollution
6ec8870 poolop: rename and move definitions to ceph_fs.h
0decb33 Makefile: define __CEPH__ in ceph builds. use it.
a6ee3ae mds: fix req use-after-free to get connection to direct reply
282b242 atomic: reverse if test so we don't break things on separately-compiled librados
07dea44 mds: remove unused variable from Locker
3ed1a55 debian: build-depends libatomicops-dev
8f5d5ea mon: clean up mon snap type checks
cf8ce29 osd: no error checking in data structure (caller should do it)
ca46428 mon: don't create/delete unmanaged snaps if pool snaps exist
4a53f1c librados: clean up headres
ec7ecc5 objecter: do pool op result parsing in Objecter completion wrapper
832c919 librados: Adjust snapid allocation ufnctions and implement new objecter spec
076517f objecter: Implement bufferlist-based return code for pool ops
f612ab8 mon: OSDMonitor fills in MPoolOpReply's bufferlist on unmanaged snap creation
5706476 msg: Give MPoolOpReply a bufferlist for reply data
503c41e mon: change the unmanaged snap interface for better distinction of reply codes and snapid numbers.
0fb4a6e librados: Set selfmanaged snap functions to use int instead of int64_t, too
39817b3 librados: add small bit of documentation, fix headers
4b0021f mon: don't crash if a client tries to self-manage managed snaps, or vice versa
d1d235e librados: add functions for client-managed snapshots in all the interfaces
5fb4e8f objecter: New functions for client-managed snapshots.
eba044c mon: OSDMonitor handles client-managed snapshot requests.
ac129d7 osd: pg_pool_t gets new functions for unmanaged (ie, client-managed) snaps
5116700 msg: Add space for snapid in MPoolOp. Reply now uses an int64_t replyCode.
4fda5f9 msgr: fix atomic_t test
756b251 v0.20
609eaa1 mds: skip client snap notification on unlink
7a8daed osd: more useful debugging on repop version, out of order completion
f502547 osd: print a bit more debug info about compat problems
feca69d mds: verify mdsmap compatset on startup
4d7b2ce mds: add CompatSet to mdsmap
bfd9629 rbd: change rbd header disk format, update protocol version
e3ef148 msgr: never (re)open pipe when sending message directly to Connection*
7632037 mdsmap: add separate struct version for extended portion of mdsmap
d03bddc cauthtool: add --gen-print-key
5d2dcce auth: take key or file containing key on command line
2acb843 cauthtool: always print entire encoded CryptoKey
0fc47e2 msgr: increment connect_seq when STANDBY->CONNECTING
4420873 filestore: default to writeahead journal, and no btrfs snaps
2caf513 rbdtool: add, use prettybyte_t type
0cf079a rbdtool: add --info, --resize commands
f4ef6a9 auth: make 'admin' the default user
99ac12b librados: adjust C++ aio completion creation api
d5c8927 sample.ceph.conf: add example on writeahead (vs parallel) journal
f2160f1 osd: create 'rbd' pool
8478ebe debian: require hdparm, recommend btrfs-tools
d4bf8ee debian: require hdparm, recommend btrfs-tools
476606f mds: always use get_newest_seq (not snap) when doing cow
327432a mds: rename move_to_realm(), add debugging (cleanup)
c719f4e mds: don't cow already cowed dentry
93058af sample.ceph.conf: updated
ba5a0d1 fetch_config: enable fetching ceph.conf from a remote location
5a5cc18 osd: don't capture SIGINT/SIGTERM; journal and/or btrfs snaps are sufficient.
f7f6daf auth: less noisy debug
34d3087 mds: drop mutation locks
d8f1de5 osd: fix snapset loading from _snapdir
1915f2d mds: clone dentry for multiversion dir if linkage is changing...
07c7873 mds: avoid null deref when hiding .ceph dir
f9225fe mds: xlock dentry versionlock to cleanly avoid projected dn linkage replication issues
463792d reorder locks
c8d7c97 mds: always issue lease mask 1; assume CEPH_LOCK_DN
beb562d mds: add versionlock to dentry
4f402cb mds: rename send_message_client to send_message_client_counted
09366cb mds: fix erroneous uses of send_message that need to be send_message_client
3484b84 mds: Add new Connection-based send_message_client that uses inc_push_seq too
65ec024 autoconf: Fix detection of sync_file_range.
a0e7d8d remove references to [group] and [mount] in sample.ceph.conf
d2af75d add executables to .gitignore
edf935d mds: Fix bad pointer dereference brought about by switch to Message ref-counting
d8be246 mds: xlock versionlock on rename if witnesses
06e5528 mds: use Connection-based send_message in handle_discover
6a0d0d0 msg: Remove "asker" data member from MDiscover. Fix uses.
751a405 mds: Fix some compile-time issues.
da13000 mds: Subsystems generally use the connection-based send_message when possible.
05b0e3a mds: create send_message(Message *m, Connection *c) passthrough
b4d4231 rados: aio, reorder callback completion handler creation
bd34079 mds: set trivial uses of send_message to use the Connection version.
69682ad8 osd: send_message via Connection when possible
b38cebf osd: send reply via connection for MOSDSubOps
f6d2666 osd: Send messages via Connection * when possible.
85b67ce msgr: Implement new send_message[_lazy](Message *m, Connection *con) functions.
47f5315 filestore: be thorough about wiping out old osd data content during mkfs
057897e msgr: if a pipe** is passed in to submit_message, it's used.
731414b msgr: give submit_message new interface.
6c9bee4 msgr: Add a void *pipe to Connection. This is set on Connection creation and zeroed out in ~Pipe().
a9800e7 msgr: remove unnecessary clone variable from submit_message
fd28d9a cephfs: include LAZYIO caps if LAZY file mode bit is set
06d032e filestore: log snap_create error before asserting success
2cc0ec2 mon: do not build mon to mon authorizer if cephx is disabled
ca74b4b atomic_t: Add a new version based on libatomic_ops.
d1d6da3 atomic_t: Remove (never used) unstable commonc++-based version
69b849c buffer: Include Spinlock.h.
d0213dd mds: allow LAZYIO cap along with WR
198d710 osd: fix source type checks (osd, mon)
afcee3b osd: don't ->put() a null session in _share_map_incoming
ec8471d osd: queue pg update under pg sequencer
69b108f osd: queue pg creation under pg sequencer
cfabc02 mds: not dout(0) request latency
09916d3 qa: set -e in workunits
96befd4 mds: fix broken snaprealm split optimization for (unlinked) files
6573493 rgw: don't crash if HTTP_HOST isn't set
a6c80a3 osd: avoid PGPool lookup in inner loop
69fda2a osd: fix loading of snapset from _snapdir object attr
e5cd2b7 osd: replace the ALLOW_MESSAGES_FROM macro with use of OSDCaps functions.
50cad81 osd: add a message_from_mon function
c94e490 Revert "osd: replace the ALLOW_MESSAGES_FROM macro with use of OSDCaps functions"
81e748d mds: only recover files from stale clients when auth
e7547dc osd: add some put()s of Session * that weren't being used properly.
9ceb3be osd: replace the ALLOW_MESSAGES_FROM macro with use of OSDCaps functions
4e138c1 osd: Add is_X functions to OSDCaps (where X is mon, osd, mds).
17d2451 rados: check that given pool name actually exists when deleting
d44c262 mon: OSDMonitor makes sure pool ID is good, preventing crashiness
c4892be osdmap: move pool names into first part of encoding; add version to second part
6bf54f1 librados: add lookup_pool()
6417e6a librados: no need to include linux/types.h
26325b1 debian: more librados1-dev deps
414a6e3 spinlock: clean up #include deps
33e604d monclient: seed RNG so we pick a random monitor
6ed1f04 todo: move bugs to tracker
94307c9 auth: cauthtool now identifies itself properly to common_init
d5b3924 mon: add 'get' command to AuthMon, letting you retrive one entity's keyring data
fa9588a filestore: fix weird references for clone/clone_range
a9ecb46 objectstore: fix clone_range() transaction encoding
1cfb41f osd: rename PGPool::removed_snaps to cached_removed_snaps to clearly identify
e2ca9a3 auth: cauthtool now identifies itself properly to common_init
e949931 mon: add 'get' command to AuthMon, letting you retrive one entity's keyring data
b4c564c librados: clean up object listing api
bb2c0a9 osd: clear initial interval_set in build_removed_snaps
1bcdf34 testrados: create/use own pool
0f22be7 crc32c: ifdef out dead code to shut up warning
736a271 filestore: more informative error on current/ rename failure
c511dd1 init-ceph: include 'noatime' btrfs mount option by default
4a2ca2b testrados: test more stuff
c2987ce objecter: cleanup
f7f38df librados: clean up c header
2112d20 debian: fix up librados1-dev with all necessary headers
13d6b38 librados: move c++ api into librados.hpp; more type cleanup
1e05d5c librados: use std::string, not nstring, in c++ api
181b81c librados: avoid snapid_t type, types.h
6c9b36b rbdtool: fix man warnings
5c00d5f filestore: check for SNAP_DESTROY ioctl, and file if not present
c9cb118 librados: move librados.h to include/
2fae333 spinlock: move to include/
ee13f60 spinlock: move to ceph namespace
e1896d8 atomic: move to ceph namespace
3ea82ba atomic: rename test() -> read()
aa55570 buffer: avoid including ceph assert directly
df2422f assert: use ceph namespace
74be677 crc32c: prefix with ceph_
ac70c56 page: move to ceph namespace, defs to common/page.cc
fc8e3c3 buffer: move to ceph namespace
50ea193 osd: fix transposed clone_range args
250ff72 spinlock: avoid lockdep include unless lockdep is on
0fb8d93 buffer: avoid spinlock include unless debugging is on
75699db librados: reduce #includes
7f16acc librados: c binding for rados_tmap_update()
e5381a5 rbdtool: maintain an rbd_directory object; add --list
a1cf10a auth: shut up about loading the key file
be1e87f librados: add tmap_update to c++ interface
ba58412 osd: fix tmap when header update not specified, or initial object dne
b89e743 debian: include rbdtool
3d7848d rbdtool: add man page
2576089 rbdtool: delete rbd images too
89b0558 rbdtool: use shared rbd_types.h
50fcf79 msgr: drop useless was_session_reset() call on lossy channel close
d2d80c6 ceph: print output to stdout, not dout
3d4a692 msgr: fail on sd < 0
686192a osd: flush store ops after map update
2f21010 mds: set laggy in tick() if its been a while
56de662 debian: drop empty dir from radosgw
8741959 todo: mds
03e2019 mon: set osd up_thru when adjusting pg_temp
634441e osd: distinguish between per-pool snap pools and user-managed snap pools
e52aa5e mds: remove null clean stray dentries after dir commit
be4a797 mds: fix purge_stray to be smart about NEW dentries
0efe4fb mds: fix ref count check in eval_stray, purge_stray_purged
50b1772 osd: return more useful errno (ENOENT) on missing base
985a981 mds: move new stray dentries to end of lru
4de289f mds: use send_dentry_unlink helper for remote unlink
07e3984 mds: journal oldest client tid
2c2ea0a todo: updates
190067e rgw: rgw_admin checks that it hasn't regenerated user ids
4ee4ba7 mon: add new command 'lspools [uid]' to OSDMonitor
4b6e4fa osd: pg_pool_t prints out its owner
2b92ddc mds: fix snap purging during commit
e9f4a6c mds: streamline stray checks with helper
955cfdb mds: make beacon output more informative
4d5ce88 qa: run tests in random order
fd60670 mds: allow reconnect as long as we are in reconnect state
2cb1128 Add missing Makefile dependency for debug.cc
d08ef70 rgw: radosgw_admin can delete users from the system
473c22a rgw: call url_decode in more appropriate places
fa8b9b9 rgw: convert + to space in url_decode
1f3431a rgw: send an error response if reading an ACL off disk fails
9cb74b9 rgw: remove bad local variable shadowing class member variable
a962063 rgw: remove some invalid FIXMEs
a98f811 rbdtool: don't create empty object data
00f1ec8 rbd: created a userspace tool for creating rbd objects
fdd5709 mds: set laggy flag if dispatch takes too long
ea035fe msgr: set OPEN state after accepting connection
5fa1658 mds: fix file recovery
4d56710 mds: remove dir from 'new' list on any commit, not just on clean
96262fc filejournal: fix journal full handling
e6bc437 qa: make snaptest trigger capsnap dirty(caps)==0 bug
4f8a353 mds: remove dentry AND inode when dropping snap metadata; add helper
7498048 osd: improve print of snapc in MOSDOp
3f094f7 osd: fix snap trimmer SnapSet adjustment
bd43b3a todo: updates
4bb676d osd: improve snap trimmer debug output
bca73ed mds: clear old snap_trace before building new one
ad840ed msg: Fix a few invalid asserts.
b74962f msg: Message::nref now starts at 1; remove a get() in SimpleMessenger to adjust
7d23bb4 msg: Remove dead MExportDirWarning/Ack
9c17958 msg: Remove dead MMDSOffloadComplete
92a4049 msg: Remove dead MMDSBoot
daf2e2c msg: MClassAck has a private destructor
157ecf6 msg: Add MClassAck to Message.cc so it will decode properly
2618289 msg: fix uses of MClass destructor to use put()
d43fad3 msg: MClass has a private destructor
7fd1197 msg: fix uses of MLock destructor to use put()
9c28162 msg: MLock has a private destructor
943bb00 msg: fix uses of MInodeFileCaps destructor to use put()
124bcc2 msg: MInodeFileCaps has a private destructor
4b89e7b msg: fix uses of MCacheExpire destructor to use put()
0b3c949 msg: MCacheExpire has a private destructor
c392b16 msg: fix uses of MMDSTableRequest destructor to use put()
07cc53a msg: MMDSTableRequest has a private destructor
806aaca msg: fix uses of MHeartbeat destructor to use put()
6511d4e msg: MHeartbeat has a private destructor
63fb33e msg: fix uses of MDentryLink destructor to use put()
eeabbb7 msg: MDentryLink has a private destructor
0a23748 msg: fix uses of MDentryUnlink destructor to use put()
e32f9c6 msg: MDentryUnlink has a private destructor
833aebf msg: fix uses of MExportCapsAck destructor to use put()
666e23a msg: MExportCapsAck has a private destructor
804d232 msg: fix uses of MExportCaps destructor to use put()
58c680a msg: MExportCaps has a private destructor
9efa0cf msg: fix uses of MExportDirFinish destructor to use put()
b52dc99 msg: MExportDirFinish has a private destructor
aa25b7e msg: fix uses of MExportDirNotify destructor to use put()
93b751b msg: MExportDirNotifyAck has a private destructor
d2959c3 msg: fix uses of MExportDirNotify destructor to use put()
2b54b55 msg: MExportDirNotify has a private destructor
ff460ea msg: fix uses of MExportDirAck destructor to use put()
36058ce msg: MExportDirAck has a private destructor
f722386 msg: fix uses of MExportDir destructor to use put()
cbe16f7 msg: MExportDir has a private destructor
f10c816 msg: MExportDirWarningAck has a private destructor
a571f9f msg: MExportDirWarning has a private destructor
1641130 msg: fix uses of MExportDirPrepAck destructor to use put()
1af2f4c msg: MExportDirPrepAck has a private destructor
4fc722a msg: fix uses of MExportDirPrep destructor to use put()
76174f4 msg: MExportDirPrep has a private destructor
7862fd4 msg: fix uses of MExportDirCancel destructor to use put()
5899fcc msg: MExportDirCancel has a private destructor
e48ccde msg: fix uses of MExportDirDiscoverAck destructor to use put()
95c24a9 msg: MExportDirDiscoverAck has a private destructor
d9b57aa msg: fix uses of MExportDirDiscover destructor to use put()
723923a msg: MExportDirDiscover has a private destructor
35fce27 msg: fix uses of MMDSFragmentNotify destructor to use put()
2e42b9b msg: MMDSFragmentNotify has a private destructor
7bb62db msg: fix uses of MDiscoverReply destructor to use put()
8b85aa3 msg: MDiscoverReply has a private destructor
a9afd9e msg: MDiscover has a private destructor
ed68080 msg: fix uses of MDirUpdate destructor to use put()
3e91bf8 msg: MDirUpdate has a private destructor
c8eb706 msg: fix uses of MMDSCacheRejoin destructor to use put()
5c5831c msg: MMDSCacheRejoin has a private destructor
224423a msg: MMDSResolveAck has a private destructor
88cfb93 msg: fix uses of MMDSResolve destructor to use put()
b5e4475 msg: MMDSResolve has a private destructor
3bd67ca msg: MMDSLoadTargets has a private destructor
7f83723 msg: fix uses of MMDSBeacon destructor to use put()
95609f2 msg: MMDSBeacon has a private destructor
cda652b msg: fix uses of MMDSMap destructor to use put()
241be82 msg: MMDSMap has a private destructor
375c87f msg: fix uses of MMDSSlaveRequest destructor to use put()
4825944 msg: MMDSSlaveRequest has a private destructor
d5c4f0e msg: fix uses of MClientSnap destructor to use put()
cbe66c7 msg: MClientSnap has a private destructor
51db4d9 msg: fix uses of MClientLease destructor to use put()
fa6d8d8 msg: MClientLease has a private destructor
4c911b5 msg: fix uses of MClientCapRelease destructor to use put()
f94a49b msg: MClientCapRelease has a private destructor
2fb219a msg: fix uses of MClientCaps destructor to use put()
565fcb5 msg: MClientCaps has a private destructor
63ecb92 msg: fix uses of MClientReply destructor to use put()
c31d5b0 msg: MClientReply has a private destructor
62d676b msg: fix uses of MClientRequestForward destructor to use put()
698315c msg: MClientRequestForward has a private destructor
5ab622f msg: fix uses of MClientRequest destructor to use put()
1d86804 msg: MClientRequest has a private destructor
9f1dfed msg: fix uses of MClientReconnect destructor to use put()
a9f616b msg: MClientReconnect has a private destructor
72dbbfb msg: fix uses of MClientSession destructor to use put()
609a4ac msg: MClientSession has a private destructor
f2b8309 msg: MMonGlobalID has a private destructor
565ac00 msg: fix uses of MMonSubscribeAck destructor to use put()
568ad65 msg: MMonSubscribeAck has a private destructor
7f5202b msg: fix uses of MMonSubscribe destructor to use put()
9abc2f2 msg: MMonSubscribe has a private destructor
8b7dae0 msg: fix uses of MAuthReply destructor to use put()
ccadd53 msg: MAuthReply has a private destructor
abe5eb1 msg: fix uses of MAuth destructor to use put()
6163156 msg: MAuth has a private destructor
7488944 msg: fix uses of MMonGetMap destructor to use put()
8399e9a msg: MMonGetMap has a private destructor
b42a71f msg: fix uses of MMonMap destructor to use put()
cae9b13 msg: MMonMap has a private destructor
af60290 msg: fix uses of MRemoveSnaps destructor to use put()
7c4dd41 msg: MRemoveSnaps has a private destructor
d55404c msg: fix uses of MOSDScrub destructor to use put()
96230f0 msg: MOSDScrub has a private destructor
a149c82 msg: fix uses of MOSDPGTrim destructor to use put()
d04b48c msg: MOSDPGTrim has a private destructor
c271bc3 msg: fix uses of MOSDPGCreate destructor to use put()
c5c7f2f msg: MOSDPGCreate has a private destructor
9c1f3ea msg: MOSDPGInfo has a private destructor
7a58fef msg: fix uses of MOSDPGRemove destructor to use put()
8046e9d msg: MOSDPGRemove has a private destructor
cf47b5a msg: fix uses of MOSDPGLog destructor to use put()
cfdc17f msg: MOSDPGLog has a private destructor
553e0a7 msg: fix uses of MOSDPGQuery destructor to use put()
8f8a454 msg: MOSDPGQuery has a private destructor
3b38cbf msg: fix uses of MOSDPGNotify destructor to use put()
57ad0e4 msg: MOSDPGNotify has a private destructor
a03c723 msg: fix uses of MOSDMap destructor to use put()
8917929 msg: MOSDMap has a private destructor
d1076cd msg: fix uses of MOSDSubOpReply destructor to use put()
b3423d3 msg: MOSDSubOpReply has a private destructor
e85d368 msg: fix uses of MOSDSubOp destructor to use put()
7df6eab msg: MOSDSubOp has a private destructor
b1c6ac3 msg: fix uses of MOSDOpReply destructor to use put()
3685e63 msg: MOSDOpReply has a private destructor
d483315 msg: fix uses of MOSDOp destructor to use put()
1282875 msg: MOSDOp has a private destructor
b4a6d92 msg: MOSDPing has a private destructor
e86c1d5 msg: fix uses of MOSDFailure destructor to use put()
61ba461 msg: MOSDFailure has a private destructor
f7a56bd msg: MOSDPGTemp has a private destructor
8122f16 msg: MOSDAlive has a private destructor
f275a5f msg: fix uses of MOSDBoot destructor to use put()
d2d2418 msg: MOSDBoot has a private destructor
fcbb4cf msg: fix uses of MForward destructor to use put()
2f7406f msg: MForward has a private destructor
89b130f msg: fix uses of PaxosServiceMessage destructor to use put()
d767c13 msg: PaxosServiceMessage has a protected destructor
e327247 msg: fix uses of MRoute destructor to use put()
163386f msg: MRoute has a private destructor
2861c56 msg: MPing has a private destructor
6165c55 msg: fix uses of MLogAck destructor to use put()
15e1935 msg: MLogAck has a private destructor
7d26070 msg: fix uses of MLog destructor to use put()
990f01b msg: MLog has a private destructor
fa839c0 msg: fix uses of MMonElection destructor to use put()
3a2164f msg: MMonElection has a private destructor
e1f6cef msg: fix uses of MMonObserveNotify destructor to use put()
dddf647 msg: MMonObserveNotify has a private destructor
f7f38ff msg: fix uses of MMonObserve destructor to use put()
098898f msg: MMonObserve has a private destructor
97fd8be msg: fix uses of MMonPaxos destructor to use put()
527648f msg: MMonPaxos has a private destructor
2f12ffd msg: fix uses of MMonCommandAck to use put()
23e3c37 msg: MMonCommandAck has a private destructor
30389dc msg: fix uses of MMonCommand destructor to use put()
10f7cfc msg: MMonCommand has a private destructor
8102918 msg: fix uses of MPoolOp destructor to use put()
2f0af62 msg: MPoolOp has a private destructor
b8c5d1c msg: fix uses of MGetPoolStatsReply destructor to use put()
57db7b9 msg: MGetPoolStatsReply has a private destructor
34dbbbc msg: fix uses of MGetPoolStats destructor to use put()
ae8fff9 msg: MGetPoolStats has a private destructor
9fb3b15 msg: fix uses of MStatfs destructor to use put()
246835d msg: MStatfs has a private destructor
48ac8cc msg: fix uses of MPGStatsAck destructor to use put()
a976fd6 msg: MPGStatsAck has a private destructor
6e9943e msg: fix uses of MPGStats destructor to use put()
6da9bb3 msg: MPGStats has a private destructor
1a69560 msg: Change all uses of ~Message to Message->put()
4d174b5 qa: make snaptest.sh repeatable in same dir
1111433 todo: kclient snap bug
8c3765e mds: don't adjust subtree map in rename_prepare
7293dd5 mds: subtree map should always reflect current hierarchy
4abb47a qa: drop numeric prefix from workunits
b206d2a osd: don't filter out shutdown msg to self
2a0ed83 msgr: init local_pipe peer_{addr,type}
177061e msg: Declare ~Message to be protected.
47286cb mds: todo rejoin bug
3ab157f todo: kclient bug
a9f6bd3 rgw: revert accidental commit of get_attr prototype change
3edc9d6 msgr: source, not orig_source, in dbg output
bf62cc0 mds: don't use get_orig_source
ddf61d0 msgr: NOSRCADDR protocol feature drops src/orig_src in msg header
9a4b768 msgr: put features in connection_state
cd102fb msgr: use connection for src addr
9413730 msgr: make Message::get_orig_* differ only when explicitly directed to
58ce32c mds: fix MDSTableClient ack double journaling
d557499 mds: start file recovery after sending rejoin ack
65d3f3f mds: delay check_inode_max_size if frozen
e6cd1c2 mds: less noisy about snaprealm siblings
dab367f rgw: add optional auid parameter to create_bucket.
66c5af2 rgw: remove dead code. rebuild_policy exists elsewhere; the acl needs no main()
7030731 rgw: radosgw_admin will quit gracefully if it can't open the store
a5d8092 rgw: set auid if specified at creation
83a6efe rgw: add auid field to RGWUserInfo
06393de auth: Keyring no longer segfaults if HOME env variable is unset.
9dd4f99 rgw: if you can't init_storage_provider(), quit instead of segfaulting later.
d9439dd rgw: say why the store failed to open in admin
06d8e16 rgw: add minor data to schema examination
aa490a7 mkcephfs: osd=allow * caps for osd, mds
9d81f9d mds: migrate frag/nest scatterlock info on bounding frags during export
848caaf auth: standardize on -n/--name [type.]name
c6028ae auth: initialized uninitialized variable, don't free pts we don't own
855bae7 mds: make rdlock waiter wait on STABLE | RD, not just RD, when lock is unstable
a046ca2 mds: use 32 bits for MDSCacheObject::ref count
c5933e4 mkcephf: behave when user is not defined
158d4ec auth: fix a few memory leaks, uninit vars
7975cf0 mds: skip purge_stray when stray pins are present
3b5d359 Makefile: add missing MDentryLink.h
9095963 mds: drop unused CInode::PIN_PURGING
ee127d2 src/README is required
20f7f79 filestore: less noisy about OpSequencer queue
52a9083 mds: drop obsolete hack for base inodes
992e429 mds: fix lost completion in scatter_nudge (broke log trimming)
21b88da rados_bencher: Don't re-initialize passed-in pool, it breaks stuff
99e48ee osd: Fix up OSDCaps::get_pool_cap to work/make more sense
2860eea rados: add interface to change pool owners
c2e7eed6 librados: add change_pool_auid functions
1a4899d objecter: add change_pool_auid function.
a33e9e7 mds: allow rdlock on replica to request sync from auth
8d9f4fa mon: Set MForward::client_caps explicitly; this fixes a bad connection deref.
213ffe2 mon: set mon_caps with authenticated monitor check instead of claimed one.
cd7edca mon: Fix all uses of Session and get_caps. They now use MonSession and get_service()->caps, respectively.
5c9aa88 mon: Change name of Session to MonSession.
1045738 msg: Add get_session function to PaxosServiceMessage
c69a033 Revert "msg: PaxosServiceMessage includes a MonCap*"
ef5e874 mon: MonCaps default initializes more variables
4ecd615 osd: drop useless ENOMEM check
95eb2fc vstart.sh: include mon secret during mkfs
33a02af mon: fix up authorizer generation/validation
3273581 mds: fix bug in handle_discover on mdsdir
59b4c60 mds: check myin, not stray, in rejoin_send_acks
94794ab mon: change forwarding behavior somewhat
d3d243c mon: initialize routed_request_tid
9dfc4fb msgr: set m->connection for messages sent to self
9656a75 osd: detect TMAPUP no-op and do no work
1916e29 debug: include timestamp + thread in _all_ debug output
864b1a4 qa: fix loopall.sh mode
8e069f6 todo
c2d6aba todo mds bug
0eeec6f mon: Hack in setting monitor caps
bf4a1b5 fix up READMEs
41f6adc mds: fix up client session importing
9733882 mon: Fix initialization-crossing goto jump
b932727 mds: importing, ugh
c99207d mds: clean up kill_session()
74d638a mds: possible session 'importing' state
205e883 mds: drop purge step when closing client sessions
772daf2 mon: Removing dead code; been commented out for 5 months
efd344d mon: remove dead 'magic' code
d77185e todo
c965812 mds: fix bug in handle_discover on mdsdir
f3ea95b mds: check myin, not stray, in rejoin_send_acks
328c990 mds: fix eval_gather for sync->mix(2) and mix->sync(2)
f1a59b0 mds: encode fnode when replicating CDir
fbdbdc0 mon: addition to MonCaps docs mentioning how perms are used
fdddc1e mon: remove unused label out, which was causing compiler warning
5fe3af8 mon: remove now-unused macros.
99172e2 mon: MRoutes are now checked by check_privileges instead of a macro
029a56b mon: MForwards are handled by check_privileges instead of a macro.
e4f623e mon: handling MSG_CLASS now uses caps->check_privileges instead of macros.
7b11014 mon: use check_privileges instead of macro for MSG_MON_ELECTION
7d7d2aa mon: MSG_MON_OBSERVE handled in-function instead of with macro, sends response
298073f mon: don't use macros in evaluating MSG_MON_PAXOS messages
45f8072 mon: MSG_LOG uses an in-handler cap check instead of a macro
ccb5cff mon: Pool ops are already cap-checked by the handler; remove macro
6818a01 mon: add mon_caps used for unconnected monitor messages
aeab0f6 mon: stat requests use caps->check_privileges instead of a macro
7e70afb mon: the MDS messages use caps->check_privileges instead of the macro
48e64a3 mon: MRemoveSnaps uses caps->check_privileges
1ad850f mon: OSD handling messages use caps->check_privileges instead of macros
d61d42d mon: Use MonCaps::check_privileges instead of a macro for MSG_MON_COMMANDs.
b107e5b mds: combine new, closed states; few small fixes
032fd32 mds: style fixes (from cppcheck)
c2e9ffb osd: warn on no osd journal
020f920 mds: don't kick clients if we've been laggy ourselves
e53d35f mds: no early complete from scatter_nudge after partial work
061ed42 todo fixed some bugs
a01233e msgr: no more forward_message()
d6378f2 mds: re-send, do not forward, mds messages
f8478e8 mds: encode source mds in MDirUpdate
1ad3434 mds: encode source mds in MExportDirDiscover explicitly
3f06aa7 mds: rev mds internal protocol
10c2b20 mon: Fix resend_routed_requests. Stuff was left over from when forwards came in as a standard PaxosServiceMessage, which is now removed.
72a4b92 mon: another forwarding fix for resend_routed_requests
96f5ad3 mon: Forwarding fixes.
e1d4854 msg: Remove dead code MSG_OSD_IN/OUT
52aa9ca mon: x has little meaning for a mon, let's not confuse things for pool ops
65e53e7 mon: use our standard indicator for locked/unlocked in ms_dispatch: ms_dispatch locks and calls _ms_dispatch.
3bd625c objecter: don't lose reply codes when we wait_for_new_map
575d709 rados: add undocumented option to specify auid when making pools
bfbec0e mon: msg: Better output/debugging
d8efb1c objecter: always fill in auid
49a69e7 msg: MPoolOp now encodes its auid, prints more.
b071569 mon: handle_subscribe now uses check_privileges instead of get_caps.
78c4abc mon: Pretty sure MDS BEACON messages should only come from MDSes
baa4cd2 osdc: fix truncation of multiple extents of the same object
d1c1744 mds: fix resolve stage
965d737 mds: drop gather if it's empty
83203b5 context: don't complete C_Gather until finisher is set
66a554d init-ceph: do already running check early to avoid extra work
0b6357e todo
4b6688e mds: session is always defined in handle_client_reconnect
d58656f qa: make pjd test behave when run twice in same dir
0301d55 mds: acknowledge reconnect success with a session open message
7d88f7f qa: add fsx workunit
80c9ee2 mon: msg: better output
c763f64 mon: don't use get_priv() without put!
0d1b802 mon: forwarded messages should use the same connection as their carrier message
1f0cc52 mon: when possible, fill PaxosServiceMap::caps before exiting ms_dispatch
47e2864 mon: let ms_dispatch be non-locking for forwards
cf719ba mon: Encapsulate forwarded PaxosServiceMessages into MForward with their caps
001b5f1 mon: Use PaxosServiceMessage::caps instead of Session::caps where applicable
40179fb msg: Add a new MForward message for encapsulating client caps and messages
60677da qa: add loopall.sh
a4bdcdd mds: fix up root/base inode special cases
31dbd12 todo: more kclient bugs
3ebbec2 qa: runallonce.sh each workunit in a clean directory
a431c52 filestore: fix CLONE_RANGE detection
b8e47ad todo kclient osd_client bug
1d72d18 mds: fix SimpleLock::try_clear_more()
eb47abf mds: fix add_replica_dir to use is_base() helper for adjusting subtree auth
ebeef97 mds: fix SimpleLock state encode/decode
389e313 mds: remove unlinked metadata after replay
f2172eb mds: do not add null dentry to frozen dir
c104960 mon: declare class MonCaps in PaxosServiceMessage
9994180 osd: do no index reqid for CLONE ops (or BACKLOG ops)
b1cc16f ceph: drop (broken) poll mode (use -w instead)
a472338 ceph: add -s|--status command
797ee53 Revert "mon: PaxosServiceMessages now routed through paxos_dispatch and get caps set"
49ab169 mon: handle_route uses lazy_send_message for unknown MRoutes
9f59a1e mon: add encode/decode functions to MonCaps
3941ee2 mds: adjust rdlock forwarding on replicas
b818f5b mds: send resolve to resolve_set
5c70d30 mds: fix replica dentry linkage updates
a4d2caa osd: only insert non-zero intervals into interval_set
f059e49 qa: fix snaptest1.sh
3ac3e89 mds: add array bounds check for null dentry lease
e33e17e mon: Use PaxosServiceMessage::caps instead of Session::caps where applicable
0c688f9 mon: PaxosServiceMessages now routed through paxos_dispatch and get caps set
167b28a msg: PaxosServiceMessage includes a MonCap*
390258a mon: Add a Session operator<<, use it in OSDMonitor
7af73ac mds: avoid null deref of SimpleLock::_unstable
5b17264 mds: use CDir::item_new for LogSegment::new_dirfrags elist
7950356 auth: update documentation on caps
5c2319f mon: return error codes from prepare_new_pool
0dca240 mon: add warning/debugging prints to prepare_new_pool
b38ef13 mds: be consistent about list<>::item naming (item_foo)
a58243d dlist: fix pop_front/back
718d646 xlist: clean up interface
1c92836 dlist: clean up interface
e092710 mds: use elist instead of dlist
c1e8d37 elist: simpler embedded list
cc27a4c rgw: remove unused refcount data member from XMLObj. Also clears up ctor
62e1111 rgw: Add documentation
1f2876b cephx: initialize values
bbf6b16 synclient: print mount error
24b0f03 xlist: clean up users
1278e48 mds: use dlist instead of xlist for main cache objects
ebc8336 dlist: simpler version of xlist without _list pointer
75e44d3 mds: reduce MDSCacheObject footprint a bit
5a9a50c mds: replica_nonce can wrap; fix asserts
7f19ee1 mds: put rare state in more_bits_t in ScatterLock
b8e4afa mds: show xlist overhead
580cf83 mds: move unstable SimpleLock state into separate struct
34f5cfe debian: specify mirror explicitly when creating pbuilder image
010dd0f mds: make mds stopping work (with new mdsdir changes)
d641a63 mds: don't do_cap_update() if not inode auth
6c88cf3 mds: detach mdsdir inode from hierarchy
0e44c85 mds: don't assume lock parent is inode in eval_gather
03c93a0 mds: notify replica on XLOCKDONE -> SYNC transition
9cfd98d mds: simplify LocalLock wrlock methods
de8a55e mds: add locallock statemachine
019c052 synclient: print mount error
7f0791c mds: create abstract LockType that includes numeric type and state machine
cbd6b2f debian: build binary-arch debs only from builddebs.sh
d2e6374 debian: clean out unused debhelper rules steps
debaa52 debian: put debian/ in .diff.gz, not release tarball
4fdb6ce msgr: remove dead kill_after code bits
71cfe30 todo multi-mds issue
ff887e2 mon: users can now change pool owners.
543c9eb osd: Check auid permissions in get_pool_cap
fd3168a mon: use MonCaps::check_privileges in prepare_new_pool
5302994 Revert "mon: add check_privileges function to OSDMon." Deprecated by the existence of MonCaps::check_privileges
e59f544 mon: add check_privileges function to MonCaps
a9b15cc vstart: use 'allow *' notation instead of 'allow rwx'
9b3786f osd: accept 'allow *' as an admin flag that sets allow_all in the OSDCap.
9a8dd4f osd: OSDCaps parses and stores auid permissions
719c13a mon: AuthMonitor doesn't overwrite allow_all bit on incoming messages, only on initial connect.
efcd0d8 mon: Add basic operator<< to MonCaps
c6e7495 mon: Accept 'allow *' as an admin flag that sets allow_all in MonCaps.
55ace06 mon: MonCaps parses and stores auid permissions
e4e775b thread: mask all signals on child threads
e976c53 timer: kill unused g_timer
fe4f42b mds: create mds.$id debug log symlink
72e04c8 mds: only check for canceled _client_ requests, not slaves
233d2d8 mds: fix MDentryUnlink
cf44146 messenger: don't use signal SIGUSRx anymore
a7ae330 qa: make -j on kernel build
c9506f7 Revert "mon: Hack -- set allow_all in caps if client name is admin"
e0c3c15 mds: note when we last became non-laggy
0383878 mkcephfs: cosd mkfs as root, then chown
d77caf2 todo bugs
822ae4a filestore: clean up btrfs, clone range detection
ca02d68 cauthtool: verify set_uid arg
dc38d48 mds: dump misc struct sizes to log
9c8eef2 monclient: time out properly from wait_auth_rotating
fb5ecb9 decay: separate fixed DecayRate from DecayCounter
fdb85ca mds: drop useless double from DecayCounter
f07ce46 mon: Hack -- set allow_all in caps if client name is admin
9199dd2 objecter: librados: add optional auid param to 	create_pool functions
14cdfd4 objecter: add auid to PoolOp, fill it in during pool_op_submit
fbe08c7 mon: let prepare_new_pool assign an auid. Add new version that takes an MPoolOp and checks permissions first.
07df67f mon: add check_privileges function to OSDMon.
1b7119f msg: Add an auid field to MPoolOp; additional constructor to match
3b1bf4b auth: move CEPH_AUTH_UID_DEFAULT into ceph_fs.h
4020dd1 cauthtool: set auid in data member format instead of as (ignored) text key
6d6eba3 mon: store auid in MonCaps
c898ba5 osd: store auid in OSDCaps
1b211e5 mon: fix bad return test!
036f923 auth: add set_uid() to KeyRing, print out auid in print function
846acac auth: Add an auid parameter to verify_authorizer and handle_request
4637d18 cephx: Piece-wise initialization of structs is BAD! If you add, say, a field "auid" to the struct and it's being piece-wise initialized then you need to change every copy to include it. Or you assume it's just copied wholesale and then spend many hours trying to find where it isn't. Like in this one.
f58c41b auth: rename auth_uid -> auid
1d2516d auth: re-add auid to EntityAuth and AuthTicket.
d4c9453 mon: add auid field to MonCaps. Also make it a struct -- we want those data members accessible!"
4dd6b8d After discussing with Sage, we do want auid to be a part of AuthTicket, et al. Let's do it that way. Revert "authtool: give generated key specific uid if one is provided on the cli."
e931466 mds: shut up about request latency
f4d9916 mds: return lease on null dentries (ENOENT lookups)
1f49bff mds: behave when passed NULL *need_issue
18173b5 crushtool: fail on parse error
0f11eee mds: accept stray reconnects
265ad9e filestore: fix --mkjournal option
1477ec7 filestore: avoid sync_file_range(2) if not present
71b9a19 filejournal: avoid sync_file_range(2) if not present
3a76b63 autoconf: detect sync_file_range(2)
6a296bf crushtool: allow multiple -v's to increase verbosity
dd43f08 crushtool: fix parsing with new boost library (compress whitespace)
08e21ca osd: mon: caps store auth_uid as an int for fast checking
1cb95b4 cephx: Add auth_uid (if present) to Info for all service types
363647b osd: OSDCaps have a better check for ownership
3a080fa authtool: give generated key specific uid if one is provided on the cli.
c8e4f54 Revert a number of auth_uid commits.
ed12397 todo
51081fa init-ceph: return success error code on missing ceph.conf if no -c
e307f2b mds: fix snapid tests in encode_inodestat
0ee0a8d mds: fix null pointer deref in resolve on mostly-empty mds
d844dde journal: set committing_seq in commit_start
5fa2083 osd: use per-PG ObjectStore::Sequencer when possible
0ca85bc filestore: add Sequencer to queue_transaction interface
8f67cb4 msgr: don't redefine value of ENTITY_TYPE_AUTH
a38802e osd: fix TRIMTRUNC truncation size
46a771a filestore: use separate finisher for journaled ahead completion
5e36574 0.19.1
2e6c366 builddebs.sh: suppress lintian as root warning
62c8ceb auth: Add an auth_uid to AuthTicket. Still to do: copy it around
ae8ed24 auth: misc printing and initialization fixes
1a6e0ed vstart:/mkcephfs: set client.admin auth_uid to 0
2ab6e75 authtool: set generated key to specific uid if one is given
afdab56 msgr: Remove the type CEPH_ENTITY_TYPE_ADMIN. It *looks* like this won't break EntityName's isAdmin() function as that depends on a set name, and client.admin will satisfy it. I think.
ce20691 ceph_fs: Split CEPH_FEATURE_{SUPPORTED, REQUIRED} flags into service-based flags msgr: New get_{required,supported}_bits methods which calculate required bits based on type of self and of peer. Replace all hard-coded flag uses with these.
647e4ce OSD: If an auth_uid owns a pool and has no explicit permissions, grant it full privileges.
b30a6f5 osd: Add auth_uid to OSDCaps, and fill in.
ea01f18 auth: constant for unknown/unsecured user
8980fa2 filestore: fix ondisk vs onreadable_sync deadlock
2a63168 todo
4b77a04 builddebs.sh: keep base.tgz outside ~/debian
d0974d1 mds: put forced open sessions in OPENING then OPEN
73f49ad todo
ab32fae debian: new release, push, build, publish scripts
80731d6 Makefile: fix /sbin hack
62571f2 Makefile: include debian/
19ededd mds: fix (new) sessionmap decoding
dc2c1e9 mds: fix mds_export_targets message parent
038a8eb qa: download linux tarball from ceph.newdream.net for kernel compile test
2191ca3 cauthtool: validate arguments better, cleanup
a64caec osd: use onreadable_sync finishers to drop ondisk locks
429a9ef filestore: add onreadable_sync callback
5e6b5aa context: minor finish_contexts() cleanup
03a9257 finisher: generic C_OnFinisher context
d410381 objectstore: conflate onjournal and ondisk
155abb4 mds: revise mds sessionmap encoding [disk format change]
a0e5564 mds: initialize session state, even if we had it already
f3c6dff mds: assert client_msut_resend on forward.
6abf766 mds: print session states as string; nicer dump
2209736 encoding: make bool encoder explicitly u8
d499cf5 auth: auth_uid needs to be in AuthCapsInfo as well.
a2295f7 authmon: reminder --> remainder, for less confusion!
5464b0b mds: if we have no subtrees on rejoin_done, leave cluster
6aa4924 mds: fix trim_non_auth empty lru case
4a68eb4 qa: specify logdir on command line (or assume rundir)
5b78f5d osd: do not activate pg if lost osds and no acting has gone active
07005fa osd: detect permanently lost objects, and continue
812fe1e osd: send log events to monitor
6d34a28 osd: print lost_at
20f5f33 mds: fix sessionmap decoding
a239159 rados: revert indentation so it matches kernel. Oops.
cfbc85d msgr: Set features in ceph_msg_connect_reply
14052d4 auth: Add a uid field to EntityAuth; make it a required feature
2b4e605 rados: fix indentation
1f82e10 filer: remove -> purge_range, and scale to large ranges
e3b63c9 mds: make scatter_nudge actually nudge when replica asks
71626d0 mds: correctly set root inode_auth during recovery
d489951 mds: show nref=%d if MDS_REF_SET is not defined
c51148c mds: fix file purge race
68b7d43 filestore: explicitly parse args for _touch
ae63fc9 init-ceph: don't barf on dash when no command
166a76f automake: fix mount sbin dir when configured with prefix
86cab4a osd: clean up WRITE, TRUNCATE, TRIMTRUNC
734bbe8 cauthtool: --caps fn alone is a command
1d1c497 todo
74ac290 debian: mount.ceph in /sbin, not /usr/sbin
9ad91c0 objectstore: simpler transaction encoding
59d1b67 vstart: default to 3 mds
ed87bef uclient: do not retain caps being revoked
aac8930 debug: fix warnings, use larger path buffers
4aeed81 logger: fix warning
109f37f workqueue: behave when multiple threads call drain()
f8b2584 mds: add support for directory sticky bit
4540b5e filestore: only do btrfs_snap if btrfs
ef27fd6 update release checklist
98f5be5 (tag: v0.19) v0.19
801d248 mon: disable 'osd setmap'
e2ed6db osdmap: fix uninit var warning
f4a5f53 mon: add 'auth export ]name]' to export a full or partial keyring
65f5123 qa: fix snaptest1.sh
ab03efb osdmap: decode old osdmaps prior to pool_max stuff
157dec1 osdmap: get rid of useless max_pools
1b0711d osd: pool cleanups
465b46f todo
9f79756 mds: ignore session RENEWCAPS if state not open|stale
455c594 osdmap/mon: Be more defensive about highest_pool_num usage
5bbb3d6 rados tool: mkpool/rmpool commands now available
c555ee3 mon: can now delete pools via 'ceph osd pool delete foo'
12e3742 rgw: actually delete pools when using rados!
9851a20 rados/objecter: can now delete pools!
aea1082 mon/msg: MPoolOp can carry POOL_OP_DELETE; OSDMon puts pool in incre old_pools
69f923d librados: init PoolCtx properly -- was always setting snap_seq to CEPH_NOSNAP
3ced5e7 osd: Deal with pools being removed from OSDMap.
212a9fd OSDMap: get_pg_pool now returns a pointer This lets us return NULL if the pool isn't in the map, which is needed functionality for pool deletion. Meanwhile, code which expects the pool to exist will continue to cause a crash if it doesn't.
6059479 rados: fix seg fault on cleanup of a failed pool open
3b1a90e mds: infer 'follows' in journal_dirty_inode on non-head inodes
01ed8d0 mds: clear cap->issued on flushsnap
6deb60b mds: don't croak on null dentries in cache during reconnect/rejoin
34ad5bf8 objectcacher: use trimtrunc read/write ops
92baa54 osdc: clean up some mess
bc32b8f objecter: add read_trunc, write_trunc
7a73f91 mkmonfs: rm -rf, so that we kill 0600 admin_keyring.bin
ce464a5 osd: fix recovery requeue race
72d7117 init-ceph: print 'already started' instead of failing to start
10ae652 msgr: more conservative locking, thread join asserts
f5209d7 mon: note mds beacon times more carefully
28257a0 osd: bail out of interval loop completely
d7eb8ce osd: always update up_thru if pg changes before going active
f931fec osd: simplify, and version, pg attrs
d8b622a osd: remove some dead code from build_prior
d17257b osd: fail startup if store is in use (before we fork)
226c727 osd: set heartbeat addr properly
5f3f958 osd: fix memset transposed params
8538efc osd: don't block on mon negotiation on startup
315c8cd mkcephfs: fix up permissions, ownership on temp keyrings
28783e3 ceph_common: sudo su, not su
6cc6d10 mkcephfs: always clobber, since we don't support not clobbering anyway
6932971 mkmonfs: require '-c conf' to avoid accidents; stash admin keyring
26fdf06 cauthtool: mode 0600 for keyrings
6bfb95c mkcephfs: put admin keyring in mon_data, for safe keeping
ba2723c mkcephfs: --clobber, not --clobber_old_data
fa5478b qa: +x snaptest1.sh
f85f60f objectcacher: use ObjectSet container instead of inodeno_t hash_maps
d5b9c5f cephx: adjust auth ticket renewal encoding a bit
b509371 qa: fix up runallonce.sh
fe58fdb debian: fix init script hackery
ef50a0c todo
9a2e5ba mon: print caps to debug log
1216059 cephx: nicer debug output in service handler
3d1c079 cephx: use 'next' key for ticketes when 'current' is expired
378ce41 csyn: print something on mount failure
142b779 cephx: return expires service keys from rotatingkeyring
8cbfb32 cephx: fix negotiation on reconnect
44dc114 monclient: renew service tickets a bit after the current expires
ef54e0c osd: don't update object size if didn't write anything
2feea3c cmon: suggest mkcephfs when 'whoami' not in monfs
2f90018 cephx: fix up key rotation
9be2e6a cephx: nicer keyserver debug output
e401cd2 osd: write op updates trancation sequence if not already set
3fb7364 msgr: Update 'documentation'.
878f5fc init-ceph, mkcephfs: fix ETCDIR
9662ad4 mds: behave when we pipeline session updates to journal
159dc00 msg: union sockaddr_storage to hush strict aliasing warnings and clean up code
53d3df0 init-ceph: Required-start: $remote_fs
469d089 debian: do not include var/run/ceph in package; mkdir -p dirname unconditionally
2d745bc rados man page; include rados in ceph package
789d702 debian: include cauthtool
c77dd33 rename authtool -> cauthtool
d6d3d2a mds: behave when we pipeline session updates to journal
ad9f8db workqueue: make drain() wait for processing AND queue
c77b536 mutex: fix file mode
6aea5cc osd: take ondisk_read_lock if pushing object to peer
a3a248c filestore: return 0 for no-op transaction
b06b232 debian: fixups to build inside pbuilder
270a7bdd ceph: fix manpages so they are only installed once
0ef0ab4 osd: count objects degraded due to degraded pg
62a0e4b osd: prevent do_waiters() while _dispatch() is running
4a8d1ec ceph: wait for monmap
03da8ba osd: btrfs_snap by default
48e3b00 osd: carry ondisk_read_lock if prepare_transaction may_read()
153a37e osd: order rmdir in remove_collection after deleting dir contents
816ab37 filestore: fix old clobbering of commit_op_seq
408c81c osd: fix lock inversion with ondisk_write_unlock
c91716e osd: store local osd magic, whoami, and other static bits outside of ObjectStore
73cc468 osd: print truncate_size signed, and only print at all if _seq > 0
0f42df4 debian: updated debian build scripts, changelog
d87f66d mkcephfs: warn on missing keyring for mds, osd
4b3c3d3 authtool: add -a/--add-key command
a23cdb0 buffer: add decode_base64 method
dbcb325 cephx: pipe down about ticket renewals
fdbd893 osd, mds: don't time out authenticate()
2ec2d57 filejournal: make io contiguous in write_bl() for directio
d289ea0 ceph: error out on authentication failure
82afbb6 monc: fix authentication timeout
26eb29d monclient: kill unused wait_authenticate()
29d5dd6 objectstore: include struct_v for Transaction
ffb1b6c osd: wait for readable on primary after pulling an object
f668ce9 authtool: only create keyring if --create-keyring (or -c)
0a6e4ed mkcephfs: misc cephx fixes
c76ea9d debian: fix builder; add newish headers to Makefile.am
aa85188 mkcephfs: misc cephx fixes
4d18995 filestore: roll back to last clean snap on mount; clean up sanity checks
9747e16 filestore: fix up commit_op_seq
e878373 filestore: use WorkQueue for ops (so we can have >1 thread issueing fs ops)
496d764 spinlock: make lockdep optional; off by default
147c6f5 osd: add uid to ceph_pg_pool; move encoding versions of rados.h
213bd01 monclient: return authetnication error
035389a auth: tolerate bad authenticator replies (retry instead of crashing)
91bf3e3 mkcephfs: no scp -v
dfc1b11 auth: fix KeyStore interface
53c0abc auth: simplify KeyRing map type, authmon add/importing
7761ad9 cephx: separate KeyRing and RotatingKeyRing
bee7be2 cephx: add struct_v throughout.  some cleanup.
ba515fe mkcephfs: generate cephx keys during mkfs
40b9022 auth: use KeyRing encode/decode
0b9f40e todo
329178d mount: set flags when getting -o sync
6ea3030 mds: fix dumpcache
6285b61 authtool: only create keyring if --create-keyring (or -c)
f40957e config: rename 'keys file' to 'keyring'
3ebf9a4 filestore: optionally checkpoint with snaps
5bdb348 journal: make sure max_size is multiple of block_size
54898b3 mds: print setattr'd values with MClientRequest
0fcd68b mds: only set smaller flag in setattr completion if actually truncating
5ba3462 authtool: only create keyring if --create-keyring (or -c)
3a29b5c filestore: (try to) warn if not btrfs or ext3
6b09917 vstart: writeahead journal by default
7923a19 filestore: adjust default sync intervals
b8bf499 filestore: warn on bad journaling, sync options
c8f27ec journal: throttle journal
c736e81 filestore: throttle op queue
bd76ae9 todo
37a45d5 osd: fix osd shutdown
6963a6f journal: fix mis-merge
2474783 mds: dump_cache even when debug_mds < 2
3642c2b journal: allow journal seq #'s to jump
f46b1b4 journal: make wrapping simpler
99e316f osd: increase osdc protocol number
e72cc23 truncate: don't write beyong truncation with old trunc seq
9919b09 truncate: initialize truncate_seq, truncate_size
2f72778 truncate: truncate information sent on each read/write op
af6803b osd: quiet down about request perms
c1259b9 librados: guard against double-release; clean up ref counting
1389bf9 rados: fix delete[] vs delete
1f680bf lockdep: fix use after free; avoid register in unlocked() path
1cf80d5 uclient: fix uninitialized var
82728db filestore: fix empty cond location
405f17a mount: fix compile errors
c0058fe streamtest: do concurrent ios; async commit AND ack
3f3aa0b osd: add mutual exclusion while writes are applied
089afab journal: sync_file_range on bdev, fdatasync on file
b73861a journal: warn if we detect disk write cache is on
22bdecd journal: align (by default) even when !directio; directio by default; log latency
8c737cf journal: group entries into single io in directio mode
c89d9bb mon: fix auth restart decoding
bf1b88d mon: fix osd tell *
d4735c8 mount: fix compile errors
11dcd42 TODO: mark bugs completed
9133157 mount: canonicalize path name for mtab
a96af2e mon: possible fix for rare problem where osd boot messages are double-logged. From Sage.
883c6fa mon: don't delete all laggy mds beacons, just the one's you've replaced
5953505 mon: print out proper address in debug log
1422241 mds: unify two if blocks with identical checks
c99c857 todo: Slightly out of date
3332509 journal: fix padding
03901bd osd: streamline writing new maps to disk, somewhat
14a5105 osd: use flush, not sync_on_flush
d1b41e6 filestore: flush() will wait for queued transactions to be readable
94d76e9 journal: add flags field to header, entry_header
5c264b1 journal: allow pre and post padding for journal payload
6d96b58 debian: use bash for debian build script
f131790 journal: fix thread id printing
31a2ce2 finisher: fix flushing, debug output
3a68274 dout: print thread id hex (to match up with gdb)
9586cd3 filepath: add struct_v
a52203e common/include/rgw: Add versioning to structs without it.
9ebbeb6 mds: add v to encoded mds structs
caaeb52 rgw: struct_v in RGWObjEnt
87a0d76 journaler: struct_v in structs
6283749 mds: remove unused _pad variable
e574c84 osd: add struct_v to most encoded structs that don't already have one
adeb0be msg: add type to ceph_entity_addr
eebe6df osd: set reqid for push/pull subops
69d8e4e filestore: fix journal flush
d12b51d osd: use queue_transaction throughout
b4c1805 filestore: queue onreadable _after_ starting journal item
343e344 filestore: queue_transaction and generic C_DeleteTransaction
3ebb4da osd: reply with ACK if client doesn't ask for a COMMIT
6ba2d3e journal: include a version field in header
8b42318 osd: simplify pg write mode transitions
e6683d7 osd: only use DELAYED if no journal or journal is writebehind
2da1030 osd: make Transaction lifetime match RepModify (not stack)
b645e20 dout: print thread id hex (to match up with gdb)
43581e5 wip
f2b5b52 finisher: wait_for_empty
23a8a8c filestore: add writeahead journal support
1cc63ac filejournal: optionally block on full journal
707b5c6 filestore: refactor applied/committed completions
9171241 osd: refactor op_applied logic
9765bc4 filestore: preliminary support for parallel journaling
3d3d1ea finish: support non-zero return values
69d9e87 osd: encode struct v for ceph_pg_pool
e49a673 mon: add struct encoding v to ease future revisions
90bfb99 mds: make CEPH_MDS_OP_CREATE a write op [mds protocol change]
ec86934 ceph: remove stray #include
da13c5a librados: implement C versions of snap calls
818c73e Change CompatSet usage to be compatible with new struct
80979bb change CompatSet
b826611 mds: Revert CInode/Journaler changes as we'll move them into MDSMap later.
eb27307 add versioning and awareness bla bla
8883cd2 mon: use CompatSet in disk format
15fa588 mds: use CompatSet in disk format
5530e3b osd: use CompatSet in the superblock. Only one 'feature' right now
77e196c include: new CompatSet.h
c74be20 replace strcat with strncat
fa0a0c5 replace sprintf with snprintf all around
f78d3d0 msgr: fix mark_down
adf613f filestore: don't croak if current/ exists
ca27bd6 todo
d39149b logger: use larger buffer, snprinf instead of sprintf
9b6cf70 osd: use journal in peek_super
5cd5b11 filestore: put data in current/, a btrfs subvol if possible
8f06f08 filestore: rip out usertrans experiment
b102e81 filestore: rename _apply_transaction
7b06739 mds: add 'dumpcache [filename]' mds command
a26fec6 mds: disable cache dump on rejoin by default
45e15bb TODO
0ce86b3 mon: properly clean up SessionMap on a shutdown.
d2ddb9d csyn: properly use multiple clients
ff83762 don't keep configs in git
bfc75d6 todo
1f95289 botched merge
9ea4562 msgr: make use of references and const slightly more consistent
89bdc33 monClient: fix potential naming confusion with messenger
40c37fc msgr: rename endpoint_stopped to destination_stopped
6c63428 msgr: rank is just a bad name for local SimpleMessengers now
42b7af6 msgr: remove erank
b914135 msgr: should be destroyed in the same thread it's created
7e799bc filestore: don't bother masking signals
5f54543 msgr: Remove erroneous rank->destroy calls I inserted in 9a96bf
644ce37 msgr: get and put inside DispatchThread, not when you create/end DispatchThread
52a37a9 msgr: Remove unregister_entity since there's only ever one now. Move needed functionality into the end of dispatch_entry.
6737529 msgr: Make usage compatible with last commit
1534b96 msgr: Remove all references to Endpoint
e292d72 msgr: Remove declarations of unimplemented functions: rename_entity and new_entity
04ba435 msgr: SimpleMessenger takes responsibility for Messenger functions.
9a96bf6 msgr: All SimpleMessenger uses are now on the heap for appropriate destruction
032d975 msgr: SimpleMessenger is now a Messenger itself -- sort of
98bdb8b msgr: remove rank number from endpoint, since there's only one. Remove Endpoint's wait() method as it's unused.
11fed1b todo
d52e8d2 osd: fix MASKTRUNC
14f2c78 qa: dl pjd.tgz
a929438 todo, sepia reformat
2de29d2 mds: change MClientReconnect encoding (mds protocol change)
2492449 uclient: clean up mark_down of failed mds
ed96d87 mds: add NEW session state
076e0dd msgr: drop rank lock while verifying authorizer
6d2bfb5 uclient: don't renew caps while mds is recovering
93dd9f0 mds: expose projected ctime is client is last versionlock wrlocker
40bcc6b todo
e7892cd osd: prioritized repop acks
3ef3264 qa: don't fail rm of old log
775d682 qa: make logging more forgiving
e357203 msgr: separate incoming queue from local_endpoint
87682d1 osd: put meta_coll const in OSD.{cc,h}
eae3004 filejournal: delete[] not delete
37f04d9 backtrace: fix #includes for ppc
4bfa758 hash: use native appropriately sized hash for word, not native host word size
e5ff148 change LP64 ifdefs to casts for printf formatting
2c328d1 logger: cleanup 64
0fb2ac1 todo, confs
d06992d msgr: include features in connection handshake (protocol change)
4e7b383 msgr: put tid in ceph_msg_header (protocol change)
b3808b4 todo more bugs
bef2ac0 assert: leave cruft off top of assert failure backtrace
6dbb718 backtrace: demangle c++ names
a4f1430 todo bugs
f579387 mds: new commands! issue_caps inodenumber calls locker->issue_caps try_eval inodenumber mask calls locker->try_eval
b6b7ba5 mds: new command kill session xxxx ends that client session
196f277 create a new function end_session to end client sessions
6dce782 vstart: allow -o 'some option for config file = whatever'
00f6cf5 osd: fix PG print log bound check
299d620 todo (bugs)
54b8cd3 Make a more flexible 'tell' command to replace injectargs osd/mds: make a handle_command function; don't parse all MMonCommands as config
e066744 todo (bugs, filestore notes)
22701b3 osd: include last_epoch_split in PG::Info::History
e2ca4eb msgr: don't keep sent messages on lossy connections
687cc41 mds: log client timeouts
dd2eeef mds: don't croak on stray ACK
580dd13 qa: Copy the output of each test to a log file
796d3ba qa: Whoops, never added the runonkclient script
6fc3f5e auth: rename mutex so that it doesn't confuse lockdep
6e72b20 msgr: maintain per-pipe in_qlen; avoid list.size(); some cleanup
e243c7f librados: fix locking slightly
43ab6e5 qa: fix runallonce target dir verification
2611a57 filestore: disable USERTRANS for now
105b669 todo
6088777 librados: less noisy
7c3dc89 vstart: fix small bash thing
072be5c osd: drop backlog on recovery completion (when we mark PG_STATE_CLEAN)
6258b4f osd: split pg log too
894d252 osd: make osd thread pool sizes adjustable
6ebd816 init-ceph: use pkill, not killall, so that c$type.$date is also killed
ebc3136 mon: fix mon injectargs
0deb520 mon: fix null pointer ref on connection
3955dd1 crush: fix grammer to parse hash
298a2d8 msgr: lockdep found some not-actually-possible bad dependencies; they've been removed to make it happy
2433250 msgr: Add at least a little documentation
82af707 msgr: Remove noisy debug output.
15f05d4 msgr: discard_queue now removes empty pipe queues from endpoint's map This prevents bad pointer dereferences
eb371aa msgr: Cover qlen with a Spinlock for faster access and to limit blocking
ec2720c msgr: That unlock's not in the right spot
2e78035 msgr: Fix a number of locking and deletion bugs. Appears to work.
3a7ad1b msgr: Fix blocking locks and another potential block.
c58f0e9 msgr: rename locks for clarity; move some around to prevent blocking.
0792302 msgr: implement round-robin pipe message delivery.
ec0031b msgr: Remove Endpoint::dispatch_queue and queue_message; set up local pipe and necessary routing code.
c017414 msgr: Add queues, etc needed for message delivery by round-robin pipe
eb1be2b msgr: rename pipe's outbound message queue
2756e43 config: parse 'lockdep' option in .conf
429ac4e ceph.conf.sepia: more osds, lockdep
1eabf8d mon: log error, don't abort, on stray pg_stat notify
0b83b54 osd: set pg_stat.created
4efe6ae osd: respond to query on uncreated pg with empty info; do not create
cfda3be mon: stop trying to create localized pgs >= max osd|device
6743d3f todo
60373a1 osd: fix mark_down on heartbeat_messenger addrs
8882369 filestore: avoid string copy after collection_list sort
0bc006e osd: don't forcefeed bad (large) device ids to crush
5b6ca82 filestore: test xattrs on basedir/fsid, not basedir
4c1f64a ceph.conf.cosd changes
4a98c46 osd: drop old osdmap compatibility cruft
823513f osd: fix decoding for old osdmaps (pre osd hb change)
70d22ba mds: mark down stray connections on reset
cff5512 vstart: add --smallmds option
9bc4922 logger: avoid dup lines when we get behind
9922ae1 qa: add bonnie++ to the workunits
616a655 filestore: limit size of flusher queue
222c6c2 osd: rev cluster protocol to match osd hearbeat change
e0862fd msgr: Only allow one local endpoint; now has simpler, less iterative code!
1ebcebf osd: Now uses separate messenger for heartbeats.
31ebbe5 rados: benching sequential reads can now have a time limit
a0d3b8f rados: change benchmark interface and record objects written/size to osds
ff4e155 mds: debug reconnect timeouts
3d97239 debian: only upload tarball whem building amd64
9bea9d0 logger: use proper format for s64
ee44121 qa: put qa used files on ceph.newdream.net
2f10137 (tag: v0.18) v0.18
a08d961 rados: move librados.h, rados_bencher.h
dc24351 mds: avoid scatter writebehind from predirty_*
e71e361 crush: fix whitespace
f700844 logger: s64, not long
a4257d8 buffer: optional buffer debug output
25e8202 ceph: fix message leaks
f3c83bf init-ceph: optionally copy executable to remote host before running it
7fd1a21 mds: typos *sigh*
e2939a1 mds: Cleanup/doc updates
a010652 mds: Add export killpoints
b6dba80 mds: Add killpoints for mds export
00dbe2b mds: Add mds_kill_export_at asserts. Create and begin documenting doc/killpoints.txt
e439bd3 config: add kill arguments for mds import/export
b709a72 mds: bracket mds journal events with {start,submit}_entry
95ee211 todo
adbd7d8 dropped old aleung mds branch code
714a9af (origin/historic/aleung_mds_security) mon: fix allocation of low global_ids after mon restart
89603b6 test_ioctls: print preferred_osd value from GET_LAYOUT ioctl
54b8537 hash: fix whitespace
fd0195a mds: set mdr->in[n] in rdlock_path_xlock_dentry
378e476 mds: do not include /.ceph in readdir results
7928120 librados: set id in messenger
364e045 rados: read benchmark is asynchronous.
8efea57 Change hump-backed variable names. Initialize data->in_flight!
18b909a rados: pull sequential benchmark into its own function
3d43376 rados: remove iTime from object names for complete determinism
bcbafa6 rados: Handle errors slightly better
6a8bda5 rados: split up function into more subfunctions
b790636 rados: Deterministically fill data, reverse count:time order
1537340 librados: minor comments
ae9edc8 rados: Move variables into data structure; rename to be generic
e328d28 rados: Move benchmark functions into separate file
6250b93 qa: Rename a file for future clarity.
83e2b9c qa: specify test path as argument ot runallone.sh
9b5b0f9 config: preserve argv[0] if appropriate
defeedb qa: test mdstable failures
c280aac todo
8bc7d22 mds: inject mds failure during mdstable operations
5bd7404 mds: log successful client reconnect
77d26c9 sepia: asdf
89beb68 mds: journal/replay rollback on MDSTableServer
6c34e67 mds: track _note_prepared/committed in normal path, too
5c0be5d mds: pass do_eval through to adjsut_subtreeauth
8dd0991 vstart: add [mds.a] section when no -x
75d4ce8 mds: drop requests on closed|closing|etc sessions
beb2fb9 ceph.spec: mostly in line with .deb
4c94d16 object: add missing include
99379f6 mds: ignore reconnect if session state is closed
d66f290 todo
05bd3f7 mds: don't renew caps (or touch_session) on closed session
e66778b mds: less --, more -
cd6f381 mds: update pending_for_mds during table server replay
fd21693 mon: add 'mds set_state <gid> <stateid>'
1ac56b7 mon: avoid mds state update when clearing laggy flag
e6e8f87 vstart.sh: fix -k for mds loading
efe705c vstart.sh: fix -k (cmds init)
3c9fa27 msgr: fix bad unlock on tcp_write error
cf28787 mds: fix replay of hard links
6d10f06 mds: clear session before remove_session
1ee8308 mds: do not eval subtree root during rename_prepare
b62daac todo
83f560c mds: fix client purge crash
bf3cd28 mon: fix use-after-free in mds mon blacklisting
a7e5be7 mds: warn if replay used ino doesn't match session's next
29efb0b mds: fix reconnect race
780ee5a mds: remove dead session request list trim waiter code
3c8defe mds: associate session with connection; clean up
d7364a4 vstart: include [mds.$name] for auth_none
69ff349 osd: don't crash on (and allow) messages sent to self
32c81a2 conf: don't crash if conf file not specified and not found
dad2011 filestore: fix mkfs with no jourhal
16c8c5b auth: change error code when not supporting authentication
ddf47d8 rgw: ifdef out dead code
e648986 auth: set initial values in misc structs
ba9fd9a sepia: no valgrind on osds for now
b580653 mon: allow mds injectargs on recovering mdss
23eaa6d mds: use global_id as key in MDSMap
f35f8fe filestore: don't magically enable journal if ${osd_data}.journal exists
bf58196 rados: kill unused ceph_fsid_set
fec3196 auth: when renewing session, encrypt ticket
6a34c6a rgw: fix base64 warnings (move impl to .c file)
b05e184 mon: only remove_session if !s->closed
beac937 atomic: assert valid ref counts
0b85f09 auth: initialize EntityName type in constructor
bf709f5 mon: fix session ref leak
2cc368c monc: restart auth handshake each time we connect to mon
68b5da9 mds: don't change directory size/rbytes from client cap update
8f38d0e auth: add ull to large constant
8696cd9 mds: fix inode rstat debug output
dda61fe auth: add missing virtual destructors
55d7bf7 osdc: use __u64, not size_t
d8f3c4f mds: do not crash if m->connection == NULL
34a57c1 mds: do not send MMDSMap to ourselves
082aa7c add ceph_fsid_set helper
2cb286f filejournal: use single shared zeroed buffer for alignment padding
9a2606d buffer: add create_static constructor
9a4083e vstart.sh: fix -k
053db04 vstart: fix errors on auth none
c88e60c msgr: rev protocol
85a25b5 auth: fix monclient startup issue
eb295b9 auth: fix client and server side negotiation
d00b917 uclient: replace C_Cond with C_SafeCond
ca5e4dd todo
a845b66 todo
4fab3f7 osd: allow reinitialization of osd journal
30a057c rados: Move array to heap. Prevent segfault when you use too-large a write size
ba8aa58 rados: remove unused paramater, add very primitive read bench in verify step
d4db1ec rados: Cosmetic changes for Sage
5eeb711 auth: change server side negotiation a bit
88377be osd: eval access mode before try_*
cec672d osd: debug pg mode
955351f sepia: valgrind for a while
18bbb8f objecter: be more verbose about laggy requests
ae4e978 msgr: use discard_queue, kill drop_msgs
4a644e2 msgr: don't initiate connect if we keepalive on unconnected peer
6e88d27 msgr: fix possible use-after-free by taking pipe lock during reap
302fc82 msgr: use common helper for reader/writer thread stop and reap queueing; fix locking
760165c msgr: rename report_failures -> drop_msgs
318698b msgr: small cleanups
62ccae8 monc: small sanity check
81fd4e1 uclient: set mode on snapdir properly
09938e8 uclient: assert we have CAP_PIN
3e8e5f6 uclient: always retain CAP_PIN
fcc234a monc: small cleanup
cfd69fc rados: Update stat calculation and display; change to wait_for_safe
a3cb25c qa: We want to stop on errors. Add new scripts.
0669ca2 auth: reuse global_id when requesting tickets
9731313 vstart: fix overwrite conf
fecee16 mon: fix decode authmon stash on restart
709be25 mds: don't crap on !check_from, this doesn't happen with nolaggy
8c6d276 mon: move misplaced parens
aa4e5b5 todo
f50a051 msgr: get rid of harmless valgrind error
40edb9e mon: fail on write error
37145dc monc: fix race/deadlock for get_monmap_privately
a22418b uclient: use Inode::auth_cap to find mds to write back snap cap metadata to
e5ca40d uclient: keep MClientRequest local to send_request
63f75e5 mds: journal open_files based on is_any_caps_wanted(), not is_any_caps()
0736930 mds: don't rejournal files with caps that are unwanted
7e7a79e mds: don't croak on open_files without caps
f3e746d rados: status printouts are now threaded
ca342b8 mkmonfs: cleanup monmap fn arg
531f227 Makefile: include all the headers we need to build
788ddaa config: accept list of possible conf file locations; include ./ceph.conf
75a3c1a vstart: -x to start up with cephx
2acf8b6 monc: fix race/deadlock for get_monmap_privately
9880cad mds: don't try to send mdsmap to clients that need to reconnect
2fb6f73 mds: ignore/warn on late client reconnect attempts
19087cf auth: don't try to read keys if cephx not supported
96b5d97 auth: use user admin as the default user
565448b qa: prepare for a hierarchical test script system
27bc574 vstart: some cleanup
f8b0e54 conf: default to auth type 'none'
1b5bb1f auth: fix compile errors, warnings
2dcdd08 auth: kill residual kernel/ files
a4cc231 uclient: fewer msgs
35e6892 todo
35c3586 put testing ceph.conf's in git
9284e90 osd: print useful mode wait message
c514691 filestore: skip sync_file_range if the full commit has started
ad41e44 mds: recommit after commit if waiting for newer version
946b889 auth: fix mds messages filtering
05fceac rados: fix usage() and -p option checking
1a4557e mds: warn, don't crash, on rfiles/rsubdirs underflow
ebe6623 msg: don't die unconditionally when got unknown message type
0bd9fda uclient: increase cache size
fff600c filestore: flusher thread; commit snaps (disabled)
28f2765 osd: avoid truncate, remove ops we know will fail
c267d25 osd: don't requeue pg removal if already removing
6b6b7e1 todo
a600b2e mds: force rdlock on any snapped inodes
91d10bb sessionmap is an object, not a pointer
dc2d15a mds: fix typo; also only suicide if we have clients
55a29c5 mds: underwater is function of _loaded_ version, not in core version
a86e540 todo
76635a4 mds: If last MDS, suicide on stop rather than entering infinite requeue loop
1848005 osd: do not apply_transaction in finish_recovery
41c176b filestore: don't croak on 0 op usertrans error
6e77d52 filestore: check return values
9c46520 test_trans
a1fb28e filestore: fix usertrans setxattr, print it out nicely
7349d66 filestore: clean up btrfs ioctls; use actual btrfs ioctl.h
48d9957 sample.ceph.conf: include usertrans flag
82df8b5 filestore: make FileStore btrfs ioctl tests more readable
486d696 mon: ignore MAuth message when connection has no session
79c4d2a ceph: default to admin user
d0be790 auth: make ~ in keyring search path subst in $HOME
b36dbd6 auth: auth none encodes global_id at build_authorizer
286553c auth: pass global_id to the osd, mds verify-authorizers
2412a49 mds, osd: call monc->authenticate(), not wait_authenticate()
d8da229 uclient: get keys, build authorizer
16ad7a7 auth: don't display auth incrementals in the ceph tool
4459382 auth: fix global id alloc on peon monitors
c507e3c auth: kill ClientMOnitor, MCLientMOunt*, etc.
fed2831 mon: use g_conf.mon_globalid_prealloc
63f28b9 auth: added should_propose callback to auth mon
688ee61 auth: verify global_id with the one on the ticket
f5dc818 auth: increase max global id only when paxos is writable
b051a2f osd: log misdirected ops; reply with -ENXIO
255e328 sample.ceph.conf: fix btrfs mountoptions
077e9cf auth: distribute global instance id to client
e931ba0 osdmap: clear out old hash distribution code
5301d08 osd: make pgids sort on (pool, preferred, ps)
d9f94b5 crushtool: small fix
407e934 Revert "crush: use spirit classic headers"
a1340e6 hash: small cleanup
63d2008 crush: hrm fix up builder too
28ac444 crush: use spirit classic headers
89d46be crush: make hash function selectable
5779a13 osd: make object hash a pg_pool parameter
2a7e2f2 osdmaptool: test-map-object
1ffdf51 osd: use stronger hash function for mapping objects -> pgs
be33008 crush: no more static inline
575a40e auth: some cleanup, compilation fixes
da08915 auth: manage global id in the auth mon
b2a1c30 osd: This logic is slightly less confusing without the always-true 'full' param
ec28906 mon: don't delete stats when sending osdmap incremental
12482db qa: test subdir mounts
057b046 init-ceph: tell user we're mounting btrfs
4eafc99 osd: send single osd_boot on startup
79c8c60 mon: don't log dup osd boot msgs
3b9ecdd msgr: leave off ss_family when printing
e3900c9 todo
bf63449 ppc: do not copy_in unencoded __u32
d9b5969 buffer: only define _XOPEN_SOURCE ifndef
cd5026c todo
64976b0 mon: make initial monmap epoch match paxos version
587b2a0 mkmonfs: use common_init and parse regular args
f2b2607 don't forget -standalone.git in release checklist
87e4ee3 OSD: Don't repeatedly send the same incremental map update to clients.
8ecf4d0 uclient: set NAME_MAX = PAGE_SIZE
db142df Hadoop: Update JavaDoc and put in new patch file
56a1f5e Hadoop: Numerous fixes. Set bufUsed=0 on a flush to avoid bad rewrites of data Downgrade a warning in IOStream since Hadoop apparently checks for EOF by reading until a read returns -1. Remove some leftover if checks that don't do anything. TODO: Remove something Sage did already.
9ad69bd mount: fix hint initialization for getaddrinfo
b758dcb mount: fix hint initialization for getaddrinfo
28920de filestore: oops less noisy
a80a510 osdmap: fix pps calc for preferred pgs
3ec9de1 osd: nicer debug output on misdirected requests
3a32c23 mds: mark scatterlocks with dirty rstat/fragstat during replay
ee7affe mds: use fnode when replaying journal
1687ce3 debian: gracefully replace lib packages prior to '1' suffix
c643836 osd: kill int <-> pg_t conversions
4672244 osd: convert ceph_pg union to struct
f482600 msgr: encode sockaddr.ss_family big endian in ceph_entity_addr
2a65271 filestore: close btrfs transactions cleanly
3023509 default pid file /var/run/ceph/$type.$id.pid
ad5ade0 auth: fix authorizer in the 'none' protocol case
f4e91c8 vstart.sh: add option to avoid conf file overwrite
574525a auth: set caps to allow-all with auth-none
a4b7dc4 Hadoop: Don't use the local pg by default.
22f3f90 Now passes all unit tests! Changes made to rename and between error codes/exception throwing.
e0da411 Hadoop: Don't throw IOExceptions on extra calls to close
f0e1ca7 Hadoop: f5 e3
ed0f064 Hadoop: Behavioral fixes to CephFileSystem
cd8e369 Hadoop: Various changes to CephFaker; not completed.
6c5445b HadooP: CephFaker now properly sanitizes input filenames.
95d7e5f Hadoop: Update constructor/initialize usage a bit
44fc402 Simplify CephInputStream so that it actually works
321063d Hadoop: Simplify CephOutputStream so that it actually works.
81aca0e Hadoop: Reorder a few things for better safety and fix compile bugs
be6b56d auth: don't wait for rotating secret with auth-none
3f301ac crush: always return a value from crush_bucket_choose
acf51eb auth: fix 'auth none' authentication
f908337 mds: set isvalid in verify_authroizer
320979c auth: fix osd authorizer
3f71207 auth: add mds authorizer
ef1800c auth: search list of files when loading keyring
2746caf auth: allocate authorizers once
2f19cc8 auth: define authorize callbacks for different auth protocols
61216cd auth: always verify auth reply, even if it's length 0
6ae47fa include guards cleanup
0e6ae77 auth: less chatty
c878561 auth: configuratble supported auth type
949c263 todo
e97c152 auth: fix verify_authorize_reply stupid
761f09f auth: use u64 nonce, not timestamp, in authorizer[_reply]
582a8b4 auth: fix service side bug on bad authorizer
2a1270f auth: AuthBlob -> CephXTicketBlob
08fbca8 auth: simplify challenge key encoding
05e198b buffer: make [], hexdump const
6133f02 auth: break client/server challenge calc into helper
9ea4e4a5 auth: CEPH_AUTH_NONE auth and caps working
e98eb90 auth: return correct auth type
8de5de0 auth: auth-none protocol stubs
0717270 auth: redefine CEPH_AUTH_NONE
2f994ff auth: check caps before allowing osdmap, mdsmap subscription
8b22652 todo
3e781bb Makefile: fix lib dependencies
34206c6 auth: some paxos messages require admin user
44bab24 makefile: don't link libm and libpthread with crush
4545f8b debian: fix copyright to avoid lintian check
b279b0f debian: fix -dbg packages
65a9ab8 debian: warn on no args to build script
307382f radosgw: fix man page names, include in package
751ff79 debian: strip, put debug binaries in usr/lib/debug
e0cf00c rgw: man page for rgw_admin
236c7ea rgw: radosgw man page continued
f8fb331 radosgw: rename binaries rgw -> radosgw
5f7951d debian: remove rgw_aclparser from package
b89673b auth: mon does not filter messages that come from mon
5a9cee2 rgw: initial man page
887a347 debian: override openssl warning on radosgw
882e82d debian: update package descriptions, sections
84edfe0 debian: make lib package versions match SONAMES
e38c4f5 Makefile: make all lib versions 1:0:0, fix libcrush
bd41a8d debian: some lintian fixes
44c37f1 auth: filter mon messages according to peer type
2bced02 auth: client requests tickets when needed
8886c03 utime: fix bug when decreasing double
dd0a86c auth: bit less noise
2b4f571 auth: no more state in cephx client handler
031a9ce authtool: print encoded CryptoKey in base64
23161f8 mount.ceph: only return INET addr when doing lookup
168045a authtool: add --print-key, -p option
6c77629 auth: fix mon crashing when filtering paxos messages
606a522 auth: CEPH_SECRET_* -> CEPH_CRYPTO_*
6956532 auth: make ceph_crypto_key match CryptoKey
c44ebce auth: send request for tickets when needed
fe56393 mon: Move full OSD test logic around
8b85704 auth: cephx handler verifies keys expiration
0e11376 auth: don't enforce caps on internal mon messages
6625079 auth: filter mon paxos requests according to caps
2a89ffa auth: get_caps, for MonCaps
2714ef7 auth: keep caps after closing mon session
c4f1af5 osd: break out OSDCaps into a separate file
a8d7b3b Objecter: subscribe to OSDMap updates when paused or full
b137227 auth: parse mon caps
0203ad1 auth: clean up debug output some
979e81a auth: clean up debug output a bit
55875a4 mon: Fix bug that would make OSDMon over-excited about pushing new maps
60c761e monc: less noisy about rotating keys
cd095d8 auth: move auth rotating interaction into auth handlers
6943b4b auth: pass mon caps to the session
24c1c3e osd: fix authorizer verify
c9c3f26 monc: fix rotating keys
68eb539 vstart: debug monc for now
7c75db7 msgr: handle bad authorize_reply gracefully
3ea69d5 msgr: use authorizer, init to 0
eeb4885 osd: simplify ms_verify_authorizer
4c12ed7 auth: move one more type
8fb0537 auth: a few comments
2390701 auth: move most Auth.h stuff into cephx/CephxProtocol.h
bb2bea0 mon: Fix an if so that PGMon doesn't send some reads on to leader
0e84f49 mon: Move fullness checks into OSDMonitor where they belong
89686fa mon: On every incoming MPGStats, check for a full/near-full OSD and mark map if needed.
d0b6e81 uclient: Return ENOSPC if osdmap is marked full
2a3834b Hadoop: Add buffering to CephIOStreams
4e9e17e Hadoop: Add preliminary TestCeph code. It fails a lot.
4739f2c Hadoop: Add the CephFaker source.
9298535 hadoop: minor cleanup edits
e85855b auth: initialize protocol field in AuthAuthorizer
eb242e5 osd: don't try to build authorizer for connection with mon
48527c8 msgr: put AuthAuthorizer on heap, set protocol field during connect
ab4e687 mon: initialize vars
394b3cf auth: filter mds messages according to remote peer type
4f4c071 osd: fix log messages
513ae17 auth: osd parser to accept 'pool'
cf5fbb3 msgr: include authorizer_protocol in connect header
5575ce6 auth: simplify AuthClientHandler interface
2780b8d auth: simplify part of initial auth handshake
f23c5ab auth: move cephx server side into cephx dir
ac5194a auth: better encapsulate cephx protocol
da062d9 auth: add exec caps
a64e55e objecter: fix handling when pgls returns error
55f92f7 auth: return bool from build_authorizer
8cedb16 auth: cleaner about timestamp change
e44aa1c utime: add != operator
7c2afee auth: merge envelope, cephx handshake
44c73b1 auth: remove (unused) addr field from authenticate, ticket
6183e12 auth: kill some unused AuthClientHandler fields
3e0675c auth: kill client side timeouts
101148a auth: kill dead code
15d776e auth: enforce read/write caps for osd_op
c671c44 auth: fix pg_create filtering
cb0c937 auth: filter osd messages according to their peer type
61bd2ee auth: kill CephXPremable, put trans_id in msg
84483b9 auth: nicer msg names
10c8b04 msgr: be quieter
019e744 uclient: implement ms_get_authorizer
81d362b auth: fix up ms_get_authorizer
88a65d8 auth: call the protocol CEPHX
c4e1e3b auth: CEPH_PRINCIPLE_ -> CEPH_ENTITY_TYPE_*
8679ec5 msgr: define C ceph_entity_type_name
855d8ca auth: kill unused MAuthMon[Ack]
7d9842c auth: AuthLib* -> KeyServerData::Incremental
7bb6922 auth: list secrets using the second interface
328973f osd: fix deadlock on initialization
b204f6e auth: auth class list operation dumps key
4cf754e librados: create objecter before other initialization
6850433 auth: authtool dumps the key either
b953da2 hexdump: can dump to a buffer
cf744cc auth: fix uninitialized var, bad interface use
b887cb7 ceph: add missing include
7c2bd6a auth: rename Keys* classes
ba7aac2 auth: some cleanup
d334ef8 auth: clean out old authorizer cruft, unneeded AuthContext
9f09331 authtool: useful error/output msg when creating new key file
085ff62 authtool: print key, too
332b9ae Makefile: include armor.[ch]
65c9689 todo
dacfb4e mount: include all A/AAAA records when resolving host name
aae985d auth: verify authorize reply on connect
fa5671c auth: authorize keeps state
6955f53 monc: simplify authentication state
31b6f46 auth: fix Makefile
caeef31 auth: link AuthServiceHandler to mon only
dbde927 auth: kill useless AuthServiceManager; rename file to AuthServiceHandler
b7263ca qa: add dbench
fa77429 auth: add osd caps parser
0b26194 osd: assert apply_transaction success
2109a91 auth: get rid of AuthorizeServer
1b4db2f todos
dac3a8c (tag: v0.17) v0.17
413340e auth: fix vstart.sh
74be02f debian: don't try to sign packages; it fails anyway
2d0a8b2 auth: send caps to principals with the ticket
6668669 mon: log each client mount
e555cd3 Revert "msgr: be a bit more verbose during shutdown"
3b6ed5e osd: mix preferred osd into placement seed
c73c666 objecter: call renew_subs when appropriate
a083596 osd: call renew_subs when appropriate
5d672b1 vstart: build osdmap of correct size
6e43fa2 osd: fix pgid parsing
b2a81e9 monc: cleanup stray sub_want()
8f51c8c mon: semireliable message push from mon to mon clients
0a83ec8 qa: add pjd test; change default monhost to cosd0
a5eb175 mon: fix use-after-free in session removal
c0c6600 monclient: always subscribe to monmap
13287e4 mon: fix up some uninitialized memory
bbba6be monclient: show when hunting
87b99f4 Hadoop: Move CephIOStream native methods into CephFS/CephTalker
a6f2a3a Hadoop: Move debug output into CephFS, preparing for CephIOStreams
e0e2c4d libhadoop: Convert CephFSInterface to match the proper Java classes.
c1cede1 Hadoop: Newly-generated JNI header files
f958d57 Hadoop: Now wraps all ceph calls in a CephFS ABC with a CephTalker implementing
9e08f0e Hadoop: Now also uses their logging framework
9bec695 Hadoop: getFileBlockSize has an unclear contract, but it's followed better now
e114fc9 Hadoop: clean out unused functions.
5277aac Hadoop: Better documentation between Ceph[Input Output]Stream and libhadoop
8d00264 Hadoop: Better document interface between CephFileSystem and libhadoopcephfs
289028a libhadoop: Remove some silly asserts and fix a minor memory leak.
bb6e112 Hadoop: Remove unnecessary imports.
67e5d49 Hadoop: Remove some unused data members/methods.
3228ab6 hadoop: Moving back to older use of debug.
2cc3cc1 Hadoop: Fix tabs to be 2 spaces.
340c90e mon: Remove bad FIX_ME comment
0f4d70d uclient: Return an error if you open a non-dir via opendir
3f182b8 monclient: start with hunting=true
78e3bdd osd: send boot message if we get marked down
794e2a3 Makefile: 'core' rule to do just the core daemons, tools
16ef647 sample: rename sample ceph.conf
7da385d mon: show election quorum info on 'mon stat'
2219956 mon: defined struct for MMonSubscribeAck
cd2b37b todo
600e550 mds: fix stupid float conversion warnings
f23530f auth: fix connect response
bdc218e wireshark: update with latest version, some other fixes
15fc0c3 mon: make 'mon add ...' work
46e32b0 auth: enable mds again
74a8f0c auth: mon does not deny connection without auth data
aa819ff mon: use master key for inter-mon auth
3ce86d0 mon: clean up 'mon ...' command processing, add 'mon getmap'
46d0f9a mon: set initial timeout on sessions; clean up a bit
6b6a674 mon: fix warning
a069318 mon: PaxosServices needs virtual destructor
064d00c mon: small cleanup
e7315e4 debian: bail out on error during package build
235ef86 Makefile: include client/ioctl.h in tarball
d7f9d19 msgr: kill dead code
a0fa5b0 uclient: pipe down about connects
39d12a9 msgr: add version field to msg header
b3d09e0 osd: use ms_handle_connect to resend mon messages
bd81038 monclient: ignore resets on non-current mon
df0c52a mon: use connection hook to resend mon requests
7e5d162 msgr: add ms_handle_connect callback
d8f771e msgr: drop extra arg
7cc97f3 msgr: change ms_handle_[peer_]reset prototype
a90e63c msgr: put peer type, addr in Connection
83a25c7 todo
5d33a74 msgr: simple exponential backoff, with tunable initial and max delay
329f5c6 msgr: simplify policy
78dcc39 msgr: kill unused ms_handle_failure
7d1e3b9 mon: MonmapMonitor now sends responses to commands and doesn't double-add monitor addresses.
508e047 mon: use send_reply for pool ops; fix msg leak
e71255b mon: share new osd maps with 'random' osds
4c1cc01 mon: send osd map if MPGStats sender has an old map
33cbbd9 mon: clean out old crufty cluster shutdown code
c9e053a mon: send MOSDPGCreate from all mons, not just leader
dda3426 mon: oops, make PaxosServiceMessage match ceph_mon_request_header
8c6896f mon: kill some dead code
53efdb9 mon: use send_reply for MPoolOpReply
afa1578 LogClient: Add a mon data member and mon selection code.
d3ebec3 MonMap: Remove pick_mon() and last_mon data member -- doesn't belong here
008031a monmap: add a utime_t created data member
3ebd645 uclient: Accept -1 in set_default_preferred_pg to go back to non-local writes
e2e8047 mon/msg: Remove MMonAdd; switch MonmapMonitor to use MMonCommand
6ddbe14 mon: Replace old question comment with explanation comment
58111a6 mon: Remember to delete the Message when done
aa3ab0b ceph: follow monmap changes in -w mode
0d9bd68 monmaptool: use generic MonMap::print methods
97b76ff mon: store latest monmap is paxos-compatible format
72f68c9 mon: don't trim cluster sessions
b67b1d9 mon: route osdmaps sent by mon properly
d1c51b2 mon: kill unused MOSDGetMap
78759f9 osd: stop using MOSDGetMap
89d4d12 mon: kill MMDSGetMap, clean up MDSMonitor map sending code
aa72a52 mon: kill more dead code
ca633c6 monc: clean up mon pick code slightly
e6f8229 mon: kill dead faking, bcast code
6d66b43 all: change disk format numbers
3f95cef mon: Remove invalid assert; fix mon_type constants.
ed70b5a mdsmap: add a last_changed utime_t data member.
535072b mon: Add MonmapMonitor to whole system
4651dc1 mon: Add MonmapMonitor source.
e8dd447 PaxosService: Add some function documentation.
1053856 message: Add a new MMonAdd message type
b3dfe6e Hadoop: Set preferred_pg after client mounts
7e08ea8 uclient: Debugging output
02af096 mon: use reply_request in pgmon pg stats update
56f0814 push_to_kclient: no -u to cp, the timestamps may be ordered
abd6254 mon: new, improved monitor request/reply routing
c3916c7 mon: create session for all incoming monitor messages
cd8eb72 todo
31ab233 byteorder: more typos
1d95c8f qa: start new qa dir, add some client tests
119a73e comm: monitor dispatch should check for closed connection
419e1b7 byteorder: braces!
a5a7c55 osd: check is_dup earlier; do not set osdop version if it's a noop
8d146b5 auth: monitors authenticate themselves on outgoing connections
4eebe54 osd: use sized int32 in osdmap incremental new_pg_temp
4f4a231 msgr: reset session state on lossy_tx fault
a04ec62 byteorder: include endian.h for good measure
5bb047c Revert "byteorder: properly detect endianness"
a33441c byteorder: properly detect endianness
5a0c6fa osd: fix up handling of dup PG::Info
208dc55 mon: fix session close races
fa4e2a0 objecter: don't send duplicate onetime sub requests
ddb359e osd: don't manually set rank addr
94f9905 msgr: include port when printing sockaddrs!
008216b libceph: move to main dir with other main .cc files
de211f3 monc: no msgr bind needed
0a34d60 libceph: no bind
416cd96 osd: use fast_fail() policy to connect to osd
71d5bcf msgr: do not require bind() on client apps
aeacbe7 msgr: clean out dead connect-side bind code
0059482 mds: validate file layouts on file creation, setlayout
1817888 ceph: add ceph_file_layout_is_valid function, minimum stripe unit
081cf36 filestore: be less excited about btrfs version
e53fbdf mon: take lock in ms_handle_reset before adjusting session map
74cbc3e msgr: no need for sockaddr_storage encoder
4c6f0e9 messenger: do not bind socket before connecting
d3973ae auth: few session creation error cases handling
ab1bc91 messenger: do not bind socket before connecting
1f22d70 version: git rev-parse, not git-rev-parse
27281f9 auth: fix several issues with system init
904d903 mon: fix missing lock, avoid trimmin sessions with empty s->until
3bf149d utime_t: add is_zero()
1c7e251 mon: allow {getmap,getcurhsmap} <epoch>
0a8dd93 crushtool: show zero weight items in crush map decode/dump
5628240 crush: zero weight items get 0 length straws
8176472 crush: silence (bogus) item uninit warning
ebca3de push_to_kclient: fix dest tree check
529f5b8 msgr: fix operator<< for sockaddr_in, too
bde055a msgr: uninline tcp_{read,write}
935d41f msgr: fix uninitialized memory on sockaddr_storage print
8438eea auth: authorize on the connect message
8e55d56 todo
b859b38 crush: reject on empty bucket (and avoid divide by zero)
ab29d04 Makefile: drop src/kernel/* from Makefile.am
74ea51b uclient: pull ioctl.h from kernel tree to out tree
0d7d2e1 uclient: fail gracefully if the mount fails
e6bfbec script to push shared files to kclient repo
c9b5eb7 debian: don't build ceph-kclient-source
538e10e kclient: moving to linux-ceph-client.git
ed08416 move tests around
1d4bc1c conf: also skip utf8 encoded characters that are not printable in current locale
4c32af6 Hadoop: Add the patch and a Readme file.
335cd8f debian: upload tarball before .deb build
ae5bf1b debian: name unstable package version ${vers}git${stamp}
53ca2a8 (tag: v0.16.1) v0.16.1
1e51d19 rgw: fix build errors on i386
14ad6cd Makefile: include buffer.c in tarball, kclient package
bfc18d2 rgw: encode time_t, size_t using fixed-size types
a7c0f56 test_ioctls: add missing open arg
bc9b863 kclient: include fs/{Kconfig,Makefile} in patchset
90fee8b mds: Don't perform proper rebalancing if set to thrash
6f7043b mds: rename do_rebalance to prep_rebalance
165a729 uclient: Only connect to offload targets if the mds goes down.
3a3ccd8 kclient: checkpatch cleanups
522f570 mds: fix default layout settings
38dbaa5 (tag: v0.16) v0.16
e678fbc msgr: authorizer get/verify callbacks
faa5fb5 msgr: get_authorizer hook?
56f45b4 objecter: Session type
8b04f9a auth: authorizer for osd
439ee9e uclient: fix null deref in unlink() on null dn
854d664 todo
5faa851 mon: fix offload_targets
5a9d225 uclient: Put some guards up around the Inode->cap map accesses
12aa62f msg: handle MMDSLoadTargets
88c81a9 mon: Handle MMDSLoadTarget messages
42ab72b mds/message: MMDSLoadTargets should use a set<int32_t> not a map
7391e22 mds: Pull my_target checking out into a function targets_safe
3e36d32 mds: Don't do rebalancing until the target mds' are in the MDSMap. This will break rebalancing until the monitor code to add targets is in place.
74c1f84 messages: Add a completely useless and unused MMDSOffloadComplete message.
f250cf2 mon: Put in placeholder code to handle MDS target messages
fd5623f mds: Break apart rebalance function into prepwork and offload
2f36c62 messages: Add an MMDSLoadTargets message for mds->monitor info.
09f060b Message: add constants for MDS offload messages, and clean up the alignment
0748dd6 Check for invalid layout input in uclient and MDS, replace with sane if needed
3a3c099 libceph: Actually implement ceph_get_local_osd so that libhadoop works!
8a11a56 auth: separate authenticate and authorize messages and handling
e043a46 kclient: add missing include for in[46]_pton
0ddaad3 msgr: use getnameinfo to format socket addresses
dd732cb use sockaddr_storage; and some ipv6 support groundwork
17ac2ce auth: cleanup
88bf9ef auth: fix authorize
18b3bfc kclient: don't choke on missing snaprealm
dabc0dc auth: pass secret_id for rotating secret, use it, some other fixes
4d20619 kclient: no system.* xattrs, yet
9f0e5b0 kclient: kill generic_*xattr calls until we implement xattr_handler
3c7c817 kclient: clean up module startup
7dffced kclient: fix ra_pages setup after bdi initiation
c8fa11d kclient: single thread wq for invalidate, truncate
76cdbb5 kclient: use KMEM_CACHE macro where possible
3c228f0 kclient: mark initialization functions __init
960d385 auth: fix system init
864aac0 kclient: fix maintainers record
8c62f05 kclient: backport sync_page_range change
5b41c13 todo
6a57711 kclient: add to MAINTAINERS
34439e7 kclient: sync_page_range gone in 2.6.32; use vfs_fsync_range
a3dc335 kclient: current_is_pdflush() gone in 2.6.32
6350e84 todo
d67381f Revert "kclient: add smp_mb to sensitive bitops in msgr"
4ea86ba kclient: use smp_mb in place of spinlock for testing flag bit
fe11285 kclient: add smp_mb to sensitive bitops in msgr
c30d453 uclient: set new file layout to 0, which lets mds choose its default
ca96595 auth: try to authorize with mon after authenticating
860dca7 uclient: Use much saner/not insane defaults for layout settings
e3e9116 auth: librados requests for osd and mon keys
97ef084 auth: don't wait if already authenticated, fix unitest
bce85f1 kclient: debugfs fix; better osdmap debug output
adb48e2 kclient: default pg_preferred to -1
37f42d6 auth: mds gets rotating secrets
95c4710 mds: fix layout typo
15d45e7 kclient: include new files in patch set
cc9915a osd: name args in ceph_osd_op union
21df30f document data structs; kill ttl_ms in caps msg
25bba5d mds: kill old rdcaps_ttl business
fa884ec fix object_stripe_unit -> stripe_unit
272d462 auth: init mds keys on startup
4874b19 kclient: try kmalloc, then vmalloc
86f225b kclient: audit inline
59fc0e2 kclient: more fixes from akpm's review
c064c44 uninline some header types
69322e7 auth: fix osd init sequence
8dbf358 kclient: parse updated mdsmap
6b68faa mdsmap: another unsized int
bc91919 mdsmap: use sized int type
4dbb6fd todo
dc6d0d9 kclient: reorder cap ops a bit (wrt invalidation)
4b2e65e urandom: fix fd leak
2c9ad41 auth: authenticate in the x-env protocol
52f038e Hadoop: Set the local osd to be the preferred osd for all writes.
ecc4bd6 uclient: Add methods for setting a default preferred osd.
58fb071 mds/ceph_fs: Add a preferred argument to ceph_mds_request_args and listen to it
6ed33d5 mon: create lpg_num (not pg_num) lpg's
462dd4f cosd: 3 monitors
1010c20 uclient: open mds sessions to export targets
ce87f0f mds: add export targest to mds_info_t
4fa1ba7 osd: rev disk format
a858ffa mon: create localized pgs
6af69e0 filestore: make collection dir have better name; move coll_t type around
3c315e3 objecter: send renew sub from maybe_request_map()
6e76160 osd: make pg_pool_t print clearer
b1b612f uclient: Return EFBIG rather than EBADF on too-large file sizes.
78648b2 kclient: bug on bad msg in msgr
56affd7 filestore: use btrfs TRANS_RESV_START ioctl if present
db66e19 osd: make shutdown msg higher priority
4fe2e6a msgr: be a bit more verbose during shutdown
10e4b6e uclient: get_local_osd() to find an osd with the given ip
7755f3c kclient: fix generic xattr calls
281acde kclient: user.ceph.layout readonly for now
22c146f osdmaptool: more usage
a8ba448 config: allow object replication from 1-10 (instead of 2-3)
272128f kclient: check xattr readonly flag on setxattr, removexattr
412eefb kclient: add helper to set allowed xattr prefixes
4ac459b kclient: distinguish file vs dir xattrs; move the getvxattr_cb under i_lock
095a16a auth: fix monclient deadlock
286f018 auth: fix keys loading via ceph tool
0bdf90d auth: common_init should not always init keys
f9689a2 kclient: do not recurse into truncate|invalidate pages
467926f uclient: Pass in the right variables to update_inode_file_bits!
4b819b9 uclient: Rework update_inode_file_bits to mimic kclient; better debugging
c7e248b uclient: Pass uid/gid from ll_create to _mknod Add some debugging outputs
e23dd8a uclient/filepath: Update filepath's empty() function and switch make_request_from_Meta to use that
ad3a7be fuse: have FUSE enforce permissions
797d50f uclient: Update ctime one setattr changes
11b5cb3 uclient/objecter: Add max_file_size checks and an accessor for max_file_size
aadeccd uclient: make_request_from_Meta will now create the path if none is given
b12ef82 uclient: Add cap dropping to setattr.
e7697b9 auth: use key in keyring getting session key and ticket
b195ce0 auth: fix decode_decrypt
ea56e80 mds: update mtime on truncation!
ce5c138 auth: don't run over g_conf options when setting them
e554ea0 auth: use global keyring, entity name
9acb199 conf: don't run over g_conf options when setting them
5e9707e auth: cleanup get session key
e92662b auth: generate meaningful service ticket
88bd97d auth: rename authenticator -> authorizer
238c984 auth: move hexdump into a header
1342eac auth: monitor reads initial auth state
6d39107 auth: encode/decode functions use magic
8848973 configure: kill more commas
2f50017 configure: no commas?
1d9f161 configure: whitespace
dfa34db configure: fix libexpat1, libfcgi checks (again)
6e13ad2 auth: protocol fixes, keys tool changes, keys init
1a696b6 mds: make the directory commit priority be low(er than journal)
168edb8 objecter: optionally set priority on ObjectOperations
7ca3fd0 mds: do not attach mdr to NULL session
d0c4c30 auth: set up entity name on startup
291916d auth: get rid of stab keys handler
1c5084c auth: reuse authorize request handling for service tickets requests
a2ae9e7 auth: start integrate keys_server with authentication
d5b79be auth: move keys_server to the monitor
0d2a3f1 auth: move session_key to the AuthHandler
bc691a9 mon: put auth_handler in mon Session
3312f34 auth: small cleanup
a5322e2 mon: route all auth traffic through authmon
eadb9ec auth: fill out server side authenticate steps
c9ee839 auth: build an almost real mon ticket
b04667e osd: session skeleton
6f79fb2 auth: break out authenticate request
315da40 auth: add missing file
6c8d6a5 todo
fcdfaa2 mds: warn on dup inodes; don't crash
6609779 auth: monclient creates session asynchronously
8d71c47 objecter: remove dead code
e5f7a89 librados: pass resets to objecter, with proper locking
56067bd mds: pass resets to objecter, with proper locking
92e6c42 uclient: pass reset events to objecter, with proper locking
0c92b63 objecter: resend mon ops on handle mon connection reset
a963e51 mds: fix inode load existence check
d9f94b2 todo
2f1e6a9 uclient: don't readdir first frag on opendir
a9eb97f objecter: fix uninitialized variable last_seen_version
cb1b7e7 librados: fix dispatch
aaa6e40 auth: fix deadlock
8ee96d8 auth: monclient deciphers rotating key
6b9f780 uclient: Better fix for insert_dentry_inode to work with pre-built Dentrys.
a905078 uclient: get_or_create should return out-of-date lease Dentrys too
c57f0d0 uclient: encode_cap_releases shouldn't update caps if inode isn't in the cache
e46c720 uclient: First attempt at preemptive cache dropping in the functions.
df48cad uclient: Don't *always* set_dentry_wanted() on MClientRequests.
99c58ba uclient: Only make the MClientRequest in send_request itself. Add a few more functions to MetaRequest so we can use those in choose_mds.
5fd3cf0 uclient: More debugging. May want to back off the inode printout to not include caps_issued.
425dcc1 uclient: changed link and insert_dentry_inode to behave with pre-built dentrys
f3c78be uclient: Attempt preemptive cap dropping on mknod.
3ea4fbf uclient: dout statements in new functions.
4acdb05 uclient: Fixes for get_or_create
f8c0285 uclient: Functions to create Dentrys prior to gettin caps from mds.
2a4a364 auth: typo
ac934bf auth: load master key on startup
eed8bc0 remove extra whitespace
8b4c05d kclient: fix bit test logic
73cfce7 kclient: use pr_fmt to prefix module name
f255bbc auth: osd loads rotating keys on startup
949f1bf kclient: prefix frag_ functions with ceph_
c6faf6a kclient: kill out_qlen
1744628 make inline string functions non-inline
c2b4dc3 kclient: whitespace
ab3c421 (tag: v0.15) v0.15
c6e5d6e Makefile: include ioctl-number.patch
1f1ec71 msgr: don't print source in msg debug output
13e6f34 todo
48866c2 monclient: change pick_new_mon -> reopen_session
88fd161 monclient: avoid dup subscribe messages
d8c8da8 osd: subscribe to monmap
cf3192d todo
0a338c1 kclient: fix le encoding bugs (yay sparse)
f5b46bf kclient: clean whitespace
ee04c56 kclient: include object name in DATALOC ioctl result
41a169d auth: fix merge
4963bbd auth: fix deadlock
1af7303 kclient: include ioctl-number doc file in patch set
c0c3444 kclient: no need for static ceph_buffer
bf4cf7d auth: entity can request rotating keys (in progress)
0f22324 mds: fix mds standby map handling
84c1a14 mon: consolidate sub request msgs; cleaner api
98e6da6 mon: allow sub for monmap
c2c9ecd mon: fix up subscribe infrastructure to use msgr connection for sessions
f65d127 msgr: pass Connection* to msgr error handlers
35dc047 mon: fix client id preallocation
9a45979 monclient: send a single mount request
316f716 uclient: use ref in constructor for MClientRequest
1a8d910 auth: more than 1 rotating key per service, key id
2c54f8a authmon: distribute rotating keys
5dfe8fa kclient: two msgpool modes: blocking (ala mempool_t) and !blocking (strict)
84aec7d kclient: fix symlink kmalloc under spinlock
71b2ee0 strerror -> strerror_r
6f00f11 kclient: rename msgpool type
c517d7f kclient: use msgpools for osd requests, replies
ebc6e6c uclient: fix null pointer ref
6194849 kclient: fix up ceph_client init error handling
f0f10d6 kclient: fix patchset comment
d0efb5a kclient: fall back to WARN + new allocation if msgpool is depleted
3be2b62 kclient: use msgpools for other monc messages
d1ec687 kclient: add back msgpools
dbfb0f0 kclient: add GET_DATALOC ioctl to get object location, osd addr
35c2966 auth: authmon incremenetal can hold rotating key
e60417c auth: keep keys in single data structure
7d9b858 auth: some authmon fixes
3fa407e uclient: _removexattr should be naming the xattr to remove!
9843d1f uclient: Add functions/data members for preemptive cap dropping.
271de28 MClientRequest: Releases should have a constructor
3702230 uclient: First pass at encode_cap_release function; not used.
3393d55 uclient: Move the MetaRequest to MClientRequest into its own code, and cut out the payload encode/decode since MClientRequests are now made from MetaRequests.
33c50ad uclient: The basic passing mechanism is now a MetaRequest. It seems to work.
04f4911 uclient: Make the uclient work properly with the new MetaRequest structure.
ae16b1c uclient: MetaRequests are going to be how we pass requests around; repurpose them so they don't require an MClientRequest.
fabaeb9 Hadoop: Minor fixes and style changes to satisfy Hadoop's FindBugs system. Remove a few deprecated methods.
5f78fc9 auth: add authmon handling
24c84ab kclient: fix osd request kicking
b2c7655 mon: fix bug with client id assignment of -1
28b2df3 kclient: avoid no-op dir cap release when no dentry lease
1d8a91e kclient: make mds console msgs consistent
b780d54 monc: pick monitor before sending initial mount
7e17e27 uclient: implement basic I_COMPLETE support
b53f9a4 uclient: factor out command cap issue checks
9e3f6fd mds: minor comments
310af17 kclient: move some inode update code inside i_lock
ee0f158 kclient: use shared_gen, not cache_gen, for I_COMPLETE tracking
0f892e3 todo
84322a7 auth: define header in makefile
364b2a2 auth: add missing header file
e9f480d monclient: small cleanup
c7b904e todo
81bb175 kclient: fix console msg
131fa21 kclient: move caps stats into client debugfs dir; fix error checking
2cc5826 kclient: put fsid in debugfs dir name
f11918b mds: make parallel_fetch work with hard/remote links
69f13a2 cosd.conf: fix date stamp
50f3ee4 msgr: fix null deref setting message connection ref
8719866 auth: rotate rotating keys every time interval
8194e9f auth: add missing lock
71c1f4f configure: don't link expat, fcgi to everything
3d63b7c Makefile: fix mode on installed headers
5ba03ef auth: authorize
decde38 msgr: change dispatcher interfaces; some monclient cleanups
9bd52e7 auth: new improved mechanism works now
cca45f3 uclient: do not do locking for 'atomic' writes
86bf798 auth: move code around, making some order
f82e57c auth: comprehensive overhaul (not working yet)
147f25a mds: flush log in caller(s), not scatter_writebehind
ac49ccc check_mds_request_latency: fix parsing for current debug output
a57a8eb auth: authorize response handling
54aa0b2 auth: interface adjustments
af1c653 Hadoop: Final submission prep. IO classes should be public, updated Javadoc, and added license grants.
746bb5e Hadoop: Remove old reference CephFileSystem material.
c76574b Hadoop: Change to work with trunk rather than .20; update documentation.
784bcc2 Hadoop: Remove unused CephException class.
244692b Hadoop: Changed debug printing so it doesn't construct useless strings. Removed some commented-out code.
9c9404d auth: authorize stuff
c2b9664 uclient: fix warning
e5b1d5b kclient: set/verify seq in renew caps messages
70ca9c9 uclient: fix cap renewal
61d52a5 mds: include original seq in renew caps reply
83c5d10 synclient: fix bad leading / on play ~ prefix
52a99fa armor: make armor encoding match libssl's base64
4fddaad debian: fix radosgw package
10096bc msgr: be slightly smarter about corking on partial msgs, acks
b40b64d msgr: make ack le64 to match seq
d205109 kclient: fix format strings for entity num
933320f logger: fix avg calculation
cc9de15 auth: refactor interface with monclient
0888b5f mds: log latency of _first_ (unsafe) reply, not safe
40f83e8 uclient: and reply cond guard; make forward _always_ resend request
335ea1d debian: create radosgw package
3b0a6c9 configure: fix radosgw conditional compilation
6b9d6de kclient: sparse endian fixes, fsid cleanup
122c612 kclient: fix checkpatch label warnings
c7987d7 kclient: avoid short reconnect loop on connection close
235914c msgr: kill per-msg protocol version values
1917c2e msgr: check protocol version during connection
5f3b046 kclient: allow sent msgs to be revoked from a connection
c0cc24c auth: remove redundant delete
d2deea8 auth: multiple tickets handling
806f73b auth: refactor MonClient <-> AuthClientHandler interface
78b005b crush: fix long line
86addcf kclient: whitespace
df985c4 mds: avoid client lookup by using per-connection msgr state
7026e35 msgr: per connection state
70a098b kclient: kill ceph_fsid_t typedef
c2b6534 kclient: checkpatch cleanups
035b08f kclient: update Documentation/ioctl/ioctl-number.txt
69f84d1 todo
1ec1e8d (tag: v0.14) v0.14
b985882 kclient: remove msgpools for now
3046334 init-ceph: fix pre/post commands
deec333 auth: stop auth sequence after getting the tickets
cffa5b8 kclient: msgr init cleanup
add1582 kclient: clean up keepalive send logic
fe8765e kclient: msgr zero in ceph_con_init
2f65caf kclient: kill msgr WAIT
900215b todo
0767154 uclient: debug file_max
5dded5a cfuse: disable -d (fuse debug) by default
cc24585 mds: bump file_max to powers of two
f2e3692 auth: fix session key, encode_encrypt using templates
0bbc474 auth: cleanup
7f3573b auth: redo authenticate request/response
4ea8d97 Hadoop: Refactor open to open optimistically and then check for errors on the return code and cached data. Also fix a bad return in CephFSInterface from the last commit.
1026691 Hadoop: Some changes in order to reduce the number of messages sent on non-existent files
4347f4a Hadoop: Return a couple of unecessary isX calls.
b510ad5 Hadoop: Fix an apparent bug and remove an unnecessary conditional. (the cwd can't be set to "".) Also replace references to "/" with root.
11f5197 uclient: Add better in/out dout messages to a few functions.
5673148 auth: fix decoding
9e95265 auth: consolidate messages, rename
81a2efa auth: rewrite second authentication stage
d0cde49 auth: rewrite messages encoding/decoding stuff
c460921 auth: some more fixes
b95c290 Makefile: do not install init.d script at all; let packages do that
31946b1 Revert "monc: hunt for new monitor on failure; cleanup interface"
7a6f114 mds: only move ScatterLock to MIX if WR is wanted
b92f5cb uclient: debug open()
43bcf1b uclient: add 'dropcache' synclient op
3cd5d73 uclient: use objectcacher->is_cached to make readahead smarter
359f258 objectcacher: add is_cached method
5c664ae uclient: Fix in the readahead logic
6f11678 Hadoop: Sets default block sizes according to a config property; defaults to 64MB
3f78e66 monc: hunt for new monitor on failure; cleanup interface
252aaec monc: clean up mount code (not everyone is a client!)
b357486 mon: remove obsolete osdmap bcast
d05c729 mon: remove obsolete mds map bcast
c6ddbdb monc: explicit init(); subscribe to mdsmap on mds
8b680a3 auth: some more compilation fixes
8a215c8 Makefile: do not install init.d script at all; let packages do that
6137988 auth: some compilation fixes
72ccd20 monc: hunt for new monitor on failure; cleanup interface
52be66c msgr: small cleanup; hexdump code (disabled)
217533c msgr: small fault logic fix
ca7af73 Makefile: add missing MRoute.h
421e7ab mon: fast assignment of client ids
4462bc5 uclient: fix warning
8e202cc mon: use client_t
df45d25 wireshark: update patch to latest wireshark svn snapshot
cbd2ac5 wireshark: keep plugin code outside of the patch
43426dd uclient: tweak readahead logic
6f7bbdf kclient: embed ceph_connection in ceph_osd
642408f kclient: send subscribe along with mount request
f456a01 mon: no need to send osdmap until client asks
18d9eb5 kclient: use single ceph_connection over lifetime on monc
81e0bd6 kclient: msgr fixes to use proper connect_seq, avoid unnecessary faults
3309f98 kclient: simplify con_open/close interface a bit
f8b8069 kclient: fix unzeroed pages after readpage
1073c04 kclient: take inode ref on first WRBUFFER cap ref in set_page_dirty
7043dec kclient: fix bug in ESTALE handling in mdsc
dc73123 mon: oops, some client_t fixes in ClientMonitor
8ab87b2 auth: adding missing file
1b583a7 rev disk format
5bc0dea msgr todos
a7fbab9 mds: use 0 for layout defaults, not -1
85aa242 msgr: fix entity_inst_t comparators
db49435 kclient: learn address during connect handshake
218e4ed msgr: detect rank addr during connect handshake; clean up addr apis
4330037 msgr: include my addr AND socket addr during connect handshake
398d221 libceph: return 0, extern "C"
3b92ee7 uclient/libceph: Framework for letting users specify file striping and object sizes is in place.
0e812e6 mds: Handle the client requesting special stripe units, counts and object sizes.
65f2d4a libceph: add ceph_version()
a1d5533 debian: add lib{ceph,rados,crush}-dev packages
1c1addc ceph: include version in ceph_fs.h
5608be0 debian: fix lib* packages
3e67dd8 kclient: whoami is __s64
8d64e4d uclient: use client_t for client id
a2c869c mds: use client_t throughout
27f6aa3 msgr: 64bit entity name num
7bb5895 kclient: fix osd request kicking
a790820 Makefile: force init.d script into /etc/init.d (not sysconfdir)
d415a80 man: fix mkcephfs man page
1e4c2a7 auth: handle keys request, cleanup
f445219 uclient: implement CREATE operation
4ce2692 kclient: kill msgr->parent, dead msg pool code, prepare_pages arg
5901023 kclient: osd restart fixes
b7a9da1 kclient: set prepare_pages for osd client (der)
738da1e kclient: fix request kicking crash
79b2740 kclient: cleanup old FIXME comments
ba2acd5 kclient: improve osd error handling
1ca9177 kclient: reuse osd struct when possible
88c788f kclient: make mon hunt explicit; note in kern.log
63aebff mon: actually send updates to subscribers :)
cdc4570 kclient: avoid get_random_int(), it's new
ad0c753 kclient: pick new mon on _fault_, not peer reset
6e0e406 kclient: fix osdmap requests, subscription timeouts
eb5b6ad kclient: no need for r_fwd_session
488cbb1 kclient: fix bad mds session put
c31e926 kclient: don't leak ref when queuing fault work
ee2175f kclient: use subscribe to get mdsmap, osdmap updates
2e49846 msgr: print louder notice on bad banner; rev
b2155c8 mon: subscribe duration in units of seconds, not ms
1530e93 osd: remove ticket from MOSDOp
9063663 uclient: fixing a backwards test in Client::put_cap_ref that resulted in bad Inode ref counting.
d2e0186 Hypertable: fix ups on the readdir interface that now uses getdnames.
cdeb19e vstart: be quiet
c47c926 kclient: subscribe to mdsmap
d863584 mon: clean up subscribe types a bits
f7c1bec objecter: use one-time subscription request for osdmap
0009d67 mon: do one-time subscriptions, too
a0cc21d monc: resubscribe on monitor connection reset
cdf683c monclient: fix subscription renewal
0635d43 objecter: request full map on startup
6f919f1 msgr: deliver resets to all dispatchers; make naming consistent
44d519b mon: clean up send_reply interface
269448a uclient: subscribe to mdsmap; strip out some signed_ticket cruft; fix mount
dbc4f60 msgr: keepalive
dbc00a6 mon: route replies
eb92fb1 auth: follow auth with keys request
afd038b mon: add subscribe function
cfab067 uclient: Sage: Whoops. My wrapper doesn't actually call the function.
af5154c Hadoop: getDefaultBlockSize() now actually looks it up instead of guessing.
98dabb6 Hadoop: Insert accidentally removed throwaway first argument to ceph
7b5670a msgr: oops
4fab953 mon: simplify mount; remove MClientUnmount
83d554c uclient: pin inodes on first cap ref to CAP_FILE_BUFFER
bf304fa auth: client/auth tgt sequence, protocol implementation
8e996d2 mon: don't delay mount/umount paxos commits
b69e7d8 kclient: handle mds reconnect.. mostly..
8e356bf kclient: make con_close, con_reopen work
e8a2690 mon: treat osd, mds as peers, not clients (i.e. connect to them)
c0c2143 msgr: server shouldn't initiate outgoing connections
5b431b8 msgr: set default policy correctly
52f55c7 mds: never forward messages for the client
e5847ba kclient: avoid session lookup in mdsc
3dd1c4d Hadoop: Allow a command-line like property, and change the parameter passing so that Java passes one string to the C++ code and that parses it.
47e5530 libceph: Speed up for programs that try to mount ceph too often
c53fcce msgr: remove 'dst' from ceph_msg_header
094d3b6 msgr: remove 'dst' from ceph_msg_header
ffcb564 kclient: close socket in work queue (and still on last ref.)
79b1234 kclient: msgr cleanup
66efd40 kclient: fail con->ops->get() if ref count is zero, and avoid requeueing work
475dd60 kclient: handle osd resets, timeouts, etc.
c8a6c3a kclient: remove connection tracking from msgr
00f1d32 kclient: use a per-connection ops vector
c9c6ec5 auth: monclient auth handling
b24c4a2 kclient: use per-connectino peer_reset callback
7dbfe0f kclient: use connection api for osdc (almost, no kick or timeout)
6ead20b msgr: handle keepalive
60a3ed0 kclient: use connection msgr api for mon client
a9c9365 kclient: use connection msgr api for mds
1afa62e auth: move things around
238afe6 auth: rename first part of auth protocol
811276f auth: client side protocol handler
f2494d1 kclient: add explicit connection-based api
d99fbb0 msgr: fix policy setting
207880e kclient: factor out connection creation; add con_send, con_keepalive
6bad246 kclient: periodically ping mds's
e11a7e4 kclient: do not accept connections in messager (client only!)
0cfc905 msgr: server flag to avoid connecting to peer
8e76f20 mds: handle ping
ef15a07 kclient: fix bad kfree on kmem_cache cap
d34958c auth: mount is working again
1e5e8d8 mds: update dir parent pointer on rename
ecf93ab mds: factor inode parent pointer encoding out of CDir commit
2c1a1f7 auth: add unmount to the generic MonClient code
08997b5 auth: generalize mount-like ops in MonClient
e0508c8 auth: rename ClientAuth to Auth, MonClient basic infrastructure
2bdcc68 uclient: don't croak on flush_set_callback on nonexistant ino
e433110 mds: propagate scatterlock data w/o changing lock state in scatter_nudge
03411a1 mds: avoid propagating nestlock more frequently than mds_dirstat_min_interval
9114e6f mds: kill SimpleLock::wait_shift
a937275 auth: clarify protocol comments a bit
c840ac9 todo
9d1bee7 uclient: warn about stat_precise struct changes
10e644a libceph: no need for frag_info_t
5d9d1ef msgr: add ms_die_on_bad_msg option, make assert(0) conditional
f6f1263 Hadoop: Style fixes.
cc7b36c Hadoop: Move the . and .. elimination from Java to C++ for less copying.
4a6d22d uclient: _getdents should *always* return the number of bytes written at end of dir, not just assume it's zero!
8d1f4d5 Hadoop: Use the new ceph_getdnames instead of getdir Hypertable: fix a nasty not-closing-the-dir bug
93552e4 libceph: Change the C++-only functions to be C-compatible. Hypertable: Change to use ceph_getdnames instead of getdir.
af72edd Hadoop: Fix a nasty IO bug. CephInputStream.read() needs to return an int between 0 and 255, but bytes are signed and casting preserves that. Adjust if needed.
e9b00e0 Hadoop: Clean up ceph_delete code as it's redundant.
575158a Hadoop: Fixed time modification in getFileStatus. No wonder I hadn't noticed an issue with statting!
c5dd75e Hadoop: Add package.html; fix a NULL instead of null error (Java)
bc372c7 Hadoop: Put guards up to prevent a nasty bug in case of unspecified preferences, and the unlikely case that initialize is called twice.
1d7726e upload tarball with 'stable' deb
2b32297 (tag: v0.13) v0.13
884ec32 auth: kernel side aes functions
43dcbc2 todo
88179a3 auth: rearrange types
a74c1a9 mon: lose ClientTicket; simplify mon's client map [disk format change]
350190c kclient: cleanup msgpool pr_err
d349d57 kclient: update ctime on 'no-op' ->setattr(.., ATTR_CTIME)
94b85ee kclient tests: fix dir names
411dcbe uclient: small _getdents cleanup
2279e43 uclient: let's do getdents() too, while we're at it
3ccb164 crush: put temp arrays on the stack
206eddb uclient: remove readdirplus, readdirlite cruft
8daf25b uclient: add getdnames()
873a160 kclient: better info in cap msg debug prints
9397867 mds: debug show cap issued/pending/wanted or issued/wanted, depending
b180b6c mds: clean out old revocation history on racing release
f9ec9d4 mount.ceph: block same signals as /sbin/mount
5822c6a mds: remove mdstable ino cruft; version all ondisk encoding
d149c7e mds: do not save cap_push_seq on disk [disk format change]
28afd69 kclient: make msgpools blocking or non-blocking
7962554 auth: kernel side aes crypto functions (not tested)
f155bd8 kclient: stop using msgpools for incoming msgs
921260a kclient: be smarter about osd reply message refs
a23e25f configure: check for expat for radosgw
10940c2 Makefile: add missing MOSDPGTemp.h
c55f2e9 mds: clean up loner set/drop logic
0266f87 kclient: don't keep reply ref in osd_request; just parse out the result
56e0ab7 auth: use common definition for crypto types
6c43e5d auth: consolidate different secret types to one type
d0b204a auth: pass const buffers to crypto encrypt/decrypt
7f32084 kclient: add iozone, kernel tar+compile tests
32a2b41 kclient: remove ancient crufty test code
9bb9672 auth: fix compilation errors
fbe53c2 auth: bits
4a0298e auth: replace crypto_stupid with crypto_none
951028f auth: fix aes encryption
1f7b82d auth: don't use bufferptr
4863bd5 kclient: add missing armor.c symlink
f806044 kclient: use msgpool for client_caps
8fc4666 auth: fixed aes, added test utility
59a1eb9 auth: aes decrypt
3cb690d kclient: add base64, crypt.[ch]
0157567 auth: compiles, everything links with libcrypto
2d4556f auth: work in progress
065b1fd kclient: clean up msgr debug output a bit
d142cf3 kclient: fix data skip arithmetic
11376ca kclient: drop middle, data in ceph_msg_put
414e47d auth: check key in the stab auth implementation
93834d6 auth: refine layers on kernel client
3c275a5 auth: auth stub implementation
4c07d29 auth: client <-> mon auth skeleton
a849be3 auth: auth scheme notes
8d223df kclient: requeue cap if cap send fails
6d8144c kclient: don't reuse message for revoke_ack
a46441c mds: shut up cap sanity check
81a8fe8 kclient: use reference counted ceph_buffer for xattr blob, msg middle
b2bf914 fix client caps encoding
85d893c uclient/hadoop: Implement lstat_precise.
c398b0e uClient: Whoops, apparently I thought stat's atime was in millis, but it's in seconds.
e87b7e7 msgr: handle 'middle' section of message
a7756e3 Hadoop: What's with all these unused variables?
bca0fba Hadoop: Javadoc and cleanup in CephInput/OutputStream.
fea91de Hadoop: Javadoc and cleanup in CephInputStream.
50d72f3 kclient: alloc 'middle' section of messages via callback
3279ac8 kclient: fix up msgpool some
7dca3af uclient: A Sage-given fix for something Sage broke.
4d81290 msgr: add 'middle' section to msgs
40aa353 kclient: use msgpools for some messages
4a07672 Hadoop: cleanup compile bugs from previous cleanup work.
8fff740 kclient: add msgpools
4d0589f Hadoop: Remove an exists call by checking return codes on mkdirs
59db5df Hadoop: Remove references to uid and gid.
3b4c423 Hadoop: Remove unused getLength and supporting C stuff.
c03b1f8 Hadoop: uses the new stat_precise.
0caab94 uclient/libceph: setattr and _setattr now use a stat_precise struct that handles both seconds and microseconds. stat_precise has a stat_precise(struct stat) constructor. ll_setattr still uses struct stat.
d66b0a8 testceph: Clarify use of endl so it's non-ambiguous when the includes change.
abf2fc4 Hadoop: More Javadoc, indentation fixes, etc.
20bd315 Hadoop: Convert bytes to kb in statfs
ad46d47 Hadoop: Javadoc and consistency.
dbfdcc1 Hadoop: Adds the getStatus method introduced by Hadoop .21; currently commented out since it doesn't compile in .20, but it's tested.
cfd3d87 kclient: zero pages we did readahead on
0f33aa4 kclient: zero page on ->readpage() ENOENT
f972f0d kclient: fix bad up_read(snap_rwsem) on readpage failure in write_begin
b362024 mount.ceph: key -> secret
821d9ef kclient: kill unused unsafe_writeback option
6809650 kclient: fix up snapdirname, secret mount options
cd0fae2 mount: translate keyfile=file to key=thekey
dc31490 todo
9462ba5 mds: keep precalculated _issued instead of recalcing each time
35bac67 mds: rewrite Capability issue/revoke tracking
dae6eae kclient: set issue_seq in revoke ack
5848391 todo
0836ba2 uclient: clean up write path a bit; better max_size handling
7ce833c kclient: check size on llseek(..., SEEK_END)
4ddb70e uclient: check size on lseek(..., SEEK_END)
762b56e uclient: remove dead code
2c2ee44 todo
f021e18 uclient: handle short sync reads vs eof
772d49e osd: reorder snapc setup and ORDERSNAP check
afc5da5 radosgw: remove unneeded INT_MAX
8977453 radosgw: list objects in chunks
85f89c5 kclient: zero tail of page in readpage, readpages after short read
8f95ec3 kclient: check EOF on sync read to do short result when appropriate
6a78671 configure: fix --with-radosgw
2d47dcd mds: track caps we release in requests, and reissue on request cleanup if needed
5d9eb39 mds: do not suppress cap msg if it is a revocation
62868a8 Hadoop: Added some checks for not-a-file paths; changed what delete returns on not-a-file.
51186d6 uClient: move last_flush_tid into Inodes, make kick_flushing_caps faster by overwriting tids.
0d45c57 Makefile: include stop.sh in tarball
a5b60b5 todo
a4bfaa6 psim: ifdef out dead code
ccf950e filestore: clean out old debug print
f3ffaf4 uclient: avoid cap release delay on revoke
25309a4 rev ondisk versions
8631573 auth: add versioning to ClientTicket
25df09b kclient: print osdmap pgid info
23b81b9 kclient: refactor readpages, striping
e55e5fa kclient: fix msgr incoming msg allocation stupid
a3a61bc nstring: use correct hash function !!!!
b48dfeb kclient: fix sync_read return value
26f6a8e mds: fix multiclient RD+WR loner logic
7861115 kclient: fix sync read, avoid unnecessary zeroing in readpages
ad2dc34 osd: recover primary in version (not object) order
e5df115 osd: avoid calling std::list.size() in PG print method
014ae01 kclient: allocate mempool prior to sget()
0be3669 uClient: Now pipelines cap flushes like the kclient. Analagous to the kclient changes in f7e60edead6d025d167715372dad601b499fb5a4. The kick_flushing_caps function does way too many comparisons, though.
f07150e uClient: debug output for inode issues.
6fd8636 Hadoop: CEPH_SETTATTR_ATIME -> CEPH_SETATTR_ATIME typo fix
6901172 todo
a5c1337 osd: wait for primary to build backlog when needed
ad4d5f3 kclient: decode, map osdmap pg_temp
a73ec38 kclient: specify incoming message allocation function
e8ef23b kclient: use ceph_msg_new to allocate incoming msgs
097b468 osd: der, prior_set may contain down osds
6c215cd osd: fixed up some debug output
ff41752 osd: fix osdmap decoding typo/crash for old versions
296e8db mon: include pool op in MPoolOp msg print
86e631d kclient: GFP_NOFS for vmalloc; vmalloc large incoming msgs too
9ce83e4 osd: pg removal in a work queue
f5828cc osd: ignore info racing with PGRemove
6a51840 osd: rev protocols
a8baf7b elector: off by one check
963c3f0 osd: exclude lagging peers during backlog generation
429f8f0 osd: use same_acting_since instead of same_primary_since in most cases
fd1ca00 osd: track same_up_since, same_acting_since, same_primary_since
9dcce33 osd: use pg_temp to limit acting set to nodes who don't need backlog
a964888 rados: statically allocate time
2e4e434 rados: change command line arg
3ee2282 mon: handle MOSDPGTemp
6785be9 osd: track both up and acting sets in PG, PG::Interval
020350e osd: decode old maps
12d53be osdmap: add pg_temp mapping
08dc661 Hadoop: Added setTimes to CephFileSystem and CephFSInterface.
7e44866 Hadoop: Cleanup for readability; removed warnings by typing a Vector.
1719db2 Hadoop: CephFSInterface cleanup: better error catching on JNI function use; removed a few unused functions; now takes advantage of implicit typecasting for clearer code (no more manually creating j_ints and storing results to make a 1-line function into 3+ lines; no more if statements returning JNI_TRUE/FALSE); modified the getDir function as it wasn't very robust about checking for . and .. entries and the Java code does that; modified the Java code listPaths as it wasn't necessarily filling the array and didn't compact it!
f3db8c5 Hadoop: Added in initialization checks and limited use of Progressables.
83c11b9 Hadoop: Changed back to isDirectory as that method was un-deprecated.
700c276 Hadoop: Throws IOException -> return null; interface requirement. setReplicationRaw is an old method name, and it doesn't need to be overridden. getReplication was deprecated and no longer exists.
788e5dd radosgw: static linkage
d0f58ad radosgw: rename symbols, use generic name for rgw
a7995b7 radosgw: rename files to use the generic name
38daf9e todo
c49fd9a debian: fix typo in build script
e15c40a Hadoop: libhadoopcephfs now links against libceph rather than incorporating it; the Java code accounts for this and loads based on a configuration setting -- no more worries about java.library.path.
360834b uClient: now cleans up open files on shutdown. Doesn't crash on a failed assert!
b6862d6 Hadoop: Implements getFileBlockLocations; adds ceph_close to CephFileSystem.
b639c21 uClient/libceph: initial implementation of get_file_stripe_address
f42bb1d Hadoop: Makes use of newly-available replication reporting.
9bc42b5 uClient/libceph: implement get_file_replication add it to libceph.
90b0a6c uClient: Change file data function names for clarity; add function stubs for Hadoop use.
290233e Hadoop: time conversion between Ceph and Hadoop; ditch filling in the uid/gid since it's meaningless.
2387afb uClient: fill_stat now fills times properly
f524150 (tag: v0.12) v0.12
dad494c Makefile: add missing header to noinst_HEADERS
1b89c16 Makefile: remove java hadoop _SOURCES dep
6b4d8f9 osdmap: kill unused/useless get_num_osds()
2a1f329 mds: show journal entry lengths in debug output
1fd35e1 kclient: cleanup unused label
f539036 kclient: revamp fsync
f96501a mds: include mds # in table names
660ca27 mds: wait for rejoin_gather_finish to complete before finishing
f8501ab mds: set primary lock state to LOCK from strong replica when appropriate
7032e8a Makefile: reorg
80b9480 mds: fix lock state assert on sync->excl
2eb7363 mds: set up root inode properly on replay
72a1dc3 mds: fix reversed conditional on simplelock ->excl transition
b3a1b78 Makefile: no fakefuse
55e713b psim: calc stddev
841bc5f osdmap: only use domains if ndom > 1
55f4e00 crush: fix grammar so we can recompile what we decompiled
2c49cc3 mds: start resolve with root as UNKNOWN (if it's not ours)
f663a3f mds: fix typo (C_Locker_Eval crash)
f0b0ce4 kclient: fix locking snafu in ESTALE handling
128e9d2 kclient: choose mds based on dentry parent, if needed
40f1ab8 mds: adjust mds state asserts to include clientreplay
da7793a mds: twiddle missing locks on export
0d5ef77 mds: open_root only after up:active
84300ab mds: issue caps on non-auth inodes
6976f2c kclient: use caps, fragtree only to choose mds (not hierarchy)
849bae8 kclient: remove stray ; in dout macro
df3be32 Hadoop: Replaced some unclean file references. Hey cool, it can do a map-reduce now!
7490276 uClient: chmod now protects unchangeable bits.
7e19b03 uClient: _rename doesn't remove nodes from cache. Sage says this is unnecessary.
80912bb Hadoop: Added a setPermissions method.
9f2bd9e Hadoop: CephFSInterface cleans up memory better on errors.
c5b3436 Hadoop: Is much more careful with filepath sanitizing in BOTH directions. Also has a minor interface change allowing it to build in Hadoop .20
249c1f1 uClient: Unmounting now waits on mds_requests.
18c35b3 Hadoop: All configuration is now done through Hadoop's config mechanism.
f0ce81d Hadoop: Now does a proper stat.
11f17fc kclient: less noisy about mds session timeouts
eb06eb6 msgr: avoid closing fd twice
dbc3c61 todo
b6d0806 kclient: debug peer_reset thing
f7e60ed kclient: maintain per-cap-bit tid map to fix pipelined cap updates
2c6606d kclient: maintain list of flushing snaps; reflush after reconnect
21cb069 kclient: fix queue_cap_snap refs, calls in handle_snap
0fffbfe Hadoop: Moved ceph debug level set into Java code; disabled CephIOStream debugs.
c087ffc uClient: Whoops! Made Inode get/put dout at a lower importance.
95fd09c Hadoop: Much cleanup of methods.
ceb2d41 Hadoop: This method no longer exists in the FileSystem API.
c2aa810 Hadoop: No good reason to overwrite these copy/move functions that I can see
d3b7d17 Hadoop: Since Client is behaving, put back in the close.
b89046a uclient: Fixes refcounting bug when you chdir to cwd.
2ff4fbd Hadoop: More work with deprecated and inappropriately-overridden functions.
16d68ce Hadoop: Removed deprecated functions
546860e Hadoop: moveFromLocalFile uses copyFromLocalFile; is more robust.
9785824 Hadoop: More debugging output changes.
3be1ed3 Hadoop: getFileStatus behaves better with folders.
4626bb9 uclient: removed cout debug statement
a3f144e kclient: don't croak on mds request will NULL r_request
81872b6 mds: process session msgs during clientreplay
5f5ab2a mds: no need to take mds_lock in truncate callback
02a226e mds: defer caps msgs until clientreplay or active
be25f71 osd: adjust debug output
df39e7b mds: tolerate a missing directory object
96598f4 kclient: release unused caps, but keep some reserve
b7178da kclient: nofail mode for osd writes
dcdd7d0 kclient: use mempool for osd req in writeback paths
72cf9fe Hadoop: Removed unnecessary reload of hadoopcephfs.
5db5de7 Hadoop: More debugging statements, converted to use a method we can flag off.
923bc9a libceph: add a check in ceph_deinitialize to prevent badness on multiple calls.
3872642 uclient: getcwd fixes
052b174 kclient: bug on back kmap
769eedb osd: fail gracefully when problems reading /proc/loadavg
31c7b5d auth: compat with old struct
ae14d99 initscript: skip if auto start = no/false/0 and nothing or type specified
2278e9c kclient: avoid overflow in mds reconnect msg size calc
841f26f mon: allow osd down->out interval to be 0 (i.e., manual)
bf5ac3a osd: remove bad osdmap access
483bc18 auth: add ClientTicket
98ace93 uclient: use lookup parent in getcwd()
0a72563 mds: add lookup parent op
2ac8274 Hadoop: Many silly debug statements.
f90df69 Hadoop: Minor fixes to the still-unworking Hadoop code.
a41c762 Hadoop: hadoopcephfs is now self-contained instead of requiring other libs.
2a36c63 uclient/libceph: add a getcwd function
b92d2cb kclient: replace osdc request_tree with rbtree
3699623 auth: remove ceph_client_ticket struct
aa2252a osd: generate primary backlog independent of master log
3ef5491 kclient: set mapping error on writepage error
db90dcd kclient: debugfs mounts on /sys/kernel/debug
5f7581d Makefile: skip hadoop client if jni.h not present
aca6d39 kclient: use a mempool for page vector in writepages
f485e1e kclient: put writepages pagevec on the stack
9a51ad3 debian: upload packages as sage
e389408 kclient: fix bad kmalloc
ddc1707 kclient: rewrite layout ioctls
61d99cf mds: only set striping component of file layout, for now.
8327112 fix compat
249721c kclient: define compat_ioctl too
87dddc4 osd: actually adjust rd/wr accounting values
15ec923 osd: add rd/wr ops/bytes stats to pgs, pools
b34648e Hadoop: Compiles now. Stupid macros.
9f254d5 Hadoop: Converted CephFSInterface.cc to use libceph.
66045f5 libceph: Added get_stripe_unit method; used by Hadoop.
a7a7f63 Hadoop:Remove the clientPointer convention from the C headers.
adf0477 Hadoop: Remove the silly clientPointer convention from the Java.
e18b613 Hadoop: Created new and modified old CephFSInterface.cc methods
38e8ce2 Hadoop: Newly-generated JNI files into CephFSInterface.h
ee0e17b Hadoop: Adding JNI header files to repository.
9fa6f5e (tag: v0.11) v0.11
a8de8c7 kclient: simple dout macro by default
b66da8f todo
ea54a6a kclient: msgr cleanup
8d7d3c8 kclient: caps.c cleanup
d88a4b3 Hadoop: CephInputStream seekNewSource done. That was easy.
f205273 Hadoop: CephOutputStream retabbed, and it's an OutputStream now.
035f803 Hadoop: CephInputStream retabbing and add seekToNewSource stub.
5fc0182 Hadoop: Renamed listPathsRaw as listPaths
3eec8bb Hadoop: Continued cleanup work.
9d4680e Hadoop:Stubs for new append method
2e9c614 Hadoop: Minor changes to most of the methods.
a6a98ad Hadoop: Retab CephFileSystem.
391b2fa Added Hadoop fs components.
c58bb8d kclient: fix up export.c
f1264f4 kclient: mon_client, kobject cleanups
6088a8e crush: more cleanup
4dde6e3 crush: comments
abc5f1d kclient: osd_client cleanup
d9d3d62 mount.ceph: update /etc/mtab
8c58361 kclient: mds_client cleanup
307a11e kclient: fix dcache readdir -> sync readdir transition
559860f kclient: addr.c comment cleanup
c464350 kclient: file.c cleanup
bb0dca2 kclient: separate kmem_cache for ceph_file_info
d3f38c7 kclient: fix inc osdmap decoding
8040abb s3gw: some more cleanup
7d25910 kclient: more dir.c cleanup
3138356 kclient: some dir.c cleanup
e2100bc s3gw: rearrange code, move REST related stuff away from s3gw
15d3bd2 kclient: small inode cleanups
b7646b5 kclient: remove unneeded mdsmap request
d00c1dc kclient: fix mdsmap decoding
3d123c5 kclient: fix osdmap decoding
84a51eb kclient: fix monmap decoding
44cbcfe CephBroker: Removed unneeded ++
e631be7 osd: include version in ondisk osd metadata types
05d0e73 mds: include version in ondisk metadata types
a451157 mon: include version in monmap encoding
017788a osd: include version in osdmap encoding
7e2c83a mds: include version in mdsmap encoding
016aaea kclient: some super.c cleanup
0a8dde9 kclient: simplify wait for maps on mount
b9da0f4 kclient: clean up parse_ips, mount option parsing
c2e3f9c kclient: use kmem_cache for ceph_dentry_info
ad9fdd1 kclient: don't croak on null dev_name
1aa1581 kclient: drop pr_fmt
78492f4 kclient: EBADF if there are no caps on an inode
0e4ada9 mds: ignore stray reconnects
87c7f2e mds: semi-tolerate/warn on bad client_ranges
e46faf7 mds: clean open file lists when we go active
f33711d mds: adjust client_ranges on setattr size
260ea82 mds: always share min of projected, actual max_size
5853663 debian: build git snapshot packages for unstable
c2d922c debian: build libcrush, librados, libceph packages
472925d kclient: use kcalloc for decoded count * size allocations
f324172 configure.ac: cleanup
536a8b6 s3gw: restructure code, better layering (not done yet)
031018d kclient: dout is a no-op without DEBUG or CONFIG_DYNAMIC_DEBUG
343ea5f kclient: signoff in patch series
1e27485 hypertable: few cleanups
9e3a69f kclient: cleanup debugfs
06de1c4 kclient: simplify dout.  again.
d554e39 kclient: simplify nfs export handles.  untested.
80e392f kclient: messenger cleanup
5ee1e9c kclient: fix unaligned access in snap.c's dup_array
32b7372 kclient: make dout's ceph_file_part NOT inline
22f2996 kclient: caps, mon_client cleanup
d65cc7b debian: require libtool, but not libfcgi-dev.
f4d9466 kclient: fix monmap buffer overrun
7fe548c kclient: respond to control-c on slow mount
0dca028 crush: cleanup
9a57ecc kclient: clean up osdc
fc67f91 kclient: cleanup addr, mdsc
4073a46 kclient: file.c cleanup
bcfe850 kclient: dir.c cleanups
614a9e7 kclient: inode.c cleanup
cda85b2 kclient: super.c cleanup
3cb357a kclient: use in4_pton to parse ipv4 addrs
44b93ac kclient: misc cleanup
d63e3dd kclient: in dout there may be no / in __FILE__
83cf089 CephBroker: New version check-in.
496d29d uclient: Fix inode ref counting in rename.
747794a Client: removed extra debugging calls, fixed fencepost error
28df215 Hypertable: Fixed up error reporting.
21c73bb Client: mkdirs; move test logic into a loop.
26905ca Client: Rewrote mkdirs to avoid possible race condition.
bae629d libceph: Added calls for lstat and mkdirs.
98db71c Hypertable: numerous fixes.
ad94b19 client: new mkdirs command, and debugging output.
b29f507 filepath: constructor works correctly on relative filename.
869af81 kclient: make dout() behave despite file prefix, cleanup
129ef5e kclient: make debug output look nicer
bcd0bda kclient: replace dout hackery with pr_debug
cfc0e0e kclient: kill dout(0, ...) calls
36b91af kclient: kill derr, use pr_err instead
9c4ca47 kclient: specify file max size in mdsmap
bc2a567 kclient: __attribute__ ((packed)) all around
2870371 s3gw: fix operations with url encoded object name
860f65c osd: don't crash on a zero length write (sage)
007313f (tag: v0.10) v0.10
464d248 Makefile: fix up initscript packaging
6b3309a initscripts: /etc, not /usr/etc
348c2dd s3gw: prefix/delmiter can be used for listing objects
1c1e7df kclient: kill debug msg
8f09da9 kclient: fix up patchset comments, docs
36dd23a mds: adjust client reconnect timeout
f7e0622 s3gw: conserve object's content type
5a0b3ed s3gw: fix missing null termination of attr
4dd480f s3gw: store/retrieve user metadata
f80db8d msgr: use SIGUSR2 for pipe kills, USR1 for accepter kills
921b9d6 rados: fix user_only option for getxattrs
fc6172a s3gw: interface changes, preparing grounds for user metadata
b42438c rados: added getxattrs
81cc70a kclient: whitespace
7cf994d kclient: some comment cleanup
8e1d2ad mds: eval locks too in reissue_all_caps after mds restart
09dffea mds: reset seq on mds after reconnect, too
b32f7cf mds: flush log during clientreplay
161a8b1 mds: fix max_size calculation
5249a2b uclient: make lstat() take mask
b5bae80 mds: truncate journal on partial write
ab82440 mds: apply cap mask in choose_lock_state
e9f4568 msgr: fix race with signals vs select with pselect
82fe78c mkcephfs: chown/chmod mount point if non-root
e4f8170 mds: reconnect caps added via replay+issue_new_caps
ea2f834 mds: check client ranges on mds restart
2b03d81 mds: adjust client range on open existing for write
e842cf5 mds: journal recovered mtime; cleanup
6867c0c mds: do not check_inode_max_size in eval() path
b1d5bea mds: set client_range on open O_TRUNC
0b45429 mds: base client_ranges update on issued|wanted, not just issued
23aeea4 mds: use SCAN state for file recovery on mds restart
ac33cb1 s3gw: copy operation can use url encoding
94d296d s3gw: fix some more jets3t issues
0d5b2c0 Makefile: fix whitespace
5cfa35e initscript: fix 'reload'
9a7fdb2 initscripts: do what we can to run as user specified in the conf
5bb2968 initscripts: substitute in proper autoconf paths
ec1e401 s3gw: some more fixes for jets3t
c73c954 s3gw: change xml layout, to fit with some s3 client
08a6fb7 mds todos
2789732 kclient: simplify/fix cap delay timeouts
f871d3e mds: on restart, only recover files affected by missing clients
3a86b94 mds: maintain per-client write ranges instead of single max_size
167f4ca uclient: fix getdir() to use new readdir_r return value
8733b56 uclient: stop using mds inode_t
28e444d mds: add SCAN, PRE_SCAN lock states
2ca5659 osd: less hexdump on tmap updates
38a5347 todos
394c6bd s3rados: bucket creation bug fixes
489c24f s3gw: admin tool, able to list buckets
bdfc852 objecter: fix pool objects listing
434159b objecter: fix pool objects listing
7494390 Makefile.am: missing some header files declarations
6908f59 s3gw: rados backend seems to work
58fa7c1 kclient: fix uninitialized vars
21804bc todo
9a5d053 Revert "kclient: strip out kernel version compatibility cruft"
67822ef s3gw: make compilation optional (./configure --with-s3gw)
280e4df uclient: include tid in cap flush, flushsnap
1961fb7 kclient: include tid in cap flush, flushsnap
6d95e29 mds: add tid to cap flush/flushsnap ops
45e4094 kclient: assign seq to cap flush; avoid starvation on sync_fs
c8744d6 kclient: debug output cleanup
b5d32fa uclient: assign sequence to cap flushes, avoiding sync_fs starvation
1a255ca kclient: fix write_inode; force dirty cap flush by mdsc_sync
dab180c libceph: SimpleMessenger usage bugfix, added testceph.cc, fixed dependencies
a4b0764 kclient: make sync_fs wait on unsafe mds requests
72b03df libceph: add dependencies to the Makefile
6c1fddd libceph: Added getdir to the C++ interface.
4260265 Hypertable:Completed initial Cephbroker. Requires testing.
523d703 hypertable: added skeleton .h and .cc CephBroker
0f6e0b3 uclient: resend cap flushes on mds restart
387778e uclient: change readdir_r return value
8ecffa5 mds: make clientreplay go faster
cd4e086 s3rados: put_obj, get_obj
4daf476 uclient: track issue_seq; reset on reconnect
2acd03a kclient: reset issue_seq on reconnect
1d4deb1 mds: ignore cap updates in replayed ops
cc54b17 mds: do not include trace with replayed replies
dd0148b s3rados: implement some ops for the rados backend
ab76397 osd: add a commit op
5b2b455 kclient: track and kick flushing caps per-mds
feca5cd mds: adjust all lock states in process_reconnected_caps
c5ee747 osdc: pool creation via objecter
17201c6 mds: set cap_id on caps reconnected after a delayed load
ed6a18d mds: replay client ops one at a time
cad13f2 mds: maybe eval instead of eval_gather on file recovery
105d791 mds: reissue all caps after recovery
f19b7c4 kclient: make mds map checks more robust
e5cc6c2 kclient: clean out caps that don't reconnect
c930281 kclient: request _next_ mdsmap epoch
21a3a94 kclient: send mds reconnect regardless of who we get the mdsmap from
79b8a5d kclient: don't skip most recent mds op
92dff86 mds: add reconnected caps whose paths are loaded
193ff6f mon: handle pool creation
d5b01ee objecter: rename snap ops to pool ops
4e87169 s3gw: some interface adjustments
d9b1ddf libceph: Split into .h and .cc files
ec04622 s3rados: some makefile changes, other misc stuff
d957488 libceph: Now exists! client/libceph.h.
85e3e06 mon:Initialize rank to NULL to avoid warning.
e9a362b s3gw: rados backend, beginning of implementation
663f8a1 rados: some interface fixes
85b67b3 rados: added stat/getxattr/setxattr on objects
320e5a2 todos
0fbcb7c s3gw: return correct etag when listing objects
2c2b511 s3gw: return etag with the GET response
a92daaa s3gw: can set acl by user's email
039a373 s3gw: support query string requests
9f2dbcf s3gw: most of the copy options implemented
652ff5b s3gw todos
0fbb17f s3gw: partially implementation of copy object
ac22c47 s3gw: canned acls
fe227c9 s3gw: anonymous access support
9a0258f s3acl: fix some issues with group acls
c0643fa s3gw: handle anonymous and group acls
648e8fc s3gw todos
c826d2f s3gw: list buckets show only user's owned buckets
0ce157d s3 todos
d1db8a1 s3gw: can update acls
b70baa6 s3gw: enforce acls on required operations
62d9ffe s3gw: acls somewhat working, some operations use them
76566ac s3gw: store default acls when putting object, retrieve them
bd6555a s3gw: more flexible storage of attributes, store default acls
9f1a952 s3gw: storage access done via S3Access interface
f589547 s3gw: change the user access id style
1774031 s3gw: authenticate users
b06009c s3gw: can modify existing user info
946dfba s3gw: add s3admin utility for users manipulation
6a2c20c s3gw: signatures verification
597cde9 s3gw: infrastructure for storing user info
b5dcdd8 s3gw: can send a get-acl response
e5a20d2 s3gw: can create a default acl policy
6146f0a s3gw: acl xml encoding
7bcd96c s3gw: owner class holds id and name
11fc24a s3gw: s3acl rearranged
dd20d46 s3gw: acls encoding/decoding
7060aac s3gw: dos2unix on s3acl.cc
f1b25d0 s3gw: some more acl implementation
6627137 s3gw: xml parser for the s3 acls
7873722 s3gw: cleanup; bucket/object parsing changes
c3b2ef7 s3gw: implement head command
9b4e957 s3gw: get operation, preconditions handling
4faa62d s3gw: put supports md5, better error report
f4a7f9d s3gw: some cleanup
83283c3 s3gw: support delete of buckets and objects
a1c1491 s3gw: bucket creation and put object
d30cb70 s3gw: some more work
8ae6719 osd: no need for RMW flags in op reply
9a7cb3b filer: remove bad memset
9a2c17b msg: allow multiple dispatchers to chain together
ada466a mds: alloc cleanup, log recoverable journal errors
b042df7 mds: fix session close ino release journaling
661b6bc uclient: make_request returns int, not MClientReply
9e4c776 uclient: insert_trace in reply handler
d871b6c uclient: fix make_long_path, and thus reconnect
f7616a1 uclient: fix op replay
52e53f5 uclient: Cleaned up resend_unsafe_requests; handle_client_reply; debugging.
5fb8b63 mds: drop loner on gather before doing waiters
cc95ab0 uclient: fix order of session cap removal
00f4480 mds: refcount MDRequest so that timed out client sessions behave
5fd1b70 uclient: use session->caps list an lru
a994068 osd: change log terminology: bottom..top -> tail..head
9f05cb4 uclient: fix kickback, reply handler logic
ea21113 uclient: fix MMDSGetMap 'have' epoch
6f5f507 DON'T USE, BROKEN. uclient's MetaRequest extra ref counts removed.
bb23de4 BROKEN, DON'T USE.
53b9bf4 mon: better warning with injectargs on non-up mds
843700b osd: make write mode per-PG
5f43310 uclient: support mds recall_state
f514210 uclient: remove debug print
3bbdbaf uclient: DOESN'T WORK, but more ref counting stuff. Now attempts to resend unsafe ops on a reconnect.
0908e10 uclient: MetaRequests go on the heap and are ref-counted; safe/unsafe replies dealt with better.
8b054d3 kclient: checkpatch fixes
e57a5bd kclient: use list_for_each_entry macro when possible
1e381cc osd: fix hb down check
5d89b6e osd: fix failure report on already-down osd
fed00ae osd: fix log msg after var name changes
3f7ef16 mds: don't choke on path_traverse_to_dir that fully exists
6f83420 osd: nicer scrub ok message
9505c09 osd: rearrange make_writeable prints
f8ef1c2 osd: fix pg log trimming
4583506 initscripts: fix do_root_cmd
2b39f45 msgs: clean up v in message prints
fd8012a uclient: Kick requests and renew caps on stale.
95b97b1 uclient: fix bad merge
59d08cb monc: debug option
6e3412b osd: switch to MonClient, fix cmds and ceph
34168a9 mds, objecter, ceph: use MonClient
ce49901 monc: create send_mon_message helper
653ec48 monclient: refactor MonMap into MonClient
e65287e uclient todo
c7d9a58 uclient: Now handles STALE state nicely.
b5c2940 uclient: fix cap reconnect
116140b buffer: throw exceptions instead of always asserting.
c5faf40 assert: throw FailedAssertion exception instead of inducing segfault
14d7fdf cosd: valgrind off
a93ab1d auth: use string instead of const char* for maps
621c53f mds: attach requests to session; cleanup on session close
c84a9cd osd: fix _scrub head_exists test
cd492b7 uclient: fix test condition
30a4dbf uclient: verify dentries belong to current session
d8987ee Client: put guards around some dentries[foo] accesses without checking for existence.
09040d9 kclient: typo
866d979 paxos: allow wait on newer version
f49579f kclient: set have_version in MOSDGetMap
f16a28d No more VERSION_T; just 0.
52046d7 mon: remove old asserts conflicting with new readable semantics
77db2e0 messages: Clean up of PaxosServiceMessages, and some fixes for their users.
cff3f6f messages/MClass[Ack]: Roll back some unification. version_t last and PaxosServiceMessage::version shouldn't be the same in these messages. Remove that and add a new constructor that does set the version (but it's unneeded).
1ebe88d mon/objecter: The monitors and Objecter now use the version in messages.
c0892b2 initscripts: do mount/mkfs as root, otherwise as any user
5e15db3 osd: update primary's notion of peer last_update on activate
4c5a17c osd: force RMW ordering globally
7f48ac1 osd: fix TMAPUP bug
f558968 osd: fix tmapup
35ac86e initscripts: allow 'user' option, defaults to current user
1491962 mds: fix CDir decoding
2d01cfa mds: rev format (for TMAP changes)
4e81feb osd: fix head_existed check
d939762 todo
2c88b31 osd: print lost objects
81eb5dc osd: rebuild missing OI_ATTR from log entry when possible
51f898f osd: fix proc_replica_log stop condition
c2ff551 todo
258a3ba osd: rev ondisk format, protocols
3796bf4 osd: store snapset in _snapdir object if head dne
b791c9e osd: zero out pg_pool_t in constructor
c80b4a1 mon: set snap epoch for poolsnap removal, too
8dd6d21 osd: fix MOSDBoot, MOSDGetMap initialization
7f9d387 mon: cleanup
9ffaaee kclient: update with new monitor message formats
491dd43 mon: change MMDSMap to send map we have, not map we want.
1fd46cc osd: make object delete not remove _head if there are clones
1d5c805 filestore: rmattrs command
5c39415 messages: Added PaxosServiceMessage to repository so previous commits work.
dd3ffaf Monitor/Message: All messages used by Paxos are now PaxosServiceMessages.
540ad29 mon/msg: PThey mostly hold version_t's now. Unused, though.
b3f7108 osd: adjust recovery op accounting; explicitly track set of recovering objects
ca7d025 osd: abort generate_backlog if already canceled
4b5572a osd: fix merge_log when log and olog share bottom
2ebc00f filestore: use readdir_r to avoid SIGBUS badness
c301e10 mds: fix session purge bug
63f4073 osd: allow recovery of missing objects not in log
303fe16 osd: avoid using null ctx pointer
89eb728 osd: stop rewinding replica log when we reach log.bottom
e6cb251 mds: no fatal assert on ino allocation failures
40e4434 osd: small cleanups
7878052 mds: don't choke on bad parallel_fetch paths
5430076 rados: cleanup
299edda kclient: make r_path[12] dup strings
8bbd633 kclient: clean up mds_request path generation
541669c todo
f8d0535 Makefile: add missing kernel/ headers
5f1ea72 kclient: import into fs/, not fs/staging/?
74ceb01 rados/objecter: Changes to rados in/out, and various things work.
2bd1377 Objecter/librados: Refactored and renamed for clarity.
0e3e444 todo
794002e todo
aa615b8 kclient: clean up unaligned pointer accesses
3652d17 cosd: conf updates
1d21494 mon: allow repair of entire osd
29a2b2f mds: reduce default memory, journal footprint
e0097bc osd: do NOT include op vector when shipping raw transaction
4148185 (tag: v0.9) kclient: strip out kernel version compatibility cruft
7e51c52 kclient: update script importer
58f2820 todo
9f58773 osd: on scrub repair, update replica pg stats as necessary
bcab1f1 osd: pass updated stats to replica
3e0c3e2 uclient: close mds session close race
4f0e84c objecter: some list_objects cleanups
d82ea93 osd: check that pg matches
0258c45 todo: bugs that have come up >2x now
f6981fc osd: adjust debug levels a bit
5d24752 osd: fix initialization of log.complete_to in PG::activate()
ddd6242 osd: remove bad trim assertion: trim point may preceed local log.bottom
695e6a7 osd: remove bad assertion to allow trim before pg is clean
17b0f26 Objecter: now has list instead of librados. Hurrah.
f3210a7 Objecter: Now resubmits *Op as part of tick() if the response takes too long.
5720080 osd: be a bit more verbose about peer_info
9e33bf1 osd: don't trim pg log if degraded
fc7ec60 osd: we don't use MOSDPGInfo to signal replica uptodate anymore
1eae016 osd: make add_next_entry behave when we start at backlog split point
8b35425 uclient: wait for mds sessions close on unmount
9c7cf29 mds: only use send_message_client for caps, lease, and snap msgs
048c61b uclient: init, shutdown objecter
663e482 osd: consolidate trim logic in calc_trim_to()
2bb0b09 todo
b86731e kclient: fix whitespace
a1623d5 kclient: include fs/staging patch in series
03217f4 crush: fix coding style, whitespace
eaf39b2 crush: redefine hash using __u32, for consistency across 32/64 bit
c9b39bb mark v0.9
45b21c0 Makefile: add missing includes
0eca313 Makefile: kill cls_trivialmap
7e76918 kclient: avoid i_ino of 0 on 32-bit platforms
fffc9f3 osd: trim pg logs on recovery completion
754e686 osd: track last_complete_ondisk over pushes, too.
e635d0e osd: revamp complete_thru code
9603162 osd: some infrastructure for primary to trim replica logs
e0719d4 osd: fix pg log trim on the non-primary
4247691 rados: less chatty
cd6cbff rados: shutdown on exit
7371074 librados: add shutdown to c++ interface
8418270 kclient: initialize readdir next_offset on dir open
04455b8 kclient: update client for statfs changes
1309477 osd: add pg log sizes, bottoms to pg_stat_t et al
7d14caf kclient: clean out old debug cruft
923e9a9 rados: fix statfs definition
b5024a1 mds: change readdir wire format again
4e54d11 kclient: fix readdir vs rm
5fc7fe0 objectstore: use nstrings to store all attrs
4f0c30b rados: prettify dfpools output
ab7d2b2 kclient: fix dout() macro protection of x, mask
2abc25a kclient: fix pps calculation to factor in pg pool
9d6538c osd: fix pps calculation from pgid.ps() and pgid.pool()
1f086d9 rados: Now properly writes 0-byte files on a get.
b59e70a mon: implement 'mds setmap <epoch>' to (re)set mdsmap
dc9042c mon: clean up some mdsmon stuff
52a9ea6 librados: added a write-full method.
119c339 rados: clean up output a bit
e83ad7c librados: clean up librados debug output a bit
e725f38 config: no -p shorthand for --pid-file
114ad51 kclient: fix skipped entires in dcache_readdir
3efb869 kclient: fix non-dcache readdir offset calculation
92c48b0 kclient: specify smallish blksize for directories
a07894d osd: fix cloned object context
e3105a0 Objecter: fixed a bug in snaps.
3e68190 mon/Objecter: Snapshot creation/removal now waits for proper epoch to return.
9b621fe rev osd disk format, protocol due to crush, osdmap mapping changes
d9cf568 osdmaptool: crush regression test
bc7d48f osd: include pg pool in pg to placement seed mapping
cb719ac crush: fix perm_choose bug
ac64f05 rados: submit snap creation and removal to the system.
dd7c2f2 mon: Now handles snapshot removals too.
9ce5802 mon:Added server-side handling of MPoolSnap. Currently assumes it's a snap-create message.
52bee4b osd: bail out of backlog generation early if osd is stopping
6609951 mds: kill old #include
ed34a0c Client-side support for creating/removing pool snapshots.
0a7e559 kclient: fix di->off calculation
60ec1cb kclient: fix I_COMPLETE
fd7c1f3 mds: mark CDir objects with parent ino, dname
ca1f545 mkcephfs: fix btrfs mount option
82b2477 mds: lower default cache size (now ~3.5GB on x86_64)
8c6410f osd: cleanup log trim check
1a1da21 osd: do tmap update without decoding entire map
17aa53b mds: encode dentry key as _head, not _, so that it sorts
1614f22 todo
d8b9c00 debug: fix log reopen
1003b60 osd: clean up tmap ops.  now GET, PUT, UP
c9e1a62 mds: fix CDir encoding bug
72d43e4 mds: use TMAPUP for dir updates only if g_conf.mds_use_tmap
0ed9d01 Makefile: kill cls_trivialmap
dd180c9 osd: make TMAPUP (trivialmap update) a native op
497c3a9 mds: encode dirs in TrivialMap format
85aca87 osd: fix PGOP check
4320680 s3: return objects mtime
ed22e06 s3: partial implementation of get bucket
2f2cb89 s3: handle 'get bucket' opereation
a80a0ca rados:Added basic df functionality to rados and fixed librados.cc to handle statfs_reply messages
7605982 objecter: add hook to get notification on new osdmap
26ff613 debian: add build depends libssl-dev, libfcgi-dev
c645d26 osd: autodetect PGOP flag if there are PG ops
b4eaf55 rados: rename radostool -> rados
98a81758 rados: external acls [beginning of] implementation
e5e1264 s3: fastcgi s3 gateway
6ddb9e5 objecter: unify read and write paths
bb9a109 osd: you may, but need not, specify READ|WRITE flag in MOSDOp.
8b6fa65 uClient: Fixed a copying error and a double lock.
db9a785 Switched Client to use objecter's statfs methods.
9f88b5b Rebase and better naming.
c4b42a8 Added support for MStatfs to librados and Objecter.
9932e78 mds: turn off mds ref sets
910dc15 mds: kill unused CInode.last_open_journaled
ada20b1 kclient: include full path names (in parens) in debugfs mdsc
d116bf2 kclient: fix cap reconnect path generation
f365ae5 uclient: mark down failed mds
97d6f34 cosd: one mds for now
091991c mds: use boost::pool for CInode, CDentry, CDir, Capability
bb23599 osd: fail gracefully if OSDOp.data is empty
242d442 mon: use pool_stat_t for pool summation in PGMap
f7954f3 mds: cut back on hash_map usage
ad19982 mds: fix inotable encoding
61a6b40 librados: add const to aio_write bl arg
6b16ab0 librados: make get pool stats work
1a0d12c mon: process MGetPoolStats
8fa73c1 osd: fix encoding/decoding of [sub]op response
6d81f56 kclient: fix typo
dc46641 buffer: append individual chars
c66f684 osd: fix MOSDOp printout
37d252f rados: add new headers
5779fd2 librados: client side for getting pg stats
9e34aa5 kclient: make /debug/ceph/client#/mdsc filenames work, cleanup
2103b19 radostool: lssnap
0fe5a57 Added a current bandwidth meter to radostool bench.
2368a22 osd: destroy messengers on shutdown
8ac2665 monclient: avoid hang during startup
93984cf osd: fix huge memory leak (MOSDOp)
73ac6f3 radostool: select snaps, rm objects
e4fa8f5 rados: get rid of wrcall
c8b162f rados: rename rdcall to call
a1b134a class: add cls_setxattr
43439e2 class: set method flags on registration
659b20e osd: don't call may_read/may_write prematurely (revert previous)
91f0af3 osd: update rwm flags for incoming ops
0a3ae36 radostool: clean up bench args, usage
3a3bd4f osd: include size in object_info_t
8ac00cb osd: include ondisk magic in encoding for key ondisk state structs
aed778a rados: remove testradoscio[pp] targets
5052dc8 rados: add helper to header
931b0d7 buffer: remove unused field
8502be2 osd: fix up OSDOp printing
109ed97 radostool now includes benchmarking functionality from testradosciopp.cc
0660c2c osd: rev osd protocol
70efc45 kclient: include tid in osdc debugfs dump
7a624a4 osd: hold op data on the specific op
82e14ae msgr: calculate data crc after encode_payload, in worker thread
5317718 Removed time_t -> int conversion warnings.
01d91ac mds: fix dir frag split replay
399f22c osd: don't clobber pg_stats.reported when repairing stats
ef5f8f6 mds: do not fragment dirs if mds_bal_fragment_interval <= 0
debd502 radostool: cleanup
60e3862 Hurray, this file works properly as a standalone.
6f47790 Added initial testradosciopp.cc.
5792669 A properly working testradoscio.c. For the moment it just takes a number of writes to make and does that number in a loop.
ae4d91c osd: simplify op read/write flag setup
ca27616 osd: kick pg on active set change
efdf894 common: kill obsolete common/ThreadPool.h
abb9fa4 osd: fix osd shutdown vs scrub work queue deadlock
799723a mon: fix 'scrub' -> 'repair' in command reply msg
1a35911 osd: counnt errors fixed during repair, and indicate scrub vs repair
daeed42 osd: fix pg stats on repair
3c91cb5 osd: replica should not check missing map on push
7b50664 osd: improved logging for scrub
7f01a4b osd: fix repair_object attr name
9f8fc96 osd: fix pg parsing
85a65e5 osd: read/write op flags revision (for class methods)
bdfbc61 class: class acl stuff preliminary stuff
cb6e700 mon: don't dup entires in log.err
916b199 osd: fix backlog ordering part deux
24dd3ee osd: repair out of order logs in read_log
f1ff934 osd: fix order of prior_version backlog entries
61995ee osd: cleanup
e16ed9b mon: handle failures during CLIENTREPLAY state
7685e7f radostool: 'ls' fixes
6753260 librados: fix locking on sync methods
431f38d objclass: fix compilation
501a1a6 class: makefile, include fixes
4e451c1 conf: avoid parsing daemon related config options when not needed
ac8b799 osd: copy soid out of iterator
4202ec1 kclient: filemap_write_and_wait_range not exported < 2.6.30
9390fab cosd: put mds on ceph4
0e312e7 osd: fix use-after-free on osd
8dcb1e6 osd: write pg info _after_ updating log
e64a6db mds: restore session state on load; only save opened sessions
bb6c79e osd: remove bad assertions from IndexedLog::print()
ece39bb librados: add/fix locking
b284534 librados: rename AioCompletion::put -> release
0e67ce6 filestore: escape / and leading . in object names
c4c9fb6 mds: allow online changes in mds_log_max_segments, events
522b6ca mds: move 'buf' column to right
d490bd7 osd: only update peer_info if !noop
7878e38 mds: log memory stats to mds%d.mem
a47ad22 librados: basic snap api?
3133932 radostool: add 'get' and 'put'
726adea radostool: add simple radostool shell
1e8f726 add Completion class
3a54484 objclass: trivialmap
99be4f1 objclass: add support for c++ methods
57271df librados: clean up snap and ctx a bit
e22f0a9 buffer: add ability to claim ownership of memory allocated via new or malloc()
966f26e librados: aio completion notification via a callback
18d136c Added testradoscio.
53ec401 rados: can set snapshot sequence
411adab rados: fixes for dynamic oids
e78a3a1 memorymodel: fix crash on weird input
1644e1d rados: rados.initialize returns negative on error
b2cc702 rados: rados_initialize returns negative on error
edb2f80 osd: add 'osd pool rmsnap poolname snapname' command
48d43e1 mon: create pool snaps
7c035e3 osd: use the pool snapc if client doesn't specify one
766069e osd: handle removal of pool snaps
1c3fe56 osd: purge snaps on a per-pool basis
9967c69 encoding: kill T* templates
dd4db22 kclient: parse expanded pg_pools in osdmap (now with snap info)
41a38d4 rados: include pool_snap_info in pg_pools
b0a958a rados: fix includdes
6c42339 rados: comment SnapContext fields
6765374 mds: share max_size updates even if cap is suppressed
2ab1bf3 kclient: use capsnap to get snapped file size
4225176 kclient: independently track size of address space
d356911 kclient: fix truncate_pending up in fill_file_bits
bd90e3f kclient: do all truncation outside of i_lock, via helper
3158316 kclient: move max_size update logic into ceph_get_cap_refs; fix race
4204453 mds: allow cap updates to root inode
07bdbfa kclient: fix snap_rwsem vs s_mutex deadlock in ceph_inode_set_size
0eae70f mon: set seq properly on mds takeover
95392b3 osd: fix sub_op_push wakeup on pulled object
86ef54e object: pass const refs to comparators
db943c0 rados: pgls small cleanup
0c28def rados: pgls fixes, uses context
c60bf49 filestore: nicer filenames for CEPH_NOSNAP objects
e6804f8 osd: clear reqid in backlog log entries
40acf6f osd: don't index BACKLOG caller_ops
fa7b0a5 mds: keep only one dir commit in flight
434fade osd: rev osd protocol, disk format
82e9a9a kclient: specify object id as string
c0a1e11 raods: minor and merge fixes
76ad687 rados: list pg, first take, partially works
9d07dd3 osd: add PGLS op
b6c7b94 osd: nicer pg log object names
344a9a6 osd: clean up object_t args
a90d876 osdc: clean up object_t args
b7939e0 rados: clean up object_t args
f18e448 osd: kill pobject_t (use sobject_t throughout)
2818544 os: const ref (p)object_t arguments where possible
af4b5d4 osd: make object_t a string
e071d19 osd: fix obc ref counting
4546bd0 osd: fix object context registration
df3b7ad osd: fix replication
4a3dfcb filestore: fix build error on 32-bit
290330e objecter, rados: constify write bufferlist& refs
3603dad rados: c++ aio methods
f872659 mds todo
5268892 uclient: fix snaprealm update in add_update_cap
7ad8798 mds: purge preallocated inos/files when client disconnected
3551be9 kclient: correctly set REPLAY flag in requests on replay
f23717f mds: replay all old client requests before handling new requests
0e0b557 crushtool: fix warning
44d24de mds: no early reply when request has slaves
c9869fd rados: add pg (non-object) ops
60917d9 rados: fix warning
e98aa17 rados: test aio write
d84ef63 rados: rename aio_free to aio_release, fix bug
bfe84e6 filestore: add collection_list_partial
5cca7e1 class: add cls_read api function
11a5655 todo
eaa9a05 rados: first pass at aio interface
1eb6440 class: able to update classes in runtime
fd4260f class: classhandler locking cleanup
c56615c mds todos
b93918f osd: cleanup types
3d6855b logger: fix warning
b9dd08a osd: include client ticket in MOSDOp
b9bca9c logger: limit precision of averages
d020419 initscript: fix instance check, again
7ae61e1 cosd: bad disks in cosd3
b2ebd5e cosd: fix typo
79b06b2 autoconf: check for openssl dev files
77d78ba class: added file
80e8584 kclient: max trim_caps actually work
3943f96 mds: trim client state based on # caps, not real memory utilization
7ba4845 mem: gather meminfo stats
50558df mds: encapsulate /proc examination in MemoryModel; calc heap size
e92b7c8 mds: some infrastructure to recall state from clients when under memory pressure
03d84f1 vstart: pipe down
711e300 kclient: trim caps on demand
cb8018f kclient: rework iterate_session_caps
72380f0 kclient: make session cap list an LRU; combine touch with check for issued caps
3db66ad class: added a crypto class that does md5 and sha1
42cb3f6 class: dlopen uses RTLD_NOW instead of lazy loading
8447f18 class: rdcall implemented
f789410 vstart: fewer pgs
ec08459 osdmaptool: fix usage
a2942af buffer: fix hexdump formatting
1f87d00 osd: ship transaction (not op) to replicas
8eb0c4e kclient: avoid null resv ctx dereference
0ebda4a osd: move object_info_t, exists, size into ObjectState
41cee82 class: dependent classes are loaded automatically
e7a1225 class: utility to load classes
4d5a87f kclient: fix cap resv BUG
6481802 filer: fix probing when recovered size is 0
568d745 kclient: put readdir max entries in mount options
44ff8b1 kclient: rework cap reservation accounting a bit
f8d4836 initscript: fix instance check
31d17fc cosd: journal to a dedicated disk
62a0ded osd: fix PG::IndexLog unindex()
e48bc19 initscript: remove notreelog by default
d47415d script: fix req format in osd latency check
cf57e06 filestore: stop sync thread before journal
3110c17 osd: create journal of specified size during mkfs
ee9be54 kclient: avoid d_time reuse s.t. leases and dir rdcache can coexist
93a6f3e mds: look at loner issued|wanted in file_eval
4bd9a9e rados: aio prototypes
8e9d10f librados: display result _after_ wait
095f79c class: don't add a class when no valid binary is supplied
2f26c4d osd: don't send reply on message that got EAGAIN
8ca227d osd: show error string in reply msg printout
8528d46 mds: fix EXCL -> * check in file_eval to use loner_wanted, not issued
a6dd5a6 vstart: set debug levels in conf, not cmd line
91972ad librados: remove length args from C++ interface
cb29e2c makefile: don't build fakesyn
15a8b9f osd: some cleanup, todos
4473c11 kclient: fix READ|WRITE check
3ad9ce2 osd: remove some dead code
eda5079 osd: prepare clone before write op
e6cc012 osd: track ObjectContext for cloned objects
eae14f5 osd: implement rmw mode
497998e osd: move everything into do_op, log helper
0c205a5 osd: only register the ObjectContext if we go on to write
4c34cce osd: unify read and write paths
3c72caf osd: break apart write stages, transactions
1636113 filestore: apply multiple Transactions as a unit
c36100b osd: clean out zero->delete munging
553eff0 osd: clean up op_modify a bit
4c64663 class: when class not found, don't wait forever
920a8a9 class: fix class removal via classmon
f0e65c2 class: cmon doesn't crash if can't find requested class
3a07498 class: some cleanup
d1c440a class: paxos distribution of class operations fixes
75597d2 class: some fixes, testrados works again
b10c2ae class: same version, multiple archs work
474f4c9 osd: unify ReadOpContext and WriteOpContext -> OpContext
c2012f3 osd: refactor pick_read_snap into find_object_context
7256871 osd: always set snapid in MOSDOp
4a37091 osd: check/change object mode in response to ops; fixes.
14ee192 make: fix libtestclass.so name
ea68018 class: fix class storage
c91327b class: add architecture to version
0cdc968 osd: some ObjectContext changes
ced9929 osd: don't look at snapid if may_write().. it's not defined (see snapc!)
9fc4da8 osd: fix pg locking in handle_op
94d5f1e class: remove default test class
62c409e class: osd specifies class version when fetching class
0602e55 osd: ProjectedObject -> ObjectContext; object access mode state notes
48801c1 osd: reorg handle_op; turn off preprocess_op
83cdb0e class: fix a class version issue
99c4fcf class: string class version can be specified
33d5b98 rados: add 'remove' operation
67baf00 rados: supply a C++ api
6e12a89 class: don't return nonexisting method
b8228b3 osd: describe osd ops as READ, WRITE, or READ|WRITE
e039780 objecter: kill inc_locks.
9a37e17 osd: add WriteOpContext; some refactoring
34e0906 osd: push all the read state into OpContext
dbe0e3b librados: don't care about mds messages
f9bdfab librados: use generic C_SafeCond and wait safely for acks
13f1998 class: fix warning
85f5609 osd: return immediately after -EAGAIN
2969e84 osd: don't free message on EAGAIN after get_class
8b4b822 librados: keep bufferlist on the stack
faa61bd class: pass context to method execution
20e3d32 osd: some interface change in do_read_ops, uses context
d0bac06 rados: look up pool by name
00d9174 kclient: import into fs/staging
15dec9c makefile: remove unneeded libtestclass_so_SOURCES
36f70f4 header comments
b566903 osd: get rid of the grep op
a05f6ef class: able to list loaded classes on the monitor
284161c (tag: v0.8) kclient: kill dput/d_drop debug cruft
ba73ac8 kclient: remove bookkeeper
e3efa40 kclient: fix kbuild.patch for 2.6.30
de954bf changelog
8ec32b2 osd: factor out do_read_ops helper
ee4c55c todo'd
82031ad initscript: fix instance check
ddfb2d7 mon: send mount error to client on EPERM or protocol version mismatch
01512cd kclient: fix mount err reporting
d302207 osd: handle errors on rdcall
2e03c11 filer: make probe recover size and/or mtime; fix some bugs
3b6db0d osd: cleanly implement OSD_OP_STAT
31adbd9 kclient: fix compilation error
bdc16c8 class: end to end method execution
b064ed3 uclient: fix missing cap behavior
507cd9a kclient: style fixes
bd5319b kclient: strip trailing whitespace
de0611c initscript: make sure cmdline instance exists
04e072c kclient: make bookkeeper compile when not in .config
9359168 mon: use generic C_Command in ClassMonitor
9fd68cd kclient: disable bookkeeper when including some kernel headers
791d916 osd: clean up output
3563d61 mds: drop mut locks after file_recover_cow
76d831d mds: fix caps issued on snapped inodes
0e590b7 kclient: keep page locked after page_mkwrite call
e7036c8 kclient: disable bookkeeper when including some kernel headers
b763653 class: fix compilation
a3df8f7 class: moving ClassHandler to common/
61c8385 debian: add KERNELDIR
9197648 debian: behave without Makefile
afb4256 class: some fixes
2ff889c class: some api implementation
9ec4326 osd: fix compilation issue
bbb682d class: add register/unregister
4726252 class: remove initial test class
b799837 class: typedef method, use C style naming
72b5883 class: rename ClassEntry.h -> ClassLibrary.h
5d43e27 mds: kill fugly arg to rdlock_path_pin_ref
713da5c mds: rdlock filelock during readdir
3caa386 mds: no rdlock in filelock LOCK state
f275b45 mds: drain wrlocks before going from LOCK->SYNC in file_eval
2956352 class: basic api for class, call class_init when class loads
a2871f1 rados: define rdcall, wrcall on arbitrary class, method
586b1cb osd: make classhandler requests async
959848b class: rename ClassList -> ClassLibrary
79a14d0 class: rename ClassLibrary -> ClassInfo
89c826f rados: only export rados_* from librados.so
3b6a6f1 .gitignore update
c840445 mds: break CAP_RDCACHE into CAP_SHARED, CAP_CACHE
4ba1d99 kclient: don't skip EXPIREABLE caps
a9c98e0 class: can use ceph utility to add classes
c0aa0e2 kclient: fix crush decoding for recent changes
56cc833 rev osd protocol, disk format to reflect crush changes
bc58419 crush: fix crush_perm_choose; optimize r=0 case.
041e417 class: handle class_set messages
5691ddd class: osd loads class
2ecdf8d class: osd can request and receive class data
0c2871f psim: count result set sizes
904b299 crush: fall back to exhaustive bucket search for any bucket type
94983dc crush: ditch prime number theorem; generate random permutation on the fly
39f31ae crush: improve uniform selection a bit
b821a4b testrados: C, not C++
a379c3c librados: fix up #includes; use C for testrados
6fd390d rados: build librados, libcrush using libtool
12bfb53 librados: drop librados/ dir.
ae02970 librados: build the .so
2a0faaf librados: rename c3 -> librados
a6fe0fb c3: remove unnecessary include
651ff74 class: partial implementation of class osd mon messages
3eecfe0 class: remove redundant fields from the class library
eb2df1e class: add class name to the library list
e0be965 class: fix class decoding
dbe457f class: add a class monitor for the paxos services
1d70c0b c3: exec op string
959c821 c3: handle unhandled message
035c5f6 c3: rados merges issues
123540a c3: implement exec poc
5d564b3 c3: fix rank
e65c283 c3: fix rank static allocation
c5cdc4c osd: add an exec op
9af8745 c3: create a very simple interface
3b6876a c3: mount through MonClient
d22787d c3: add mount/umount to mon client
51521a8 s3: add read to unitest
88e4c81 c3: ceph simple interface
f528c89 mds todo
7ce1f09 kclient: fail connection when s_addr==0 and port/nonce don't match
75ebabf mds: maintain capid across mds restart and client reconnect
9689aca mon: don't replace standby mds
9cc6958 mds: handle MMonMap
5d51f27 journaler: fix replay
3428526 osd: based reported eversion in pg_stat_t on same_primary_since
25d7b08 osd: skip initial bit of peering if already have_master_log
94ea226 mds: fix loner drops
1424a36 rev protocols
ceac0e0 debian: new rules file.  don't strip.
9418e28 osd: fix accounting .snap thing
88ee0d1 todo
0fca6d3 conf: improved sample
f673908 mon: check for osd exists before up/down
026166f osd: maintain up_epoch AND boot_epoch; revise OSDSuperblock accordingly
dbf03b6 osd: add back in support for unversioned sobject_t (.snap=0)
91ed56a osd: use / in sobject_t output
18851ce osd: adjust heartbeat peer lock
79f9c3c osd: reset heartbeat peer set on osd down
f738ef4 buffer: add malloc raw buffer type
24f8b80 osd: adjust snap collection memberships during pg split
ddbadfe osd: adjust pg_stats during pg split
c24acf8 osd: generate correct child pg when doing pg split
89aa789 ceph: don't choke on unexpected MMonMap
9aecf17 osd: factor out clear_recovery_state from {cancel,finish}_recovery
c9ba42b osd: make sure _finish_recovery only completes when it's supposed to
26681c5 filestore: fix object filename parsing
1f7a21d cosd: debug filestore
1b9babf mon: don't send mdsmap on client mount
aa0a9f1 kclient: don't wait for mdsmap on mount
975c800 osd: set snapid in read requests
530aad3 uclient: use MonClient for mount + unmount
fda9dbb monc: add mount/umount to mon client
3da7ca1 objecter: fix osdmap requesting
bb27c54 osd: fix pg splits vs lockdep
ddaa5e0 mon: 'osd pool create foo'
a6d4eab todo
fc057ff osd: move .snap out of object_t
21c8b59 osd: do not use ebofs
e34f6d1 ceph: break up ceph_fs.h header into msgr.h, rados.h
05466ba kclient: recalculate pgid each time request is sent
d90ebc8 mds: include CAP_PIN in caps_liked()
2c980d1 osd: fix bug in recovery ops accounting
c5e64e1 kclient: a few sparse fixes
563024f mds: only issue sensible caps on directories
0c3becd mds: make eval take a mask; kill try_*_eval
7c344e6 start v0.8
be072be (tag: v0.7.3) msgr: kill static instance 'rank' of SimpleMessenger
2519f3c msgr: clean up refs to static 'rank'
08daaa4 uclient: clean up mount wrt osdmap, mdsmap
497ade3 journaler: store layout in journal header
b5c4b54 mds: clean up layouts
0bf1a8e osd: more pg_pool, pg changes
9b39a63 kclient: fix page_mkwrite for 2.6.30
8718007 osd: typo
56170a8 config: fix pg pools in default file layouts
840813a osd: fix up recovery op accounting
e0d92e9 todo
aee6335 kclient: retry 2x on ESTALE; fix up mds reply error paths
888a760 kclient: fix symbol names without 'ceph_' prefix
2a96b68 kclient: add missing parameter
ce011f2 conf: added missing allocations
63ef9f1 mon: track per-pg_pool usage
3865b6a config: make uninit var warning go away
0d33f93 osd: push pg_num etc into pg_pool
22f389d osd: clean up assemble_backlog
b72b34e kclient: don't allow to pass max file size
5da6354 todo
c301482 osd: make osd mark itself back up if it is marked down
851852d mon: optionally dump specific osdmap epoch
91a96db uclient: update dir inode, cap from reply
12631f4 vstart: --nodaemon to run via crun and -f (so that gprof works)
8949828 uclient: take inode ref when dirtying inode
aa82aff initscript: default btrfs mount options notreelog,flushoncommit
86e1325 cosd: use \ in dev list in .conf
8fc8b5b osd: fix merge_log split point
7935a2d mon: order log entries as they're committed
917bfcb mon: adjust log levels
7a7a6e9 todo
3b9e05f assert: turn off tls in assert macro
9f1f262 kclient: mark caps sync in check_caps writeback path too
53ba086 kclient: added missing include
573c3e8 todo
e286a7e osd: make pg pools resizeable
9c0b3eb todo
8bc2bfa config: -v or --version to print version info
f4fc04e mon: make down->out osd occur despite mon restarts
e0b883e cosd: no valgrind for now
fd6e6d0 common: add some colors on startup (errors, warnings)
d99ed0a conf: fix allocation
86cf106 auth: some leaks fixes
bd4e779 conf: some more leak fixes
c6e8cbe conf: some more leak fixes
bbb81a3 cmon: redo remove backslash from end of line
af07922 conf: remove backslash from the end of line
c4cf294 conf: add backslash line continuation
76bfc47 todo
232c21a mds: use interval_set for ino allocation
de880ff mon: only log osd boot once
512c7ef osd: fix merge_log when split point is divergent
fc11885 kclient: avoid spinlock recursion
84c55ed conf: remove some memory leaks, still have some more
f90404e updated sample ceph.conf
b33f706 initscript: cleanup debug
f960d7a osd: fix pg missing updates
f8b552e osd: do not advance past split point if it is not shared
24b4d79 initscript: run valgrind with specified options
f8dc1a5 osd: reformat osd map dump
7276b3d osd: set mtime in backlog log entries
b30c5ff initscript: modprobe btrfs and btrfsctl -a before mount
93a05f7 mon: fix osd mark out code
18caea1 kclient: fix dcache_lock ordering
b56efbf mon: allow clusters of size 2
030ca53 mon: clean up log msg formats a bit
75a6c1d mon: don't log 'osd alive' updates
bb85101 osd: only trim pg log if pg is complete
7ae8ed2 osd: set osd down -> out interval to 5 minutes
73b17e6 osd: make sure pg_stats_t.reported increases
4d431b6 makefile: add missing Spinlock.h
2d52741 mds: make eval_caps safe on non-auth
00f62f8 mds: eval_caps on cap removal
a7b7ff5 journaler: fix flush bug
025041d mon: avoid duplicate log entries
6e3cec6 kclient: some sparse fixes
7505e9f kclient: stat -> getattr
3857f00 mds: clean up mds args (rename stat -> getattr)
83dee3f todo
c8abf51 mds: consolidate loner checks
5e3d2df mds: fix get_caps_issued shift/mask bug
69b8602 uclient: do local lookups if FILE_RDCACHE on dir and rdcache_gen matches
398f2f0 kclient: requeue inode whenever we dirty (use) EXCL|WR caps.
22d2987 kclient: queue cap or delayed check if we get unwanted WR|EXCL caps
f58079b kclient: fix delayed counter in check_caps
aec1203 journaler: write out objects as we complete them
36913b5 todo
9e98eba cosd: conf changes
1c46fbd mds: finish waiters for root (fixes mds recovery)
8c30d33 mds: only delete mds on clean shutdown
96dd4b3 trivial cleanups
04dc763 mon: replace mds even if state < 0
cdb8976 init: killall || true
c42ed2b config: set g_daemon flag; only create pid file is daemon (even if in foreground)
e90ed79 cosd.conf: more disks
8acecb1 mkcephfs: modprobe btrfs; create mount point earlier
b692259 spinlock: pass 0, not NULL
96beb1c kclient: drop i_lock over dput in dcache_readdir
611cf8e kclient: preserve dentry readdir offset during a rename
700e3c4 todo
535bc3f mds: avoid journal flush on max_size decrease; clean up some flush checks
b6bdac0 mds: make is_waiter_for() efficient, maskable
bafb499 mds: kill unused purging xlist
cfb3583 mds: move leases to dentry only; use map instead of hash_map
f602d4f debug: fix memory leak
9dee087 logger: fix memory leak (kill timer on shutdown)
b7ff29c kclient: move igrab, __mark_inode_dirty into __ceph_mark_dirty_caps
d3ece53 buffer: cleanups
47045f7 atomic: use a spinlock instead of a mutex
6442494 spinlock: add support for pthread spinlocks
d0b7c57 vstart: valgrind select components; make tool + args selectable
c4d1f15 mds: kill unused cap updating field
ceb2a3b mds: delete mds on shutdown
5ea5e67 journaler: put magic in journal headers
3806055 mds: fix root fullbit memory leak
20d68a2 buffer: make hexdump non-inline
8207f9c kclient: fix blob size initalization
9f456a3 mds: add/remove inodes to/from open file list based on wanted caps changes
f24baf5 mds: fix file_excl() call preconditions
ee5a63c mds: avoid dup locallock wrlocks
83c880c kclient: reorder setxattr to avoid race
a68bfa1 kclient: removexattr marks inode dirty when required
4bc6291 kclient: break I_NODELAY into NODELAY and FLUSH
2d1e6dc mds: rewrite scatter_tempsync
74907b2 vstart: selectively run mds through valgrind
5fc8205 mds: drop unused mdr->cap
27b1972 mds: remove debug msg
4b8036d kclient: helpers for mount options
a8deb11 kclient: fix dcache readdir bug; add mount option to turn it off
7d04390 mds: init var
939787b kclient: setxattr cleanups
0af0f45 mds: issue all caps we can (except RD|WR on dirs)
95d4d52 mds: fix snap.c debug prefix
7ae4ddd kclient: drop RD, WR caps on file lock setattr
2c3690d mds: use actual cap wanted, not requested
14f47c5 mds: allow request_release to update wanted; do so if I_NODELAY
5bb63d1 kclient: fix up cap timeouts
1ef1316 mds, kclient: fix issue_seq vs seq, limit dup cap messages
6ccb97f mds: consolidate calls to issue_caps
91f52b9 kclient: silence down log messages
f46db4f kclient: add missing initialization
fee4d7f kclient: fix xattrs cap message
9b745ec kclient: merge asyncxattr
4767269 kclient: refactor setxattr, listxattr
48d9fc9 kclient: fix removexattr
fadaa7a kclient: fix some leaks
d18b354 kclient: xattrs, selective rb erasing, fix tree tear down
6de31cb kclient: make listxattr actually work
8e44f03 kclient: xattr name length fixes
bb9e410 kclient: initialize xattrs version
7d4de7b kclient: send xattr name on setxattr
50ce3cb kclient: verbose xattrs
22dfd1b kclient: list, get cached xattrs
e370937 kclient: don't copy null xattrs blob
a61bef3 kclient: send xattrs blob when dropping xattr rdcache
51788b5 kclient: preallocated buffer for the xattr blob
e838f56 kclient: xattrs cleanup, preallocate xattr structure
f6382ba kclient: don't rebuild xattr rbtree if exists
192d56f kclient: fix some more xattr stuff, basic stuff works
af48904 kclient: some more xattr fixes
731822a kclient: xattr initalization and bug fixes
895477f kclient: xattr uses rbtree for indexing
a566a59 mds: fix CInode::get_caps_wanted to do the shift on returned mask
31a0d5f mds: move simplelocks (auth, xattr) to EXCL in simple_eval
59eae6a kclient: assign meaningful readdir offset to client-created dentry
f21a082 mds: add mds_max_mem conf item, hook to check memory utilization
f0813fb mds: trim cache during tick, not every request
ec71ed4 mds: put mds format magic in root inode, journal; check on start, replay
55e3851 context: return error from C_Gather
9a00bc9 mds: kill rdcaps code
be6fdbb mds: count caps, inodes with caps
714bdca todo
36c133c kclient: fix up dcache readdir
308294f kclient: initialize xattrs version
de57c08 kclient: send xattr name in setxattr
fa6f9fc uclient: make O_CREAT work
d4742c1 kclient: do readdir from dcache when possible
be1baa9 filestore: clean up attr name, path buffer lengths
979583f filestore: make path buffers longer
dcd827c scripts: fix mds and osd request latency checkers
be60e30 mds: flush log in do_cap_update if there are unissued but wanted caps
9c55e30 mds: issue caps as needed in xlock_finish
ead910f debug: make log symlinks relative if dirs match
f9a4818 mds: eval_gather on cap removal
96a13d4 mds: never issue caps in file_eval
fbd11d9 mds: hide stray dentries and inodes that are purging
b3af208 mds: reorder some code
7eee8a8 mds: use rdlock_path_* for rename; fix helper paths
bf96e2e mds: make dn vec accurate after rdlock_path_xlock_dentry
a2bc5a1 mds: store up to two paths in MDRequest; generalize rdlock_path_*
bce7044 mds: kill mdr->ref_snapdiri
5e24537 mds: move done_locking into acquire_locks
df14710 mds: acquire_locks in callers, not rdlock_path_* helpers
9d4d3d1 mds: refactor path_traverse, callers
64295cf todo
b1c02ce vstart: behave a bit better when sudoing
3b1c513 kclient: allocate cap releases outside of spinlock
8dd39cc kclient: use FLUSH cap op on cap writeback
7e7d1ee kclient: only check auth cap for WRBUFFER, max_size checks
1d8b820 kclient: switch check_caps interface to use flags field
a532955 kclient: fix setxattr
f0320c5 kclient: kill ceph_release_caps and check_caps drop arg
3832dad kclient: fix up cap/wanted delayed release logic
145b7e3 mds: don't reissue caps on embedded request releases
3424847 mds: default to issue_caps in file_eval, _unless_ we are dropping caps
814c629 mon: make log messages a bit nicer
3994833 mds: journal max_size update as loner, if any
b63f127 kclient: less chatty
c48c720 mds: include cap, dentry lease release in request messages
2db1436 mds: avoid dup change_max in _do_cap_update
e2cff3b kclient: dequeue cap on non-drop send caps
4ab3e35 mds: drop 'careful' caps concept
68b83d6 mds: choose reasonable state after xlock finishes
fcb5f0c mds: better max_size lock checks when EXCL
bec3449 mds: stay in EXCL and keep loner until wrlocks drain
400e5f0 mds: clean up can_wrlock() so that it checks of loner
1a52cf1 mds: replace WANT cap op with DROP
fd55fa3 mds: use EXCL instead of LOCK to adjust max_size if loner
123f621 mds: don't rdlock_try authlock for path_traverse permission check
3854881 mds: issue caps in file_eval only if needed, indicated by WANTED cap op
cc2e18d mds: fix file_eval to issue caps from EXCL state
45525d4 todo
557af5f kclient: only flush caps in write_inode if wait=1
dbb6036 kclient: maintain min and max cap hold delays
33c2e49 kclient: drop FILE_RD if !wanted and max_size non-zero
24694e3 mds: adjust mds client request format to include optional releases
4f50d83 mds: separate CREATE vs OPEN handling
79abc98 mds: allow full dir lease (FILE_RDCACHE) on root ino
b723bca kclient: drop root ino special cases
ccbcd3b kclient: mark dentries with dir rdcache_gen, not i_version
9d74bbf kclient: don't clear I_COMPLETE on dentry revalidate failure
dcf61d0 kclient: reverse logic of O_CREAT create vs open check
45f04b7 todo
4eb5ac2 config: remove INSTALL_PREFIX
ca723a2 uclient: fix up caps some.  make dentry leases work
7f61d63 uclient: set fsid in statfs request
074dc38 kclient: fix ino returned in fstat for 32 bit arch
8dd782f kclient: don't alter mds_wanted caps if dropping caps
95604db vstart: kill bashisms
4a972d0 kclient: remove alignment restrictions on O_DIRECT reads and writes
5faa828 mds: fix compilation error
accb18c mds: bump mds protocol
72c1932 mds: add CEPH_CAP_OP_REVOKE
23a41e4 kclient: clear di->lease_session when dropping session
8e87ea3 mds: flush log when expanding caps and filelock is unstable
a1c904b mds, kclient: add CEPH_MDS_OP_CREATE operation
3b585ed kclient: implement permission iop
f7d206d kclient: make do_getattr take inode, not dentry
afbc8ea kclient: d_alloc_anon on older kernels
9892183 mds: make sure kick wasn't immediatley fruitful in rdlock_try
b70721e mds: simplify EMetaBlob interface - don't pass explicit inode_t pointer
2c822ff mds: fix journal replay
b1af668 mds: journal projected inode values by default
cf61768 vstart: run valgrind properly
aee59b1 todo
a7ab44b mds: make mds restart work
c8dc035 mon: fix mds stopping and restart
c31ba43 mds: fix permissions checks on root, system inodes
dcc9bc4 mds: journal root inode changes
3321cd4 mds: inode fetch/store
3ba1175 objecter: only send one ping per laggy osd
95710f0 objecter: add support for compound read ops (ObjectRead)
b1c0073 osd: implement GETXATTR read op
365105f kclient: better readdir debug output
83c9f4a mds: make rdlock_try kick the lock if it blocks
fdf99b5 mds: issue AUTH_EXCL on mkdir
e6b7299 kclient: drop LINK_RDCACHE cap on rename source inode
0b32433 kclient: update cap->mds_wanted on revocation reply
ff2c0c5 mds: do not want LINK caps for any open file; no non-FILE caps when readonly
86b79af kclient: drop any unwanted caps when unlinking a file
6e2e4da kclient: send messages with default priority (to match mds)
04ac4cf msgr: show seq # of incoming messages
3b2a105 mds: alloc wrlock by EXCL client
065ecd1 mds: don't issue new caps with a revocation
e030885 kclient: queue inode for cap check if mds_wanted mismatch
dab345d mds: fix wanted updates
7f538a1 mds: clean up issue_new_caps interface
fb16331 kclient: fix session leak
5b7c5c3 kclient: grab inode before queue_cap_snap; cleanup
cbabe12 kclient: fix some log messages
c1629b6 uclient: mksnap/rmsnap via mkdir/rmdir
66fa179 uclient: remove some dead code
5954fd6 kclient: protect realm->inodes_with_caps_lock
c92e997 kclient: protect session->s_caps list with s_cap_lock
72dd9a0 kclient: adjust caps accounting a bit
7b4636b kclient: link snap dentry for MKSNAP as well as LOOKUPSNAP
6e967ae mds: include target inode in mksnap result
a0e9549 kclient: fix readdir dup requests
e085e5d uclient: fix up snapped path generation
c1934a5 uclient: fix reply trace
0702554 uclient: fix root inode open on mount; fix readdir
551c7a0 uclient: use new mds protocol for replies
111c032 mds: kill symlink following in the mds; handle this on the client
c6e0abe uclient: big refactoring
4c75c36 mds: cleanup
1d0c8ab mds: fix open on snapped files
ce93cc9 mds: fix open on snapped files
959a18f kclient: fix opens on snapped files
9d53eb5 kclient: special case LOOKUPSNAP in fill_trace to add in the dentry
1463020 mds: clean up path_traverse vs snap interface
ef37e0d kclient: send new LOOKUPSNAP opcode
cde4e3f mds: add LOOKUPSNAP op; synthesize snapname dentries in replies
90ec742 mds: make lssnap use new readdir response format
d040e34 kclient: snap snapdir fixes
eb32f44 kclient: some list handling api cleanup
ffcde4f kclient: remove leaked preallocated cap releases messages
58ba66f kclient: lookup is the only vfs call on which we init the dentry
fee66b3 kclient: don't free dentry private data when dropping lease
44b535b kclient: fix compilation error
2483bbe kclient: change dentry private data initialization scheme
5d46671 start v0.7.3
6a0729d kclient: drop caps in setattr
3b135e5 mds: flush log when waiting on xlock
e787348 kclient: fix mds session check in update_dentry_lease
68a380b kclient: reduce log levels on some messages
5c97dab kclient: merge conflict
7b63dab kclient: adjust nfs reexport
6b8ffa6 kclient: refactor message creation
2a71709 mon: log quorum on election victory
54987e2 kclient: make some get/put_cap res methods static; allow reclaim
126cd84 kclient: some cap reservation cleanups
573de83 mon: log monitor election events
436a4b8 kclient: remove bad iput from check_delay_caps
86ed05c mds: make open() _not_ follow symlinks
fd27816 kclient: make ceph_lookup_open on symlink behave
4c89deb mds: replace FINDINODE with LOOKUPHASH
b08e8d6 mds: simplify mds command set
10d7631 kclient: simplify cap flushing
2626d4b kclient: fix caps reservation cleanup
f6ee8ee kclient: caps bug fixes, less verbose
0424cfe kclient: small adjustments
dcaca3e0 kclient: debugfs for caps reservation system
76453ca kclient: caps reservation system
69050a1 kclient: flush dirty inodes on sync_fs
68c3189 kclient: read each frag over multiple readdir calls, as needed
e0da8d3 kclient: fix mds reply error codes
60b950f mds: include 'last', 'complete' flags in readdir reply
64e6ded mds: kill CEPH_MDS_OP_FSYNC
0e27214 kclient: fix fill_trace comments
7b4da89 kclient: use kmem_cache for caps
3951b52 kclient: add missing ceph dentry init
1b8b3c3 mds: all request paths must be relative to a non-snapped inode
f2cb274 kclient: generate request paths relative to a non-snapshotted inode
ace82ea kclient: only flush caps to auth mds.  wait in write_inode, if asked.
9d1eff1 todo
d0a654b kclient: roll up setattr helpers into a single function
2db15ce mds: roll up various ops into single SETATTR
6d73799 kclient: small bug fix
ef29431 kclient: add dentry lru
58e6a82 kclient: pin inode with FILE_WRBUFFER cap refs
6208f57 caps: track last_issue seq, check on release
ca070e3 kclient: make ->write_inode() flush dirty caps
47f798e mds: leave simplelock in EXCL if there is a loner
49d8bca kclient: fix flush_ack cleaned logic
d306df9 kclient: drop old_atime cruft
80b576f kclient: fix cap_release accounting
6445270 kclient: no need to clean out cap_delay_list
8ef8db9 mds: release caps only via cap_release
45ff6c0 kclient: never release via client_cap message
87f4de2 scripts: make mds request checker show the operation
4fe37b0 mds: disallow setlayout on non-new file
5b8d405 todo
3136418 kclient: release caps in destroy_inode
220c41c mds: add bulk MClientCapRelease message
55a5453 kclient: do not pin cap inodes
3e69829 kclient: pin dirty caps
e20c361 kclient: drop cap lru
ee2736e kclient: only request wanted caps if they aren't already issued
3c9cc24 caps: fix CEPH_FILE_MODE_RD caps (no WR!)
902a117 mds: try choosing loner on encode_inodestat
5c0fb6e mds: avoid going to MIX when unnecessary
ab7420b kclient: do async wanted adjustment on open if we hold any caps
a92e75e mds: issue FILE_RD+FILE_RDCACHE caps speculatively
afcbfd5 cosd: dump error when failed to mount, fix logs
c33ef1f cmon: add mds state changes logclient notifications
afdda99 kclient: fix touch_cap; release old caps
def2748 kclient: make clean_caps lru; explicitly release old caps
facfff1 cmon: less verbose
1c448a3 kclient: drop rdcaps (cap expiration) in favor of clean_caps
4dd5a3c kclient: drop cap renewal
e0013f4 kclient: keep track of which cap is authoritative
9bed373 osd: add logclient state changes
3f0cee1 kclient: drop unused USE_CAP_MDS
98d896b kclient: remove unused dentry in ceph_open
c287bd0 more cap notes
82960da kclient: take CAP_PIN refs on requests
3c48083 cap todos
6b76607 kclient: i_pin_ref
ee507a4 kclient: fix deep mount refcounting on s_root
659fcfc mon: avoid dup umount log entires on client unmount
c8d9a09 mon: clean up client mount/unmount messages a bit
87850dd mon: use separate message type for log ack
23167ad mds: fix rename common parent checks
6e62707 mds: expose projected inode to loners, even if they don't have EXCL yet
6612493 kclient: handle mds replies with no trace.
694582f cmon: add logclient, mount/unmount messsages
d37034e mds: fix rename common parent checks
1b7cc4a kclient: clean up
b143747 kclient: d_move only on rename
dbe6606 mds: expose projected inode to loners, even if they don't have EXCL yet
3489516 kclient: add a "show_bookkeeper" entry to debugfs
24ee9ca mds: return open dn to client when it wants it
5464051 partial cleanup of snap related ops.  still not really working.
c5a58f7 common: fix buffer::list::read_file, add buffer.cc
cb7269a conf: ressurect the g_conf init_stuff
f2dd55a kclient: cleanup some sparse warnings
d62a744 kclient: replace crc32c_le with crc32c
6d31cc7 kclient: set s_root, fix misc refcounting
bfe8af7 mds: include diri in readdir result
f2a14a5 kclient: make mds requests relative to inode or single dentry
fb9c432 mds: simplify reply trace
c8fe66f filepath: leave off / if bare inode (no relative part)
7f36fe3 kclient: simplify fill_trace, mount
fc3f798 train wreck
cb8e9d3 mds: specify number of dentries want in mds request
710bcf6 todo
b105149 config: remove unused init_g_conf()
ad23ed6 buffer: make read_file check read(2) result code
bfd6a90f kclient: kill bad r_locked_dir in getattr
a6d4178 mds: fix unlink stray snaprealm reference
6ed1263 mds: make root dir default to 0755
8736af0 config: make log sym dir default to log dir
e878991 config: open conf file readonly
8fc3b8c todo
c055b56 mds: fix auth_pin vs xlocks
4c1256e kclient: fix r_locked_dir to match VFS locking
f0be3da debian: no restart on upgrade, no start
32a34ff conf: compare mon addr in monmap and in conf, warn
ecfc3f3 todo
416cc9d mds: avoid including caps in readdir items if snaprealm differs
20e03c8 mds: no snaprealm for stray dir is needed
6e3871c initscript: don't fail if $btrfs_path already mounted
d913f89 osd: separate CEPH_OSD_OP_* and FLAGS_* namespaces
4b738e8 todo
9483576 kclient: print reassert_version in /debug/ceph/.../osdc
8f38a4b buffer: check posix_memalign result code
411b381 kclient: clean osd read requests after receiving reply
4160adc initscripts: make do_cmd properly bail when command fails
565dae5 conf: exit if -c specified and conf file not found
b5ca501 initscript: fix .conf push to other nodes
46913ed todo
24ac254 mds: creation, subtree map tweaks
7357b56 kclient: fix default timeout values
d59cb1d kclient: add configurable caps_delay option
4261747 kclient: less verbose
71b99ad mkcephfs: fix monmap/osdmap copying
5a9e8e1 mds: fix fs creation, replay
9ebccd4 kclient: locally open file based on what MDS thinks we want, not what we still want
568969e kclient: properly maintain mds_wanted value
ea7344c mds: put pending (not added) caps in reply caps
d2923c9 kclient: do not retain unEXPIREABLE caps if !wanted
20086ac kclient: schedule check_caps if unwanted, unEXPIREABLE caps are issued by the mds
376d490 todos
ab592b8 kclient: debugfs cleanups
faa9643 common: reorder config option parsing vs defaults for daemonization
c72be99 mds: fix xlock authpinning
6cef95c kclient: adjust makefile, patch series for sysfs->debugfs
c34b922 monclient: fix error message to suggest correct arg (-c not -C)
9f8436a makefile: add new files
0f00c59 kclient: remove sysfs stuff
eca98f4 kclient: put all info stuff in debugfs
ee89098 todo
c27d93a crun: remove bashisms
56b9199 initscript: make crun/valgrind init arguments override conf
55c0204 osd: only set mtime if non-zero
6cd4de3 objecter: provide mtime for writes
eeb4b17 kclient: set mtime on writes
60909dd debian: which gcc/g++, not fixed at 4.1
13d7ba4 osd: set mtime based on client-provided timestamp
c2ce7c1 mds: rejoin dirfragtreelock too
84b2074 fakefuse: fix common_init call
f572d4a mds: fix xlock behavior
2f4ee29 mds: properly check xlocker caps
bf26f0e mds: set xlocks done _before_ setting trace dist
1353b3f mds: allow caps to be selectively issued to xlockers
52ead7c kclient: ceph_open caps check cleanup
7afa26c mds: restructure mds root directory
06f4281 mds: make scatterlock flush on mix <-> lock transitions, not just mix <-> sync
3243029 auth: fix uninitialized variable
a5bdede mds: add MClientMountAck
41766cd config: clean up common_init a bit
9803d09 initscripts: add default mount options
3251b15 auth: advanced auth config options
5251c8b kclient: remove renew_from from lease renew message
3b9ec08 protocol: add mount_ack to client mount protocol
c2410ce cstring: don't fall over on null initialization
6ad4c1f debian: description updates
aceb6ff Revert "mds: make CAP_FILE_RD expireable"
8a9893d ceph: ceph_client_ticket
313888a debian: improve description a bit
eaec24c mds: be sure to issue new caps _without revocation_ from encode_indoestat
5d733cf mds: fix get_caps_liked()
5610fa7 mkcephfs: create osd_data if it dne
1f99e6c todo
3895499 auth: fix case when mount sections are not defined
58aef96 conf: remove some junk
3814189 auth: added basic client ip authorization
57f0184 mds: do not issue non-EXPIREABLE|wanted caps
c952d11 kclient: always hit r_safe_callback, even if no callback
b29c8eb debian: fix changelog/version
466ca18 osd: fix osdmap timestamp updates; rename
23f2509 mds: add mdsmap modified stamp
205275d mds: make scatter_nudge a bit more robust
809080f mds: add lookup mds op name
ca34554 todo
7ae075f mds: remember scatter requests
615db12 mds: don't automatically bump dir locks to loner if it's a subtree root
2e0dc4a mds: fix ->mix lock transition
e259399 kclient: drop unused r_expected_cap
cf7106d mds: show laggy status in map summary
1bf9ce5 initscripts: remove bash-isms so they work with dash
c79c579 config: fix warnings
ed9f3ee todo
0575227 mds: make CAP_FILE_RD expireable
e044250 kclient: handle cap renew message
b0b214b kclient: renew old rdcaps when we use them
1dd2b3c kclient: choose cap op in check_caps, no __send_cap
58155fb config: allow arithmetic in default conf values in config.cc
4e4f538 kclient: adjust rdcaps status in cap grant
0013219 kclient: shift some work out of __send_cap back to ceph_check_caps
bbf44ac mds: clean up rdcap list handling a bit, show rdcap status in debug
22ce288 mds: process cap RENEW
f427162 kclient: factor out directory content lease/cap check
839e48f kclient: fix trim_session_rdcaps
f04aa20 kclient: less noisy
91d8b0f mds: reverse rename arg order when migrating or reintegrating strays
49b16ae kclient: use LOOKUP op for lookup
8bf11e1 mds: create explicit LOOKUP operation
25abe74 kclient: merge and simplify ceph_lookup, ceph_do_lookup
0232ac6 kclient: a bit more verbose about ?time changes
e0b9ef9 kclient: fix ceph_caps_issued_mask
4764e24 kclient: disentangle getattr from lookup
b1a267e mds: return NXIO for open on special files
525081d mds: flush mdlog for time sensitive ops
fa65938 mds: flush log on talbeserver prepare, but not commit or server_update
3f9b566 kclient: fix file refs vs special files
b4e78f8 kclient: fix lookup open intent
6e77a58 kclient: add osd sync that will flush all open osd requests
fda06a1 kclient: fix osd request kicking
8e5015d filestore: allow commit interval to be adjusted	at runtime
d67a463 configure: check for histedit.h (libedit-dev)
23b5c06 kclient: fix statfs sysfs entries init/cleanup
943127d todo: mds
51ffd75 mds: make mds_short_reply_trace tunable
d80a68d kclient: fix out_more business
041bfb7 kclient: remove /sysfs/fs/ceph/debug*
36e462a kclient: add debugfs for debug control
7ccc65b filestore: add missing mode arg to open()
ac83567 kclient: do not flush request stream on lease release
06884b9 kclient: make message stream flush optional
72e068e todo
3ea9811 kclient: rename listener -> unsafe; fix fsync; simplify dir_fsync
22b9ec7 kclient: fix inode refcount leak
bfd6a908 kclient: handle partial trace responses
2c933dc kclient: refactor osdc write; handle dual ack/commit, and fsync on sync writes
4ce68b2 kclient: do filemap_write_and_wait
d327d2c kclient: do filemap_write_and_wait
cf9c81a todo
d7fe34f kclient: drop unneeded current_is_pdflush() call
dbe3d7b bump version to v0.7.2
d8f4664 mds: return only a single path segment in reply trace
1e8073b kclient: fix uninitialized var warnings
aa1289b kclient: put_page O_DIRECT pages after read or write
0cccc18 vstart: only 1 mds
e6b7a89 kclient: make O_DIRECT io flush or truncate page cache pages
48e5907 kclient: more cleanup
9bc9b69 kclient: some sparse fixes
db16698 kclient: small cleanups
c7584c6 kclient: lease renewal fixes, cleanups
0c9d408 kclient: zero lease_renew_after ttl before requesting renewal
c980158 kclient: send lease renew message when passed ttl
62f46d2 kclient: refactoring of lease msg sending, add lease half-time accounting
466484b kclient: update lease handler to cope with a renewal
acd7041 mdsmap: fix find_standby_for
ae0ed71 mon: allow 'mds getmap [epoch]'
a8f39cc mon: allow 'mds dump [epoch]'
4296efb kclient: clean up setattr vs caps vs i_lock
cdeb001 kclient: remove redundant ceph_inode_holds_caps
2066f68 kclient: fix printk format
2c9ca41 kclient: dentry_lease_is_valid cleanup
60b65ea kclient: do revalidate RDCACHE check under protection of lock
f56ac90 mds: fix lease release; add lease renew support in MDS
25880ed conf: use dynamic sized strings
0fa04fc kclient: set osd op sync flag on O_SYNC|O_DIRECT sync writes
5203650 kclient: enable direct_IO
3589141 kclient: refactor read path, allow O_DIRECT
7990b38 kclient: refactor write path to facilitate sync or O_DIRECT writes
04458cb kclient: fix file reopen on existing caps
4c2ee41 kclient: show wanted in trim_rdcaps
55d3012 ceph: fix argument parsing to allow commands with '-' in them
6938bfa config: indent warning
3597469 kclient: don't read into pages if request is aborted
1302560 todo
386814f man: update with latest args
ab78b75 remove newsyn
5fe9791 ceph.cc: fix arg parsing
f30c4a3 config: fix bool argument parsing
5683ff7 kclient todos
f741766 mds: clear replica lock dirty flag when state is flushed back to primary
b92d354 conf: redo all arg parsing for different modules
06b06ea conf: arguments parsing cleanup
106efe2 mds: fix excl->mix transition when replicated
ed517dc mds: simplify lock msg handler by leveraging eval_gather
1c8f8e3 vstart: no thrashing for now
2e93f03 mds: merge scatter and file lock message handlers
50c7d85 mds: lock lock actions (no more LOCK_AC_SCATTER)
201e230 mds: more eval_gather() caller fixes
d24c1df mds: add SYNC_MIX2 state
5425a65 mds: only adjust inode auth_pins if we have cum auth pins
2723bf7 mds: remove bad eval_gather calls
22aaa47 mds: cope with non-mdr request in path_traverse
c9c231a mds: fix eval_gather on capless inode locks
3bdfb56 kclient: friendly mds state names
32bde73 mds: MDSMap::get_state_naem -> ceph_mds_state_name
1a345b2 kclient: decode new mdsmap format
d5bd163 todo
35cbf3f vstart: more mdss
3ce1980 monclient: do not show monmap source on startup
e10a2b1 cmon, cosd: show fsid on startup
2088378 cmds: show name, fsid on startup
ca49b3b objecter: throttle read or write ops as per osdmap flags
dcffdec osdmap: PAUSE flags
84e5bc3 initscripts: print cconf command if verbose
866d4cd cosd: change osd path
8d6d2b7 initscript: remove mon_addr generation
2a316c3 ceph_common: use new cconf syntax
f87a7ab mkcephfs: modprobe btrfs after the mkfs
0bfff79 conf: enlarge post processing buffer
c446d43 cconf: fix -s options and some other cleanup
ae22895 cconf: fix behavior when key not found
865606a conf: enable default values
242394c cconf: shouldn't open the conf file
e36b363 cconf: can read keys that are not related to g_conf
c6da33b cconf: restructure, use common infrastructure
7d66049 cmon: typo
458dd90 drop dstart/dstop
8da9655 initscript: get pid_file so stop/reload/etc work
225cbfc vstart: fix mkmonfs call
479ba78 confutils: initialize pointer to null
c6b6b3b conf: parameter substitution work (not fully working)
31194c8 config: clean up sample conf
bd9cf1b makefile: remove sample.cluster.conf
883f069 cconf: added $num to substitution variables
7b9c0ab cconf: can use substitution variables
73b4ce4 config: fix sample conf files
93742fa initscript: more fixes
c5e8d2b mkmonfs: fix argument parsing
c72aeff config: fix cosd conf files
66b4d51 config: just ceph.conf, no more cluster.conf
acbfc6a config: more config fixes
8a8f825 man: some manpages fixes
2c88568 config: can use alternative module name
45d36ff config: search in global section by default
cee1468 initscript: lots of changes
11ee8ab config: fix mds, mon, osd startup
5625c21 mds: rework mds standby framework
dfefb98 mds: fix up startup options
ddd08fd mds: name mds daemon instances independent of their current logical rank
735d89b cconf: resort to search in global section
b7bd031 cconf: fix alternate section name
24a4c36 cconf: search in both ${type}.${id} and ${type}${id}
dcac96d cconf: add -i, -t options
29b65ed conf: restructure of the conf mechanism
6ff61b8 initscript: add 'pre start eval' hook
15e9837 cosd: keep cores in src dir
da51835 mkcephfs: no need for cluster.conf on cosd --mkfs_for_osd
20b5620 monclient: check for monmap_file _first_
9472dfe msgr: use daemon() to daemonize
deb2292 cosd: use absolute paths
2ae69e6 monclient: clean up
2dacba8 initscripts: fix some conf vs clusterconf problem
894eb66 osd: be more verbose about startup failures
c2c8f88 man: fix makefile
634bdd3 config: print warning on daemon startup
3b5b27d debian: don't include dupstore
8409282 man: mount.ceph man page
a14c3c9 man: mkmonfs, monmaptool, ceph
8929cf9 man: cconf
2764df2 man: crushtool, osdmaptool
3214a01 man: csyn, crun man pages
ebd9a94 man: add cfuse man page
cdc34bc mkcephfs: fix typo
869b544 debian: add man pages so far
12a1813 conf: add --show-conf,-S option that dumps conf and exits
ef986dc man: document -m monaddr
fc84637 config: -c foo or --conf=foo; -C bar or --cluster-conf=bar
27b0546 kclient: add mon enries for sysfs
9b7c9b0 usage
5de6ad8 man: more man pages
ac07483 cmds: remove unused --standby arg, rename --standby_replay_for to --shadow
91ce181 config: default to -d for server daemons; -D/--nodaemon for foreground operation
a4582b4 cosd: clean up startup options
160e00f man: mkcephfs, cosd man pages
3ef9395 debian: fix lintian errors (except missing man pages)
f3786fe initscript: LSB block; add reload and force-reload
f3c4a24 initscript: pre/post start/stop/forcestop hooks
4c62970 config: allow chdir to arbitrary dir on daemonize (not just /)
d594f91 mkcephfs: take compiled 'crush map' or 'crush map src' from cluster.conf
33a9a21 crushtool: add --build command
e587771 remove user error induced asserts
6ea23d7 initscript: fix btrfs path default to osd data
4b60f10 kclient: add osdc data to sysfs
c353d14 bump version to v0.7.1 for unstable branch
c46e1b3 (tag: v0.7) mkcephfs: btrfsctl -a between mkfs and mount
3260c75 kclient: patch series updates
f5a3d61 kclient: fix /sys/fs/ceph/mdsmap
e2afd17 kclient: sysfs whitespace cleanup
cbd43e3 kclient: fix patch series
c057c834 osdmap: use generic crush_build_bucket
f05b1be kclient: fix osdmap decoding of straw buckets
a098a3f kclient: sysfs, free path after build_path
c90746a kclient: sysfs cleanup
2c7a38f kclient: sysfs, add mds name and op of current requests
207403a kclient: simplify osd timeouts
0422395 cosd: fewer osds, with big btrfs devices
180f416 initscripts: allow vars with spaces
04ca68e osdmap: build default crush maps out of mostly straw buckets
b734092 confutils: make max line very large
927926e kclient: add sysfs directory per mds request
626d1db filepath: always prepend ino if it's nonzero
7966f98 client: fix request paths
04d6926 kclient: fix up replay after mds recovery
cd41295 mds: incorporate reconnect cap info after requests replay if ino originally missing
b88f450 mds: include path base ino in client reconnect paths
b857a03 filepath: no more leading / weirdness
17d716a kclient: drop unused redirty code from set_page_dirty
5f397ce filestore: lower min_sync_interval
1a33f6c kclient: some bookkeeper fixes
35bb1b9 kclient: fix bookkeeper ifdef
8148cb6 kclient: patch series descriptions, updates
10397b6 kclient: docs
9c4e9ee kclient: rename ceph_tools -> bookkeeper
f793c7f kclient: some caps.c cleanup
bc1e7ea mon: tolerate stray victory message (restart the election)
858df3f kclient: BUG instead of WARN on wanted item on rdcaps list
3e31202 kclient: cosmetic
40cb55a kclient: wait for requests to be safe before tearing down dcache
3af0372 kclient: don't fall over on !dirty page in invalidatepage
a4f01bb kclient: some documentation
c201148 kclient: fix osd timeout handling
ec1f5d5 kclient: more sanity checks in set_page_dirty
ffce699 kclient: only remember leases on regular dentries
61e6665 kclient: fix snap creation/deletion, memory leak
ff52f0a kclient: fix snap_realm leak
82ffc7a kclient: revise osd client timeout mechanism
4c5369d kclient: simplify invalidatepage; strengthen assertions
867aa99 kclient: writepages cleanup
9cd5fa4 synclient: optionally do a sync on object writes; wait for sync, not ack
bdc527e filestore: enforce min and max sync interval
48a53ad kclient: dosync in writepages if sync_mode is WB_SYNC_ALL
e9ea5fe kclient: fix readpages zeroing bug
0a9ed85 kclient: return 0 from readpage on success
e6726b2 kclient: addr debug, cleanup
69e4f19 kclient: fix readpages zeroing
5b52d03 kclient: reschedule timeout for timeout length if remaining is zero
24df3cf kclient: merge conflict
5251f2e kclient: sparse cleanup
70d7a96 kclient: small cleanup
d2f189a kclient: fix readpages
9c79168 kclient: use helper to clearly define which caps belond on rdcaps
9af3b9c kclient: adjust debug output
30394f1 kclient: be more careful about putting cap on rdcaps in ceph_add_cap()
e9c9523 kclient: some cleanup
6d31eca kclient: do not drop rdcaps that are dirty or flushing
f56c056 kclient: remove unused code
ee63801 kclient: user zero_user_segment helper
0f9a8f0 kclient: avoid zero_user_segment on old kernels
d4f98e9 kclient: fix __read_mostly attributes
0c68b4f kclient: zero trailing pages in readpage(s) on short read or ENOENT
a418ff1 kclient: mark debug vars __read_mostly
058b9ea initscript: --btrfs flag
cfb33b7 mds: flush journal on truncate if readers/writers are waiting
7846f51 kclient: include ceph_ver.h in kernel patch series, package
1b6450b kclient: remove /sys/fs/ceph when doing cleanup
2727657 mds: logger typo
97ec829 cosd: fixes
7762ea9 mkcephfs: bit more verbose
4e04c53 configure: remove some silly checks
98e8d36 makefile: include make_version in dist tarball
1fa2611 todo
5e61967 mds: fix logger key id; call validate() for all logtypes
af87076 config: no more .ceph_monmap; parse cluster.conf for mon addrs
a273072 todo: cas notes
6a53bfc mds: small cleanups
ea10a67 mds: fix file_eval
e66072f ceph_ver: write log message whenever a new log is opened
e52e455 ceph_ver: add ceph_ver.h to list of .h files
ed90742 kclient: write ceph git version when module loads
6733493 ceph_ver: add unconditional rule
b931906 ceph_ver: uncomment important line
c88c4da ceph_ver: show the git sha1 version in the logs
c2ba9b2 kclient: wakeup wq waiting on caps on write
0d43747 kclient: some fmode cleanup
4bab554 kclient: fix fmode ref count buf
93ef8a3 kclient: wake up i_cap_wq in ceph_add_cap
e508fb2 kclient: check d_inode before clearing its COMPLETE flag.
6f48094 mds: fix try_remove_unlinked_dn
ff2a6f6 kclient: do not return new null dentry from lookup
fcbbe9a cfuse: fix startup
4a5dbb7 conf: some cleanup
b0b5616 conf: some more fixes (again)
4570354 conf: fix typo
212cb78 mds: clean up auth_pin nesting code a bit
ea1962e mkcephfs: take optional crush map on command line
95bfdd7 conf: lockdep again
88334c2 conf: fix some other errors
ad13632 conf: the return of --lockdep, other fixes
6fdcf74 config: some cleanup
2f3a19e debian: fix dependencies
d9f8db2 conf: fix erronous scoping
0fc4a23 conf: moved options to the preparse section
3a116a0 conf: added old remarks
c99ecb9 config: remove 'debug_after' cruft
a7ee341 conf: removed some more old stuff
8a61385 conf: remove old stuff
69b7578 kclient: revamp async truncation
e518e4a mds: flush log on wrlock_start if lock isn't stable
fc72a5a mds: flush mdlog on max_size increase
648349d mds: only issue cap TRUNC if truncating smaller
97e2071 filestore: more helpful error message with xattrs don't work
2ac56cc sample.cluster.conf: fix mon path/osd dev option names
41a5e98 mds: fix truncate bug
4c1f314 conf: fixed issue with deleted conf options
13d874f conf: added all the conf options
b971b9c conf: revised cmd line parsing and conf reading
5f02f82 kclient: make sure we cleanup in all error paths
b026ec8 kclient: make statfs() cleanup when interrupted
911ca61 kclient: remove /proc cruft
3af9ad4 kclient: remove old client_list cruft
d4dbed6 Revert "kclient: fix __grab_cache_page #if"
3e0fd16 vstart: fix conf, use -d on startup, etc.
96e0f59 debian: restructure packages
7f26fda todos, changelog
220b116 kclient: fix __grab_cache_page #if
f27c792 initscripts: clean out old scripts
1d0e25a initscripts: rename ceph-daemons init-ceph
2e2cf34 initscripts: add 'killall' command
36f224c cosd: rename conf file
5aa9cc9 initscripts: fix stop_daemon; add 'forcestop' command
0c17cc4 initscripts: add 'cleanlogs' and 'cleanalllogs' options
67bf2bf initscripts: ensure cluster.conf exists
0b34138 debian: missing files
d3c6a61 config: remove osd_rep
82751f5 config: remove obsolete ms_* fields
1aab459 config: remove some debug cruft
861155b makefile: cleanup, some sample conf files
bb32760 config: rename logger/dout config fields to make more sense
3433741 makefile: put sample conf files in /etc/ceph
5047e6b initial sample.ceph.conf (incomplete)
a0cbcc0 fix pid file removal
e16d2fd initscript: include all monitor addrs on command line
28d5d51 initscripts: make mkcephfs and initscript behave on cosd*
aed7cdc config: parse 'monmap file' from conf files
0060269 cosd: don't screw up stdout with NULL string
b7a42ba config: chdir_root on by default
19c0c1a config: use daemon() call; rename use_abspath to chdir_root
7b3d2c0 config: fix conf metaoption parsing
6745adf ceph-daemons: some more fixes
f34dafd ceph-daemons: some more fixes
dcec5b8 rename sample.startup.conf
785d67e more cleanup
46fd66c makefile: cleanup
d73e021 ceph-daemons: generate list of items to stop/start in ceph_common.sh
ad86cf6 ceph-daemons: simplify crun/valgrind logic
c882031 ceph-daemons: fixed merge
1e4d4d2 ceph-daemons: minor changes
6e31ae0 ceph-daemons: 'stop' works
c2e1fa5 ceph-daemons: works partially
4fc8291 vstart: some changes
295fc87 vstart: no more crun
2b97810 mkcephfs
b13663e debian: update packages
268bb2c makefile, todo
528dd9b config: specify --monmap_file on command line
1819950 client: fix warning
e3312b5 ceph-daemon: some comments
06572bb ceph-daemons: no norestart any more
ab773a7 ceph-daemons: read config for different entities
1a88397 crun: replace $* with "$@"
3e78cb8 ceph-daemons: replace $* with "$@"
1aed41c crun: simplify to just restart if coredump
c4eef37 cephd: added "osd journal" option
fb330f6 ceph-daemons: add --allhosts option
84a1ae3 sample startup.conf
357e8bb ceph-daemons: restructured (but incomplete) init.d script
c2070b4 config: optionally maintain a pid file
6b5c13b cconf: ability to list section names
250f42d ceph_init: assume CEPH_BIN is `dirname ceph_init`
1490b7f ceph_init: default to /etc/ceph/startup.conf
ab14b5a debian: Build-depends libedit-dev
238400d logger: validate log type; remove unused mds.logger2
e2389c5 debug: ensure a SIGHUP reopens log reasonably soon
843c598 logger: fix again
48c61ba config: only build an abspath if it's not already absolute
40459d5 config: default to etc/ceph/ceph.conf
37f77ce debian: include var/log/ceph in package
4d2c546 logger: cleanup; make feeble attempt to create log dir
8667c26 config: prefix default paths with install prefix
40bb418 config: verify argument exists before dereferencing args[++i]
78f8168 config: use sane default paths for logs; use .conf for *start.sh
48533a5 logger: fixes
61dd86d logger: identify fields with int constants instead of strings
9156a56 config: remove ms_hosts
849d3f4 logger: configurable output dir
131a2d8 osd: strip out hard-coded osd device paths
6ff39ba kclient: zero_user_segments doesn't appear until 2.6.25
13c67f6 kclient: more sysfs cleanup, bug fixes
180a3d9 kclient: fix kbuild patch, import script
a21385a kclient: move parens
95675f5 kclient: changes for 2.6.29
dc6cdbe kclient: avoid simple_prepare_write()
0d23c09 kclient: separate Kconfig
a69f197 todos
e9f470e kclient: add module author
6adae97 kclient: dup kobj_sysfs_ops from kobject.c
662afd5 journal: initiate full commit when journal hits 50% full
9643b96 filestore: don't initiate sync on _start_sync if there's a journal
34ccad5 osd: don't clobber log output stream
96b3f36 mon: only do big sync if we're flushing lots of states
dd7ff9d kclient: include sysfs (and not proc) in kernel client patchset
f5f3688 osd: take journal on command line
c23235e kclient: remove /proc/fs/ceph
fb0183d kclient: add other maps to sysfs
783215b kclient: add debug levels, mask to /sys/fs/ceph
1a0b99d kclient: some sysfs cleanup
290b7d3 dstop: remove cosd hostname prefix
34db3a1 todos
7d1af70 dstart: remove cosd hostname prefix
909781d kclient: consider issued AND implemented AND dirty when updating inode
7c60c04 mds: flush cap update if affected lock is unstable
df453b0 debian: include new binaries, scripts in ceph-common
f825647 Makefile: mount.ceph goes in usr/sbin
0324487 debian: pull version from configure.ac
e75b4fa debian: specify arch on command line
e235eda makefile: add missing files for kernel module
a628262 debian: script to build and upload debs to repo
bc39a2d make unstable v0.7
a8dbeb0 common: uninit var
b82705a debian: cleanup, changelog fix
31fa2f8 kclient: typo
a5d747a mds: xlock filelock during truncate
04cb3f7 mds: look at active (not projected) inode when issuing truncation
39cd8b0 mds: only do truncation process when file size goes down
4c3a7aa mds: limit propagation of full auth_pin count up hierarchy
8be929d kclient: don't remove from clients list if we're not on it
151d5f5 Makefile: link libcommon, lockdep last
940a78f objecter: shouldn't swap bufferlist buffers
e1fd643 common: remove warning
b5860ee common: virtual destructor for class Timer
52b90a4 todo
740da72 SafeTimer: getting rid of global timer
06e3961 kclient: only unregister after both acks
440a84f mds: reverse rename argument order
d083f8e client: reverse rename argument order
e92f0a6 kclient: add missing r_wait list_head init
15b2d60 kclient: initialize request list_heads
76ec1b6 kclient: cast path
b732c0d kclient: unregister mds requests on unsafe reply
d7cb96b kclient: clean up some mdsc locking
919b214 kclient: fix path memory leak
c3ac056 kclient: async mds requestion completion callbacks
0990d83 kclient: fix fh_to_dentry; move build_path to mds_client.c
3dc43aa kclient: mds requests in terms of dentries, not paths
376ac88 kclient: async mds requests
77a5f24 kclient: remove extra log output
0c46645 kclient: sync writeout when not pdflush
2d17b3a mds: only flush journal when we need to
0f05de9 kclient: set 'sync' flag for fsync
94c5031 script: fix check_osd_request_latency
cec662c script: check_osd_request_latency
ffc756e conf: can turn on debug logs in startup.conf
6a71ef7 conf: add debug_ms option
dbfa9c3 mds: don't rdlock stat fields that client has EXCL cap for
4e88a94 add ceph_init to distribution
d8ac8e5 kclient: backport changes to kernel 2.6.25
f62e4db kclient: fix mdsc->snap_empty cleanup
f0a2967 kclient: remove client from client list before destorying
c5ed89a kclient: fix proc cleanup
c98bb11 assert: some more assert_warn
af812a0 cosd: change some assert to assert_warn and clean exit
5dc7bea kclient: show some meaningful info in client proc entry
172afed kclient: per client proc data file
2b82ea4 kclient: added a proc function to read client data
9ddbf9d kclient: proc subdir for each ceph client
3b2cffd kclient: keep global list of ceph clients
b1203c2 assert: warn on assertion if requested for current thread
c511d68 added a common initialization function
3ce47d0 tls: addeed a thread local storage infrastructure (cherry picked from commit 1b6b128f4e2aaab016575f48f2ec50d4abe002c9)
62ee408 osd: fix log level
7e10dfa mds: make sure we eval_stray when inode was replicated
db46dad mds: remove traces of CDir::committed_version_equivalent
306e556 kclient: release CAP_LINK_RDCACHE before unlink
83c19c8 vstart: fix call to stop.sh
d37775d todos
95f63ea osd: print ops args correctly
0b75ee6 mds: use generic helper when removing a cap
179f7a8 mds: fix try_remove_unlinked_dn
569c5d2 mds: fix purge of 0-length inode
7b118b3 mds: remove unused inode purge fields
756a4c1 ceph_init: fix initalization
bfb6cda ceph_init: added missing file
c6ff2e6 ceph_init: initial version
7ed99ea crun: restart only processes that should have dumped core
fe1a365 todo
81bf6ef osd: put full original reqid in osd_op_reply
4968553 mds: typos
1df22a5 kclient: don't retain caps if inode is closed and nlink == 0
57d8ba9 mds: rip out old purge_inode crap
0d8ba65 mds: simplify purge_stray
e32e434 mds: clean up opent a bit
93e587e mds: drop _do_open helper
f49d8ac mds: open O_TRUNC implemented.. but not used by kclient :/
1d15f8f mds: implement async truncate (trimtrunc); fix log segment trim vs purge bug
0f11a1a osd: fix truncate ops; add TRIMTRUNC
e0dcc7c mds: truncate changes.  not complete.
d8d2886 kclient: fix and clean up osd request generation
1e17153 kclient: include old size in truncate
3518479 kclient: truncate bits
a7397d8 kclient: include truncate osd_ops when needed
116e0fb osd: MASKTRUNC and SETTRUNC osd ops
72fc7a2 mds: add truncate_size
703d89c renamed common.sh to ceph_common.sh
b4f70d2 rename stop.sh to ceph_stop, added to Makefile.am
c7a6798 cephd: update Makefile.am
d463db6 mon: only propose new osdmap once at end of mdsmonitor tick()
cedaea2 ceph.sh renamed to cephd
40504d5 msgr: fix WAIT connection race handling
807a90d ceph.sh: some changes, fixes
dba09e8 ceph.sh: some fixes
89f9607 ceph.sh: try to locate cconf
4651403 ceph.sh: enable script
f121086 ceph.sh: able to specify start/stop/restart, specific modules
a6bb1d5 ceph.sh: add missing file
d1cd775 ceph.sh: can specify remote modules
48d9c94 ceph.sh: startup script that uses conf file
400e04e osd: rev internal osd protocol
cbe1eef osd: push wrlocks into object_info_t
6462555 osd: remove inc_lock
478e51a osd: combine all internal object state into single '_' object_info_t xattr
c9554fc osd: replace version attr with oi (object_info_t) (disk format change)
ab34751 cconf: able to specify multiple sections
cd2669f dstart: --ramjournal option
2c0422b scripts: osd latency check script
a61c0bf kclient: start writeback without blocking
d68f60c cconf: set default conf filename
a34c82d cconf: added utility to read configuration
ac22c78 mds: fix open file rejounal in try_to_expire
dbeb6c9 kclient: fix nocrc behavior
20ec768 mds: shorten mds beacon grace to 15 seconds
6258c64 todo
309e595 vstart: fix btrfs test
ee114f9 msgr: make nocrc only apply to data payload; and set flag if no crc
0545b4d todo
83f5fec mon: clean mon monmap cons
c103163 dstart: no preload gprof helper
3297553 config: avoid wonky times in g_config
1a837aa mon: disable pgmap_dumps
40d56a9 mds: optimize EMetaBlob::fullbit, remotebit, nullbit encoding
abe6de3 buffer: optimize append()
8a053aa kclient: fix osd timeout merge error
bff9432 dstart: less debug output
c24b160 osd: throttle sub_ops too
5dfa423 osd: adjust pending_ops when requeuing opq
fc806ef mds: show which segment trimming is blocked on
5429016 osd: locally requeue on repeer if still primary
08a1898 kclient: fix RETRY_SESSION seq value
63f2754 kclient: only send one ping per laggy osd
43b8621 mds: include xattr updates in cap messages; accept xattr cap updates
5abd410 mds: adjust some debug levels
b1939af todo
39732f7 osd: drop osd_lock while pausing/requeueing opq
36bd20b osd: fix merge_old_entry assertion
ee916bd osd: fix up_thru_pending conditional
b66ffdb osd: requeue instead of draining op_queue on map update
59d6e18 osd: keep peer_info.last_{update,complete} up to date in case we get later stray
63f04bf osd: bit more verbose in oldest_update calculation
f37d4b4 osd: adjust generate_backlog assertions
da981f5 mds: clean up EUpdate output
c5f55f2 mds: do not trim log during recovery
898e90c osd: only check replicas in recover_replicas
69d2fad osd: clean up activate, peer recovery debug output
85b9900 messenger: added a no-crc option
814e9c7 osd: fix pg log trimming
68d19a3 paxos: tolerate commits for older states
654e907 osd: fix repop cleanup in on_change, _shutdown
2136755 ceph: warn when we get message with wrong fsid
bdf405c todos
9a63cb1 paxos: ignore LAST message if pn is old
6e2728e mds: increase ino prealloc limit to 1000
4df3be7 osd: remove RepGather::put() debug print
fd55dc6 crush: remote list builder printf
d3591be dstart: mount btrfs with new options
cfdd83d kclient: statfs_request_tree alloc context is NOFS, not ATOMIC
59369fb config: added include, misc stuff
c4760af kclient: do sync writepages if FILE_WRBUFFER is being revoked
26cac11 mds: fix max_size update
311d3a4 kclient: initiate a sync when doing writepages for O_SYNC writers
63c2e9e mds: set straydn.first properly for rename overwrite
8239bed mds: only update cap wanted if seq matches
37348a1 kclient: fix osd writes
a4a1d54 mds: take straydn.first form inode.first during unlink
9664adf kclient: resend osd ops when pg membership changes
46696ad config: read configuration file before parsing command line
a92400c mount.ceph: fix segfault when port is not specified
b929f12 confutils: complete config.cc configuration and adjustments
331d1c4 confutils: cleanup, bug fixes
44550ae confutils: can flush config, preliminary config.cc integration
0ba80f8 confutils: some cleanup
78d12c82 confutils: encoding/decoding using templates
68a1445 confutils: going forward
1acf016 confutils: adding missing file
1481960 confutils: some more
9a103e5 confutils: some more changes
dbc6141 config: some more changes
18fdf6e confutils: still not usable
0af200d config: remove some old cruft
f49f78d osd: reset peering, in-flight repops on every pg change
4b224b9 mds: eval_cap_gather in handle_client_caps even if no update
2564622 script: find high latency requests in mds log
4c75e0a mds: fix xattr projection
1c2d624 mds: drop rdlocks _after_ journaling; use new journal_and_reply helper
0c6ffaa mds: make cdentry debug print nicer
004898a mds: unique (per mds) cap_id
62e5b80 mds: set straydn.first correctly during unlink
1094344 mds: make straydn.first match the inode
7a0abc3 uclient: flush/release buffered data on umount
74f2a9c uclient: update caps code to match kclient logic
33f4443 kclient: some caps cleanup
0017712 kclient: improve snap locking scheme
a4c752d (tag: v0.6) v0.6
00577b5 kclient: rename lookup_mds_session get_mds_session
b078856 kclient: realm create does not take a ref count
70365be kclient: split get_snap_realm to lookup and create
c784a54 objectcacher: fix object trimming
26cec48 mds: count in-flight updates per cap, not release attempts.  do not expire if updating.
f62bb44 mds: drop rdlocks after early reply is sent
ac59f6d mds: properly close session when inodes are still being preallocated
773bc5f kclient: set i_op for special inodes
96a16b6 todos
9ccd599 kclient: retain comments
3b1d6b5 kclient: zero out *implemented in __ceph_caps_issued()
ca29a2a kclient: don't retain unwanted RD cap
b76be04 mds: take srci lock during rename to ensure ctime change propagates
14a1ebf mds: expose projected fields via caps if locks permit
878b649 kclient: shouldn't lookup_open with special inode
490d04a kclient: considered _held_ caps when deciding what to ignore in fill_inode
b9cb866 kclient: don't require all inode fields when just doing a lookup
6c6f75d mds: check against client in rdlock_try
413d5e6 kclient: fix cap writeback vs revocation
5ac7642 mds: fix rmdir ENOTEMPTY checks
764b0b3 mon: include fsid in MMonObserveNotify
468fbbe mds: fix forward truncation
cd058c9 vstart: -l | --localhost to use 127.0.0.1
96dbed7 bash, not sh
a4ab377 bash, not sh
6ffdd43 mds: carry RDCACHE|WRBUFFER through xlock.
f4644ac kclient: fix fill_file_bits logic
b8bb36e mds: include projected ctime if _any_ other fields are projected
96080a3 kclient: fix snap_rwsem link on non-existent cap release
88e3e31 kclient: some cleanup
997e998 kclient: fix gid setattr
c952110 mds: also verify in rename() that mds reintegrate/merge is valid
6ee8770 mds: do not reintegrate stray if target dentry is projected
58f166c mds: look at issued(), not pending(), when putting cap on the rdcaps list
039bbc0 mds: eval_cap_gather when trimming rdcaps
ee50c98 mds: look at inode locks to determine whether to expose stable or projected inode fields
7bfc61c kclient: some more sparse fixes
241d02c mds: fix uninitialized value in ceph_inode_holds_cap()
3aefbc0 mds: fix inode version projected on open O_CREAT, too
4f3a288 mds: set .inode in projected linkages; add dentry to remote_parents only when active
9f33c84 mds: fix link() dn linkage projection
cd31824 kclient: some sparse cleanups
4a4e0a4 mds: only set max_size on open+O_CREAT if file opened for writing
bcdc1f4 mds: optionally pass a specific linkage for journal_cow_dentry to use
461cb1a mds: fix fast create + rm failure
7eeca0b mds: make xlock stable
962e1ab kclient: set dentry d_time when doing local ENOENT
9a2c7e9 mds: get_linkage() should return projected if xlocked by self
b025d4f mds: touch using projected parents too
811f5fc mds: journal using projected parent
6cf44cd kclient: one more update_parent fix
dd729d1 kclient: don't mark root complete (empty); debug complete flag
ee7547d uclient: small bug fix
1c09fe5 journaler: don't request ACKs if in safe mode; do safe mode by default (since mds does too)
3045691 kclient: refine dir complete/readdir handling
a0d9aa8 mds: kill FileLock
e4c8ef0 mds: redo choose_loner/drop_loner
547b4e1 mds: merge *_sync() methods
0a20684 mds: more lock refactoring.  merge *_lock() methods.
7a9a689 mds: ENOENT on null dentry in unlink()
5a29c9f mds: add lock->xlock state
49fea8a mds: simplify loner_cap update
d467cbf mds: generic locking helpers, step 1
3eabcec mds: rewrite SimpleLock using generic state specifications; new xlock semantics
31bc1b0 lease: difrentiate lease release cases (revoke, preemptive)
3a1b22c kclient: clear dir complete/readdir bits when appropriate
09b1666 mds: remove some uninitialized cases
4d3553a mds: disable empty directory fastpath check
4f70eb8 mds: fix unlink
196a620 mds: path_traverse cleanup
813c963 mds: always traverse projected hierarchy; xlocks will handle client views
7bd9588 mds: force explicit current vs projected dentry linkage in API
8128eba objectcacher: don't trim uncommitted objects
82b3bd5 mds: use projected dentry linkages in rename
05f6554 mds: fix simplelock cap check
e73f735 mds: a few comments
3f4bb5f mds: fix up EXCL state some.  fix set_trace_dist use of projected parent
cbbe543 mds: some cleanup
a5bc3f8 mds: project dentry linkage
447a3e0 kclient: fix lock leak in mdsc_handle_map
79dea4b mds: verify is_stable() before calling simple_eval()
d7ecf25 mds: end of traverse may be indoe or projected_inode
698400c kclient: use CEPH_INO_ROOT constant
b2d23ad mds: include projected dn+inode to client if xlock_done
b0f2842 mds: fix LOCK_LOCK -> LOCK_LOCK_SYNC issue_lease transition logic
5e9be53 mds: allow FileLock wrlock when client holding FILE_EXCL
c7c72b4 mds: issue cap on mkdir; set authlock to EXCL on open O_CREAT.
ddb07d9 mds: fix encode_inode caps issue logic
94f28a9 mds: loner if only client with cap on a dir
b05bed3 kclient: only release dir RDCACHE if we're not holding EXCL
ea4f54b kclient: hold onto dir EXCL cap
a3497b1 kclient: track COMPLETE flag on directories with RDCACHE; lookup ENOENT locally when possible
f889c15 mds: make Server use CDentry accessors
9483c51 kclient: handle case in which splice_dentry fails in fill_trace
7c7d228 kclient: avoid starvation when fsync on dir
8f1801b mds: increase preallocated ino
1ac0ed0 mds: allow clients to traverse dentries they xlock.
95d65bc mds: fix CInode::adjust_nested_auth_pin()
9a6320c kclient: add missing parens in kick_requests
5df141c uclient: lease seq #'s; clean out inode leases
52a9129 kclient: use lease seq #
bb95b37 mds: introduce lease seq #
bfba421 osd: fix ager missing open() arg
34d429e osdmaptool: fix --test-map-pg
cd345c1 todo
6a9f8ce mds: do rename, unlink early replies; set_xlock_done as appropriate
885b0c2 mds: early_reply for link, unlink, rename.
c50f9eb mds: by default, always wait for journal safe
d90d186 mds: wait for journal safe when doing ino allocations
0bc0a42 kclient: resend unsafe requests just before to MClientReconnect
95fa0a1 kclient: list unsafe requests in the MDS session
ceda178 kclient: break out __prepare_send_request helper
6b88cca kclient: separate flag for got_safe and got_unsafe
ce45c26 kclient: set ino in request if we got an early reply
68acb5d kclient: missing spin_unlock
dfcac4b kclient: replace radix tree with list for req dir listener
c0decc1 kclient: listener tree should use GFP_ATOMIC
e2dc885 kclient: remove extra mutex_unlock
5ed3cbc start.sh: add $CEPH_BIN
8d24be2 kclient: fix fsync for directories
fc1ba61 kclient: handle safe reply, sync dir waits for safe reply
24860c9 mds: can_xlock_soon() should include LOCK_LOCK
fae7a97 mds: for wrlock when updating max_size in issue_caps()
72a231f mds: drop dup code
f70e754 kclient: fix add_cap cap update
0f5688a uclient: handle xattr updates
c7fa14d kclient: only update xattr blob when defined and newer (caps|reply)
82c970f mds: send xattrs down to client efficiently
a92e29f move to generic ceph_seq_t 32-bit sequence number and comparator
f2d48e4 kclient: make fill_trace look for RDCACHE cap on directory
7b581b8 stop.sh: stop valgrind procs too
cdc74f2 mds: fix capability off-by-one bug
3bdc45a mds: safely allow client to rdlock|lease dentries it xlocked
e8cc0e5 mds: fix SimpleLock release evals
d84552c todos
99a0911 mds: use projected parent when updating max_size
9ad5577 mds: only check max_size if inode is a file
4e34247 mon: fix uninitialized variable
40570f1 vstart: run cmon through crun, valgrind
db723ae mds: set issue_stamp on cap reconnect
61ab9e9 kclient: exclude expireable caps from reconnect
1d724db mds: fix sessionmap->version value during EMetaBlob replay
06087d9 mds: fix EMetaBlob initialization
f4b4f30 mds: only file_eval on xlock_finish if stable
83d6f65 mds: only file_eval on xlock_finish if stable
0089e1a todos
4fc9283 kclient: don't pin dentry with lease
459749d kclient: separate mds session lookup from ref get
cc0e803 vstart: fix ip determination
d644e34 mds: disable inode leases
8bed365 mds: no inode lease in lssnap
8a173dd kclient: fix cap release logic a bit
638a76a kclient: fix request ref count leak from duplicate replies
babfd42 mds: expire rdcaps
31f7435 kclient: trim expired rdcaps; ignored issued but timed out caps
f123d3a kclient: fix buffer overrun in parse_reply_info_trace()
92ae5e2 mds: issue AUTH_EXCL if also issuing FILE_EXCL
9a8d935 mds: update cap notes
bdf8818 kclient: implement ceph_release_caps
a186c3b mds: set ttl_ms in cap IMPORT message
8a20fbd kclient: keep readonly caps on per-session lru
ee6debb mds: keep caps in lru; put ttl in cap issue to clients
8185635 kclient: local chmod/chown if holding CEPH_CAP_AUTH_EXCL
8713b4b client: send release anytime we get a caps message and have no inode or cap
0e559c7 mds: always issue cap in inodestat
47f2385 mds: don't let release race with any caps
314f065 mds: simplify capability issued tracking
aef5170 uclient: fix likes bits
9b2af42 kclient: use new caps protocol
b0c6a3a mds: fix stat mask
1cf4b71 mds: only send clientcaps if we need to revoke, or we can issue explicitly wanted caps
c1d9372 mds: fix cap release seq check
12f429d uclient: set dirty bits in cap_snap
4a499ee mds: bunch of cap protocol changes, and user client adjustments.
437226e kclient: fix snap realm update on reply
7ba06ac mds: fix set_trace_dist snaprealm problem on unlink
886091e kclient: ref count cap_snap to avoid unnecessarily copying into temp variables
be1d556 kclient: take fmode ref atomically while adding cap
94e3abfe client: do not update when already holding EXCL cap
fb882d3 kclient: caps basically working
f920808 kclient: use ceph_caps_release instead of dropping inode lease
f17fabe kclient: switch from inode leases to new caps
a46dbfd notes
6a71cda uclient: adjust cap release logic...
2dfa4db mds: only _do_cap_update if client held ANY_WR caps
8276576 mds: issue RDCACHE caps to client when possible.  add cap to do so if inode auth.
01f28e5 uclient: sorta working
dad9bf4 mds: fix scatterlock print
3c571d4 mds: put a cap in each inode stat in trace; simplify snaprealm trace encoding
e3e3f2d mds: cap comments
b4561ba mds: rewrite CEPH_STAT_MASK_* as CEPH_STAT_CAP_* (cap masks)
6ff545c mds: cap writeback authlock fields as well as filelock fields
9828060 mds: don't rdlock and xlock at the same time
7f2d406 mds: check for xlock in simple_sync()
d5130ab mds: fix lock print methods
7f46121 mds: share caps across multiple lock types.
4087a07 todo
7ad7e04 mds: clean up lock print methods
142e2f6 objecter: fix ack vs safe behavior
0faa47e journaler: add --journaler_safe hack support back
40277f6 objecter: fix ack vs safe behavior
9a3988e kclient: setattr on inode (not path) if holding WR cap
4377dba mds: fix xattr projection
a77b0cb kclient: update for ceph_fsid_t
d359afd vstart.sh: disable lockdep in default
f46c771 mds todos
3b253bd mds: avoid recursion on log trim
99fc60e mds: add wrlock to simplelock; wrlock authlock on chmod, chown
3d93ca0 mds: link on commit in openc; make find_snaprealm() follow projected_parent for unlinked inode
836513e mon: make 'osd setmap' take epoch, to avoid executing multiple times
6f9132e ceph: increase command timeout
3ed25a3 mds: flush log only when we need to
89900f3 mds: add --mds_early_reply option
270a12a mds: only include trace in first reply
8380244 mds: rewrite, clean up mds open+O_CREAT; issue dn lease to xlocker; many other server cleanups
8ba7f14 change ceph_fsid
74cf3e7 mds: early_reply on open, mknod, symlink, mkdir when possible
1419f00 os: start_sync osd operation
3ed4b78 osd: use .version in eversion_t to determine divergence
b4d9cb5 osd: cleanup
85327b7 osd: clear entire pushing map on_change()
960ab70 osd: fix read_log version attr check
a6022be osd: only request replica backlogs one at a time when searching for lost objects
6d41141 osd: cancel_generate_backlog on activate
1144b55 mon: fix mds cluster expansion
ff2ac52 mount.ceph: fix warnings, add to Makefile.am
701ae00 mds: fix inotable project, sessionmap projection, ino (pre)allocation.
c59650c mds: optional ino for mknod/mkdir/open requests
0d68565 mds: preallocate inos for each client session
5b19c4a mds: do early replies for basic inode update operations
d11f5f1 mds: early_reply infrastructure
e5ba5ed mds: fix null_okay traverse logic
968cfc8 mds: add safe flag to mds reply
bbe70a1 mds: process caps if freezing and unstable lock
bed844f mds: misc filelock fixes
16ed267 mds: auth_pin rdlocks too
04cf78c kclient: make mdsmap_decode print nicer info
1f06b73 kclient: update num_fwd in client requests
ac9d80b kclient: allow mds to force open a client session
55e6b07 mds: don't bump to sync if dir and subtree root
0332cd0 mds: fix file_wrlock_start waiting
a902349 mds: filelock typo in can_rdlock
402c186 mds: cleanup
edab8a7 vstart: 1 mds
fd2b7c7 mds: check_inode_max_size only change filelock state if needed
557e7d9 kclient: ICONTENT -> IFILE
3393809 vstart: start 3 mdss
89b8283 mds: basic filelock fixes
624ed85 mon: add multiple mds's at once
fca6c27 mds: kill the dirlock
09c0288 mds: make filelock a scatterlock child; move wrlock into simplelock
fe744dc mds: fix mixed_sync state; send replica mixed state to primary as needed
b9ce3da mds: message include cleanup
247e6d9 mds: fix up filelock states
397938f mds: new FileLock lock->sync state
1df9248 mds: rename gather lock states
2050e49 mds: include max mds in mdsmap summary
1163bcd mds: fix standby_replay on startup
c8f31fb remove uninitialized warnings
f21f172 osd: gracefully exit when create_object_store() returns NULL
5852262 osd: inc_lock attr is optional
63f63bb osd: update pg degraded stats only when active
b873c17 osd: initialize generate_backlog_epoch
35d5c74 osd: clear_prior when activating
21bf68c osd: clear backlog flag when done
199d032 osd: only update degraded object stats after peering
af9559e osd: clear STATE_PEERING during replay
e194bc9 osd: safely encode all other attributes
0db8c4c osd: properly encode ondisklog attr
ee4b961 buffer: optionally preallocate some append_buffer
9f1c7b1 make time format easier to read
41dfd40 ceph: terminate dumped output
1a94147 mon: tell stdout where the monmap came from
705496f dstart: cm.txt update (for 3x)
7059183 ceph: fix observe renewal; ack by paxos
901e582 todo
022d801 verify-mds-journal: periodically verify mds replay; stop if error
75421fc mds: only standby-replay when explicitly requested on startup.
6bf3f40 mds: basic standby-replay hack
81be48b mon: replace laggy standby-replay nodes too
7b695ec mon: mark extra standby mds's as standby-replay
c941da1 osd: enable queue_generate_backlog on pg query
450cfee mds: fix mdsmap dump
ba140b5 msgr: stop accepter on socket error
82b0bc3 mds: restructure mds map, clean up mdsmon
6fb760b mon: clean up mdsmon a bit; do takeovers from tick(), not _committed()
8030217 mon: blacklist failed mds
c04ef1a mon: expire old blacklist items (osdmap change)
117fc9d osd: clean out acker cruft
d2d3048 rev protocol, mon disk formats due to mdsmap change
b3aa3ed mon: mdsmap infrastructure for standby states, up:standby-replay
17d5ff6 osd: fix pg stat reporting
dd091b3 osd: do delayed activation after replay via a queue, not timer event
6d28c86 osd: take osd_lock in generate_backlog before peer()
e48fc3c mds cleanup
e1abc7f mds: add logclient
cff97c1 logclient: adjust link_dispatcher; add unlink_dispatcher
b917de3 todos
d0041ee mds: remove follows==0 special cases
dc0cc83 mds: when recovering size, don't munge up projected->size; use new_size
415b4bb mds: update rbytes with size on truncate, etc.
48c3da0 mon: send mdsmap on beacon from mds not in the map
016cf1e mon: clean up mds failure output
2b0337f mon: immediately propose after 'osd setmap'
1a5c8ae update debian, spec files to reflect cmonctl->ceph rename
6cd31da ceph: allow > and < to redirect command input/output
483dba8 ceph: fold cobserver into ceph
1aa9446 todo
213eae1 mds: mark new directories new in journal; add to new list on replay
2cd256f cobserver: usage
8b0bd3e rename cmonctl -> ceph
c75a099 cobserver: retry if when no response on startup
3e37543 vstart.sh: can specify mon address
e1f536d osd: add missing declaration
5026d0e vstart: debug pg reporting
b3f831f osd: generate_backlog asynchronously in a work queue; simplify peering a bit
aab8882 osd: half-finished backlog_wq
0aecb46 crush: don't recurse to leaf unless item is a bucket
f0d706e osd: shift generate_backlog out of merge_log
b48646a osd: for remaining peers, pull either log or backlog, but not both.
ba89596 osd: comment clean up
1b773f5 dstart: 3x replication
c7c3392 osd: simplify peer code a bit
e42e3d1 osd: simplify master log recreation; fix up Log::copy_after
ab73378 vstart.sh/stop.sh can start and stop specific modules
93cc10e dstop: kill crun too
1c1f564 osd: move max_rep back to 3x
bcbebfd osd: rewrite proc_replica_log
d1c7eb7 osd: fix merge_old_entry bug
e0dbaa7 osd: small peer cleanup
625e950 todos
fa8904d cobserver: print all log entries in each state
5ad877e osd: initialize all MOSDSubOp fields
ab77f97 mon: fix up MLog constructor
f0f9512 filestore: fix buffer overruns, mismatched delete[], small buffer
e3bf21f osd: pad eversion_t and zero remainder
aed8eba mon: mkfs log msg as error
b9ffeaf osd: clear out pg_stat_queue on shutdown
151f201 filestore: sort objects by ino
7741ea0 workqueue: include types.h
b842655 dstart.sh fix broken commit
217103e dstart.sh uses crun instead of -d (for gprof)
62ca619 osd: don't clear pg_stats_valid on send
87e8500 todo
19eb21b osd: small cleanup
7126fe4 osd: call peer() if we need up_thru to activate
b300aa6 osd: remove/fix waiting_for_head primary recovery logic
e26a9c6 mon: observer cleanup
44b8c2f cmonctl: fix compile error
f309afd workqueue: drain
408b498 workqueue: virtual destructor
183e3aa makefile: missing headers
c92b8fd osd: cleanup
642420a workqueue: non-inline worker, control methods; debugging
b3affe5 mon: fix use after free
ae18421 osd: use new workqueue in osd for ops
ec4da94 osd: shared threadpool for multiple work queues
37ea68e osd: fix uninit value in scrub message
d77ce28 todos
c32f67f mon: mark unresponsive mds laggy instead of failed until we can replace it
2b2fede cobserver: simplify headers
c79e073 osd: make sure hb peers get marked down
3da9ffa osd: update_stat during recover_replicas()
6ed8d8b dstart: --nostop option
984b07d osd: drive primary recovery via missing map, not log
aea394d mon: osdmon cleanup
0590296 dstart: keep old cosd binaries around for a bit
ac6e86a osd: 'pg repair <pgid>' to repair an inconsistent pg using replicas
f114b86 osd: don't read file content during _scrub
3062b7b msgr: be noisier about mark_down calls
77fa4e6 osd: avoid needless calls to peer(), build_prior()
27481a4 osd: make prior_set_affected() slightly smarter
d999ba0 cobserver: cleanups
36f5813 mon: use 'latest' for latest osd, mds maps
2e32e87 cobserver: cleanup; print map summaries w/ each new state
ab8a921 mon: refactor map print_summary/operator<< methods
202f8cd cobserver: accidentaly removed a line
4964511 kclient: missing files
3a168be whitespaces
426f47a mon: factor ClientMap class out
d216720 cobserver: utility, observe changes in different maps
8a5f231 osd: use push() to push clone op
c0b005f mon: factor our osdmap print, print_summary
b764b63 mon: factor out mds print, print_summary
57578b3 mds: stay loner if client has B and no other reason to switch state
c035a73 osd: missing last_mon_heartbeat declaration
cc8a4fc msgr: make sure nonce matches too when connecting to peer
addea2e msgr: print error when message type is unrecognized
5b550c0 osd: ping mon less frequently when peerless
815c1e2 mon: typo in pg dump output
dc38de9 ceph: new default mon port; try to bind to port in known range
2398219 mon: 'pg map <pgid>' command
5b74986 mon: 'osd dump' command; refactor sstream->bufferlist code a bit
a4bae51 osdmap: use print method from osdmaptool
090e5f8 osd: pause scrub wq async
f319e52 osd: lock pg before calling on_shutdown
5289830 osd: fix degraded figure calculation typo
fe903cc cmonctl: resend command if monitor is not responsive
8223f52 cmonctl: interactive mode using libedit
a2203c1 osd: log scrub ok
c7c8fcf mon: rename out to log, log.type files
ee75196 mon: notify PaxosService of any paxos state changes
fa34945 mon: dump full pgmap on each state change (for debugging)
4cc6a2d osd: don't die on stray sub op acks
b94c4e5 osd: generate_backlog sanity check
c1368ed osd: fix merge_log divergent item detection
34ee473 osd: clean on ondisklog a bit
7fb6a0a osd: make read_log output a bit more informative
6cc5c54 vstart: only sudo if -e dev/sudo
bba2a54 osd: revise missing map adjustment
fddf29a osd: mark backlog events as BACKLOG
5d44924 osd: generate_backlog fixes
3b909a7 crush: add include
aaf32a1 kclient: reduce stack usage
cc8bb08 mon: 'osd scrub \*' to scrub all osds
1ce00a4 filestore: fix up listxattr buffer management a bit
1006e2c dstart: put debug output on local disk
d39ab9c debug: allow output and output symlinks to go in different directories
5689c78 logmonitor: append all notifications in a single file
fccde5c set/check subprotocol versions
7c160a4 mon: clean up paxos service registration a bit.  rev disk format.
0820e7c cleanup, whitespace
a6ed26f log: use of cascading dispatcher for log messages
a5a7eea dispatcher: cascading dispatch infrastructure
9797225 mon: keep pgmap consistent
c1af677 osd: make replica scrub_map generation a subop
6d53b35 logclient: always print log messages to debug output
ef6f428 osd: fix up scrub error log formatting
778ac40 logclient: optionally take a stringstream
ee18c91 osd: some scrub fixes
2053ee1 osd: fix pg_stats.reported value
4cfb679 osd: drop lock during most of scrub; only disallow concurrent writes
3925eea osd: ignore dup scrub maps
b1d69de osd: take pg ref on scrub_wq
e1a74f4 osd: make scrub verify replica object attrs match
ee8665d osd: fix pg stat acking in osd
358db66 log: logclient uses log types instead of log level
f0ef5fc osd: check for missing clones in pick_read_snap
7d32935 osd: clear waiting_for_head when we pull the head; set skipped if we do
b711ed1 osd: fix missing.add_event
ab3986d kclient: fix NULL dereferencing oops
7ecda8d osd: version pg_stats_t with <epoch,version> pair; clean up pgmon a bit
7a1eaa9 osd: keep projected info on in-progress object modifications in memory
cdea03e osd: fix problems with propagation of info.stats during recovery
5711c03 osd: keep tabs on total object copies vs missing/degraded
cdf685f osd: fix uninitialized var use
48b1703 add missing header file declaration
8ad8839 osd: move logging messages to a common infrastructure
1e3604f mon: clean up pg dump
75150c3 osd: update stats on primary pull
5731c23 osd: fix stupid no-op typo
53bca96 osd: log scrub errors to central log
988e350 mon: include last_scrub info in pg dump
9a9be6d osd: remove pg from recovery_wq with clear_primary_state
f2c70ed osd: make pg refcounting vs work queues constent
aeb89b9 osd: do clone scrub based on our generated scrub map
51f3d2d osd: scrub info in pg_stat_t.  scrub states.
ed2c3db osd: fix small quirk read_log missing generation
431443e mon: always discard pending on election completion
e934ea6 mds: update segment on ETableServer replay
3780abb mds: print table version loaded during log replay
ffc6897 osd: default 2x pg only for now
f51348d osd: distributed scrub compares primary vs replica contents
85f06ad osd: do not clear ops vector to indicate noop (protocol change)
1c0bdf1 osd: rewrite pg_stats queueing
fd241b6 osd: remove useless raid4pg from build
5c43a39 kclient: fix oops in case written size doesn't match request
7dfb905 kclient: some logs revision
4a6bd48 osd: don't forget about skipped clones during recover_primary
674942e always print snapids in hex
3b782a4 osd: log scrub errors to system log
566a955 mon: system-wide log
1876ca5 mds: pick_inode_snap should consider follows==0 valid
a31778f kclient: initialize some protocol fields
431dc5c osd: log stats for push and pull bytes
f99e081 mds: avoid overlapping release attempts
19cdd84 kclient: avoid queueing cap_snap when nothing is dirty or writing
de347b1 osd: send old_version to replicas
055b510 osd: always get old_version; include in debug output
1d5011b osd: show prior_version in log dump, output recovery_primary debug output
488b016 mds: suspend instead of suicide on beacon timeout
fdbf05d filestore: show return codes in debug output
e13951d object: print snapid in hex
95d6947 osd: allow admin to mark osd lost to kickstart recovery (disk format change)
cc650b8 osd: clean up pg_stat, osd_stat summation, fields a bit
e7e39f0 kclient: no page cache for write without wrbuf cap
d731ff0 kclient: sync writes use page cache
aa7efb6 kclient: clean out old BACKOFF bit flag, comments
7c5e8cc osdmaptool: print new osd_info fields
881c680 osd: make pg log dump obey debug levels
7ae60b4 osd: rebuild past intervals when needed; tolerate partial info
e8158d1 osd: send and process heartbeats in separate thread, channel
5ab62f5 mds: do not purge until leases expire
6eb3bfd lockdep: lockdep_dump_locks()
7b680b8 rwlock: try_get_read, try_get_write
ca4e754 osd: optionally avoid zeroing trimmed log on disk
c813af3 kclient: fix bad check
ab728c0 kclient: slient down some log message
fa98083 osd: skip peer_info on down osds
867cfe9 osd: remove bad PG::put() assertion
91fe2a9 osd: fix lock inversion on workqueue shutdown
4aa2fe2 todo
a2005b0 workqueue: deliberately leak string with lock name
6107617 wireshark: update for win32
bde1d81 osd: fix bad sub_op_push assertion; only write data we need
98b05e2 objectcacher: only call flushed callback if there are also no dirty buffers
54fd735 mds: fix up loner_cap whenever we manually change filelock state
ff05b93 osd: clean up touch() calls to use exists bool
9362622 objectstore: fix touch()
8f74075 mon: instruct individual pgs to scrub
4d05087 osd: debug write_info a bit, clean up Transaction cruft
4efcfe3 osd: initiate scrub via monitor message
cb8d181 objecter: scan_pgs even on original full map
86aa86a osd: ensure target osd is still up when sending MPGRemoves
1199270 osd: move stats into PG::Info (disk format change)
43cf770 osd: (re)set degraded flag on activate
681e6d1 timer: discard unfired events on shutdown
65f81fb client: fix use-after-free
7e9da44 msgr: discard queued messages when closing pipe
308aecc objectcacher: do callbacks _last_ to avoid a use-after-free
6dd9f2c mds: initialize CInode::loner_cap when twiddling filelock states after reconnect
51023a9 objecter: use full osdmap to get started
b97f64d osd: ensure 0-byte object created by push
29a6535 osd: mark repops aborteds in on_shutdown
36f1313 dstart: show filestore ops
f90330d osd: clear out workqueue queues on shutdown
7103fb1 mon: show both user data and actual disk space used
aea5095 debug: rotate old courtesy symlinks to .0, .1, etc.
b5f0481 osd: remove bad assertion in op_modify_ondisk
2fa65b5 osd: fix clone push when head is correct old version
1cff740 mds: remove anchors when destroy stray inodes
ee289ee mds: clean up request write condition, can_forward logic a bit
e81fb6d osd: fix rare memory leak
c09c427 cmonctl: print summary every 20 lines when in watch mode
1856c5e osd: fix up recovery pointers a bit
9521a6a wireshark: wireshark ceph plugin patch
5c29fb6 osd: be a bit more verbose in push_to_replica
5678116 osd: lots of fixes
d3f593b todos
4c2404e osd: clean up repop code
4e64af5 osd: fix up repop_ack
ec6f801 osd: ack type in osd sub ops
d5c6af1 osd: infrastructure for ack vs nvram vs disk osd_op ack types
aeccf34 os: separate onjournal, ondisk callbacks for apply_transaction
0e5c7b6 context: all C_Gather to OR instead of AND subs.
4f8fb97 osd: remove snap collection after it is trimmed
f57a4cf os: add collection_empty method
f5d9ae7 todos
557700a osd: reply with EBLACKLISTED if sender is blacklisted
3a93c1d osd: include a blacklist in the OSDMap
141c45c osd: comment
fa038fe rev wire, disk formats
71d8ae5 osd: ignore intervals prior to last_epoch_started in build_prior
4823b07 osd: simplify osdmap tracking of osd up/down epochs; fix pg build_prior logic
3ef312f mds: move filelock to lock state if we can't wrlock but lock is stable
5efda11 mds: rejournal using EUpdate instead of EOpen if no caps in check_inode_max_size
3e71db7 mds: use vector for EOpen
f10c997 make assertion output look more like gcc
2b53788 mds: remove bad assertion
31b6d3e osd: use last_clean_interval in build_prior logic
f794840 osd: track last_clean_interval in osdmap; simplify encoding/decoding a bit
1100224 osd: track last_clean_interval in superblock
552d85a osd: add a few getattr assertions
1859113 osd: log a delete only if the head object is deleted
dc85daf osd: remove bad assertion in pick_read_snap
f9c36b5 mds: remove capless inodes from logsegment open_file lists after reconnect
33ee113 mds: fix up completed_request handling during journal replay
d7f30a5 osd: clean up info setattrs, such that write_info is called once per map update
829b7b7 filestore: clean up debug output
3ad38ec osd: minor append_log cleanup
790d282 filestore: only commit if changes are pending
8e82b52 filestore: fix truncate argument, subsequent Transaction fuggering
32d8623 dstart: modprobe btrfs
830dec4 mds: assert ref count is 0 on inode deletion
d0ec09e mds: mark dirty inode clean before dropping
e26f5f3 mds: exclude BADREMOTEINO dentriess in readdir
74d8d37 mds: make open_remote_ino terminate if the anchortrace refers to a non-existent ino
acd6b36 mds: fix cdentry states
455b842 mds: add version to anchor; avoid looping in open_remote_ino
b0eb94d mon: send osdmap to _original_ PGStats source
557299f msgr: fix replace_connection bucket list manipulation
9d20acc kclient: increase max data and front sizes to 16MB
e3791e0 kclient: preserve peer_name across connection replacement
d1fc58e osd: factor out add_log_entry into a helper that adjusts pg info accordingly
c60d657 osd: use old acting set when noting past intervals
9f54249 dstart: only clean up old output on mkfs
647e42b client: ignore dropped messages
8b3db45 pg: fix build_prior debug output
23c338d client: fix ms_handle_failure
0a65ddd osd: only trim past intervals that _fully_ preceed last epoch started
174e03c osd: ignore pushes if stray
7844d0e mon: send osdmap updates if pg_stats indicates an old map for a long time
66d9ad0 osd: fix read_superblock
95e9385 mds: mark dn clean before removing
7974d6b kclient: debug info for connections and crc errors
72989aa osd: fix read_superblock
09102b5 dstart: fix crush map typo
e61130e osd: fix default crush map rules
5ffff11 crush: introduce crush magic
f85e9ca crush: make recurse_to_leaf slightly less fragile
e7493a9 osd: don't fail assertion on out empty ops list (i.e. no-op)
51b5212 osd: include magic in osd volumes
de137e7 osd: get rid of snaptrimming/snaptrimqueue pg states
b95422d mon: include magic in mondata
9cbda1e osdmap: use chooseleaf in default crush map
726767b osd: fix transaction argument order
f58ff71 OSD: pg ref count debugging
0b1128e osd: use map_lock to avoid osdmap update race in _finish_recovery
997582c osd: convert recovery to a work queue
82bb185 wq: use a single lock
7afce5b osd: clean up mkfs vs peek_super
ab07241 osd: fix peek_whoami
6be0af4 osd: make peek_whoami verify fsid
eddf4e1 osd: decode superblock properly
dd5ef3e vstart: 3 osds
003e17d cstring: pre-terminate even if content unspecified
ce81791 osd: feed type name into workqueue
69eea16 osd: convert snap trimming to snap_trim_wq
aa2c138 osd: basic scrub works
73507e3 osd: update stats when op is applied
2bea2d5 osd: add scrub wq
5a7142f os: use nstring instead of string for attrsets
38527f9 ebofs: fix occasional bdev shutdown hang
3b2807c osd: adjust merge_log
802d0e2 msgr: ref count message while they are owned by the messenger
e85c9f8 msgr: reference count messenger
9c31bb4 vstart: launch valgrind with --valgrind
aaf94a0 msgr todo
1fa04c3 Makefile: adjust link order (libcommon first _and_ last)
7049c61 ebofs: add new objects to main collection
20de77f mds: remove session from xlist before deleting
0aab274 client: remove xlist items before deleting
3534411 mds: remove Capability from session list before deleting
d2d27c3 mds: pull scatterlock of xlist in destructor
337cfc0 os: clean up ObjectStore::Transaction interface
43a26d8 msg: initialize footer
be97d02 lockdep: turn lockdep off during shutdown
725db5e osd: fix osd_reqid_t hash
484ecd8 filestore: pad with zeroed buffer
9c3c61c xlist: enforce removal from xlist
b4a9fb5 mds: fix uninit value
79d9f63 osd: adjust missing in merge_old_entry
0d91ac6 osd: type cleanup
bae8a3c osd: more merge_log updates
fc1d956 monclient: dont free messenger until races there are fixed
eb65590 cmonctl: fix busy loop
8906ba1 mon: ignore 0-byte latest
7d38e5a osd: merge_log fix when logs abut but do not overlap
17d9b07 kclient: different handling of EIO, bad crc
20a09af dstart: smaller cluster
46de32f osd: track bytes/kb usage over clones too
0babb1a osd: track per-pg bytes, kb utilization
124ca8a osd: fix update_stats
9d775e0 osd: verify monmap.fsid matches superblock on startup
86dc12e osd: include fsid in OSDPing, and verify
2311789 osd: maintain some per-pg stats (object counts, for now)
2c55e8e dstart: larger cluster
07f847c msgr: fix reconnect after error
92542f0 mount: typo
027fa30 mds: add new directory to new_dirfrags list
f3d2dbf mds: unqueue recovery on purging inodes
1c94897 kclient: fix unmount (broken by 01a33259dbbeb380104d185073f8802eee743f98)
4cca1db kclient: limit incoming messages size
7f68a22 mount: remove extra log
c51cb88 created mount helper, can resolve mount addresses
e8f6cbe4 osd: rewrite merge_log
0462d5f cmonctl: include original command in command reply to avoid weirdness
01bbcd0 osd: fix build_prior any_up logic again
3994811 filestore: fix btrfs detection based on latest btrfs-unstable
ba97e96 todos
248f3cf cmonctl: pick new mon on timeout
ab184d9 mon: fix get_latest
35e9899 msg: non-destructively copy data buffers in set_data()
3a8c816 mds: use last_sent (not last_open) to untangle cap release races
3f66a1a mds: be more forgiving on EPurgeFinish
b4e986b osd: adjust build_prior any_up logic
8182101 kclient: silence down some warning
6cef101 mds: fix an erroneous assertion (sage)
050dfe3 osd todos
6213227 osd: fix deadlock on map_lock vs peer_stat_lock
1c64db0 osd: remember past intervals instead of recalculating each time
5aad578 msgr: adjust mark_down locking to avoid possible race
66cabfa cmonctl: reprobe every second
0a20bb2 osd: clear_map_cache at end of activate_map
0234e3c osd: introduce map_lock RWLock, take read lock during heartbeat
f833d88 msgr: small cleanup
b38e8c6 lockdep: force backtraces on specific mutexes
8b5f0f7 osd: maintain a cache of past osd maps during repeering
e24344d osd: pause/unpause recovery thread while processing map
6121883 mds: journal updates _after_ predirty_parents (which adds parent context)
ef4a50e mds: remove bad assertion
d2d5df4 mds: mark inode clean only when purge is complete
cfae1fb mds: only mark clean if dirty
d46c1e8 mds: adjust purge_stray sequence; include explicit ino destroy
324b026 mds: avoid unnecessary issue_caps in file_eval
0c3664b mds: fix placement of eval_stray call on caps release
28251a1 mds: restructure purge_stray to remove inode objects, _then_ dentry
b5c399c mds: mark and pin dentries while purging, so they don't get trimmed out from under us
530cc2d mon: commit large numbers of state values quickly
a1511eb mon: use generic stash mechism to manage latest version of paxos-managed object
01a3325 kclient: use generic timeout/retry code for various monitor request types
cd32920 kclient: pick new mon if statfs is unresponsive; clean up other retry code
e14818c streamtest: fix recursive locking
1dd4209 (tag: v0.5) journal: detect size of raw block devices properly
200c569 osd: only trim pg log if pg contains complete set of osds
8c1908a osdmap: fix type conversions
41065ee crush: mention license.  minor cleanup
831800a be quiet
37f6d19 kclient: fix small resource leak when mds is down on mount
8bf6c7a csyn: fix msgr startup
fdbd20e kclient: whitespace
b513f2e mon: standardize storage of monmap revisions
8ff44d6 mon: indicate last_consumed state after writing "latest" full maps
59b9595 paxos: only trim old states if they've been "consumed" by PaxosService
c76edfb mon: fix mon injectargs
bb36144 cmonctl: seed random number generator so we pick a truly random mds
9391465 mds: treat open requests as non-idempotent
5fb2827 mds todo
53839a3 kclient: only kick requests when they may make progress
109d425 kclient: only submit mds request if mds is active
75a866c osd: always pick new mon during boot
d3ecd64 kclient: fix connect_seq on connect-side after connect
b96b68f mds: keep inode multiversion if it has snapped old_inodes
c948f7b mon: pave way for more per-client mount info in monitor
d618cb0 mon: client mon stat, dump commands; add to cmonctl -w
db8e522 msgr: include entity type in negotiation
5537f22 msgr: lotsa cleanup, protocol change, fixes, etc.
353c9ee msgr: various locking fixes
728ce57 msgr: zero msgr header
f702c95 thread: complain on bad join() calls
223ab88 testmsgr: messenger tester
4f1a19a mds: multiversion inodes with multiple links, too
647f6dd kclient: grab reference on inode before async operation
267679a client: use separate locks for SafeCond completions
996c8bf Revert "client: adjust objecter locking"
9cb6ae5 mds: cap may already be released in file_update_finish
fbdad41 mds: remove cap _after_ journaling update, at the same time we send the msg
eddb879 mds: use null snap context for purge if no realm
879af6f osd: keep head_exists accurate
a13845e filestore: implement touch
ad82fe0 ebofs: implement touch
2582d1b objectstore: introduce touch operation
2221718 kclient: some osd endianity fixes
ad71575 kclient: fix symbol overshadowing
83ffa29 protocol, disk format change
3c1e75f osdmap: move offload from crush map into osdmap as osd_weight
d30ed6c dstart.sh: larger cluster
cb272c0 mds: fix replay lookup of snapshotted null dentries
f0b26ff objecter: fix read scatter/gather
d18c180 osd: pass at_version by reference, so that cloning works
536f51b mds: remove spurious warning
21e37cc osd: ignore logs i don't expect without freaking out
db4e626 osd: assert length on write, zero
1fbe68e objecter: whoops, do DELETE, not ZERO
88d0317 osd: fix typo/bug when picking osd to pull missing object from
5ec7017 osd: fix missing vs lost counting idiocy
ef6efb6 filestore: cope with zero-length attribute values
2883397 ebofs: cope with zero-length attribute values
0f944df osd: use modify flag to decide whether to take read fast path
8b14747 kclient: fix up writes, reads for new op structure
48688a2 osd: MODIFY is a flag; fix up op_read
7e6cc5f osd: simple higher-order append mutation
920abc9 kclient: fix osd reply handler sanity check
de0bdde objecter: destructively take ops[], bufferlist passed to read(), modify().
8a6d7ee mds: set path attr on directory objects
e46705c osd: object attr operations
950eb91 objecter: tweaking interface
1a0958f objecter: simplify objecter (no scatter/gather, generic ops vector)
7bfde0a osdc: avoid using objecter readx/writex
cc9958d osd: compound osd operations
1c70b1d client: adjust objecter locking
07f0ee5 osd: track recovery sources independently of missing list
209ad64 mds: debug session ref in EMetaBlob during replay
214f0fa mds: match last snap exactly on replay, add_*_dentry
5c492af kclient: when going down, release caps anyway
fc0f6db mon: avoid updating pg_map when osd_stat is unchanged
60a706e cmonctl: -w or --watch to watch (and print) mds/osd/pg stat changes
7066f80 mds: don't cow a null dentry
94cc9ca kclient: sparse warnings
b826562 vstart.sh: add usage of $CEPH_BIN
7e1c35c osd: don't repeer an active pg just because the prior_set was affected
d87e7c1 mds: check dn->last when finding existing dentries during replay
607aca9 todos
8e6af7d ebofs: another recursive lock bug
39fc3c6 osd: turn up debug on any shutdown, not just SIGINT/SIGTERM, for now
cd2cd42 msgr: fix problem with forced stop of pipe
c72f129 ebofs: fix lock recursion
ad52c2f mon: handle invalid commands to pgmon
1f77a71 osd: add degraded pg state bit
4a1a33f osd: improve build_prior logic
fd9479b osd: turn up debugging on SIGINT/TERM
efb89f9 osd: fix osd_lock recursion in wake_snap_trimmer
24b3bbf kclient: bookkeeper detects buffer overrun
2dbf524 kclient: frag_make_child fix (sage)
2c15749 osd: don't pull if source osd is down
5ee78a4 kclient: ran checkpatch
f48ed5f todos
0197dfd synclient: fix debug prefix
ba907e9 cfuse: fix symlink call
616dcd1 vstart.sh
5df7fb8 fix env parsing
ef34517 streamtest: fix debug
f7dbfcb vstartnew.sh: clean out gmon
59fd71d journal: debugging journal full
b21e8cf dstart.sh: -d flag
48c2c02 config: parse CEPH_ARGS env var too
89744fb client: fix client_lock recursion
9499a8e rewrite debug macros, infrastructure
0639334 try to chdir on exit to avoid clobbering ./gmon.out
1cf9beb osd: fix prior_set_up_thru condition
9fd1e26 osd: fix PG::Info::History::same_since adjustment in advance_map
ab3dc66 osd: repeer osd if prior set may be affected
41eefe8 osd: shutdown cleanly on SIGINT, too
82e9c62 osd: clean up shutdown sequence
0adc8af osd: shutdown cleanly on SIGTERM
ba12b62 filestore: lock fsid file to avoid multiple users
2d31faa journal: fix recursive locking when queueing commit callback; simplify
330f5e5 lockdep: separate from Mutex; include checks for RWLock
e9f2f10 osd: remove odd divergent log assertion
8ed2d2d osd: put pg logs in collection 0, not the pg itself
92d2683 osd: fix recovery deferral
1b39f54 dstart.sh: debug journal
4417f48 osd: mention pgs that do not change during advance_map()
e44c2d2 journal: ensure we see a clean sequence of entries on read/replay
f0f3107 msgr: reorder locking in mark_down()
e415263 dstart.sh: enable lockdep
044c119 osd: fix recursive lock on remove_list_lock
e8d619c msgr: fix recursive locking in mark_down()
463b615 osd: avoid locking multiple pgs at once
2a1299a lockdep: error out on recursive locks
25129f2 mutex: non-recursive by default
09aef2a mutex: remove nlock assertions
bc94753 /bin/bash, not /bin/sh
4bcaba4 lockdep: faster
a0c4885 crun: no let
4e6d132 lockdep: use static array for dependency map
b34563b fakemsgr: missing mutex annotation
dfd080f lockdep: assign numeric ids to each lock type
811d867 lockdep: only track/show held lock backtraces if --lockdep 2
76dd6d9 reopen log files on usespace daemons when getting a HUP signal
82341e3 lockdep: BackTrace.h
a7e5c55 vstartnew.sh: enable lockdep
020d6a4 msgr: fix lock ordering on accept()
895ef1a lockdep: fix include
f9ebb62 ebofs: avoid taking mutex recursively
a0c698e lockdep: disable on _dout_lock
91108bb lockdep: include Mutex.cc
9a7d25c lockdep: disable on per-mutex basis (and do so for atomic_t)
641b1e2 lockdep: enable with '--lockdep 1', off by default.
18a5ba0 lockdep: make it work
1a51eb9 lockdep: annotate Mutex declarations
bc55688 msgr: set lossy flag on connect attempt
ab17c56 kclient: style, tabs
6877771 crush: no debug output
70612ad crush: dprintk lameness
b592ada crush todos
8f7cf32 crush: fall back to a linear search if pseudorandom mapping isn't finding anything
656e92e crush todo
5faa8e3 dstart.sh: use chooseleaf for data, cas crush rules
183a684 crush: fix list bucket, chooseleaf behavior
d7042ce osdmaptool: test pg mapping
1f1eeff makefile: make --with-debug work, fix build errors
5a2c576 osd: report pg osds, osd peers to pgmonitor; include in pg dump
f0c43da kclient: keep a pointer to the current snap context in the inode
14a6694 kclient: use current snap context if not found
d2c6d5f kclient: don't register a new bdi for the same client
d12ba8c osd: do all recovery operations in dedicated recovery thread
c62691e dstart.sh: 2x rep only
68c8e83 dstop.sh: stop crun too
9bbcc54 kclient: override rdcache invalidation time when going down
aeaf2fe osd: avoid trimming unless pg is clean; keep recovered_to, complete_to log pointers cleared when not in use
801d42a kclient: do LCHOWN, not CHOWN, so that mds does not follow the symlink
3cfbe40 kclient: update patch generator
30d44d1 mds: fix bad EINVAL error code in unlink
c3b17a8 kclient: note locked new_dir in ceph_rename
4a1d38b mds: fix pre_dirty/mark_dirty order for remote dentries in unlink_local
507e08f kclient: use vmalloc for messages larger than one page
e1470e5 kclient: make reconnect allocation a bit more generous
31f0fe3 kclient: remove extra dput on failed rmdir/unlink
2cad895 osd: initialize curclone
416e977 filestore: fix getattrs return value
ad019f3 kclient: fix mds request reference after free bug
d5037c2 Revert "mds: CInode::mark_dirty should then dirty the projected parent inode, if present"
b1b8f74 mon: lossless communication between monitors
ccf6bfc kclient: set r_got_reply _after_ we ensure we have a session
bc2208a mds: ClientCaps typo
087b6b3 mds: eval FileLock after last wrlock releases
8d49da0 kclient: no cap delay if mdsc->stopping (unmounting)
a853eb4 osd: clean up debug output a bit
676b455 filestore: don't clobber file on clone_range
bd24a8b osd: initialize clone_overlap on clone
45985f3 osd: skip pg log object when generating backlog
c301ac9 filestore: use strtoull (unsigned) instead of strtoll when parsing object names, etc.
c20745e buffer: print 'no raw' for 'null' bufferptrs
111e851 objectstore: do not include 0-length bufferptr in bufferlist if attr not found
bea6d9e vstartnew.sh: clean up out/* even if owned by root
bd1145c osd: sync on shutdown
e5cef7a osd: batch pg remove messages, do them all at once
5e001e2 filestore: encode transaction only if journaling it
3e419ed synclient: mksnapfile to generate a simple multi-snapshot object
fdba326 mds: generate valid seq value on rmsnap
f0ff8d8 osd: fix typo on setting complete_to
cf763fd osd: include fsid in MPGStats
8c5d589 buffer: skip crc calc on zero length bufferptrs
89c635d mds: CInode::mark_dirty should then dirty the projected parent inode, if present
db11db1 mon: ensure snap doesn't already exist in pending set
48b6a68 kclient: comment on paths for mds ops
0e3cc35 osd: reduce max_rep to 3 by default
52fd91b mds: increase max_size based on loner AND other caps
cfbc510 osd: recovery more efficiently keeps N ops in flight
0637e65 objectcacher: fix commit callback accounting
e63791b kclient: clean out when generating patches
83fc675 xlist: implement push_front()
fb42eee kclient: remove warning due to missing format
cc99958 mds: make loner unitialized warning go away
ed1761b kclient: bleh
49416b8 kclient: include documentation in patch queue
db12d2d filestore: be less noisy
51a33c3 kclient: typo
140031e mds: fix filelock loner modes
2c8ce87 mds: fix rfile/rsubdirs accounting vs linkunlink
077ff61 kclient: xattr rsubdirs fix
5676745 kclient: take i_lock in flush_snaps
95514e8 kclient: get code up to date with latest linux kernel
3bf62ff kclient: flush/release all caps back to mds before closing a session
ab86bcf crush: return 1.0 from get_offload if osd is not in the map
a9ce056 kclient: remove realm from parent's child list on removal; avoid letting ref count hit 0 during split
d98c377 kclient: remove some sparse warnings
cc2f471 kclient: fix cap flush, and drop ref when acked by mds
5fc21b2 kclient: finish_cap_snap fixes
619c37d kclient: queue finished cap_snaps and flush them after snap_rwsem is dropped
efbd7c0 kclient: cleanup some sparse messages
8de7cb2 kclient: free snap_rwsem at ceph_handle_snap
541be96 kclient: remove the use of snap_rwsem at ceph_mdsc_close_sessions()
86419d3 kclient: fix __ceph_flush_snaps use of 'follows'
94a9389 kclient: drop reply mutex, add a flag instead
6fc3fcb kclient: use a new reply mutex, fixes locks dependency problem
89e7a3b kclient: fix allocation flags for osd client radix tree
25544aa kclient: try to release RDCACHE if _no_ caps are wanted
498e21d kclient: invalidate pages if RDCACHE used but not wanted
4bed5af kclient: changing around the rdcache invalidation stuff
000c5f9 kclient: fix messenger tmp var name
c98fad8 kclient: cleanup
95f5fb4 kclient: revocation of rdcache handling
6b5b11a kclient: more patch queue futzing
e077a45 crush: comments, cleanup
44c9462 kclient: flush cap_snaps on session close
304373f kclient: build patches too in import script
a53c85c kclient: remove remaining #include/#ifdef cruft from ceph_fs.h
5fae8fa kclient: patch queue commit comments
b6c0980 clean up ceph_fs.h a bit
f0cc438 kclient: more patch queue fun
69871a6 kclient: adjust import queue
9116b4c kclient: allow monitor port to be specified with the ip(s) during mount
c8c4762 kclient: include Documentation/filesystems/ceph.txt in patch series
1929449 kclient: some changes for 2.6.28
fe67ddd kclient: added crush.h for the git import tool
d53f5a9 kclient: add dput to getattr for do_lookup splice case
bef7d81 kclient: import tool fix, take two
4da935b kclient: add Makefile to git import script
bb0249f kclient: fix bookkeeper dynamic setup
5367246 kclient: bookkeeper cleanup, configurable via kconfig
5b20213 kclient: replace printk with dout in the leak tool
fc20ce5 kclient: some more cleanup
fad30fe kclient: cleanup
5976e2a kclient: some leak tool cleanup
883b5ce kclient: remove extra debug messages
5794592 kclient: analyze crush correctly, kzalloc
5f8dbc7 Merge branch 'unstable' into kleak
a29a01d kclient: leak output shows filename and line
05c4e0c kclient: add missing files
6e47822 kclient: leak detections tool
2997c91 mds todo
7fae5ac filestore: fix getattrs to interpret listxattr return value correctly
ea5b625 filestore: clean up xattr routines using nice helpers
136470c mds: kill off inodes that get recovered but no longer have any parents
57cb4db mds: don't clobber ctime on snap removal
e2cbb01 kclient: fix snap_realm leak
ef69049 osd: clean up write_info vs write_log vs write_state
1fa1fee kclient: fix possible null pointer deref
050354b crush: include cleanup
69dd48f kclient: include crush in patch series
37cd4a2 mds: update log segment tid list on journaled tableclient ack
9203eff kclient: free sessions container on exit
5b10e64 kclient: whitespace
fe1ba42 kclient: remove useless __ for __u32 et al
a5d951c kclient: fix else as per CodingStyle
c458499 kclient: wrong parameter passed to mdsmap_destroy
ff200bd kclient: fix leak in osd reply messages
fc30eb7 kclient: mdsmap leak fix
4e0e8f8 kclient: free monmap on exit
d67b500 kclient: move dout etc. defs to ceph_debug.h
e7aa663 kclient: some osd, mds client comments
4f560a7 kclient: last bit of mon_client cleanup
78b2cac kclient: script to build patch set for upstream
8d0c9e8 kclient: some mon client cleanup
6d57020 kclient: kbuild patch update
ebb7eb9 kclient: more messenger cleanups, comments
5424a33 kclient: messenger.c cleanup, reorganization, comments
378de9b kclient: fix cap_snap flush to reference correct snap
57709b2 osd todos
8f92c35 mds: only check osdmap against snap table while active
a15fdb9 osd: track snap collections per pg, and clean them up
57965a8 osd: fast path if snap collection doesn't exist in snap_trimmer
a420cf5 filestore: return error code (instead of asserting) if collection doesn't exist on collection_list
c8a89f6 vstartnew.sh: turn up debugging on osd
688dd38 mds: cleanly update snapserver table after snap purge
80532dd kclient: more snap.c comments, cleanup
ca312ca kclient: a few more snap.c comments
80432c2 kclient: adjust ceph_finish_cap behavior
8f4baaa kclient: some snap.c comments, cleanup
9a001d5 kclient: osd messages timeout retriggering
5702a77 kclient: refine osd messages timeout handling
460f597 kclient: debug message
2608820 debian: include debian dir in usr/src/modules/ceph
629d5a9 kclient: some export.c comments
0f03831 kclient: addr.c comments, cleanup
b4a0e6c debian: make ceph-source include module source
143845d kclient: mdsmap cleanups
7fb8111 kclient: osdmap.c cleanups
f753fb8 kclient: osd_client comments, cleanup
e9cd366 debian: fix kernel module in source package
97de3cd ceph_fs.h: whitespace
be29270 kclient: more mds_client comments, cleanup
6dd96e6 kclient: more endianity fixes
25c67dc kclient: endianity handling fixes
82f19da kclient: endianity fixes
a2623aa kclient: some mds_client.c comments, cleanup
e6b5e02 kclient: send osd, ping messages in lossless mode
e0951ba kclient: super.c comments, cleanup
625e38c kclient: move inode alloc/destroy into inode.c
000defc kclient: caps.c comments, cleanup
b08b840 kclient: remove compilation warning
835e371 kclient: sparse code cleanup
c6c6635 kclient: file.c comments, cleanup
3b15ed5 kclient: dir.c comments, cleanup
8992ec6 vstartnew.sh: -n (norestart) to avoid crun restart loop
552786c kclient: fix inode refcount problems in ceph_fill_trace
3dbec47 kclient: some more code cleanup
7824aae fix crc issue (when len < 4)
302bb2d kclient: some sparse cleaning
1ed5520 use flags for mds chown requests
e683417 kclient: inode.c comments, cleanup
6df723c kclient: fix umount_begin for 2.6.26+
934a539 fix wrong byte ordering handling (thanks brent!)
66889f2 remove debug helper code for crc32
bab9ea7 osd: use central queue to dispatch recovery events
f7e57cf kclient: preallocate cap if we expect it
81bfddd kclient: remove static caps from inode
5d184bd kclient: super.h comments, cleanup, some minor cruft removed
b619063 ceph_fs: some cleanup, including mon statfs messages
462b003 checking buffer before calculating the crc (for debug)
8e3971a kclient: some more error handling
9c8c8ce kclient: remove ping_ack entirely
cffeb79 dstart.sh: use unstable btrfs
cddb600 filestore: fix btrfs version detection
49db767 kclient: lower debug level on debug message
d174b80 kclient: fix race condition
e8f5ca0 kclient: remove ping ack
d3f6a6f kclient: preliminary forced umount
5a4df68 kclient: ping osds whose requests are timing out
634e383 msgr: ping needs no payload.  lose ping_ack.
5b41f2b kclient: convert spinlock to mutex in osdc
ae0daf0 kclient: resend osd requests if osd resets the connection
2ce58a6 kclient: some error handling
8daa211 assert: include rudimentary stack dump
8ba36cd custom assertion handler
6c83cec objecter: ping laggy osds
91518f8 osd: lossy send policy on acks
0d03cfe objecter: kick requests when we detect a remote session reset
72864d9 msgr: handle incoming lossy connection when outgoing policy is lossless
a2a4235 filestore: use CLONE_RANGE ioctl, when available
c4d2160 msgr: track lossy mode independently for self, peer
d4024af client: fix && || parens
7518dd3 filestore: use BTRFS_IOC_SYNC instead of fsync
dd25463 filestore: detect new btrfs ioctls
f9fdc56 fix of crc32c calculation
cfa0992 replace the crc32c code
54548de debian: changelog update
9457aa3 debian: fix debian-doc; include debian dir in dist tarball
92fb44d mon: populate last_beacon properly for mds liveness check
18e5042 debian: tweak ceph-doc paths
ad0ab3a dstart.sh: replace dstartnew.sh
903959e filestore: fix collection attrs
cbe084d todos
ce0cb5e mon: include pg usage stats, header in pg dump
3e5e554 debian: move map tools and crun to ceph-common
1d109f1 osd: account for used kb separately
c6e5338 osd: use kb instead of blocks for pg, osd utilization
48295b8 osd: prioritize heartbeat messages
c3a68d7 msgr: include priority in msg header, make dispatch a priority queue
b3d6eef journal: protect journal access (namely, completions) with mutex
8618940 debian: include crun in osd, mds, mon packages
6e669cf osdmaptool: fix silly num_dom bug
7cb7ada ceph.spec.in: include crun
13b1bf7 (tag: v0.4) kclient: initializing kaddr (merge fix)
d9262de kclient: use both writepage and crc
fbd3cfa kclient: disabling the readpage
34dccf9 kclient: disabling readpage
133d95d kclient: use writepage instead of sendmsg for some of the data
0e95949 kclient: missing include file
8ef1cb2 Revert "kclient: use writepage instead of sendmsg for some of the data"
cd305cf kclient: use writepage instead of sendmsg for some of the data
f61042e msgr: expand footer flags, include nocrc, kclient nocrc mount option
d301485 ebofs: -ENOSPC in apply_transaction
3491f92 kclient: change default rsize to 128k
27feb1f kclient: use both writepage and crc
d4bf9b9 kclient: disabling the readpage
556d427 kclient: disabling readpage
406fc33 kclient: use writepage instead of sendmsg for some of the data
d574c96 kclient: small fix take two
12dacf8 kclient: small fix for bdi
d0a822e kclient: use a private bdi
45a5eaf kclient: fix file to object mapping
66c76af crushtool: verify explicit item pos
da85303 cm.txt: fix up metaroot pool
7b601f4 crushtool: verify item pos
ee0c804 dstartnew.sh: use custom crush map with separate metadata osd pool
353e957 crush: fix grammar
049ca24 crun won't be removed in make clean
87dd735 kclient: set first,last snap interval in lease release messages
7a7391f dstartnew.sh: keep core dumps
efc7bf1 mon: tell osd we manually mark "down"
e33471c kclient: fix mds session leak
86b312d client: fix objectcacher flush/commit callback
961ab8d kclient: fix mds timeout waiting for map
8137d0f update dstartnew to do btrfs
17e98ee filestore: fix completion callbacks when journaling is off
721219d osd: increase osd_heartbeat_grace
e460037 fix for cmon startup
50a1c6a kclient: fix readpages when not all pages are found
22b5f60 mds: create snaprealm for stray dentries resulting from rename
0af4603 cmon will run as a daemon in any case
4de216b combined vstartnew.sh and startnew.sh into vstartnew.sh
0f3ab37 startnew.sh uses crun in order to execute modules
ab5845e crun will not run infintely if -d specified on the command line
6f8d6bb msgr: clean up crc handling
e6dd588 mds: don't issue leases on dentries in stray dir
8a5070f msgr: don't host msg bufferlists in write_message
09b1bc2 also kill crun when stopping the system
a5a99b8 added crun wrapper
14305a3 add -f flag for foreground execution of modules (with logs in the log files)
3e33302 msgr: include crc in msg header.  verify crc for received messages.
f809ab18 clean up crc32c
65c5b2c add crc to messages.  protocol change.
403f643 todos
19cab1d kclient: can use names of modules in order to set debug mask
ed10f32 kclient: set asynchronous error cleanup
c718dd8 kclient: writepages async error handling and some cleanup
d1a7894 kclient: set page error bit on readpages error
44ead2d kclient: fix incremental osdmap decoding bug
7e4491f kclient: some osdmap cleanups
bab9251 mon: reweight osds via cmonctl
830a56e kclient: make standby an allowable connection race state
8dadb7b msgr: make standby an allowable connection race state
e88956a kclient: no .snap in root dir
d97cfc0 osd: fix reversed logic on push
0b6408b mds: remove stale proc_message()
9653098 mon: allow new arguments to be sent to running mon, mds, osd via cmonctl
cefdb4e todos
d05dfe8 kclient: mds reset stub
c7da2e8 msgr: fixed bug in accept
73c689c messenger protocol changes
5ca0b33 kclient: whitespaces
960bb0f kclient: can supply multiple monitor ips on mount
2b449c0 kclient: adding unmaskable debug flag
4893720 makefile update
2909ef7 v0.4, todos
024d0c0 config: comment
1b3a1c4 mds: fix file recovery
2542192 kclient: fix pending cap_snap checks, queuing
51e0ff5 client: fix queued cap_snap write-in-progress checks
ef37668 filestore: clean up clone_range a bit
66daf9c kclient: be more paranoid in prepare_pages
1c886b7 kclient: fix bad pointer arithmetic in messenger
91dd8eb kclient: don't include pages in read requests; some osdc cleanup
38770d2 kclient: switch to sync writes when NEARFULL osdmap flag set; ENOSPC on FULL flag
5e7f50c filestore: (trivially) implement OP_CLONERANGE
f8d64da ebofs: (trivially) implement OP_CLONERANGE
750c944 todos
e3ce64f kclient: default to safe writeback
aea485a mds: choose new mon only if beacons are delayed, and switch to mon that sends up beacons
76c7cd0 kclient: some async writeback cleanup
37d7bf5 kclient: async writepages
2165022 kclient: using special protocol mask for mds requests
a4b26a3 kclient: added missing file
9f630cf kclient: mask to enable/disable debug messages
45f704f osd: fix PG::Log::Entry version arg order
8833e12 journal: fix off-by-one bug in committed_thru callbacks
fd439bf journal: avoid queueing null context
c623948 kclient: writepage noop should be kswapd
275a06b osd: first pass at scrub() for verifying SnapSet relationships
2bbed59 osd: push/pull based on existing clones. track clone_size in SnapSet
54cbfdb osd: simplify SnapSet (remove head_overlap, keep only clone_overlap)
a6ca836 osd: identify clones in generate_backlog
44f7df2 osd: include from_version attr on clones
76ccde4 osd: clone locally in do_recovery() where possible
9bae2a4 osd: include old version in missing map
db1ebcd osd: include old_version in Log::Entry
0d6f98f osdmaptool: print osdmap
3d618f8 osdmap: set ctime+mtime on creation
534746c kclient: writeback cleanups (use filemap_write_and_wait)
8ecd757 kclient: time out mds session close on umount.  messily.
c67f2c2 kclient: fix up safe/unsafe writeback flags
1712898 kclient: unify mount timeouts
c95f010 todos
a0eb5e7 todos
f8ec9d6 psim: test localized placement groups
997a5f9 crush: fix forcefeeding for forceleaf
3b5f237 osdmaptool: lpg_bits specifiable
ecf1ba1 set bl length in buffer::read_file
8adb5dd osdmaptool: fix crush import
52f9d15 crushtool: fix chooseleaf compilation/decompilation
fb8cf71 todo
0a9c986 crush: chooseleaf
1cc73c2 fixes
8245f5b hrm
2977839 kclient: writepage noop should be kswapd
8bcbcd6 kclient: remove extraneous dput in fill_trace
43e7e39 osd: push/pull data_subset, clone_subsets
1d20e73 objectstore: clonerange, list->vector encoding
c43adbe kclient: lowered debug level on some message
d76ce49 kclient: fix mds reconnect message encoding; include snaprealms
d7a103f filejournal: typo, fixes callbacks
9ec27ab journal: remove some dead code
07c3f01 kclient: fill in kstatfs f_fsid
ae4b5ac paxosservice: reset propose timer when election is called
00d1759 filestore: constrain ObjectStore interface, simplify journaling, update commit_op_seq on each transaction
c0d94c4 filejournal: noop is committed_thru is same seq
c635d7e kclient: fix bug in mdsc check_new_map
20f81f7 filestore: serialize journal entries
d572871 kclient: dirfrag access using mutex and not inode's spinlock
79a612d kclient: fix random mds selection bug
2c0f3cc ebofs: maintain an op seq count, and use that for the journal
37c3ad3 journal: journal rewrite
5e6c8c5 use vector or deque in place of list<Context*> in finisher, ebofs
09efdf6 kclient: removing of virutal xattr is not allowed
b4e7754 kclient: setxattr for virtual xattr is not allowed
07771ce kclient: mount default without DIRSTAT
7a7947c kclient: no need to check for mount with dir stat (xattr)
a810152 kclient: remove whitespace
ce86d54 kclient: xattr show dir extended data
a481bfe startnew.sh: sudo if btrfs
3bee915 filestore: no rmdir in mkfs
bfb5b8d osd: some snap_trimmer fixes
29ff13c mds: purge stray files immediately; only keep snapped directories around
90bf053 mds: optimize open_snaprealm() for stray and/or non-dirs
d4fad4c kclient: some todos
4eceb97 kclient: rename __ceph_get_frag -> __get_or_create_frag
6096536 mds: recover file size for all affected snapshots, not just the head
525b26c mds: adjust TABLE_OP namespaces; fix prepare journal event
7f78004 filer: snapid should be nonzero on all reads
2a57107 kclient: allocate xattr buffer outside of i_lock
a153418 msgr: relax seq checking on lossy channels (incomplete fix)
9bc050e mds: write objects directory, avoid filer
88ebb73 osd: typo
c6231da mds: read mds objects with CEPH_NOSNAP
e4dc829 synclient: loff_t in write_file
7812ffc objectcacher: off_t -> loff_t
e049e53 osdmaptool: require num_osd > 0 when creating new osdmap
4a11365 mon: verify osdmap fsid in 'setmap'
99a4c2c osd: fix _finish_recovery locking, refcounting
12941b4 osd: prevent _finish_recovery from going off after primary changes
b47aa99 fix coll_t != comparator
1445664 ebofs: use correct remove in alloc_dec (so that btree remains balanced)
32906d5 todos
1408d4a kclient: use truncate_inode_pages instead of vmtruncate
51e44b6 kclient: fix revocation races
b3781ec mds: fix lock ordering
3e4ae45 another fix for kernel 2.6.26
74169bd some changes for work collaboration
ad7d666 kclient: send time_warp_seq with flushsnaps
c67475e client: update cap_snap code to mirror kclient
fe5908cb kclient: restart writeback index each time snapc advances
34d140a add truncate_seq to inode, mds<->client protocol
808226c kclient: adjust kernel version conditionals
32cca70 mds: fix client_follows in live cap
a1f6d93 kclient: misc addr fixes (fsx + snap testing)
a1ba86d kclient: force sync writes hack
0629e50 todos
82a034b kclient: no short write in ceph_osdc_sync_write
6aeb288 kclient: no short read in ceph_osdc_sync_read
af733c1 kclient: do/wait for writeback in write_begin if page isn't clean or current snapc
dba320b kclient: writepage is noop if page is not oldest snapc
a53b148 synclient: dump placement
f957edc dstartnew.sh
7fc51e1 kclient: last put_connection after dropping spinlock
5a28e48 ebofs: kick waiters if commit skipped because fs is clean
18069b2 kclient: retry sync_write on EOLDSNAP
9b4d778 osd: truncate(0) fix
bb1a937 kclient: make sync_write free memory
d2bbc6e kclient: make sync_write update f_pos
88515b7 kclient: make sync_write free memory
fbfcd61 kclient: make sync_write update f_pos
b1da940 kclient: some writepage cleanup
a7eeea1 kclient: clean up page->private
291971e kclient: fix redirty_page to actually set the dirty bit
369a84a mds: fix ltruncate to actually purge underlying objects
7aea75c mds: fix ltruncate to actually purge underlying objects
3a3c48f kclient: page_mkwrite, improved dirty page accounting
95cead7 kclient: no fallback to writepage, be careful with wsize
7e66635 kclient: mmap/page_mkwrite shell
0e4b664 kclient: snap ordered writepages, improved cap_snap handling
3b54e27 kclient: fix osdmap incremental decoder
44be659 kclient: taking snapshot basically works
56cc913 kclient: optimistically adjust dirty accounting before taking tree lock (to avoid lock dependency issue)
1669fe5 kclient: fix snap_rwsem write/read redux
25cb320 kclient: revamp dirty page accounting with cap_snap dirty counts
5614170 kclient: fix i_lock/snap_rwsem lock inversion (read, not write)
b50649b mds: introduce ceph_session_op_name()
9258ee9 todos
e35da01 kclient: i_cap_snap_pending
f538df6 Makefile.am: add kernel/caps.c
6ea3689 kclient: initial pass at queue_cap_snaps etc., unfinished
2ca1809 client: small queue_cap_snap cleanup
4e03f61 mds: blindly lease immutable bits of inodes
ce533f0 client: delay snapflush until after data is flushed, sync writes complete
f64da6c client: cap snaps
82baa28 client: use objecter callback for write flush notification
05d2ddb objectcacher: flush_set_callback
d2384ab objecter: fix writefull
944b3d3 kclient: snap type cleanup
9d8e4e8 kclient: introduce ceph_cap_snap
7677c9a mds: writefull directory objects
43400e3 objecter: introduce write_full()
fe9a27d osd: clean up osd opcodes, introduce WRITEFULL
6d05abf kclient: recheck caps after import, in case RELEASE went to old mds auth
5908e0c kclient: handle session close vs mds push races (by periodically retrying session close)
5cd1db4 kclient: fix cap inode ref count bug
d19f8be kclient: drop snap_rwsem while waiting for mds sessions to close
adc660f mds: inc session seq on cap import
6bdbe2a kclient: use rbtree for inode caps; avoid looping in ceph_check_caps()
9fa35bc kclient: move caps code into caps.c
b12f6ef kclient: close out caps on RELEASED, not release request
f9676da todods
0e91d67 client: close out caps on RELEASED, not RELEASE request
ac2e696 mds: send RELEASED, FLUSHEDSNAP cap messages when cap updates are safe
9004635 kclient: down_read snap_rwsem for buffered writes
b5ad12e kclient: snap_mutex -> snap_rwsem
6ddeab0 osd: ORDERSNAP osd_op flag
a177e46 osd: fix _overlap updates
e9e120f todos
6472f2c osd: track clone overlap (instead of diff) in snapset
301d0c8 osd: include pushed clones in proper snap collections
5797c3e os: list -> vector in collection_list, list_collections
e8e57d9 osd: rough trimmer, non-functional
c598d48 osdc: fix objecter, objectcacher lock interfaces
dc7953d osd: don't clone for lock or meta ops
1d0fb08 osd: push removed_snaps down into each pg
8a5207e mon: typo
0c4ac33 todos
e170093 mds: do not allow snaps on root dir
923f72d osd: track byte range diffs between clones
95b02e4 osd: fix zero -> remove munge ordering wrt snaps
4435097 osd: sync on finish_recovery, but don't block
eec476c yay, my own private fsx.c
b54fd0e Makefile.am: include new headers
aae0a4d test_setlayout.c
4177e20 todos
580f2b2 mds: setlayout support
ff7dcb5 kclient: get/set layout ioctls
028e721 kclient: nicer debug output for fill_trace
4cb4089 kclient: beginnings of layout ioctls
1d5d970 mds: fix ceph_add_cap for non-inline caps
a7fd8a1 kclient: typo
81b442b todos
38667db kclient: 2.6.26 updates
4223813 mds: follow latest seq, not latest create
875d890 mds: start new items at snapid 2, _after_ root seq of 1
7662720 kclient: disable partial paths for the time being
802724a only update inode lease if we took i_mutex.  fugly.
eba09fe mds: mark scatterlock if we import dirty scatterlock dir data
4510ff4 kclient: include migrate_seq in caps message
03f7750 mds: fix ceph_add_cap for non-inline caps
02d6a14 kclient: remove from snaprealm list on cap removal; fix various ceph_remove_cap bugs
49edcfb kclient: take snap_mutex during cap release
2872de0 mds: mark inode clean when purging dentries for deleted snaps
5235949 mds: don't fall over discover_reply with dir_auth_hint
a71a2a5 kclient: add snap_mutex
c6e3925 mds: snapdir may be non-auth
0cb9b50 kclient: mds client spinlock -> mutex
cc269a1 kclient: handle snap trace on cap import
a46bc45 mds: do split in mksnap
87ee866 mds: root snaprealm starts with seq 1
6ad5271 kclient: handle_snap
b01570c kclient: take ref on snapc during writepages
6ed11f7 mds: set seq correctly for rmsnap, snaprealm create
967e0cd kclient: set snap_follows in MClientCap
aaace9d kclient: clean up inode hashing, remove i_hashval
98b1975 kclient: ceph_ino, ceph_snap helpers
42a204b kclient: EROFS in snapdir, snapped dirs
c9b40d8 kclient: stateless snap_caps on non-head inodes
748209f kclient: include snap in ino hash
254ac6a kclient: some refcounting fixes
9856d9a osd: off-by-one in log merging
ecc8d53 kclient: fold mksnap/rmsnap into mkdir/rmdir
880c2ff kclient: rmdir to rmsnap
425115e kclient: mkdir to mksnap
feaf511 kclient: fix readdir_prepopulate for snapdir; fix splice_dentry failure case
347cccb kclient: basic .snap dir support
e7d1791 objecter: better pg state debug output
3051ec2 osd: remove failed osds from pulling map
5db3f79 mon: guard in/out/down commands a bit more carefully
4bb8bb8 osd: zap waiters on shutdown
7ac0fb2 osd: ignore log if pg is active
0e70238 max_rep 4->3
c39a0e9 kclient: force early writeback if page belongs to a (different) snap
be6a43d kclient: rebuild snap contexts instead of just invalidating
1f9b0d5 mon: more precision in pg usage output
ab905ef kclient: attach snap context directly to dirty page
87ceca6 kclient: ceph_snap_context, pass context with osd writes
f3f0458 kclient: set pg_pool in osd requests
94c69f3 kclient: set pg_pool in osd requests
6aae4d7 kclient: very basic snaprealm handling
adb4d3d osd: fix snap dne error code
9c94eff kclient: mdsc handle snap blob
b9ffb42 osd: forget pushes to newly stray osds
c585e63 kclient: mdsc session fixes
49ac8bc osd: filter heartbeat stamps when adding to heartbeat_from set, too
ccb4004 osd: prevent pg stats from non-primary osds
11f5e48 osd: guard rep_ops based on map epoch.  fix DOWN state.  prefer prior_osds for newest_update_osd
896dd08 osd: only accept push if it is the specific object version we were missing
5273796 osd: pg DOWN state; require at least one osd from last_epoch_started
fed94eb osd: don't rebuild backlog if we already have it
84eded7 osd: only re-push pulled object if active, to avoid weird interaction with repeering
32a54a7 osd: update last_complete if nothing missing
ba7fb39 kclient: fix mdsc shutdown, crash on mount failure
0141907 kclient: fix osdmap decoding
573a9dd kclient: versioned inodes (ino,snap)
bee65fe mds: adjust MClientSnaps encoding
b05085f mds: structify up snaprealminfo, MClientSnap encoding
7cc9015 rename MClientFileCaps MClientCaps
41c8a85 mds: rdlock filelock when opening snapped files
4e86444 mds: clean up MDSTableServer interface a bit
326b17f mds: allocate consecutive snapids
eb2fc50 mds mon: propagate deleted snaps to osdmap
52c3a2b filestore: reenable clone.  don't use splice.
d86d1c9 osd: add clones to bounding snap collection(s)
f4e056b osd: make coll_t 128 bits
3a4f9e6 client: flush delayed caps on shutdown; fix release starvation
20d6dfa mds: list -> vector
7720471 osd: more list -> vector, remove old message types
fcc9095 list -> vector
aab685b osd: observe snapset.head_exists on read
e54851f mds: do not purge strays with snapped references/past parents
32998e2 osd: fix head deletion
544a7e0 mds: fix unlink snaprealm creation
936e42e client: delayed caps release.  fix caps release after writeback.
56e5431 mds: adjust snaprealm parents in link helpers
83459d1 mds: clean up mutations, drop pins
450d91c vstartnew.sh
74ab7f3 osd: redid snapped reads, writes
a07b7a8 client: fix cap ref drop on snapped read
9dc5c36 ebofs: allow attr updates on cloned objects
7f050e7 synclient: rmfile
c1bef7a osd: pick_read_snap v1
689a8d2 mon: read() needn't check is_readable()
afb3e4d ebofs: fix uninit value on o/cnode creation
4b06928 osd: encode/decode PG::Info in pg xattr
c6fb705 os: add collection_getattr that takes a bufferlist
7def571 osd: clean up _create_lock_new_pg
083de43 ebofs: fix apply_transaction vs cids on object ops
e936ca8 osd: fix pg create peer ordering
59405cb client: 'follows' is snap_context seq
8f557ad osdc: adjust objecter interface to use SnapContext for writes
09d3701 mds client: initial steps for cap-less opens of snapped files
f1537f1 mds: split snaprealm on unlink; clean up rename realm updates
64bbb0b mds: send snap updates on snaplock update
d65b58a mds: factor out do_realm_split_notify, call on snap lock update
128c728 mds: handle realm split in open_snaprealm()
e5e4ce0 darwin changes
4fe4f59 filestore: --filestore_btrfs_trans to enable/disable btrfs transaction ioctls
710f5f6 mds: snaprealm replay, reconnect fixes
b577d8e client: snaprealm reconnect, update fixes
44eeb6a mds: list child snaprealms in split, and send split notifications to all clients with caps in nested snaprealms
e169674 mds: adjust open_parent on replay relinking
2b8061b client: invalidate child snaprealms; adjust snaprealm parents on split
7538e0a mds: fix replay of tableclient tids to include in logseg list
6889c59 osd: ignore CEPH_OSD_EXISTS until we have a use for it
69dfd06 osd: ignore CEPH_OSD_EXISTS status bit until we have a real use for it
21b2ea9 mds: fix snaptable initialization/recovery, mdsmap anchortable -> tableserver
0c2fa24 vstartnew.sh
47c8cf9 msgr: debug level
b5763d8 mds: reconnect encoding
998badb mds: fix open_parent addition in rename
8cb2387 mds: fix open_remote_ino freeze_dir check
a49b294 mds: mdstable/client, anchorserver/client fixes
4209531 client: snap msgs inc mds session push seq
1ccb1a9 mds: adjust debug output
08b4a4e mds: fix open_parents context deletion
e9ebd9c client: add missing dendl
4f1c228 check_dendl.pl script
11c1de5 msgr: adjust policies
640e4ed mon: fix mds takeover
d6c55cf mon: fix mds takeover
2b76325 mds: reconnect compiles...
9cd32de mds: some snaprealm reconnect bits
b212b34 mds: lots of reconnect fun
924cac5 debian: include missing items in ceph-mon, chmod +x rules
e429a55 ebofs: fix NodePool::expand_usemap() to correctly reallocate a contiguous buffer
779f970 mds: the reconnect trainwreck continues
7d4e45f mds: first pass at snap-aware client reconnect
d4d428e osd: reset complete_to/requested_to pointers on recovery finish
289be81 osd: pull last_complete forward on recovery completion
a97dcaf osd: fix merge_log to process in _forward_ order
0757ae8 osd: add_event() helper to assimilate Log::Entry into Missing
b4adc0f osd: small cleanup
f40412e dstartnew.sh/dstop.sh
4053125 ebofs: replace hash_map with unordered_map in nodepool
993d196 osd: write empty log on pg creation
3152d65 osd: wake up all pg waiters on activate_map; clean up wake code
0bd8b1a osd: check in with mon when no heartbeat peers
f349d23 osd: some additional do_recovery debugging
e787871 osd: filter heartbeat stamps against source set (fixes false timeout when peer leaves then rejoins from set)
b3c8869 mds: fix rejoin encoding
00c3131 buffer: fix iterator assignment to between bufferlists
5ed79ce mds: misc rejoin, reconnect fixes
58da4b9 buffer: fix iterator assignment to between bufferlists
a502848 mon: fix double propose in mdsmon tick
fe4ac3b mon: fix double propose in mdsmon tick
54694df mon: allow tick on peons; make most actions in update_from_paxos for leaders only
292fd40 mds: hook session version in EImportStart
86eecef mds: fix dirty assertion in CDir post-commit clean sweep
cacecf4 mds: encode _replica_ lock state
aa041e1 bug todo
99a3fe2 mon: election bugfix
b579d31 mon: election bugfix
716b1f7 mds: remove useless dn dir_offset
dbeb04a mds: frag's rstat may update without nestlock held
fccd17b mds: move snap_purged_thru into fnode, fix commit/fetch
6371b22 client: use cache for lookup on dn lease OR dir ICONTENT lease
b0354e5 mds: clean up empty/null/infinite leasing
e964c0d mds: discover_reply handler fix for null dentries
5bd9619 mds: fix up scatter/gather, but in project_rstat_to_inode
5a5bc85 mds: cleaned up rejoin vs scatterlocks
95681fe mds: some scatterlock cleanup, incomplete
1bd2936 todos
c9f1af2 mds: scattered rstat fixups.  old_inodes only fully defined on auth.
438d771 mds: fix predirty/dirty ordering bug in unlink
395fb25 mds: discover bug
b37ff48 client: cap flush, import/export fixes
5f138e2 mds: some scatterlock dirstat fixes
0aa842c mds: pin and dirty cow items
9ae428d mds: misc small snap fixups
8ec2aba mds: make wait mask __u64
8070a84 mds: missing lock cases
6d5e759 mds: client session force-open fixes
6c7bd4f mds: delay cap handler if freezing|frozen.  drop cap msg if migrate_seq is older.
10dcdbf mds: handle recent new locks in cache expire
661f212 mds: rejoin snap support
cb17c5f osd: ignore remove request if pg has changed since request was sent
65dfe14 osd: replica may have missing/lost objects when it activates; the primary is responsible for pushing them
82f5d05 osd: on_change, abort repop entirely if we are no longer primary
26d9555 msgr: warn+fault on bad seq.  but keep assert, for now.
4691e06 osd: osd_lock assertions around pg_map access
aa30a68 mds: dentry waiters wait on specific snap; wake on entire dn [first,last] interval
94b8dd4 mds: preserve snap info on import/export, clean up CInode constructor
d1c6369 todos
1bad07f mds: include snapid in MDSCacheObjectInfo (used to identify locks, remote auth pins, etc.)
5ae5205 mds: add snap to discover+reply
819e089 mds: fix up replicate, cache expires to include [first,last]
27a3d38 mds: dirty_old_fragstat to dirty_old_rstat
1ed36b5 mds: huge discover rewrite
743a40f mds: refactor cache rejoin, encoding/decoding
5199f92 mds: purge stale snap data during readdir.  also, dirty dir if anything gets purged
e4dc3e5 mds: condition dir fetch/commit snap purge on last_destroyed, not seq
13a817f mds: open snaprealm parents during path_traverse.  once parents are all open, set a flag
cea2819 mds: pin/unpin open_past_parents
1959c61 mon: print failure msg payload
5bf291d todos
b052e3d mds: purge stale snap data on fetch too, if newest_seq has changed since store
8497009 mds: factor out dup snap update code
e74118e mds: snap deletion
bc2e9f2 mds: purge old_inode data too
6852086 mds: purge stale snap dentries during dir commit, or explicitly
2307cfb mds: catrack last_created, clean up caching semantics, use either get_newest_snap() or get_last_create() in callers
2b6093b kclient: fix multiple subdir mounts from same client (remove path from mount_args)
4ce3f48 mds: rdlock snaplock up to root
404b6c4 kclient: fix multiple mount points from same client; serialize mount attempts
d751b0b todos
1594a2b mds: leave remote links behind on dir rename
44bd1dd mds: adjust snaprealm parents on dir rename
c2d5c4a osd: tweak heartbeat failure timeout
2a99958 mon: apply osd_stat updates to pgmap correctly
524ec39 fixes for debian directory
d4fd217 mds: some fixes for rstat projections into snaps
99d7ec9 todos
1a8f454 allow leases on snapped metadata
cd57913 ceph.spec.in changes
a4d20ae missing headers for MAX_IOV on some platforms
63655e6 mds: fix anchorclient update
a7fc5b5 mds: reenable opportunistic rstat propagation
6839c5e mds: encode proper indoe version for readdir
2c3f3f7 mds: rstat propagation into snapshots working...
fe71e8c mds: closer...
affa507 mds: fix cached_snaps
8a37642 objectcacher: fix truncation bug
78c4acd objectcacher: fix truncation bug
04e5f1b mds: project projected inodes' rstat.  introduce old_fnode_t
ae4d87f make gcc 4.3 shut up about deprecated hash_map etc
02bff47 mon: fix int overflow
369aa3d simplify includes
247281b missing parens
db567c9 make gcc 4.3 shut up about deprecated hash_map etc
781a332 mon: fix int overflow
c1a0189 simplify includes
2b8f15a mds: missing constructor
b65aa9a missing parens
c14d415 client: missing include
2a2e9bc mds: start to project rstats into snapshots
6c20ae4 mon: fix MDSMonitor prototype
248a21c filestore: close journal on umount
8e42200 ebofs: close journal on umount
a386fc5 thread: start/stop debugging
0e78f62 use atomic_t to count threads
0f108d6 mds: half-finished
421c8e7 osd: stop timer thread before forking
13608f2 mds: separate nest_info_t from frag_info_t, covered by a new CInode lock
fbe7c6c mds: move Locker::predirty_nested to MDCache::predirty_journal_parents
ee3ff62 client: flush caps on realm + its children
d5a65b4 kclient: update proc for 2.6.26
b085ef7 client: trace realm parent/child relationships; use per-realm seq
52aed2a mds: separate snaprealm creation from snap creation
67122c5 mds: basic rename, more journal_dirty_inode
24d16ad client: fix fuse ino generation for getattr
8ef60ce mds: clean up cdir head vs snap (null)item accounting
a522c1f mds: small snap fix
a86eaec mds: watch out for wrlock in file_eval
a5d5e67 mds: make CInode.last NOSNAP instead of 0
6eae091 osd: fix clone selection for reads
f033366 mds: fix recovery on snapped files
5d9eff8 ebofs: enable cloning
3c30900 mds: metablob replay, cap cloning, mksnap journaling fixes
dd90259 mds: fix shared write vs max_size adjustment
6ec022b mds: fix up snap cap flushing
e12df24 mds: dup caps; fix journal_cow_dentry
517f2b3 mds: fixed up caps vs cow_inode
77a92f2 mds: snaptable -> snapserver+snapclient
d907674 mds: more inotable cleanup
88e48bc mds: rename IdAllocator -> InoTable
586236c mds: refactor Anchor{Table,Client} into MDSTable{Server,Client}
4ca584e mds: EUpdate in mksnap; fix ESnap
37ffe78 mds: snapid cleanup
7d94d8f mds: watch dn first,last in metablob replay
cb201ff mds: server cleanup.  link/unlink.
8314c44 mds: refactor journal_dirty_inode into journal_cow_inode for versioned xattr updates
a327204 mds: touch dir ctime on mksnap
0685534 mds: adjust trace encoding, clean up snap naming
9bbc472 mds: .snap mostly working
b408d51 rename, fix ceph.spec.in
f254beb mds: follow snaps in path_traverse, returning resulting snapid to caller
0fcadab client: track snapdir ref to parent explicitly
5a83812 filepath: don't remove dup /'s
83f2e4f client: hidden .snap dir, lssnap fixes
2e986fe (tag: v0.3) include ceph.spec in configure.ac
d38b0af ceph.spec changes
90a0dfc mds: fix purging for unlinked inodes with caps
1949cce client: cache versioned inodes.  use high bits of ino in fuse client.
45e0889 no more m4
2cdc7b1 autoconf fixup
24113c9 client: basic objectacher read/write support
d4f917f mds: use set (not vector) for cached_snaps
156d276 mds: snapid_t, multiversion inodes, fixed up perdirty_nested
33c6a6b no more m4 dir
a1c3ea1 ceph.spec for building RPMS
8c96daf autotools crap
d6b3d66 mds: cap flush on snap updates; mds may update snapshotted inodes
4af5c26 todo
bbe6b46 mds: include dentry first,last in emetablob
8026691 mds: cdir fetch/commit versioned dentries
dccae6d use orig_source for MClientRequest, MOSDOp
13c809b todos
7c3c27a convert more off_t to loff_t
7390eb3 ebofs: use lseek64 in blockdev
517c00f fix PAGE_MASK
fdc77db mds: fix file purging vs delayed cap release
1e98f3e mds: versioned dentry, dir items, inode_map
839af33 ebofs: reduce commit interval to increase (single) client write throughput
a49ac8e client: fix occasional segfault
11e4680 client: adjust readahead default
fdb1212 client: show read throughput in csyn read_file
7f6d09a client: don't readhead past eof
8b408f5 kclient: debug info
43867a2 objectcacher: insert new buffers at top (not middle) of lru
177bd06 client: align readahead with object boundaries
c6b7dea osdc: don't set RETRY flag on all reads
ee3fc34 mds: no link for current parent; rename some fields
095ff6a client: readahead
4d6a6bb mds: cache snap vectors, adjust snap_highwater meaning a bit
1966276 mds: eliminate children linkages, instead maintain open_children; make split adjust open_children
b1936b6 client: introduce snap_created to behave with out-of-order split notification to the client
5c22b81 todos
07c0a8b msgr: fix RESETSESSION handling
03697af msgr: fix up global_seq handling a bit
42eb490 mds: fix snap spitting; update caps under all active nested realms
ee2d432 mds: basic split support
a030e4a mds: simple mksnap
3d098d9 mds: add snaplock
affd4f6 client: handle_snap
b77c0b2 mds: encode snapbl into metablob
be77f3d client: snap_highwater, MClientSnap
46a12aa osd: misc fixes.. basic cloning works
8e1f254 cfixups.  niceify object_t printing
ee43dee filer: set object snap field
7132303 mon: use orig_src in clientmon, elsewhere
c863b1b mon: skip osdmap update if max_osd is too small
9e8963e pass snaps through filer, objecter.  link snaprealm to inode (not cap) in client.  fix up dirstat/inodestat encoding
cd230f1 mds, client: group caps by realm
6389d40 mds: attach snaprealm to CInode, encoding/decoding
3d4e4ac mds: SnapRealm
33c2ae0 mds: ESnap, SnapInfo
ed4bc51 mds: introduce snaptable
a891e8b mds: factor MDSTable out of IdAllocator
70b3aba osd: snap cloning
09e025b osdmap: removed_snaps
9891cdc os: getattr to bufferptr
f89a038 snap: fix oid.snap
4374245 kclient: handle potential splice_dentry failure
3dd86f8 mon: use forward_message, orig_source_inst throughout
52117c3 msgr: introduce orig_src, forward_message()
787a678 msgr: add global_seq to disambiguate reset and slow connect
dae0be3 Revert "msgr: half-assed fix to msgr race vs reset issue"
80754a5 msgr: half-assed fix to msgr race vs reset issue
3bdcbf8 mon: reset new_value(); cancel_timers() cleanup
149e806 mds: i missed a take_diff caller
f443105 mon: forgot paxos_pgmap
897069b paxos: remove old 'HI MOM'
105ce27 mds: avoid touching dir utimes()'d mtime unless dirfrag mtime actually changes
ed7076c test with multiple monitors
3859475 mon: elector fixes
e248e16 mon: fix pgstat for multiple monitors
b970414 mds: fix dir mtime/ctime
09dc9b4 kclient: fix up dentry if we can take i_mutex, but avoid rehashing dentry if there is no lease
b36601b kclient: fill_trace takes i_mutex, avoids dentry if no lease
f8801b6 osd: check if osd exists such that pg_layout=linear behaves
7e2baa9 snap: base types
e147a82 todos
1629099 kclient: pass in flag indicating whether dir i_mutex is held
f2a8d10 todos
bde1b55 msgr: fix need_addr public/private
3daad65 fill_trace todos
0772d62 mds: fix dn lease issue in base/root dir
f2f3c27 kclient: ensure materialised dentry is hashed
db62d9d asdf
4031bf4 vstart.sh
73fdcdc todos
28b9ab0 kclient: ignore ICONTENT on root inode
565617d mds: issue per-dentry leases on base inodes, despite ICONTENT
9ac74f8 mds: verify src and dest paths are non-empty in rename
7e07b3a Revert "mds: fixed rename ancestor thing.. again"
c7ba639 kclient: set min depth for ceph_build_path_dentry (fixes spurious Invalid argument errors)
795ccbe kclient: improve osdmap decoding, error reporting
44078a2 kclient: typos
98bef16 kclient: make ceph_lookup_open return spliced dentry (fixes and reenables open intents); factor out a post-lookup helper
6840401 kclient: be less noisy about dn splicing
64f9a80 kclient: disable open intents, for now
b1d3dbd mds: wait_for_sync for predirty/dirty cycle in try_subtree_merge_at
c13d91b kclient: typo
a672ab2 mds: fixed rename ancestor thing.. again
dcb520b kclient: more helpful info for bad ceph_msg_put
1b9f12d mds: add parent before child dentries to metablob in predirty_nested
0748ea5 kclient: norbytes mount option; rbytes on by default
2fa2bdb kclient: kick mds requests on mds status change
f298e04 osd: ack ops that drop out of replica set
4c14789 mds: fix rename ancestor check and locking
3a1c44a todos
f999b12 todos
9bdc1c7 mds: more robust rename path check
fe29675 kclient: msgr state bit cleanup
e0d1a3f kclient: small msgr fixup
03027bb mds: fix trimmable_at logic in try_to_expire
b7c1cf1 kclient: clean up setup/shutdown; merge ktcp.c into messenger.c
4b3a51a kclient: multithread
9e1928b kclient: fix up socket handling in msgr
34a578a kclient: use single thread for messenger
94d6645 kclient: use d_time to track dir version
f824c12 mds: fix dir projection on truncate
ad6ed67 mds: debug try_to_expire
910a605 synclient: observe data flag on import_find
c27e27a Makefile.am, configure.ac updates for v0.3
5be3bb5 disable string table for now
07bdb97 cfuse: warn on 32-bit kernels
8ff270c client: fix init() with multiple clients in proc
3c2ae7e msgr: fix ip discovery with multiple entities in proc (csyn)
8d074b5 missing include
bb97d3b objectcacher: fix writeback logic to be less braindead
038a25a dstartnew.sh
9e1ee71 msgr: fix ip address discovery when using -m monip:port
4a2cca4 msgr: initialize need_addr in rank.bind() instead of constructor
8f332c1 mds: be more verbose when not found in mdsmap
b71a6c9 osd: clean up pg creation state
87d5220 objectcacher: avoid unnecessary flush_set calls
0662ba2 client: bigger default objectcacher size
38014f6 synclient: show writefile progress
a31b052 crush: fix warning
8837e63 osd: clean up pg_t printing
4379d8a osd: fix up osd_auto_weight
1817ab8 mds: commit new dirs before first mention is trimmed from journal
9cc46e0 kclient: debug dput
4fe1bb7 kclient: use d_materialise_unique to properly reattached renamed directories
bb367cb kclient: revalidate dentries while constructing paths.
7e63262 osd: do osd_auto_weight in mkfs
caa48eb fix buffer.h headers
43357c7 todos
5d65fd5 kclient: never use VFS-provided dentry if d_parent is incorrect
c517fee osd: add flags to osdmap
3d63675 osd: shutdown cleanly on SIGHUP
5f419e2 ebofs: fix memory leakage
9460b75 ceph_fs.h include order tweak
d081424 kclient: debugging d_drop
48fa1b0 fix up includes
b6c2f9f kclient: fix i_lock vs kmalloc in ceph_get_frag et al
a31f0d4 mds: mark sessionmapv in LogSegment during replay
accefdd frag: fix parens
bd14bb1 todos
b9f88f4 mds: fix frag replay
a739997 frag: fix bug in force_to_leaf
32c2507 mds: disable authpin debugging
69311a6 mds: fix fragstat accounting across dirfrag splits
967e871 string table
0c75f12 mds: use nstring class
d9153d5 mds: stop munging hash
7e559a7 frag: remove old cruft
500cc16 mds: auth_pin dir we are projecting in predirty_nested
416cac1 new frag encoding uses _most_ significant bits.
c9108d3 mds: rdlock dft during readdir
caa8701 fix frag_next, using lame old frag encoding strategy
39ea428 mds: added auth_pin debugging; fixed auth_pin leak in scatter_writebehind
86c9667 mds: frag fixups.  but there is a lost auth_pin somewhere...
c58ea2e mds: some initial dirfrag cleanups
8577351 more
2c5a57b asdf
450c169 store data and metadata in separate pg_pools; name crush rules
2615072 mds: move inode_t et al to mdstypes.h; remove inode_t from osdc/*
9471cc9 more
2ddd136 more notes
3c0af16 more notes
2d10b13 filestore: mask SIGINT, SIGTERM to (somewhat) protect transactions
06d43b7 os: remove read ops from transactions
bfe3ca5 filestore: alternative btrfs usertrans ioctl
6da0358 notes
f57b15f mds: make scatter gather completion skip fragstat/accounted_fragstat differential when version is old (i.e. it was already counted)
b2e1d27 mds: wait for journal safe for import/export
4daed64 journaler: ack barriers
9224945 journaler: wait for ack and safe.. ack_pos flushed thing still wonky tho
02fa8b0 todo
3f3b226 osd: write full maps out outside of advance_map transaction
a5f2869 kclient: close wanted->needed cap transition ordering hole
a871bc7 kclient: avoid sending renew to non-active mds
70e4361 kclient: small cleanup
b80e4e7 asdf
ba8507a kclient: tolerate starting peer with 0.0.0.0 addr
0670d2a kclient: ClearPagePrivate more aggressively in invalidatepage
0128992 kclient: simplify osdmap array allocation
0894862 kclient: add mount_attempts mount option
be22b3e kclient: fix mount failure unwinding
8f81b27 kclient: fix bad socket_put on connect error
d001319 kclient: more debug info in osdc
cc0e252 mds: fix FileLock can_wrlock
adeaca9 mds: fix ScatterLock can_wrlock
69324ab mds: clean up old mtime cruft, bug
de49815 some cap todos done
9d44676 crush: add a few assertions to catch badness early
592df8b client: some cap cleanup
0ffe9df kclient: cap import/export, some cleanups
14e2b0f client: simplify caps import/export behavior
d683eca client: fixed up cap import/exports.  still need to deal with mds failures.
6c2f711 mds: slight cleanup of client reconnect failures
c1eceb6 allow lease duration to exceed session timeout
2d9726e kclient: replace ceph_read/write with aio_read/write
0131536 mds: disable rename test hack
65accca kclient: fix crush cleanup
f820605 kclient: simplify no-xattr encoding a bit
d4b7c6f client: ignore STALE session msg for nwo
ea69719 filer: fix file size probing
ae09ad0 mon: use fcntl F_SETLK instead of flock
1e55175 mds todos
287b5d2 mds: another FileLock fix; call predirty_nested with correct args everywhere
fc0e7a5 mds: fix FileLock handling of loner vs lock on replicas
b1bcbb4 kclient: default to osd acks instead of safe, for now
714a518 client: ignore STALE session msg for nwo
6e04fdb mds: more scatter fiddling
0f4741f filer: fix file size probing
941ccc3 todos
c136fb7 mds: lock NUDGE op that is tolerant of ambiguous/migrating auth
af16e96 mds: propagation basically behaving
68b3b21 mds: scatter tweaks; take auth_pins along with predirty_nested locks
0dfca47 mds: rip out autoscatter nonsense
5bff884 mds: cleaned up scatter_nudge
1c0355a mds: half-finished scatter timeouts
f4d22e8 kclient: simplify no-xattr encoding a bit
8474665 mds: fragstat rejoin basically works...
4eb6dd2 mds: fixed up master commit stuff
5b6d568 mds: fix resolution, trimming of master requests with slaves
4dac277 mds: check/take versionlock along with wrlock in predirty_nested
db02ed7 mds: rollback fix.  avoid scatterlock change during rejoin.
5126710 mds: show fragstat
a8b1118 mds: rename rollback closer..
ef89aec mds: rename exports behave in non-failure case
2dbc067 paxos: add timeout to collect stage
4307f79 mds: rename rollback coded, untested.  but the inode import/export is fundamentally broken...
c220c34 mds: kick discovers on mds recovery too, not just failure
7d78042 mds: fixed unlink journaling
6a18bf4 mds: fix resolve bug
01d813b mds: verified slave failure is tolerated. fixed remote_auth_pin rejoin bug.
7ad7233 mds: link rollback works.  nested anchor, replay fixups.
82199a3 mds: do rollback.  unlink done, untested.
01df6cd mds: fixed up accounting bugs with scatterlock
05ab69b mds: fixed various predirty_nested problems, rename, straydir locking.  temp fragstat sanity checks.
2e7bc80 mds: fix nested update in rename
8158aa4 mds: include time_warp_seq in inode_t encoding
f67021e mds: use dn_hash in anchor records instead of frag_t (which may change)
fb922ed synclient: make walk do some basic dirstat verification
47d1db1 mds: fix rmdir to correctly and safely verify directories are empty prior to removal
9595584 mds: check auth bit in unscatter_autoscattered
1d17508 mds: many many scatterlock fixes
c684e1c kclient: fixed msgr connection refcounting, and some cleanups
68c488e kclient: fix osdc request kicking
0fa7fc8 kclient: fix division lameness in calc_file_object_mapping
cff97a9 mds: fix conditional for srci export finish (didnt account for link merge)
6278968 mds: create, adjust anchors more carefully (esp for directories)
f16b6d7 pack struct ceph_object
1c2febc kclient: fix up kobj for 2.6.24
a56953a mds: make cache track nested anchors
5341c8c mds: remove old predirty_dn_dir code
c42e6f4 mds: recursive counts for anchors
353f41c todos
4c44566 mds: some remote rename fixes, more to come
2f61c4c mds: yet another rename rewrite (tested locally)
e01d426 mds: fix up open_remote_ino_2 to open remote stray, root if necessary
a7eef2d mds: dont xlock dirlock on rename
48316ed mds: initialize projected_version
2bc0cfe mds: avoid rename straydn when merging links
bc8873a client: fix relink, memory leak in dcache
da3e9f3 mds: disable fragments, for now
3e2a640 kclient: make it static
b82c709 mds: fixed stray reintegration (rename should not change nlink, dir mtime)
b9fd37a mds: fixed locker wait bug
23a88ee client: fix relink, memory leak in dcache
acb3828 mds: partial accounting during split
151ba23 mds: disable fragments, for now
fdec4c4 mds: fix up filelock state encoders to include time_warp_seq, max_size
cde2c54 synclient: thrashlinks mixup
d099ac0 mds: remote link/unlink behaving well enough. various bugfixes.
40cee8f mds: set dirty flag when subtree root dirfrag gets scatter
6781093 kclient: wrap socket in refcounting kobject
f4c976a mds: avoid file size probe when size >= max_size
01af201 mds: scatter writebehind cleanup.
98ed030 mds: wrlock straydir on unlink
595f4bd mds: fill out calls in server
9915bd5 mds: remove nestedlock
e71096f mds: moree type cleanup; dirlock encoder/decoder
d0630d5 mds: simplify frag_info_t typing
3eb47ba mds: set_updated on scatterlocks
f0deeb3 mds: no need for nestedlock
6fc0627 kclient: (unnested) file/subdir stats for dir, too
e532700 kclient: get nesting stats w/ cat dir
6b4003a mds: remote unlink
a8913af mds: unlink_local fixed up, still need to do remote
8281790 mds: remove bogus assert
ddf1d81 mds: rename sorta redone
db7c137 mds: cleaned up link/unlink accounting a bit
6951563 kclient: end_page_writeback w/ page still locked
3233ebd mds: link/unlink behaving
5b6a007 off_t -> __u64 throughout osd/os/ebofs
7db671f client: larger default cache
7e58420 kclient: use current->fsuid
2617baf client: return proper error for getxattr
cdbfce4 client: set st_blocks correctly
d8e588b client: return proper error for getxattr
5d5be41 client: take nested
b8ae3cd mds: send rsubdirs to client
31dd781 mds: openc uses predirty_nested
b44c7c9 mds: mknod/mkdir behave
e3b0ae1 mds: put accounted_nested in fnode.  clean up locker interface a bit.
4b3e3d7 mds: pass force down into get_wrlock()
9379c95 mds: unmarry cdir projected_versoin vs project_fnode; pull Mutation out of MDRequest
0363b72 mds: fix cdir dirtying, for mknod at least
3598858 mds: added fnode_t.  compiles, but untested.
076d902 mds: move predirty_nested into locker, and update with file size
89ca370 mds: some prelim nesting updates
5a181af mds: fix lock WAIT masks
1d4cde4 some fixups
523d184 mds: more nesting lock, data type work
f5a7b8d mds: initial nested lock types, inode fields
7884972 kclient: fix radix_tree_preload vs preempt behavior
6cb7994 vstartnew.sh: jsut 1 node
cbf7595 kclient: partial fixes for PREEMPT
0887302 client: only user.* xattrs for now
539897f mds: pass force flag down to file_wrlock_start
0c4428a mon: be more tolerant of mds states
574ad08 kclient: only allow user.* xattrs for now
1ee58d1 osd: some push/pull cleanup
0855e56 filestore: use user.* xattrs.  correctly.
ae8b814 osd: don't send msgs to down osds, unless its a map telling them they're dead
e3d13ec filestore: more carefully check that xattrs work
cffb323 msgr: lazy_send_message
d27fe45 object: pack
3a91173 kclient: increment i_version on inode update
e08d566 osd: don't send messages to down osds; enforce in OSDMap::get_inst()
07c56b8 objectstore: remove list_objects
d52912e objectstore: change interface to include mandatory coll_t
9cd7eaa csyn: chunk stub
9893725 csyn chunk stub
08900c3 cas stubs
90435d1 kclient: release ICONTENT in ceph_open
cd4ae79 kclient: add ceph_aio_write (instead of generic) to take cap refs
66af8d4 kclient: ioctl stub
1b9a6a0 remove libattr1-dev dependency; check for sys/xattr.h in configure.ac
83015d3 makefile: fixups
836c1df ebofs: fix table corruption bug
59c757c filestore, not fakestore.  add os/ dir
1b509d1 mon: shutdown cleanup.  fixed leak of MOSDFailure.
7885879 msgr: kill off replaced connection threads
61b4a65 osd: fix fakestore error msg
ed00cd7 mon: keep sorted pg list for benefit of dump
12f0c1f osd: fix osd_lock deadlock from activate_pg()
bb4ad56 osd: update pg stats more reliably
59d3479 cmonctl: stdout, not stderr
466d94f osd: replay cleanup, send_alive fix
5ff0c24 cmonctl: -o -
335bc04 osd: clear hml
d350bad mon: lock monitorstore
77e943a mon: pg dump
f7c3da3 osd: fix project_pg_history off-by-one bugs
fb63853 kclient: unsafewrites mount flag
7aa5745 osd: include history in mkpg INFO query
a4f95a0 kclient: xattrs
e45e700 buffer: fix 0-byte bufferptr behavior, encoding
20a14ad mds: handle empty xattrs
32535f8 mds: fix replay of xattrs
9567c8d mds: xattr ops.  works.
16a9e8c client: xattr ops, fuse hooks
764630e mds: basic xattr map, lock
49b30c1 mds: clean up file_sync(); initiate file size recovery on any filelock state change
1a64c29 msgr: always replace existing lossy connections
163cc12 osd: retry all reports to monitor; pg stat feedback; min_rep; no simple osdmap domains unless >8 osds
3c2a8b0 kclient: wait for SAFE on buffered writes
e2689c8 mon: pg debug output
59c20f4 osd: finish_recovery in peer() if already active, as with late info from stray
4fc0345 osd: read_superblock cleanup.  purge_strays() is generic
aed2e8b mon: trim old paxos state values.  just pgmap, for now
90b7952 paxos: invalidate lease in handle_commit, because we're paranoid
1864a1b osd: clean up pg change slightly
f325d85 osd: remove adjust_prior; fold crash logic into build_prior
9da2079 osd: remove old adjust_prior assertion
ac1ed4f osd: swap instead of copy big query list
56332f0 todos
b12353e osd: fix adjust_prior assert; clear peer_missing_requested in clear_primary_state
6a1a840 osd: remove last_epoch_started_any
3cf58e7 osd: clean up output
f220c5a osd: add osd_up_from to osdmap; mostly rewrote build_prior
e65cd43 osd: fix pg entry log encoding
01ce583 osd: move epoch_created, last_epoch_started into History
c9a3e5c client: add reported_size
9a9390e kclient: update reported_size with size, in helper
f5363e4 zero inode_t in containing classes' constructors
63b9c88 client: fix time_warp_seq debug output
b49e55b client: turn down refcount debugging
4b7d6e2 config.cc: better write_file.  and no more -o
0cbd6b3 kclient: d_find_alias takes a ref; drop it
1b72415 kclient: fix warnings
3e24c4d client: fix warnings
3afa091 kclient: d_find_alias takes a ref; drop it
79e1184 kclient: use helper to update size/ctime/mtime/atime in cap grant and fill_inode paths
9321bc4 client: use helper to fill inode file info in safely
ba1232d todos
636edcc client: killed FileCache
d1f9f67 mds: pick up mtime changes with EXCL, not just WR|WRBUFFER
760f86e kclient: fix time_warp_seq behavior in fill_inode, cap_grant
675a8ad no FileCache for writes
8642ea0 client: flush commits for caching mode behaves?
df16bc2 client: client_oc=0 writes work
49dd675 more
1c4343f tearing up client cap code
73a668c client: obey and request max_size for client_oc=0 mode
fb6d02a mds: file size recovery when client goes stale
0fb028f msgr: trust peer_addr based on port+pid if s_addr=0, to avoid weird ip-less startup races
d564eb0 mds: recover file sizes on mds recovery
139f497 mds: disable fragmentation for now, until the replay bug gets fixed
86c1f6f kclient: use d_find_alias in ceph_open
200ec57 mds: vastly simplify locker file_lock, file_mixed, file_loner
207e057 mds: fix gather deadlock in FileLock
9e94718 client: implement fsync() for cache-disabled mode
24f9335 kclient: fix getattr.  dont rehash everything in fill_trace
3005916 kclient: brehash more aggressively in fill_trace, and be more cautious with USE_CAP_MDS in getattr
1b2296e osd: make it MOSDAlive, and respond with new osdmap
ba65cd7 osd: put full precision ps in osd ops; keep in mind that ps -> pg mapping may shift as osdmap is updated
8b1f3fa journaler: throw error on len=0 entry
90c8550 osd: add alive_thru to map; use MOSDIn to bump it in osdmon
41979e6 journaler: bit more debug output
d8e2257 osd: sync on advance/activate_map
891454b make object a union
46e57e7 160-bit object_t (64-bit rev)
725e26b mds: count nonstale caps only in Locker::file_loner() assert
1a67fc2 helper script readme
fc85ec5 kclient: comments.  undo stupid in dir.c
1865b7e rearrange mkfs/start scripts a bit
f49f6b5 ebofs: redefine derr(x) macro in bdev
c781fd3 kclient: handle mds replies on write ops with empty trace
77869d9 mds: eliminate OP_CREATE; make open O_TRUNC|O_CREAT retry behave
3114ad9 msgr: use accessor to set addrless entity's addr
fce9513 mds: don't export or split unlinked dirs in stray
5cc9102 make kernel client request redirection work
7096b6d mds: mark replication messages unsolicited to avoid confusing discover reply handler
ea5a039 kclient: nfs fh encoding cleanup
6e4ae00 kclient: use ceph_inopath_item type when building fhs
7167822 kclient: mark mds requests with dentry to direct to proper mds
cac204f osd: more debug output in handle_pg_notify
bf886e1 auto-detect ip for all non-monitor components from initial exchange with monitor
2e030e2 todos
ba6e926 kclient: make readdir handle fragments
2d7532c kclient: tolerate release on null sock
0b409b5 inopath goof in MClientRequest
ed1748f build fat nfs handles, and add mds GETINODE op to resolve them
1930d85 client: fixed signedness
bbb62df mds: dont bother with small inos anymore
086cebd mds: __u32, not long
9de61f0 kclient: add fragtree, mds delegation/replication info to ceph_inode_info
4204d3a kclient: cleanup
5b37daf kclient: export ops should use ceph_find_inode
d2547d2 more int size cleanup
8baf844 journaler: dont use off_t
669ed0c mds: fixed EImportStart bug (cmapv not set)
7358742 mds: clean up MExportDir encoding
c81493b mds: clean up startup, state transitions
529f354 mon: expand mds cluster if max_mds increases
84a4744 default to out/ output if daemonizing
b04519e mds: fix EMetaBlob encoding bug
eaa7517 todo.. done!
3121ac9 cosmetic macro rename for consistent naming
2585276 changes some ints to __u32 or __s32
2dd0c93 removed old buffer encoders entirely!
c23747f mds: tons of encoding changes
1479fe8 fixed encoding for remaining non-mds messages
88d4fff fixed mon message encoding
b8f5dcb fixed osd message encoding
657c28a pg encoding cleanup
2fdb0a6 kclient: left off *HZ on mds session ttl
0351d56 mon: new encoding throughout
4e13cd0 mds: fix encoding
5687ac2 fix up mds map requests, kclient mds timeouts
4ae3dfb fully removed encodable.h
ee51055 crushwrapper and a few others
6f33e06 mds: time out reconnect
ef52658 kclient: another dumb typo
b1764fe kclient: fix osdc kick_requests spinlocking.  and handle copy_to/from_user faults
3ca0f4b mds: typo
965b0d4 mds: normalize _xlock_finish
ed523d0 kclient: create -> mknod sets S_IFREG.  debug mode.
80c023f mds: wake rdlock waiters on xlock_finish
f56a91d kclient: fix up mdsc spinlocking a bit
cd5cd72 mds: fix can_rdlock_soon vs xlock on FileLock
2b5f76f (tag: v0.2) readme
7f9f1ea kclient: use d_splice_alias in prepopulate
41443ce kclient: create fall back to mknod if no nameidata (as with nfs-kernel-server)
5e5ed11 kclient: drop nameidata printk
0ce7360 kclient: remove unnecessary flush/truncate bits from flush_write_caps
70855bd kclient: drop r_old_dentry ref in put_request
041e838 kclient: remove weird igrab/iput pair in unlink
44b33ef kclient: slight cleanup of do_lookup ENOENT handler
e1b2a0c kclient: fill_trace now uses d_splice_alias
9f44718 kclient: fix dentry ref leak in dn lease revocation
8618e69 mds: stop gratuitously issuing dn leases
36b5f8e kclient: simplify unlink
c9f8443 kclient: clean out cap_delay_list on umount
9a38a65 kclient: sync stop osdc timeout timer on shutdown
5612e99 kclient: fix page redirtying when writeback is canceled
2db61e2 kclient: osdc cancel timeout work _a_sync, to avoid deadlock
a296989 introduce time_warp_seq to EXCL utimes() + cap release vs file_cap/fill_inode races
2a71df2 kclient: fix page revocation for osdc reads
02e6805 kclient: kmap in messenger read path
d24423c kclient: unwind lock on enomem
951ed44 kclient: fix missed pages for redirty in writepages
edfae42 mds: fix client session lru
4e1c55e mds: retry client messages indefinitely, since mds has its own timeout/markdown mechanism
aad04da todos
751116c kclient: fix message skipping
56c5eab kclient: handle revoked pages in read msg
7936815 kclient: clean up mtime/size attribute updates in fill_inode
e3e957f kclient: turn down dirty page debug output
bc33ca2 kclient: fixed up dirty page accounting.  hopefully.
d2948bc kclient: fix leaking page refs in writepages?
1ce1380 kclient: dirty page accounting hell
eaf4610 disable ccgnu2 (for atomic_t) by default, as it seems to be buggy!
7c9cd59 kclient: trivially clean up cap_trunc
7e48dec kclient: more truncate tomfoolery
ae72852 kclient: use vmtruncate; do cap trunc via wq to avoid i_mutex deadlock
c744c06 kclient: only truncate fwd with EXCL; normal truncations require cleaning up of old objects etc. by the mds...
d95c80a utime from float conversion fix
e239107 fakestore: fix error values
af84bc0 kclient: munging up umount a bit, not real change tho
9649878 mds: fix stale cap revoke/resume
decee63 kclient: check caps outside mdsc spinlock
9f0287e kclient: improved dirty page accounting (supports mmap writes)
955a0ce kclient: mucking with dirty page accounting
0ff33ac mds: check max size on truncate, in case we truncate forward
820d675 kclient: ping mds a bit more aggressively when we hit max_size
3854ce1 kclient: show outgoing msg seq #s
bb2b4e1 kclient: zero leftovers for partial page write
b7b94d4 client: include lease msgs in mds session seq, so that umount is clean
1965cee client: cleaned up mds sessions a bit
1f681b5 fix cap stale/resume in mds, kclient.
33a9fd5 kclient: misc cleanup
4f0b975 kclient: small mdsc cleanup
0bb16d3 kclient: removed spurious unlock in mdsc forward handler
6433ae8 kclient: quiet down on unmount
4a732cb kclient: put delayed caps on single queue, use existing mdsc delayed work handler
fc74337 kclient: fixed some bugs in messenger shutdown
b0241b6 mds: fix hang on FileLock transition to LOCK
c630feb kclient: drop s_mutex in __ceph_mdsc_send_cap
6c9fece kclient: check for corrupt osd_op_reply
c698bcc fixed
3a91404 more crap
b10b5d2 buncha encoding
a431df3 todos
4793748 kclient: typo
629f053 kclient: take spinlock while processing acks in msgr
52bc7ef increase default pg_bits
910e366 kclient: fix double mutex unlock in check_caps
d141049 automagic endian conversions for userland
d622e9e final type munging in ceph_fs.h
80373f3 fix up mds reply types
e3b0003 kclient: tear down /proc/fs/ceph on exit
74bd345 type hell
bf4fb4f kclient: switch mds sessions s_mutex to struct mutex
6b9c420 kclient: merged client.c and super.c
096f854 kclient: fix reset_connection
965d58f kclient: remove delay ack hack in msgr
1ec7f0f kclient: use MSG_MORE flag appropriately with sendmsg
cb6c75a kclient: oops, be quiet
6094787 kclient: fixed various msgr bugs on incoming connections
5b8e0e2 kclient: fix mds reconnect for caps on dentryless inodes
5290162 simplify mds session caps stale/resume
e6e489b kclient: deal with osdc abort vs kick races; revoke pages on msg dup
bee75a9 kclient: some msgr cleanups
90ccceb kclient: msgr shutdown fix, warn on enomem
8c025b9 kclient: disable sysfs for < 2.6.25
2589ac2 kclient: beginnings of sysfs
3819a6e kclient: cancel work while shutting down
42cf9a9 kclient: osdc tid output
0749693 kclient: proc entry for debug_console
5158d4e kclient: fixed do_lookup dentry refcount problem
4d4cb9b kclient: fixed up page revocation
4617c72 kclient: only do footer with data payloads
8a40eef add message footer.  kclient safely revokes pages away from sending ceph_msg
39a1bd4 synclient: fix size print
19a7ab3 kclient: fix calc_pages_for
e0b8b28 kclient: clean  up req refcounting in osdc
aec4cb6 kclient: fix up write endoff vs max_size logic
c25711a kclient: rdo_lookup returns dentry
60cfda5 kclient: fixed dentry lease revocation
9fe96f9 kclient: lots of jiffies fixups
8e22b29 kclient: drop leases before kill_anon_super
9d5555b kclient: drop readdir cache on rewinddir()
321c80b fakestore: copy if theres no splice
07517da kclient: i_blocks is _sectors_, not blocks.  naturally.
18bc338 fakestore: clone, using either btrfs clone or splice
46d5965 kclient: d_add only in do_lookup
38de820 kclient: handle traces that dont start at root (e.g. unlinked, stray inodes)
5a5eefc kclient: lease ttl fix, again
d4d8246 kclient: fix inode lease revocation bug
9769e8e kclient: debug d_move
0cad544 kclient: mdsc dentry lease release bug
263260d kclient: fix lease time comparison
e15dfb4 kclient: flush write caps on umount; refactor send_cap code out of ceph_check_cap
4dda4e2 client: handle cap msg on missing inode
be5d919 kclient: improved kmap/kunmap behavior
652865b kclient: warn in osdc if osd request is interrupted
544c8bb vstart msgs on osds
93d3197 kclient: better
e041ba6 kclient: GFP_NOFS on sockets
c83b1fc kclient: KERN_ERR for debug_console
3bf3290 kclient: adjust debug levels, add debug_console mount option
e0b75a2 objecter: fix tid handling so that we want for ack AND commit
0b1bd64 kclient: some msgr cleanups
633ee9c kclient: statfs cleanup
dee905d client: some cap release cleanup
52c4c0f kclient: reset session cap seq # on reconnect
b9ccdf0 mds: allow client to carry WRBUFFER during FileLock LOCK (== faster stat on files open for write)
a607976 mds: fix max_allowed_caps_ever, and small issue_caps fixups
52036f2 client: fix default cwd so that relative paths always work
f7eaf50 kclient: debug_addr mount option
f537f99 kclient: osdc fixed circular lock dependency
f780afe kclient: cleanup mount/umount a bit
3118122 kclient: GFP_NOFS
ccd9758 kclient: fix lease regression 2
e1bfa84 kclient: fix lease regression
2e2db63 mds: fix cap bit calculation
f019f5b kclient: declare wanted_max_size properly
fb1b64e osd: autodetect ebofs vs fakestore by mode bits
f2139f2 objectcacher: dont count dirty pages as RDCACHE
5e6c6a0 fakestore: fixed up btrfs ioctls
d1dba21 ebofs: fixed up test, mkfs tools
1b22378 fakestore: btrfs ioctls, take 1
28b023f transaction start/end stubs
9ad5655 todos
c6be01c kclient: moved ceph_fs.h for easier out-of-tree build as module
9949c8c kclient: fix ktcp warningf
45f3661 kclient: clear socket callbacks before releasing
24af0c8 kclient: mark osd retries as such
a20c9bf kclient: reset cap seq on mds reconnect
266c955 kclient: fixed mds client session handling, request kicking
8e7e3bf kclient: osdc properly note down osds
4f2ed08 client: fix mds opcode generation
5db85f8 filepath: a few fixes
e2aa8a9 kclient: osd timeouts; also cleaned up MOSDGetMap and map request handling
5e78d40 kclient: msgr drop msg references when connect is dropped
06ae99f todos
453fcea kclient: proper cap lifetimes, and fixed session resume
e7e500a mds: locker fix
7b5b686 kclient: simplify dentry lease revocation a bit
4b43810 kclient: fh_to_parent
dec0ba7 kclient: clean up method naming
e6f5a7f kclient: basic nfs export support
35036a1 kclient: fix update_inode_lease ttl bug
22f4265 kclient: remove dput debug crap
0457783 client: report large blocksize
7cdcae2 fixed up getattr
ea95dfc kclient: handle tag_retry
5ea7c55 kclient: umount unregisters with monitor
fdc529a client: clean up follow vs not follow links
35226f3 clean up mds ops and follow symlink semantics
7247154 mds: pretty much never follow trailing symlink
16fe3c1 huge client and filepath cleanup
ccb9e49 filepath cleanup
3eb71dd crushtool: wrong type
f377735 kclient: fix lease release, fix truncate, set iops on non-directories
9043437 mds: a couple truncate bugs
fb586a4 missing include for 2.6.25
4fc9136 more debug output
94003dd kclient: update local ctime when adoing setattr locally
892ac54 vstart.sh
7fbe9f4 kclient: send debug output to syslog, not console
22df837 kclient: changed per-ci delayed work cancellation
7d3c683 kclient: combine ack with message; send ack of >1 received
11b96a8 kclient: send msgr acks
bc84a35 Revert "kclient: track in_seq"
dea7a88 debugging
24a220e mds: some locking fixups
4a15a83 m4: lower automake req version
c2f3e22 kclient: track in_seq
6e12615 kclient: fixed lease release bug
22ebd6e kclient: compensate for open flags munging done by vfs
93d9219 style fixups... no more complaints from checkpatch.pl
c0b3ca8 kclient: obey ATTR_FILE on any setattr, even tho only truncate sets it; allow [am]time increases with CAP_WR
34f45f7 kclient: writepages should return 0
f615fe7 kclient: fsync returns 0 (fixes final vi issue)
f066de8 kclient: fill_trace null deref
9e7f2a1 consolidate and clean up FILE_CAPS
8fea869 kclient: apply_truncate does not verify limits for cap messages
b328a10 kclient: refactoring of setattr, apply_truncate removes pages from pagecache
92559b1 msgr: send signal to reader_thread to ensure it wakes up on shutdown
636cf0d kclient: mdsc delayed_work avoid null pointer use
ea5a699 objecter: clean up correctly after compound writes
f132907 mds: wake up waiting requests when we go active
f549bbf kclient: mds session tweaks
49c14ac crushtool basically working
f23b791 kclient: clean up some debug output
59fd1e0 kclient: make osd ops interruptible
5791415 todos
229c7eb kclient: simple fsync, splice
2624253 kclient: unlock page in readpage
e93e65c mds: simplelock should wait for rdlocks to drop before going to LOCK
006a55c adjust verbosity
f3be916 msgr: don't try to write/ack on standby
54fba8c kclient: fixed msgr short write bug
230e136 mds: wait for STABLE, not WR, when we can't wrlock
66c97dc kclient: cancel old work before rescheduling
934cf88 client: lazy should wait on correct waitlist
6b83335 buffer iterator fixed
279fc3b kclient: trim expired dentry and inode leases
5e29aba kclient: fix cap delayed_work inode refcounting
54a219c kclient: atomically handle fmode refcounts (untested)
2690195 kclient: invalidate pages outside i_lock; carry inode ref for delayed work
67d97ce kclient: misc ktcp cleanups
c72bd6c kclient: take lock in ceph_cap_delayed_work
4693752 kclient: quieter
0cfa8e5 kclient: added missing put_session in msg handler
1f4c8dc kclient: fix misplaced put_session slab corruption bug
1e7c5b7 kclient: fix up msg refcounting
c1d3efb kclient: force dir open flags to O_DIRECTORY...hrm
e4fd5b7 kclient: delay cap release, and re-use on open
7ffe310 mds: issue CAP_PIN always
dff2eff kclient: addr cleanup
a1abca4 psim crush placement sim
3a351ba kclient: reuse directory cap_pins when we can
123aba6 message names
9832048 kclient: rewrote readdir_prepopulate
979fb53 todos
1a62a11 include version in mds reply
1ace9b5 mds: initial inode.version is 1
f373483 kclient: use list_del_init generously in msgr
86c346b kclient: allocate correctly sized get(osd|mds)map messages
21ab131 journaler: disable batching by default
273a387 kclient: reorder mdsc delayed work wrt spinlocks
7462630 mds: truncate can _increase_ file size, too!
dcaa1b3 kclient: dont die (immediately) if we get a reply with no trace
dfa0d82 kclient: fix spinlock stupid
68f035b kclient: fix up cap vs session locking mess with s_mutex
53349f2 bufferlist: clear last_p iterator when appropriate
10bd525 mds: delay eval_gather until after lease removal
bf640a7 msgr: dont close(-1)
4810346 msgr: fix peer address determination
e4ad822 kclient: missing spin_unlock
ed7ae87 mds: uninit value
38b3fb2 kclient: use wait queue instead of completion on mount
ea4b4d3 kclient: nicer msgr debug output
b00d44f mon: dont freak out when last_beacon has a failed mds in it
45c84a4 encode ctime in MClientFileCaps
ef0104c buffer: be a bit pedantic about buffer::ptr assignment
f50d8ca mds: set request timestamp for readdir
e33291f todos
5aedd2a client: carefully evaluate whether out size is valid during read
882877c mds: do not issue new EXCL is size|mtime are projected
0f1b144 kclient: fix renewcaps delay
21ba23b only start up a single osd for testing
7b7d85c next steo is pass a map along with crush to store offloads
53e01d4 needs its own item number
741961b mds: be more careful about updating inode.max_size
16bc6f2 mds: dont be stupid
5dcce28 more encoding fun
6f08bed monmap
cfa62ea kclient: separate thread/workqueue to do inode writeback
28f6aaf mds: pipe down
f43cc2f pack ceph_mds_request_head properly
d23980d new encoding header
a41fe97 mkcephfs
0734aae client: basic O_APPEND support
6e5b292 todos
187b84d osd: take out last_epoch_finished.. its not used anymore
362846f kclient: request max_size explicitly went necessary
07421c6 tag MMDSMap with fsid
ebae73f kclient: request larger max_size when needed (not done yet)
02d7e8d mds: allow client to request a larger max_size
dd9206b mds: fix max_size (again); move from loner to mixed when multiple writers
998ce13 kclient: made pdflush do our dirty work
d518b59 kclient: oops, fix write size
ace25a7 configure.ac: check for boost/spirit.hpp
3a5b2af mds: tweak file_max increase
10e21dc kclient: use inode_set_size helper to keep i_blocks accurate
81c4aaa kclient: send mds a cap message when we approach file_max
a6283d0 kclient: obey max_size, and return current size/mtime/atime when acking with re-used cap msg
5ebd85f mds: only allow ctime to increase monotonically
249eeba buffer: throw assertion when mmap allocations fail
4546904 buffer: throw assertion when posix_memalign allocations fail
902ac7e mon: send incremental (not full) map to seed osd cluster with new maps
552a441 osd: be more careful about noticing osds go down and updating timers etc appropriately
132bbec monmaptool: srand when generating fsid
9269ea6 mon: apply osdmap updates to pg_map osd_stat
6096683 cmon: set msgr policies
8682236 msgr: apply policy to incoming connections too, based on first message
366df44 mon: send new clients monmap before osd, mds maps
98df3c7 kclient: renew caps twice as often for now (to counteract slow clock on uml)
47f7d3a a bit of redo of timer events to resend map requests
746a1d5 msgr policies; osds now batch and retry failure reports
5c64c1e kclient: parse+verify fsid in osdmap message
5a98bb8 mon: include fsid in most mon, map messages
207494e tag monitor messages with fsid
8260ed2 kclient: reverting ctime changes -- mds controls the ctime value
0e50b5f kclient: fix typo
e515cdf kclient: ctime updates handled differently
f16e992 client: missing semicolon
144fc72 kclient: some more ctime changes
918a2da client: add utime mask
1a562f3 kclient: some cleanups
9deb362 kclient: invalidate pages when dropping RDCACHE
474108b kclient: export ceph_debug_msgr to /proc
544a8b2 kclient: fix statfs units
7b5a0f2 todos
65e4503 kclient: utime handle ctime updates too
077d32d kclient: don't use release_pages; it isn't exported to modules
b00100c mds: only increase file_max if filelock is wrlockable
2302510 mds: fix rename dirtying goofup
b70ebdf kclient: try to carry CAP_EXCL when we buffer data, even if file is now closed
f9d55e9 kclient: fix cap revocation/release logic
9aab71c kclient: carry CAP_WRBUFFER until writeback completes
527c1cf kclient: carry CAP_WRBUFFER until writeback completes
7ea89a1 mds: update renamed inode ctime
a411d75 kclient: fix d_move invocation (reuse old_dentry)
dc7f866 mds: update dir mtime on open + O_CREAT
1bc66c3 mds: wrlock dir mtime on create, even if neg dentry exists
b54710b kclient: use provided mode, or mask against current->fs->umask, on path_lookup_open (possible create)
227d781 mds: fix legal mode mask
ed364e1 kclient: use current->e[ug]id
8a0ba55 kclient: check for ENAMETOOLONG in lookup
3ebeb81 mds: mask mode on chmod properly
2672502 kclient: validate uid/gid on setattr
eea1c90 Added delayed_worky
7e03bd6 removed some junk..
95053ee kclient: do rename d_move in ceph_fill_trace
c6226f0 Added timer event to periodically resend map request
a3bc73b kclient: make fill_trace cope a bit better with mis-linked dentries
ad150d5 kclient: linux seems to treat an illegal combinatino of O_RDWR, O_WRONLY and O_RDONLY as O_RDWR, strangely
16b823b mds: simplify link_remote_inode interface slightly
8472d3a kclient: tracking, delayed ack for cap revocation
632331f kclient: apply_truncate helper, used by setattr and handle_cap_trunc
2af40a2 kclient: avoid mds op if lease indicates utimes() is a no-op
c6e1401 kclient: factor out dentry and inode lease validation
028e44f kclient: fixed writepages bug.. writeback works now.  use ceph_write_begin and simple_write_end.
986c9a7 kclient: ok writeback works, with small wsize.  simple_write_{begin,end}.
d5d942e kclient: avoid leaving pages pinned in writepages
9f0c5e7 osd: init value in pg_stat
6b0dd59 osd: pack PG::Info and History
e768ad1 ebofs: zero tail bit of cnode blocks
f4322e7 osd: init my_stat
9750907 pack any types we use blobhash on
6e0739c asdf
4468f78 kclient: forgot dir.c
03ee6df kclient: default msgr+tcp debug levels to 0, so that it has to be turned up explicitly with -o debug_msgr=N,debug_tcp=N
858372a kclient: redo debug level handling
25e62b5 timer debug crap
d32cd6d kclient: writepages will write in stripe unit-sized chunks
bda8924 kclient: writepages work in progress
0fd6063 kclient: cleanly flush dirty pages at umount
fa63cfd removed ifdef junk
efe104b kclient: syncfs stub
420a3a7 removed unused retries
7d4e7c9 makefile: don't build crushwrapper
db89d37 kclient: osdmap decoding bugfix; request osdmaps when pg has no primary
7cccaf8 removed ifdef junk..
cf0ad85 logger: typo
3f9904f timer: cleanup
813dc29 msgr: do not check for remote reset on connect, to avoid flaw in protocol
87673ac verbose, for now
4b38d8e kmsgr: close connection on rx of CLOSED tag
8de51e0 todos
48bd692 kclient: minor cleanup
738f65a kclient: some more osdc refactoring.  sync read/write basically working
223f3d6 kclient: iput and dput in mdsc handle_lease
8ff832e kclient: some io refactoring, still a bit busted tho
535f3b8 kclient: mount arg parsing; remove dead io code
5d31511 kmsgr: some formatting and style cleanup, and removed some legacy support
9328a94 kmsgr: change peer_reset callback prototype
0f2ea11 kclient: oops2
99acf98 kclient: oops
f374d23 kclient: ceph_get_inode cleanup; use ceph_get_inode in ceph_fill_trace
4fbaef9 fixed connection sequence
61e5a4e kclient: readpages cleanup
d5b1153 kmsgr: allow short data payloads
a4e82ad kclient: for hard links, use the inode from the supplied dentry in the fill_trace()
acd63b0 kclient: readpages works
e41b4cc Fixed some potential bugs in message protocol changes
2b280a2 kclient: disable readpages, for now
86ca609 kclient: writepages works
bc2ad22 mds: fix O_CREAT on existing file trace behavior
73cbeca client: cancel tick timer on unmount, clean up debug output
f626b9c kclient: lease messages increment mds session seq
d699c99 parse_device from text config file
6c48578 kclient: wsize option, some writepages bits
84f2bac kclient: writepage cleanup, behaving
c33811f more message protocol changes..
c2f5b52 kclient: write_begin and write_end
293dcab kclient: reworked cap-related locking, now protected by i_lock
241bb4c mds: small open handler cleanup
203f054 kclient: drop leases for setattr
9107882 mds: handle dir open modes more sanely
82bcb5c kclient: move readdir cache prepopulation inside reply handler, out of caller process context
da32e8d client: do not reply on caps we don't hold
f6fae85 client: be careful about filling in size, mtime, atime fields; and cleaned up userspace client reply decoding, filer interface
5266cad kclient: refrain from kmalloc while under spinlock
b840d17 kclient: disable link post-request step for now
77ff57a kclient: sillywrite mount option
ff7142d kclient: fixed up the lease refs on inodes/dentries a bit
85a3a2f kclient: keep leases in per-session lru lists.  locking needs some work still
bb9a9ca client: behave if we get a file_caps message and want caps, but don't have a cap yet
617f7c9 mds: send client reply after dropping request locks, so that leases on modified metadata can be issued
cb6a50c mds: fix locker dn lease issue logic
738e84a mds: only issue PIN caps on open directories; and fix lease revocation bug
57f5b44 kclient: only send release on lease bits we actually hold
2fda8ba kclient: drop leases before modify ops that would require revocation
d8708bb mds: fix scatterlock lease revocation
43ef12d kclient: dir icontent lease or caps imply dentry validity
d9f8735 mds: dont issue dentry lease if dir-wide lease will do
9c9d441 client: release_lease, not used yet
6bd7eeb mds todos
4aab459 kclient: preemptive lease release; allow dir inode+dentry leases in single message
15a39f6 kclient: drop dn lease before unlink/rmdir
2305a87 extra device
cdbd178 kclient: return mtime/atime in cap messages to mds
1dbaebb make ceph_timeval nsec, to match linux timespec
3b854bb kclient: removed i_wr_size and i_wr_mtime from ceph_inode_info
5fe205f kclient: set time granularity; do utimes locally if holding EXCL
987ae8e kclient: "fixed" O_CREAT|O_EXCL
74d8388 nil_t why do you torment me
74ba033 fix kclient lease release, client_lease encoding
97e7e73 kclient: fix inode revalidate
b9f382f kclient: inode revalidate, untested
d1bd332 kclient lease callback, dentry.d_time works
2ab9407 kclient: d_revalidate simpler.  no inode validation yet.
fcd35b4 kclient: new mds reply parsing
f2d1ba6 mds: fix max_size handling
fbcf061 client: messenger should loop through the front part of the message
1ee99cd client: always dump errors
3b8e6b6 client: small fix for compilation on other kernels
abed58a client: BUG_ON at relevant places
89a3caf mds: make scatterlock revoke leases
82107d2 improve dirlock vs filelock interaction, filelock lease callbacks
16b8ac9 todos
c327d04 client: fixed file refcounting
3c25b09 client: use EXCL cap as implicit IFILE lease.  fix file refcounting bug.
048d69c client: fixed up trace and readdir decoding
c959b6f mds: some lease packaging cleanup
7e5adad mds: rework lease encoding and such in client reply.  still need to do the client side...
0ff20dd mds: lease duration pools
52f54e5 client: fix file_caps_wanted bug
68b83cb excl works (fully client-side utimes() for untar)
3f314cd forgot MClientLease
9cf05c6 osdmaptool: small fix
ff9874d client: excl, unfinished
9169a8b todos
14d9dd2 mds: fix openc trace
c668f40 reworked reply trace generation to allow null dentries and hard links
f5056fd mds: oops, use corrent ClientLease
50053f8 call it a client lease, not lock
b1e8f0e mds: lease revocation works.  cleaned up stat vs lock ids.
59cc2e4 client: observe dn mask in reply
c7b44c5 todos
eb67f0c client: handler, include dn mask in trace
8dac09b mds: trim client replicas, fix client duration calc
ffe736d mds: maintain client replica lrus in session, cache, and dont crash
c53d11f client: insert_trace cleanup, and derive ttl from MClientReply
90f378b mds: include lease duration in MClientReply
018fecb todos
6c428c5 generic ClientReplica + mask
f2291bf basic dentry leases work...
e17cef3 dont build hadoop
e53e4dd init osd stores in mkfs.sh, not boot.sh
1df4c6b MClientLock
9044e95 some lock bits
18ac05d objecter and journaler error paths for inc_lock
113d12a osd: set inc_lock attrs
f74506d osd: verify inc_lock
985286d mdsmap: update last_failure
eb505d8 osdc: inc_lock
3ab32f1 osd: le notation in osd op structs
cf04043 objecter: on do ack or safe messages if they are requested
1dd25f3 osdc: take flags args
86fa2bc crush: grammar changes
e841dd4 crushtool cleanup
d5f92ab crushtool: useful parse error messages
b844151 hadoopclient bits
ae7af72 connect_seq changes
225d6b7 Still changing messaging protocol...
6b1f973 crushtool: perl version hacks
9ec7ddf client: make fill_trace use provided dentry even if parent doesn't match
1278a1b hadoop client builds, makefile cleanup
3d09096 mds: misc hardlink fixes
0012bb6 crushtool: generate human readable map
1fcf06a client: fix erroneous commit
d37730b client: unlink
a693dd5 client: instantiate inode for new link
1e0b1c8 crushtool: parses!
40e0c7b crushtool: grammar?
49e4f26 crushtool: shell based on spirit example
f5a54a7 todos
82d6aeb crush: bugfix in builder
2381870 crushtool: beginnings of rule parsing
a31efa9 crush: store item_weight with straw buckets; crushtool progress
e7d366a buffer::read_file into pages to avoid c++ allocator's disagreement with perl
f6f54a2 crushtool: encoding works?
482722b crush: bugfixes
b27fe6a crush: destroy and wrapper bugfixes
6f83a01 work in progress
415e127 default alg should be 'straw' not '4'
b21fa85 refer to algortihms without bucket. strawbucket -> straw
47b85cf handle ids greater that max_buckets
3fa7f1d work in progress
6bb6726 client: -1 debug level is now being used for default debug instead of 0
9baca1e mon: mds stat command
1a7fa36 config compile error
26922d6 osd: fix pg.__pad initialization bug
2ac29de crush: check for null crush
e3649c8 mkfs and startup scripts
e4f4387 bufferlist read_file and write_file
9248821 enabled readpages
9e9282b mkmonmfs: usage fix
7ef27c7 cmonctl: usage cleanup
11625a1 client: fix wrong mtime/atime bug
607e6d9 client: switched over to new encode/decode macros
d28c98f msgr: reworked accept a bit to more closely mirror pseudocode in wiki
4af8a8c msgr: minor accept cleanup
06bd870 todos
462b6a9 account for new pg parent split levels to allow pg_num increases; mon command handling cleanups
78ddc62 some pg split fixes.  seems to work
3f0354f splitting appears to work, at least sort of
197f1ae Some process_accept changes for message protocol chnages..
01267a8 readme summarizes binary targets
250ee8b client: osdmap decoding updated
9e992d8 client: avoid using d_add when shouldn't. Fixes lock on d_lookup bug.
8976184 osd: pgp_num support, and some reworking to facilitate splitting (soon)
7891010 Was reading peer sequence whe not sent.
34ea548 client: some osdc cleanup, but still broken
d487600 todos
804c3cb client: implement ceph_dir_link
6143869 client: new monmap decoding
fc32c65 client: redid mdsmap decoding
6b08fd8 client: new decode.h, used by jsut osdmap.c so far
01fd415 Added some debug output to ceph_peer_reset().
4477c03 message protocol changes
ca1a0fa message protocol changes for connect.
75b6683 client: parse new osdmap
a6f6792 osd: adjust creating_pgs in advance_map
8700311 mon, osd recovery and pg creation cleanups - osd mkpg cleanup - osd recovery fixes - pg state reporting fixes
80bf406 basics are working
12bd9bd mon: mkpg simplification and cleanup, much nicer
3b39d52 mon: forgot MOSDPGCreate
6e29f4e client: crush mask bits
8bd7c06 mon: registers new pgs and sends create msgs; throttles
d43fd66 osd: mkpg craziness
a2d43ab client: minor fill_trace cleanup
5c9a5c5 crush: use rule masks instead of hard coded rule numbers
5164f0a client: minor fill_trace cleanup
3c5ff38 client: resurrected ceph_lookup_open (open intents)
dad9ae8 client: touch vs init dentry
a4e95cc client: cleanup
d92a0a9 kernel: filter out O_CREAT and O_TRUNC in ceph_open, since vfs already did the mknod (yuck)
86e6ef0 todos
1421898 client: clear r_last_dentry when used
48be66d osdmaptool: import/export crush map from osdmap
912ac29 client: error handling in ceph_fill_trace()
8e839e2 client: fix crash when doing umount due to dentry count leak
06b1fbf makefile cleanup
1ccd5d9 ok, builds up from scratch now
d152a24 renamed crushtool
57db9eb libcrushwrapper.so now builds, yay
05611eb m4 macros
afbba3a osdmaptool: cleanup
3c38bb6 getting closer to building swig stuff
55ff866 msgr: lots of fixes, cleanup.  reset detection and races both seem to work
c0c51e5 msgr: rewrote connect and accept based on new protocol spec
2585407 client: fix ENOENT handling during lookup
6ea95c2 client: fixed crash when stat on nonexistent dirent
dd16089 kernel: missing dput after dget
b20e618 osd: uninitialized var
59f5ac8 handle inodes collisions in 32 bit architectures
c5070ff osd: fix startup after mkfs when osds dont come up in unison
a4435fc osd: revamp osd startup
c60834d osd: reworked pg creation a bit
0a84dca makefile fix
02e8873 revamped mkfs procedures, mon startup, and more
c4a90aa msgr: fix msg destroy race
26ae57c take -o instead of --doutdir
0a0c54b client: fix
05087c6 client: cleanup
be6af43 web: updates
1076d73 make cmonctl and cfuse use MonClient too
8b795e1 kernel module compiles on 2.6.18
23b9d55 monclient: simplify interface, used by csyn cmds cosd
13a5650 todos
41755e5 partially compiles on older kernels
f675756 csyn: use MonClient to accept monitor name on command line in place of .ceph_monmap
0785cf7 client: wait for caps on write too
a3815e5 client: check for rd caps on read
1894e18 client: some preliminary cap checking
7555480 client: fixed lookup on missing dentry
a33d292 client: use provided dentry on lookup
1ca3588 todos
542e4d6 client: fix ipquad macro
1674afe mds: default mknod mode to S_IFREG
546e42f msgr: bug fix: properly cope with sd=0
9dba8b1 updated sample config file to reflect new requirements
127cc8d work in progress -- incomplete
f350a21 small sanity checks for size = 0
f66c8fd crush: some comments
809fafb client: fixed multiple mounts
7fb9554 client: small msgr cleanup
11ee5a8 darwin: moving missing types to types.h, fix start/stop.sh
017d9ef client: refactored most of open_root_inode cruft into fill_trace
a166612 Just spacing
34d22f9 defined ceph_osdc_readpages() and ceph_osdc_readpage_filler().
61c2627 client: new cap code working
3510f75 client: caps cleanup, almost
7bc158a added reset_peer callback
538fba1 added peer_reset callback
ffa7bff kernel: simplify do_request error return path
322f201 client: small open_root_inode cleanup
c830fe0 todos
20cb76a client: take references in fill_trace and drop them later (normally in put_request)
a98d66a mds: ignore atime updates until code can handle non-wrlockable updates
d586b8a client: error handling, open cleanups
831c4af client: disable ceph_lookup_open intent stuff for now
4c6431b client: refactor mds requests to put most processing in reply handler
9acc42b mds: fix open flags check on directories
75bb647 configure.ac hack
0fd7daa work in progress, process bucket numbering ourselves in perl
4227ae2 not sure
a845edf no more update bucket
7734afc fakestore: use wrappers around setxattr and friends
a74202b build under darwin
e7c5103 adding more busket types from the config
25dc2b2 nothing significant
e469efd start of crush map manip from perl
9dabea7 int * working with perl
371f4bc client: inode.i_size locking, cap TRUNC handler
8bcbeb5 FileLayout rename
8e06479 client: addr.c tabs
da06f08 client: fix dout/derr macros
466fdb4 client: require rd cap before checking size in Client::_read()
83e4a66 journal: some fixes, still some issues left
4c9987a mds, client: fixed races with cap release, open, size/mtime update journaling, and file size
060b76e peer reset during standby
317bb0f todo, client verbosity
0a13505 cap fix unfinished
2db7486 mon: osd commands to mark osds in/out/down
f3f3bf1 manual merge of volker and dongsu's write stuff
ab5be39 cas: pg_pool and file_layout bits to pass object pool down through stack
ece3fef cleanups
c8d2a8f byteorder fixup
91582d1 todos
d99d887 mds: fix pre_dirty + projected_parent to bump pv properly; fix unlink vs cap release race
1f2db92 fakestore: various fixes (esp on 32bit)
fe91c06 mon: oops
22d102a mon: get/set maxosd
3cfd18b mon: reworked command interface to use preprocess_ and prepare_command
5dd9f1a mds: projected_parent on inode to allow concurrent rename and inode updates (due to cap changes)
63187b6 mon: setcrushmap hack; basic fwd to leader strategy
dd34c81 cmonctl: send data payload
42ea68f mon: added getmap and getcrushmap to extract osdmap or just crush map from monitor
e52743f client: ipquad printf cleanups
8cf5aea mds: truncate fixes
57e0de0 fakestore: fix collection_setattrs
0aee328 fakestore: cleanup
be972e8 mds: untested fix for opent/openc inode versioning bug
fc0ae5f fakestore: journal replay
7d34187 fakestore: more journaling bits, fixes
99f3e71 client: ignore long crush blob
d42d98f fakestore: use a journal, with periodic sync
30adf9f osd: factor journaling out of ebofs
c288b4f todos
0728c4a crushmap generator in testing phase
c11e803 Config::General doesn't like items all on one line
c7292db lower autoconf version req to 2.59 (works, with warnings)
7afb7e2 crush: git bucket id calc for additional buckets
d6731f9 crush: git bucket id calc for additional buckets
138d8bd mds: add wrlock bits to FileLock
05d5730 mds: temp workaround mtime update race
64220b6 swig wrapper
6d247c4 print the contents of arrays passed via SWIG
e247428 this makefile won't work if the object files already exist from another compile
8603b42 temporary fix of a crash due to missing decode
224eca6 start.sh can execute binaries from alternative locations
0e2de00 added missing file
4be7eca added proc entry for setting debug level
4e281b8 cleanup
88a817d fix compilation error
1428e0e whitespace
9c235a6 added d_revalidate
14b6c9e cleanup
b373a57 crush: more accessors/modifiers in crushwrapper, some builder changes
04b5f9e crush: some crushwrapper methods, initial swig makefile?
225e9d8 forgot these
e9eb850 Added checks for STANDBY state
fb512c0 mon: monmaptool; elector shares monmaps; some cleanup
1a69243 autoconf changes to build on a debian/testing machine
4699935 some fixes on x86
f2d52d3 fix bug in silly_write, calc_pages_for
a1e774f kernel: set inode blksize properly
4ac7ffc kernel: some encoding/decoding cleanup
5f2e6af test
25b07d1 msgr: fix stupid bug
7b00551 kernel: fix mds client session ref counting bug
452bba7 kernel: use le macros for msg->hdr
1554543 some startup cleanup
a2db5ae write after open with O_APPEND
9731226 convert more types in ceph_fs.h to __le* notation
d7a9643 userspace: use structs to enforce type safety on __le64 etc
0d95a0d mds: dont force journal flush on every op; mdlog+journaler are smart enough to detect waiters
ce56246 client: fstat support
3445480 mds: only journal size_max extended inodes once on open
a459e12 mds: simplify+fix open file journaling, replay
947afd3 msgr: turn down messenger debug defaults
cf98b54 mds+kernel: more file_max work; factored out intarithh
65fd61d removed comment
a097c70 added defensive code
9bc3c8a Added SOCK_CLOSE state etc..
1ba0236 Added new states for connection
6d9ec71 Cleanup etc..
2ba5f32 improved max_size handling in mds, client.  avoid spurious setattr/utime after open in client by ignoring sub-second mtime resolution... weird
bbc61d9 mds: flush file (size+mtime) metadata to journal on close
35ee017 cleanup
638a997 added inode revalidation
f19c71d fix mds cap interaction; echo blah > mnt/blah now works
204c175 (tag: v0.1) msg: blobhash on entity_name_t causes strange badness... should look into that, but avoid for now
39d2a25 mds: adjust cap issue sequence to avoid unnecessary file_caps messages
8adc9da debian packing stuffs
78924fb more automake.  make dist seems to work
7853234 autogen.sh
307723d more automake fun
0e8e273 more autoconf- and automake-fu
5f218c2 minor fixups
0cf7971 copy of old Makefile
7469f26 first pass at autoconf and automake
a1b68dc smarter start.sh
b2badc8 startup: adjust out/* symlinks after forking (from call to daemon())
a8d7999 -d to daemonize, other startup cleanup
13eb18f allow client to initially bind to INADDR_ANY and learn its ip from the monitor
48616a7 misc style cleanup
72c9d8b build with 2.6.24 or earlier (well, 2.6.23, at least)
7a2f413 some x86 cleanups
9aa7439 some reduction in stack space
003f022 protecting inode's i_block
fda8219 quieter startup
1e4215e write output to default/* by default
ef67100 kernel: cleaned up mds_client locking, reconnect
83700ff map u64 ceph inos into ino_t on <64bit platforms
c24a228 ebofs: journal replay working; better journal validation on mount
3e7d710 ebofs: avoid buffer cow bug
5fe44f3 journal replay, makefile cleanup
0e77815 ebofs: journal cleanup, tuning params in g_conf
219710e roll directio into FileJournal
8d4c8e7 Added STANDBY state
f99bee7 Added STANDBY state for a connection
78d363f hacked dio journal
8a104be simplified FileJournal, journal interface
611ca71 some small cleanups
e988d85 osd: write sanity check
80a0796 streamtest.ebofs
83b4a0a cleanup
0224126 cleanup
fb4ed9e fixed a crash when doing lookup
5ddab7b mdsc: more locking cleanup (not done yet)
896a845 rework request alloc in mds_client; use radix_tree_preload
f977804 msgr: use radix_tree_preload, and lookup_slot for replacement
43df670 msgr: no kmalloc under spinlocks, except make radix tree GFP_ATOMIC
f059015 clean up msgr in/out debug output
4f558d2 simplify do_open_request args
937a368 atomic lookup+open
e76abb9 comments
5ffcd84 more open refactoring
3764e1c refactor open a bit; initial pass at ceph_lookup_open
8b218a5 msgr: check for failure to resolve hostname
c13bee4 vfs create() is just OP_MKNOD with rdev=0... make OP_CREATE openc (mknod+open), even tho linux won't use it (yet?)
e793742 mdsc: dput after d_find_alias
85af728 kernel msgr: fix connection lookup radix tree bucketing bugs
d3d1da2 a few client/mds reconnect fixes
0aa46ac mon,msg: small fd cleanups
d6ebc26 silly_write
6495e69 utime_t cleanup
5d57a37 simplied TCP_CLOSE state, added some prints
fb92c33 removed some unneeded connection states
1610990 Fixed up fault handling some, and some other bugs.. Merge branch 'rados' of ssh://patience@ceph.newdream.net/home/sage/ceph.newdream.net/git/ceph into rados
220a146 more todos
4025c2a todos
43e429d added create (without open)
34abc5d change lookup operation to use lstat and not stat (to match expected behavior)
4a79887 hash inodes only when required. This fixes hang that occurs when searching for an inode with a hash value that equals to the hash value of the root inode. Also added default implementation for getattr.
b3a4699 simplified script
a154ec1 strip_trailing_whitespace.sh
c53144c kernel: setattr; moved fill_trace to inode.c
a6d3c74 drop caps granted by mds on inodes we dont have; use send_cap_ack helper
9147344 todos
66fdbf3 crush: check overload map for forcefed values
01ca1b4 fixed missing iput; cleanup
215fb5b close mds sessions on umount
098dd09 fixed inode cap init bug
4c3b3d5 renew, resume, etc. caps from kernel client
6040571 fix double-delete bug in SimpleMessenger
f57de8f ebofs: oops, be quiet about csums
3fe7fbb ebofs: fix superblock csum calc
7492a58 kernel todos
745fc77 fixed calc_csum alignment on superblock
fddd4f5 link caps into a per-mds-session list
e92f7fb fixed add_cap inode ref count bug
cb612b1 resurrected ldceph.so, sort of
7aa095a cleaned up mds map requesting
9296475 clean up mds session open; request mdsmap when necessary
9ccbcab note client reconnect todo
fe6610c note seq on export
c1fc7bc msgr todos
49cebc0 mark_down.  some cleanup.
03efe1f backoff/retry seems to work
7896c9e rework messenger work queueing, retry - take a reference whene queueing work; use helpers - use a READABLE/READING type latches on both try_read and try_write - move some code around to avoid prototypes - simplify lossy send_fault case
16a7362 fix mds session handling
040b87e some debug crap
65ab8d2 reconnect getting closer
72b8a79 Now remove connection if state isn't OPEN for no delay case..(mon case)
1692248 fixed up fault case for EAGAIN just before tcp close to requeue...
e55d850 rework get/add/replace connection msgr spinlocks
a10cb3a implement fsync in fuse_ll
c67ac7d multiple mounts, single sb
3f02a40 comments
30b9ef1 comments
943cc83 comments
673f771 comments
cd13061 some caps bits
7106e47 use do_div() instead of /
95feeb6 simplify client caps release; track last_open to avoid open race on mds
b0aefac dir_lookup now uses new_inode instead of iget that deadlocks
c1abd75 only close connection if EAGAIN and socket state closed..
709055b more mount churn
25ccfe6 rework client mount slightly
4c832d3 decreased initial fault delay
03c7867 Just left debugging in..
c184999 fixed up ref count on connection
bc4cf52 reworked monmap
791b949 various mount related cleanups.. much improved
61f3df1 inode super_ops and iget usage cleanup
cdf1a92 fix fuse statfs
11d22bc kernel: include . and .. in readdir result
d4ca548 mknod, symlink work
e32c1c1 don't clear OPEN on tcp CLOSED state, we get this when we can't connect and will probably retry..
6ae4b93 use improved ceph_build_dentry_path
07ad49a Increased attempts to 10 for now.
950fbea clear OPEN bit on close
f1a3ba6 fixed a few fault problems..
4a6f708 Fixed bugs and crashes that were related to inconsistent iget ( + ilookup)/iput.
44bf91e insert inode into the icache after changing the ino value
83bd70a fix dput in the wrong place
baf1174 lots of cap bits in the kenrel client; cap vars in ceph_fs.h, renamed
8f4641f Fixes in ceph_fill_trace():  - dentries accounting  - fix for deep mounts  - verify that inode has not change along the path
cd98533 Fix unlink crash
135ca7b mkdir works now with helper function ceph_fill_trace()
68a829f file cap ops cleanup
7a7b814 mkdir now doesn't crash
37aa0af new MClientFileCaps encoding
228d7be kernel statfs works
51db6c1 ebofs: rename Extent and make it packable
0a14b54 make default (now 12345) work
fd307f1 more statfs bits
5bda5cd cleaned up int types, page size info, byteorder for userspace
84a678e statfs returns real data; osds report utilization properly; works in fuse client
f53b9ab kernel: clean up mds request creation, move mdsmap states to ceph_fs.h
bd1a47d Fix a crash when unmounting due to wrong dentry accounting. Don't allocate new dentries for entryies that already exist.
1d83f77 fix up fault case a bit
ec0952c removed bad access
5c8211d ignore TAGS
dc9766f new MClientReconnect encoding, basic support in kernel client
6828aab etags for vi
5c829c7 ignore mnt
8663484 check do_request result codes
498acf2 todos, start.sh tweak
d3125cf more minor encoding cleanup
21c0aca todos
cc63cd5 client: encode connect_seq, minor accept cleanup
b309a4a mds: allow open on root dir
4052c90 accept connections properly
538445e mds: handle reconnect
1a4ae0c no readpages for now
b118c77 some initial readpages bits
aa61492 fixed data_off bug in messenger when reading data pages
d87016b note when new mdsmap is accepted
748f396 some kenrel todos
3ee344c remove 1234
d8d4623 test
cd91d90 fixed prepare_pages, osd_client bugs
d63e06b cleanup
832fd0e handle_ms_failure in dispatch thread too
630589a client: count caps per mds
9ac3d73 deliver ms_*reset in dispatch thread to avoid delivery vs sessoin mgmt races
fcfb4b0 add standby state to simplemessenger, so that we can close sockets and still track connect_seq
6ece3bb simplemessenger policies
a0c0c11 start.sh gets ip from hostname
3d8e38b mds: fix bug in session close
2f68ae8 mds_session_head struct
f5c157a Revert GIT test changes
b8e4e42 cap todos
4615d19 cap stale -> resume works
ec96739 fixed cap killing on session close
e00bb20 per-state session xlists; kill caps on close
67a834e GIT Test
eaaebe5 Test for the public branch
b613593 fixed use of PAGE_MASK in simplemessenger
86f118e notes
4835f68 todo
e683fed more caps work; fixes to avoid xlist::item copying, which is bad
95efa1f build without 64-bit block dev size probing
f405e16 fix problem with long messages
8dae58b revoke caps, mark stale
d930ae8 mds identifies oldest sessions
5337d30 xlist cleanup
f201013 document clone via http, gitweb url
6526103 client regularly renews caps
2ee1df1 Just left some brackets around..
3459f71 CEPH_MDS_SESSION_OPENING never got set.
08f0e3e basic request_renewcaps and renewcaps session ops
4ba592e caps in per-session list; cleaned up cap bit defs
4642cc1 fixed up subops
9a52f5b session lru; g_conf cleanup
f1d2f0d cleaned up char* vs const char*
b02d01f sessionmap encode/decode
0338815 removed old has_expired/expired log event cruft
51cc939 clientmap replaced with sessionmap; untested
bea73a7 complete close from peer, increase delay for retries
2a86cd1 removed old MMonOSDMap*
dafa9a1 fixed get_type_name type to make latest g++ happy
8230273 fixed up rename relative path root check
6047992 some switchover to sessionmap
d2e355c define mark_down
ccee162 updated for git
90e6467 rename src+dst must share common root
5b633a1 rough SessionMap, to replace ClientMap
0746d86 con state must be unsigned long
6707c91 fixed up mds session states
a3975e8 kick requests on failed/recovering mds (untested)
d2a7e40 osd: typo in fakestore
5eb106a some kernel todos
3e2f42c web: ceph-commit, not ceph-svn
111d052 web: ceph-commit, not ceph-svn
e627271 kernel: fixed PAGE_MASK idiocy; read path almost sort of works
117ac8d use PAGE_SIZE/MASK from asm/page.h
ef6c393 remove attrset from osd op and reply
7968254 start.sh gets ip from hostname
5de7634 kernel msgr: ignore messages with unexpected data payload
555706a kernel: ceph_readpage, osd_client reply handler
136fd14 moved crush defs around, fixed crush call site
512caca kernel: msgr uses preallocated pages; lots of osd_client bits
0ae0459 kernel: rename; debug arg parsing
c253b6e mkdir, crashy
b0ca149 .gitignores
a9fcf2c kernel: quick and dirty unlink
b8bb936 test2
aa353c8 test
40b0355 more type cleanup
c682669 less typedef
b2057d4 cleaned up frag funcs in ceph_fs.h
3d7aec0 kernel: osd client bits
7dc730b refactored osd_reqid_t
e9817bb MOSDOpReply uses ceph_ods_reply_head
d3e8602 MOSDOp uses ceph_osd_op_head, and related type tomfoolery
9a12ba7 make mdsmon be a bit more robust/simple
f9e2c97 rados: refactored to use MOSDSubOp; ripped out splay, chain support for now
02bb928 .gitignores
836e4f0 subop messages
71531ed factored out some osd types into ceph_fs.h (not done yet)
c8181f8 moved osdmap decoding code out of osd_client
71b37d5 kernel mds_client cleanup
586b211 handy start/stop scripts
6922d08 updated web site with git links, info
fcf95f7 todo cleanup
725be5e last committed
f8d463f objectversioner
f6a0447 code tree cleanup
f02a295 g_conf.ms_hosts
3c3b625 test update
c186544 reorganized source tree
745c9a5 asdf
9167b27 removed ebofs branch
6a3926e ebofs: don't scrub csums :)
f49fdb2 ebofs: fixed csum calc on inodes
0720b74 ebofs: fixed 0 length writes
62ee713 merged branches/ebofs r2100:2229 back into trunk
02ff03a readdir over multiple fragments
2f3d792 todos
5aaf99a ms_hosts
e0c547a mon todos!
0838493 minor mon command handler cleanup
9c9f8ca btree onode/cnode pointers now include a csum
e320acd link to ceph-svn list
f5d9b5d added pdsw workshop paper to publications page
9954853 fixed bug with full partial overwrite; cleaned up map_read; fixed bug in attempt_read on partial bh
d0272a4 minor bug fixes, cleanup
cea9e01 fixed bug with bdev barriers and no intervening ios
3de39fa ripped out handling of partial writes that span commit epochs
5ca1068 writes may have to wait if partial reads are necessary and a commit is preparing
b9cbf1a bits
7842b2d minor cleanup
b24257c more partial csum handling.. leading to disaster
bccd022 minor fixes; pack dstructs
b108f5e cleanup; onode checksums; fixed stat_ bug
c69465f fixed non-root rooted path issue
208d2fd slfixed slab corruption in mds reply parsing; opendir now opens directories as needed
a45bebb ability to poison commits; untested
7a39ae3 some readdir, lookup bits
ac7253b minor web edit
a2ed1fe uml setup info
1ba0bc3 superblock checksums
4215e10 some sample code for mapping logical object extent onto physical objects
87f5b2b zero trimmed bits of pg log to free disk space
d25befe fixed zero; some checksum fixes
9c97981 were never queuing accept ready
90e799e bug fix where state was getting corrupt etc..
966597e Need to clear NEW otherwise we try to create new connection during accept
1df79df readdir request half works
66e9074 beginnings of readdir
a3be590 added module level debugging, some error handling
7b25e93 moved dout derr to super.h
f2fd9c3 changed mds request format slightly, streamlined handler in mds/Server.cc
72e0f1a small fix
e834084 makefile clean; no weird crush recursive thing now
a54df03 dumb typo
6de865f the uml config i'm currently using
f7b0c5f be less noisy
67b428e typo
2828ca6 smarter suicide
427eb6f moving stuff around
cea4b2b newsyn can reuse an existing monmap
12c82da minor updates
b1587e7 init fsid
2ffbdd6 no more bufferlist
7eedbc5 mounts and unmounts.  vfs ops stubs
2555683 Added newsyn mode overloadosd0 to overload OSD 0. It's a bit broken at the moment.
2b18ed1 fixed page alignment/sizing checks
b63e6a4 don't mark_down osds on monitor or else they won't know to shut themselves down
c010a0a wow, it mounts
10594ff renamed ceph_client_request/reply structs ceph_mds_request/reply
579447d quiet down
b810a9d improved
6f25cd6 short seek test
3de4e9f fixed
85776a6 mostly cleanup2
687c4cf mostly cleanup
d7250a3 clear SOCK_NOSPACE flag
841a718 some mdsc fixes to request/reply handling
282966b cleaned up connection spin_locks: READING/WRITING bits now used for mutual exclusion
a9fe364 mask SIGPIPE in a kludgey way.. bleh
34cea80 fixed mount waiting
980282a check work_pending now
00e1f1d mount progress; write callback fix
a743a22 didn't build submitted garbage..
e316e14 should nolonger have reentrancy problem
8a31f93 Oops wrong check
53b5c46 monmap epoch fix; mon sends monmap to client on mount
600c81d added pg_swap_primary mechanism in osdmap
fa542ea resurrected RAID4PG
ed45b7d first pass at adding pobject abstraction
e0db724 queue send work if new messages are queued
38e83d5 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2159 29311d96-e01e-0410-9327-a35deaab8ce9
e3a00b0 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2158 29311d96-e01e-0410-9327-a35deaab8ce9
fa6abf8 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2157 29311d96-e01e-0410-9327-a35deaab8ce9
1f80ce5 fixed some possible memory corruption problems, and cleaned up code a bit.
206b10c osdmap/crush decoding works; cleaning up mount wakeup, but still need monmap
4d900ce fixed last_beacon bug in mdsmon
f6047f7 simplified crush rule allocation
a29994d new atomic_t type factored out of buffer class
8cca442 some type rearranging
1efccfb cosmetic changes
54d0ac2 rest
df94756 more port bits
47f9277 part of port bits
c1e1238 quick and dirty kernel build patch+instructions
debbf6a crush decoder (untested)
05d4a4b safe destructor; pfactored parent calc out of finalize
5397814 fixed slab corruption, cleaned up msg get/put
9e8a843 fixed mount fialure and rmmod hangs
bc04585 some cleanup, but theres a slab corruption still
52fe08a minor cleanup
c0d0c4b kernel messenger sort of working!
c64a4a0 mount fails gracefully
ce3c3bf fixed merge hole bug; bad_extent_bytes prelim stuff
c8bc1c3 init workqueues once; fixed get_connection
23fc8b4 some small messenger fixes
1335420 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2134 29311d96-e01e-0410-9327-a35deaab8ce9
14607e5 accepts connection now
a238b0b osd_heartbeat_grace arg
a34205c fixed spontanous death bug; fixed useless post-closed reconnect attempt bug
49eb11e Added a cheap hack for testing purposes. It's commented out via a #define CHEAP_HACK 0
94cb28d fixed uninit var in simplemessenger
e792836 fixed small bug in crush
a761413 some minor module fixes
4f2d1e5 replace existing out/osd0 etc symlinks
6e9d6f0 valgrind on newsyn
17ce9fb crush symlinks
4539a8b destroy inodecache on shutdown; fix kernel debug output
613c289 links
b856a2f removed some old outdated docs
d5f114a compiles
a4bf3b5 function name changes
d75f3fa git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2118 29311d96-e01e-0410-9327-a35deaab8ce9
e7493e1 validate checksums on reads; still need to deal with partial writes
e0d9c6b fixed osd bug on failure that caused clients to hang
e8ec0c4 fixed bufferlist c_ptr() weirdness with ebofs buffer duping
6a9ac6c tweak simplemessenger to tolerate zero-length bufferptrs (weird)
9d09786 cleaned up share_single_client business in newsyn, works
5bfe10c _kaccept uniformity
7b3e6db some kernel osd_client bits
f516a6c minor cleanups
2fcade6 crush compiles in kernel; removed cygwin cruft, who cares
60fad09 Added some active OSD stuff. Also, modified newsyn to add a mode (turned on by setting ALL_SYNCLIENTS_THROUGH_ONE_CLIENT to 1 in newsyn.cc) that makes all synthetic clients on a node go through the same Ceph client (effectively making them all use the same buffer cache).
5fe5806 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2107 29311d96-e01e-0410-9327-a35deaab8ce9
131231f added socket callbacks, worker threads etc..
e8a919f csum stabilizing
16f2752 more csum fun; need to clean up bh handling, i think
4af6a92 removed files
6978f76 basic read/write support for holes.  with bugs.
447be86 preliminary support for holes, data checksums in ebofs
dc48f25 branch for ebofs changes
8d29198 move mds op defs into ceph_fs
0631674 osd map decoding in kernel client
1dc06c7 asdf
89926a0 osdmap cleanup; osd failure detection cleanup
b7c5a08 client reply encoding uses ceph_fs structs
04a96e0 kernel osd_client bits
fa1b150 set recv_stamp in fakemessenger properly
1324406 easier to read entity_addr
ecdbfda fixed osd recovery bug
889db3c oops
9f62ad1 report failure if we do not receive timely heartbeats from replicas
1b2d166 tell at least 1 osd about each osdmap change
0934316 another crush fix
b892cd0 fixed crush bug with forcefeeding
cf0e433 some osd failure reporting fixes
03ee4cf asdf
b123f7d kernel test module
b231f2c cleanup addr bug from mds merge
d2ffce9 client reply decoding bits
72d2e31 kernel client bits to decode client replies... will need to be moved around still
7170a05 changed client reply encoding to be easier to decode
f3e73bb fixed readdir path crash
e78944c small mdsmon fix
1fae43b merged r1958:2075 from branches/sage/mds back into trunk
d793b0f reworked message encoding/decoding header vs payload vs data payload, alignment preservation
6038210 missing pieces
4f1ed7b client (mount-ralted) bits build, at least
d697bfc fixed header encoding/decoding
ef4a4f1 some client request/reply struct redefinition; no more file_data_version, for now; utime_t now uses ceph_timeval
425169f no more bufferlist; streamlined ceph_msg object instead
b3808583 all chunk sizes come first, before payload
da820e7 build errors
e30b0f5 random crap
6369889 send_message func, creates new connections as needed
e55adeb added connecting to peer and removed junk
48e8ccf wow, it all compiles!
320d9cd ceph_fs.h cleanup, etc.
61f6ce6 super cleanup, fixed some misc compile errors
581f249 handle (ignore) monmap message
1b784de cleaned up some
cd539a7 more bits for mounting
08cef71 MMonMap message type, minor client cleanup, monmap cleanup
108101d typo
eb06a33 home page warning
4f2b664 main page, overview
0386b95 tasks/roadmap
f2a52f5 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2053 29311d96-e01e-0410-9327-a35deaab8ce9
9e68ca2 asdf
bef84b6 some mount option parsing fiddling
0c05cf9 ceph_fsid, fixed bug in osd recovery wrt 1x pgs, last_epoch_started_any
0ef2a74 client mount instance cleanup, ceph_fsid checks
17ff9b1 split out poll structures
dff96db Initial version
6bbc60e git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2046 29311d96-e01e-0410-9327-a35deaab8ce9
2426a00 builds somewhat..
62a78bf builds now
e74dd97 super/inode reorg.  getting started on mount related code
1c0b75d more error printing
59f1c4b print strerror before any call to fault()
cab34df segment trimming race bug
77a544c more code
bab5dc3 added start_poll, stop_poll
c7fb095 more code
7ba96f6 Accidently deleting listener
3336509 added more structure, not finished ofcourse
b6cfc8d git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2034 29311d96-e01e-0410-9327-a35deaab8ce9
c0818ab Initial version, doesn't build yet
f6aa893 renamed ceph_kmsgr
791de6f git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2031 29311d96-e01e-0410-9327-a35deaab8ce9
65ec3b3 closer to compiling2
bef61dd closer to compiling
5cd8eb2 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2028 29311d96-e01e-0410-9327-a35deaab8ce9
5dc3e0d duh
110eafa misc kernel cruft
f9a51d2 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2025 29311d96-e01e-0410-9327-a35deaab8ce9
0c3329e stray reintegration, purging
47122cb a few rename bugs; lame attempt at shutdown cleanup
18cf981 fiddling
6ec98c1 finished reworking the msg type defs
a1cbc73 moved message type defines around some
3118d72 dispatch bits
e324ecb fixed sockaddr_in stuff in SimpleMessenger
431d034 accepter bits; no connect, yet
337154a nonblocking reader bits
a39d3ae some nonblocking write helpers
8d91802 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2014 29311d96-e01e-0410-9327-a35deaab8ce9
008a98e migrate_stray; filepath fixup; messenger _myaddr/inst cleanup; server rename pin bugfix
d476445 some bits, untested
9c249b7 various cruft to build under cygwin
64c860f git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2010 29311d96-e01e-0410-9327-a35deaab8ce9
46bea38 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2009 29311d96-e01e-0410-9327-a35deaab8ce9
b49bf3f git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2008 29311d96-e01e-0410-9327-a35deaab8ce9
29d41e3 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2007 29311d96-e01e-0410-9327-a35deaab8ce9
d616aa4 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2006 29311d96-e01e-0410-9327-a35deaab8ce9
281c4fd git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@2005 29311d96-e01e-0410-9327-a35deaab8ce9
0ed3d96 atomic_t oops
e3d4a00 atomic_t type; now used by buffer.h
4d77d5d new branch for ebofs changes
6269326 nav update
705cf4a no news
e39f438 simplemessenger send handshake, reconnect attempts, timeout; ceph_entity_addr now uses sockaddr_in
11c19c9 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1998 29311d96-e01e-0410-9327-a35deaab8ce9
2445356 removed ports from messenger interface
a1b09d2 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1996 29311d96-e01e-0410-9327-a35deaab8ce9
42109c9 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1995 29311d96-e01e-0410-9327-a35deaab8ce9
114ec15 in development
2bc8674 in development
b51b5cd in development
1132a1c git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1991 29311d96-e01e-0410-9327-a35deaab8ce9
d1b2e81 senseless rewrite of fakemessenger directory to use addr.erank
dae8bec merged r1961:1988 from ceph/branches/sage/crush back into trunk
6820be6 formatting
9ae2900 better error checking
823b130 fixed crush map generation
1f0726e client calls reset_myname; msg quieter
23d688b git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1984 29311d96-e01e-0410-9327-a35deaab8ce9
4acb77c git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1983 29311d96-e01e-0410-9327-a35deaab8ce9
bfdb511 removed functions
68cd4c6 builds now
25b8e5f working copy
ab01b92 removed
0f712f8 more mds_client, first pass at bufferlist, marshalling
ab25afd new entity_addr struct
e454a48 fixed entity_addr to include rank in process, simplifying SimpleMessenger, eliminating client/mds startup naming ambiguity
34d1396 reworked mdsmon, beacon handling, mdsmap standby queues
a1f129e git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1974 29311d96-e01e-0410-9327-a35deaab8ce9
90e4359 first pass at mds client request handling
79bec38 more cleanup
e809bd0 migrator export_caps
c6a783f cleanup
92f23e2 tester program
4a97a2d tested each bucket type, fixed many bugs
3dfc341 cleaned up
2786ef3 reorganized
c740878 crush2 to crush
c2e3495 old crush
979eb4d works
6d90380 delay caps import until after EImportStart is journaled; "export" all caps in import_reverse
e0593d7 new crush branch
1ed7d25 more crush2
fa5cb1e some cleanup to better force open client sessions on cap imports; import on rename still fuggered
eea7d84 merged r1937:1957 from trunk into branches/sage/mds
c248cd2 partial C port of crush
f2845dc fixes on i386
bd6eb7a syntax fixes builds now
a95f0f2 syntax fixes builds now
b2dd40b git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1953 29311d96-e01e-0410-9327-a35deaab8ce9
ccf9ef9 builds now, still need much work
f6c62b1 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1951 29311d96-e01e-0410-9327-a35deaab8ce9
9b7c53c git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1950 29311d96-e01e-0410-9327-a35deaab8ce9
c25a0a5 Initial version
d273c0f int on 32bit machines?
c204c1c int on 32bit machines?
5a1e594 runjob.pl sample
dae2335 bufferlist thing in c
e9b5247 kmsg bits
bcf4be0 more data types and moving bits around
e74896e remove branches/sage/pgs
c71563c more header, data type cleanup
739ad66 no modelines
8ea7f27 rename kernel/ceph_fs.h to super.h
1891103 more data type rework
0bcbbf6 merged r1936 from branches/sage/mds back into trunk
26d3277 merged 1934:1935 from trunk into branches/sage/mds
9403050 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1935 29311d96-e01e-0410-9327-a35deaab8ce9
82b1142 merged 1863:1933 from trunk into branches/sage/mds
5e5416e fixed discovery of base inodes
017e646 fixed rename bug
bcc563b superfluous CDir::PIN_EXPORTING
178debc be quiet!
8b6f208 tempexporting pins between encode_ and finish_export, and subtree pins on all subtrees (not just exports)
a4f0f74 monmap, mdsmap
c57a3fb minor scatter_eval cleanup
0a9b51e MDRequest cleanup; partially implemented slave rename in-memory rollback; fix autoscatter unscatter vs migration
ac31165 fixed bug in trim_non_auth that broke rejoin; fixed up handle_mds_map to be more robust/clean
0ed6f43 random bits
e53b5a6 cleanup
67a610c Initial version of kernel module
d08d52b remove old buffer.h crap
6bf2f46 fixed up scatterlocks; minor discover bugfix
c76bf4e gethostbyname valgrind suppression (from issdm)
5d6f385 verify xlist empty in destructor
8d2795c fixed slaveupdate trimming; journal rollback metablob for safety
bff426d uninit bug, struct padding, debug
e5bbcf1 encode const
131dfd8 uninit var fix, heap trashing/encoding bug during rejoin
a5a2f4b debug_mds_log_expire, balancer tweak, MLock cleanup
40c0af3 fixed bug in clientmap save callback
afc69b1 fixed memory leak in path_traverse
3a12ce6 simplemessenger fixup w new structs
1467c99 fixed uninit var bug
eaee69d fixed heapc-corrupting EMetablob encoding bug, base inode trim bug
5392139 logger uninit var cleanup
d1276f0 parallel_fetch fixup, client mdsmap fix, freeze tweak, rejoin tweak
b0731a3 again
0792530 freeze fixups fixed
30d359c cleaned up freeze_tree and freeze_dir interface
836f7f4 no mds logs for standby nodes
324737d only verify all subtrees unambiguous when recovering
06f05b9 only open logs when named
6da205a segment changes, simplified shutdown, rejoin base inodes
a886ba0 ceph_message_header, etc.
f8a1010 fixed fakesyn
187e792 split out raw bit sof msg_types
91f2ff2 prioritize monitor messages; move non-monitor messages to dispatch one by one
eb8b157 client bits for DirStat
7386f0e pass dir auth etc info to client separately from inode
ad05ba3 eliminate useless CInodeExport and CDirExport intermediaries
ed016b9 xlist itesm remove themselves in destructor; dump mdcache when shutdown looks hung
aa05b00 scatter_unscatter_autoscattered
38f5a8f uninit var fixes
ddb633b discover_path fix; try to merge subtree when cleaning up after a rename
99a6975 maybe_request_map cleanup; uninit var fix
c3ae0ee bugfixes, EOpen works with logsegments * try_to_expire does teh right thing with open files * dirlock on base inodes never scattered * trim more aggressive about base inodes when max==0
60d059e big cleanup of rename operation. * simplified rename slave ops * WAIT_PTRWAITER for save contexts with pointers (used in Locker.cc) * CInode specifc freezing and aubmiguous_authing * fixed some problems with discover duping, dir_auth_hint
7b0315e set file mode atomically
716cd84 rename fixup plans..
8997767 oops
284dfc6 some rejoin fixes, export throttling during shutdown (hack)
f111d21 rbig cleanup/rewrite f mdiscover machinery
182bd79 mix bugfixes shaken out with thrash_links
f286f14 migrator export now makes second pass over subtree to delay auth change, dirty->clean transition
8898929 fix bug with large bufferlists with > IOV_MAX buffers
420236a mdlog trim fixup, makefile cleanup
d1d0838 takeobjectrw args
f1fe9e0 mds performance tweaks
d82f100 encode/decode_simple, streamlined MClientReply::InodeStat encoding
8da82c0 preserve chunk_at on received messages
9873f5a asdf
c1a9347 mdlog logger cleanup; trim fixup
73829a5 ref_set can be ifdefed out with MDS_REF_SET
2032147 mdlog logging overhaul; fixed mkdir bug; improved auth_pin assertions and debug output
9931869 dirty performance hack to streamline single-block appends
5be31ff build newsyn properly
e725c07 type cleanup
1f7d171 type cleanup
1cd29f1 merged r1850:1862 from trunk
68d95ad journal buffering tweaks
37469b0 be quiet
805a3d6 osd_auto_weigth pt 2
84b1202 osd_auto_weight
db19ba5 osds may benchmark themeslves on startup and supply crush weights config.cc config.h
2011b3b use hash_map in osd for rep ops
b9c0070 improved test_disk_bw
e016533 fix bug with add_primary_dentry
c5eaefc journaler flush delay/batching
9bdbd4c subsecond add_event_after precision
598c396 working
ce62768 more log segments, inode purging
c997c2f goof from merge
ed61241 merged r1654:1848 from trunk
7d06949 log segments, unfinished
f00e677 fix truncate
6a30da2 added test_disk_bw
65de06f fixed striding/segments on createobjects
766dd40 init osds before the rest.. not for any good reason realy
66b6dd1 mds boot cleanup; mds profiling stuff (commented out); mds server bugfixes (unlink); mdslog append
b5bfdc5 less particular about identity of failed osd when applying incrmental -- useful only when patching osd images with non-matching mondata
b3b2c4b less warning
5703132 be less anal during find output parsing
56a852d client tweaks from destro replay
a37f92d todo!
6e3899c hold rank lock a bit longer during submit_message, in case an entity tries to shut itself down
7e87bc1 todo!
5258c34 debug_after tweak, untested
f555310 less noisy about message failures
a3c75c0 various mds tweaks, bug notations from load balancing/failure experiements
773b706 config tuning for lb; more aggressive journal replay
9163ba4 quick fix: handle failure during reconnect phase
5a0bcab pin stray dentries to avoid premature trimming
79c7fe9 file_eval cleanup
af5438e simpler request direction when replicated; hack to workaround mds session bug on cap migration
07dc9ba don't stat the root directory so much
a0583c8 fixed up load spread
dc41ec6 load_spread
4bd32ce trace repetition weirdness
82c7576 other mds cleanups
d973f65 few bugfixes, share dir_rep during rejoin
c06dee1 fixed trace looping
4c2d37d client tweaks
c960503 use CDir::map_t
9cd8f98 fixed symlink, old trace playback
856f7d1 fix absolute symlink following
3b22f13 cleaned up trace playabk a bit
e37a8bc propose all mdsmap changes immediately
474b16d localized ll trace playback
c596425 mds appends to log on restart
7c51dc8 include context in EOpen
f0f542d inc 0 defined
95ecf91 bad
a60ead6 fake_kill_mds_after
0d5b359 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1808 29311d96-e01e-0410-9327-a35deaab8ce9
fcf3ea2 fixed up log trimming after replay
24f0d25 go straight to standby, do not pass creating or starting
7de63e0 standby mds do automatic takeover
68284c6 remove useless sigint handler, dont die on misdirected message
f86b863 path traverse stats
f44073d shut up
befb9a8 smooth over time
fb5854a temper offload
874e4c7 anchortable on mds0
39d2f7d performance tweak
6572435 fixed dendl whoops, fewer cache dumps
c83e90e fixed up do_sendmsg
7c411d2 sendmsg, tcp_nodelay, again
7767c0b nicer printout
d06c6f0 use hash_map for CDir dentries
45a7c7e buffer performance improvements
b5d1726 link test
d59118f revert sendmsg change, it hangs
28e2d0f journal latency uses logger averager
167431d segment-based trimming; balancer does queued exports
c93efe0 stupid hack to pull osdmaps out of an osd store
c8487f0 more buffer iterator improvements.. substr cleaned up
5d81a0a synclient fixup
4bedb61 hacked up client authority caching.  still a mess, but marginally better
95be587 dendl dummy
bc3aa38 balancer fixups, logger takes mdsmap timeline, readdir trimmer race fixup
047181a approximate popularity in new fragments
fc25fc7 fix lru midpoint calculation
3fcfd15 track queue len in simplemessenger
ad32837 logger avg fixup
9e71117 syn client cleanup
b1fe02e bufferlist iterators
718ced0 make ll_forget more foregiving
88620e7 ll_link playback fix
24a7b0e trace playback fixes
dd20060 logger avg fix
377f4de shut up
7b89218 hard link fixup
f190c14 anchor table, hard links fixups
9b8b9d1 basic permissions checking
0275bd8 import_find now parallel
7136598 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1766 29311d96-e01e-0410-9327-a35deaab8ce9
ebe775a study_find improvements
c875c01 nomore
479c18c no default srun
2a45d6f llnl mpi fixups
6d1b7a1 minor cleanups
d015a9c blobhash fixup on 32-bit
904e36d new hash function
85b4b55 object_rw fixed up
e170ac9 use logger averager inc lient
cee51c1 logger can calc average and variance
d596ccf use sendmsg in simplemessenger
51a29a0 whee
6cdfd2e createobjects fixup
166e468 fixed osdmap oid hashing; osd shutdown
2f5ceab messenger fixup
11f5efa better client layout, dont delete clients
c338e27 reorder bugfix
1c6adde osd_pg_bits means per osd
e577788 be quiet
651e7dd locking attempt 2
e805569 fixed object workload locking (but not trace playback)
feb1f9a asdf
73eb0fa cleanup
a0dcde1 fakemsgr fix
0eea8d6 log loadavg
f2707f5 skew object workload
57919d9 read shedding improvements, better interaction with immediate_read_from_cache, better op latency calculation (messenger apploies recv stamp)
472490a lots of read shedding tweaks, vaguely behaving now
d6ef0ec new runjob.pl replaces old runset.pl.  comb fix for floating point values
0d20631 more read shedding bits
4fc8e71 balance_reads watches object temperature (hack)
9799d49 cleaned up read shedding
e611b13 osd load calc changes
00f81b3 allow %d (client number) in trace filename
ab5988f more locking fixes
140da74 fixed object tracer playback; object creation, uniform rw workload
435f4ec fixed an osd recovery bug
9da420e fixed objecter timeout to request new osdmap
ce5f6fe lots of recovery fixups * objecter has timeout mechanism (untested) to request maps * primary-driven recovery (re)implemented in replicatedpg * raid4pg temporarily ripped out * pgmonitor fixups*
43f0720 quick gprofing for individual mpi ranks
7795db3 fixed fakemessenger segfault during shutdown
75cbf93 osd cleanup, small bugfix
cda62de dupstore, ObjectStore, Ebofs and Fakestore interface fixups
7fec368 onlyrange syn command
95f209a shut up about cow
6f5f4e7 minor tuning
1d2139e dup.ebofs to efficiently duplicate an ebofs volume
c7ea8cb verify tables on mount
5bd408e fixed node cow (ptrs need to update too)
ede177f added clean bh merging, removed unnecessary dirty list
5d99f42 fixed do_cow()
d923037 fixed xlist push_back bug
b6af38f logger fixup
da6b446 fixed new bug in buffer encoding, finally implemented a proper substr that returns a string
6ea88ae rewrote logger
af6bbfc fixed cmon
ef8f41c recovery bugfix, and some pg stats work
20827c0 object-level trace playback
24a7b51 rewrote ebofs node management to eliminate crap performance with large object counts
9231b21 hash_map instead of map
3c2c90a small cleanups
5e8a9e0 bitmapper, etc.
8574281 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1703 29311d96-e01e-0410-9327-a35deaab8ce9
c915a90 fixed .ceph_hosts, paxos should_propose interface
bd348ba allow dout redirection to somedir/hostname.pid with --doutdir somedir
cec0f70 quieter
c170821 buffer page alignment, simplemessenger bug fixes * simplemessenger bug fixes * simplemessenger chunks message payload based on hints; receiver page-aligns new buffers if chunks are n page sized * client mounting fixed up (now an 'instance' number that identifies instances at each address) * paxos update buffering fixup * ebofs avoid copying written buffers when they're already page aligned
9b9bba9 fixed objectcacher write throttling
a6bc293 fixed parallel client naming race
54d81ae fixed parallel client mount/init
985f903 nicer mon output
805c6d5 fixed unnamed entity naming, parallel synclient mounting
405a3a3 made conflicting endl symbol to catch dendl/endl mixups at compile time
ff7516a nicer output
cfbe8ac objecter periodically requests new map if it hits an empty pg
5cc78b2 debug_paxos arg, longer default mds grace
5ecbf7b quieter
3c60627 fixed osd_hack_fast_startup and monitor shutdown
f839eda misc
d624d5b fixed idle kicker stuff
c9ec799 der
547133e more debug output fixups2
23007ad more debug output fixups
84ee6f0 dendl oops
971f9f7 fixed ownership when run as root.  still no security.
792ea3f stragglers
652d686 new debug output locking everywhere!
54c41e2 bugfix in osd
c0dd8cf locked debug output
5fab029 small ebofs fix
74f13f4 ebofs tuning, locked debug output
1f4bd15 logging changes; hooks for bencharmking journaling;
4eab5b7 fixed trimming race issue in journaler
d16f9a1 new debug.h
5819b76 minor client cleanup
69ade9e asdf
e72e9ea asdf
ab537a7 create, timestamps
1d41bad fixed up
e1840d6 asdf
bd7667c some bugfixes, remember fds, fd paranoid weirdness
6d36972 fsync instead of close(dup())?
8add023 simplified, better assertions
d3d4838 fixed up lstating on lnink change etc.
11c6adf cleaned up cache teardown, ref counting, etc.
f047964 better hard link support
a4fadf4 quiet
b8a68cc fixed link bug
5176cf5 statfs better
15d6bf6 asdf
6c2c8bd build under 32bit
a6db179 merged branches/sage/mds r1653 back into trunk
79149d7 merged r1628:1652 from trunk into branches/sage/mds
a69d97d Fixed spurious conflicts
9475438 some cleanup
949863a trace now reads from file, implemented ll_flush stub (still a noop)
cd1bb64 fixed re-broken cdir complete flag bug (which resulted in lost dentries)
3d82e39 works ok
76164d9 asdf
7afde62 new log segments correspond with new journal objects
1892b13 fixed up mds_local_osd, crush, osd mkfs for preferred pgs, etc.
8bfab80 fusetrace!
1b1e18c git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1643 29311d96-e01e-0410-9327-a35deaab8ce9
ac188a7 study a static file system, look at hardlinks and directory size
10b4644 asdf
e77740f asdf
3917aad .ceph_hosts files
acc862d lots of migrator bugfixes, refactoring, cleanup.  needs more testing, esp bystander vs ambiguous imports
c5611ad mds.migrator import bound handling refactor, untested
db8d7cb fixed bug in metablob->add_dir_context and scatterlock tempsync
e84caa4 client tweaks, small mds bugfix, improved ll_lookup
dc07fa4 osd updates and bugfixes * MOSDPGActivateSet for faster startup * "clean" osd (shut)down * fixed some pg log/attribute bugs, strengthened invariant * fixed project_pg_history (and subsequent assert(from == pg->acting[0]) bug)
0f53605 fixed non-mkfs startup mds shutdown idiocy
008b87f fixed cdir fetch auth_pin bug
6f65592 client bugfixes, basic statfs implementation (minus mon.pgmon)
85690d6 objectcacher bugfixes, better bh merging
2430469 removed active/* binaries
2aec5d1 merged branches/sage/mds r1627 back to trunk
773e40a merged r1566:1626 from trunk into branches/sage/mds
ef54ec5 some more client fixes
0c07fda misc cleanups
1edb00e fixed pesky read objectcacher bug
5727387 fixed caps race with client, play_trace can do metadata only
3a158b7 fixed problem with premature fakemessenger thread shutdown
1f0eb59 fixed a few objectcacher bugs
3db4253 trace playback behaving
334e485 lots of client tracing, and 32bit ino number hack
e01e895 fuse_ll seems to be in good shape
2003497 client fuse work
b81c9a4 client fixups
f84348d fsync bits
431d61d nicer popdump
29479c7 be quiet about remove_onode ref counts
8ec0b1c be quiet about cache reads
a63057f shut up frags
5c3352f cleanup
7f6679f some frag fixes, debugging
46d574d fixed up freezing.. not it takes an auth_pin and is just better
e58c898 cleanly stop simplemessenger accepter thread
37af714 cleanup
8259ffc Starting experiments in locality-aware task distribution
b5d049c commit new frags on split instead of journaling and dirtying everything
d41ca3a cleanups
e52e216 fixed mds shutdwon state change race
5a435b1 logger in mds.server
dfe07a6 stat mask rename fallout
88eca4a big cleanup of popularity tracking code
e6da94e fixed up client, mds * frag_t bug * client stat mask handling * client debug output cleanup * potential CDir store/fecth problem with shrinkage
91c7f76 some mon.pg bits
b082d24 adjust verbosity, timestamp debug output
2128d22 more fuse_ll, client cleanup
cf575f6 makefile beautification
170b7b2 fuse_ll mkdir, mknod, symlink
9598828 some int size cleanup, hopefully everything that touches the osds
9f1b2af more client readdir cleanup, and initial fuse_ll implementation
30d2087 client readdir cleanup; import_find
80f437b removed branch
c7f4a6a prelim dn dir_offset work
0653682 cleanups
b3c7109 cleanups
e5881a2 mon_allow_mds_bully
a56d4c4 include pid in fakemessenger addr.nonce
56392fc fixed random fsid creation
00dc400 mdsmonitor boot logic cleanup
55448d4 ObjectStore::Transaction encoding and interface changes
f346fb4 be pretty
b7e4741 return proper value to fuse
02a0a46 cleanup BDB build
0674752 use regular Mutex for buffer.h by default; make flag to use cc++
29563c8 readdir on fragmented directories works now; also some client readdir cleanup
4cf9319 some frag readdir progress
d0e9935 include trace on readdir EAGAIN frag mismatch
2c9ed7f journaler cache object (for benchmarking)
d84cb68 cosmetic
e887aed more efficient encoding in EMetablob
12cf843 jump more easily into scatter state when unreplicated and unlocked
3b0ba45 use GNU Common C++ AtomicCounter instead of a Mutex in buffer.h
76542e8 merged r1561:1566 from trunk into branches/sage/mds
3ab2c0c some blaancing cleanup, performance tuning
0759800 allow multiclient nodes to mount
d32f177 utime fix; decaycounter improvements
af52f93 rewrote client readdir, cleaned up readdir handling on server etc.
ad7df19 inode last_journaled
42e9a3c merged r1543:1561 from trunk into branches/sage/mds
b156ff7 half of inode->last_journaled business
6306a64 some warning cleanup under cygwin
ce1e7f7 more split fun
bcd349d swap() in buffer::ptr and ::list
50e58af preserve file type in mode during chmod
5ee2f57 fixed a few bugs
2f29b29 some debug info, slightly improve mds choosing
cccf613 don't include . in readdir results
6087b9e use get_random_in_mds
ab4b8a5 frag bugs, migrator bugs (!), other frag+migration work
3624203 fragtree force_to_leaf is bool
ee05988 journal old subtree bound ino on merge
572640b redid d_type as remote_d_type
cd6e066 initial d_type code; some CDir::committed_version_equivalent cleanup
005dd45 fixed antoher stupid get_num_blocks bug
918d2ad some housecleaning
18d3496 split appears to not crash
9df08e9 more fragment work
665688c new mds branch
53b5215 clean up inode number ranges
cbda054 fragtree simplified/normalized form
1c6ffab more frag/split work
b57474a fragtree, fragset work; migrator/cache dirfrag bounds cleanup
1a3529e bounding dirfrag_t's maybe ambiguous
a288fd1 fixed follow_symlink for truncate, other ops
650e278 allow purge of 0 bytes inodes
83688c5 mount validates superblock vs actual dev size
a455e96 fixed bdev size detection; mount validates s_magic
f3e5d28 removed legacy obfs stuff
98f1850 prelim split/merge work, freeze_dir, pin rearrangement
2ca9a37 include full inode in all acks (even to survivors)
13e3a45 osd pg locking fix
0e79154 uninitialized value fixes
459080e fall back to BLKGETSIZE if BLKGETSIZE64 isn't defined
fdaf362 verify that we can determine device size on blockdev open
ae21650 mdsmap same_in_set_since
ea9c3fb fixed open(O_CREAT) bug
f159160 a few osd/pg locking fixes, cleanup
0e98193 rework of osd pg locking
4a39c28 query for new mdsmap if missing an inst
35ac040 cleaned up osdmap sharing code
3478c34 some osd fixes
a78d136 no raid pgs yet
61bc6f6 mark osd down and then up again in separate epochs
150bbe9 cleaner mds suicide (not coredump!)
e1f9b77 merged r1515 branches/sage/pgs back into trunk/ceph
39b8094 merged r1475:1514 from trunk into branches/sage/pgs
0f78284 merged r1513 branches/sage/cephmds2 back to trunk/ceph
5daedb7 pgmonitor shell
c1a5517 pg monitor compiles
8ffff6d reorder osd up/down in/out output
183ccf2 todo
90f9133 removed old rejoin ack message
fa78769 cosmetic rejoin cleanup
035ee45 cdentry new, cdir committed_version_equivalent, some rejoin cleanup, inode purge bugfix
5f6628a reset beacon on boot
1676a2d bug fix in partial bh code
c14bb94 reset session seq on reconnect
64ce680 decompose utime_t when printing
46756a1 some rejoin and naming cleanup
11c907d * finished missing/full rejoin * CInode STATE_REJOINUNDEF * renamed some rejoin_* functions to be more consistent * fixed newsyn/fakesyn mon_stop_on_last_unmount defaultiness
8d61c36 merged r1497:1499 from trunk into branches/sage/cephmds2
8e350e1 * merged 1447:1497 from trunk into branches/sage/cephmds2
d3a9318 * be quiet
08dce39 * locker caps fun
2fa46c1 * fixed a bug in buffer.h!  yay!  should be much more memory efficient now, too.
2f5718f * uninit mem bug in ebofs
d1436d2 * get_rand_in_mds
ee36a38 * separate debug_paxos setting
79628c8 * turn down debugginb in ebofs * trivial replay bug in ebofs
91085dc * cleanup in MClientFileCaps * cap reconnect migration appears to work, yay!
d820c28 * fixed subtree_map metablob bug (some bounds were left out) * fixed importstart/finish spanning subtree_map replay bug
eb2abe0 * EImportMap -> ESubtreeMap * MMDSImportMap -> MMDSResolve * clientmap saved separate from journal now; much cleaner * some rejoin cleanup
fae14b8 * fixed import_map trimming * fixed mds -> client session opens on caps migration (untested) * fixed CDir fetch/store * fixed journaler flush bug * worked around audit() weirdness on import disambiguation
a226b82 * larger log import map interval
c9820bc * reworked mds states, target mds cluster size, other mdsmap updates
8f44c46 * reconnecting caps * parallel_fetch, etc.
619afbb * push seq number of mds to client messages, client session close attempts may fail
850c15d - fixed subtree recovery weirdness - lots of work on rejoin - fixing up some of hte caps migration code
12b5746 * some small bugfixes
afe979e * restore fakesyn, newsyn shutdown-with-last-client behavior for testing etc.
79cfcb2 * misc rejoin bugs * parallel_fetch (untested) * two server bugs * MDCache::list_subtrees()
628e654 * lots of work on rejoin.  still some details left.
c23e3c1 * partial start on rejoin rework
fab2212 removed mon2 branch
922df76 merged r1472:1475 from trunk/ceph into branches/sage/pgs
34c54d3 * formatting goof
6ee499d * formatting screwup
a419ff6 merged r1409:1471 from trunk/ceph into branches/sage/pgs (the rest)
4e4c5bc merged r1409:1471 from trunk/ceph into branches/sage/pgs
2c9f27e * fixed scatter writebehind
5391bf4 * journal trimming waits for scatterlocks to flush.
e5e1404 * EAlloc merged into EMetablob
366eabf * partial move of ino alloc into EMetablob (not done) * ESlaveUpdate log flushing fixed up * slave update rollback cleane dup * locallock integrated * some rename bug fixes * acquire_locks will auth pin scatterlock parent if !auth and !scattered (in case we have to request) * scatter_wrlock_start will request a scatter * rename dirfrags forced into subtrees for duration * bugfixes in inode expire scatter/file lock eval
6732318 * iversion lock
79312af * versionlock (LocalLock.. crappy name) * CInode.force_auth
f571124 * migrator: pin exporting dirs * migrator: send export_cancel to right person.. and dispatch it * locker: auth_pin in unstable states * locker: _eval functions broken up, cleaned up * server: projected_inodes tweaking * server: commit/rollback needs reworking.  link() partly there.
24d5e84 * quick doc update
1c91e2c merged branches/sage/mon2 r1462 into trunk/ceph
41e1212 merged trunk changes r1424:1461 into branches/sage/mon2
03e77ac * minor osd failure handling bug fix * better sanity checking
e04dfa2 * typo
951bb3c * more partial canges, untested
c095792 * some prelim work for locker authpin changes
e82af91 * removed crufty locker docs
994d808 * this _appears_ to fix a valgrind error, and conforms to the 'always signal with lock held' rule.
33b9f70 * fixed migrator shutdown/fail notify waiter bug * some prelim scatterlock work for updated flag.. * projected_inode, and associated Server method rewrites (way cleaner!)
7f21269 * some MDS event cleanup * fake kill, suicides
15aacc9 * destdn auth opens any dirfrags under srci * minor cleanup in path_traverse for dir discovers
26d36c4 * fixed bug with renaming directories and subtree map adjustment * lock can_rdlock() cleanup
6ec9a95 * fixed client cache bug with relinking
e08b94c * todo
4513093 * fix anchortable commits * resolve remote inos during traverse * reply, then finish slave requests.
c8015df * fixed up indoe/dentry/dir discover; all now add_replica_*() * fixed bug with discover auth hints * cleaned up handle_discover_reply
9d73dc4 merged trunk changes r1407:1446 into branches/sage/cephmds2
918e5a2 * cosmetic
4c1ea57 * fixed link/unlink recovery behavior * fixed up slave request recovery handling in general * unlink now reanchors when moving ots tray * fixed rename replication of straydn
705bbe4 * new link thrasher, still needs some work.
76fec3d0 * cleaned up old message types, unlink/link cruft * rejoin restores authpins AND xlocks, slightly more cleanly * rename reanchor cleaned up * fixed migrator export vs stopping mds race * slave update recovery implemented (untested)
2cfdd57 * remote unlink, genericized slave link++/--
15d9d63 * foreign link implemented
7693801 * resolved request forward vs slave request finish race
e70608a * clientmon: save latest only once, at end of recovery
bb07a81 * fixed up dir inode mtime handling * lock set finalized during rename to avoid wrlock auth race
428db51 * path_traverse cleanup, DISCOVERXLOCK fixes
b9c6b44 * rename thrash test ran to completion.
039aad1 * some prelim for rename inode migration
ced8e97 * client mount timeout/retry; but we need a general approach to mon query retries
125e6fe * some journal tidying
da3a11d * simple ebofs journaling, yay!
b719c69 * rename commits on slaves
7b3497e * rename now generic, and works locally so far
1f6a7d6 * small MMonCommand fix
a6f5abd * force trim of replicated null dentries that sync to non-null * fixed authpinnable waits in server (now wait only if frozen; locker->acquire_locks will wait while freezing, and handle auth_pins properly)
dd6a261 * genericized auth_pinning * cleaned up Locker auth_pinning * slave auth_pinning implemented, but still buggy * identified some migration vs null dentry issues!
1de1285 * minor osdmon fixes
2eb4408 * lots of fixes.
92e776a * rewrite of osdmon, clientmon, mdsmon using new paxos framework
1f2ce98 branch for distributed monitor work
a541ba3 * mds remote locking bugfixes, etc.
2027970 * forgot this
159536b * fixed mdsmon startup race * pulled out generic PaxosService stuff (wasn't that much it turns out) * some paxos bug fixes
6d7c053 * fixed client mount race under fakesyn
2f4658f * more paxos work
ebe1abb * finish_contexts is now loop-safe * mon: lots of paxos work, still in progress * mon: elector rewrite with epoch!  yay
14d3733 * only auth_pin wrlocks if auth
4718149 * dir mtime fix * some slave request infrastructure fixes
99a67f6 * small flash crowd candidate check cleanup
7923e37 * minor read balancing fixes
cd9f72a * export twiddle cleanup * misc locker bugfixes, getting stabler
59ccbb7 * scatterlock rewrite (untested) * slave mdrequest, remote xlock, etc. rewrite * fixed request forwarding bug
f9430fe * bugfix on filelock caps callback
af8a786 merged trunk changes r1397:1408 into branches/sage/pgs
eae75f1 * mon: send osdmap to waiting too when all osds finally boot
26c8a9e merged branches/sage/cephmds2 into trunk/ceph
3b6ca5d merged trunk changes r1394:1405 into branches/sage/cephmds2
d5520d0 todo
b9e1163 * be slightly less dumb about sending initial osdmap to clients
d9931d4 * bugfix in mount()
dfb99b6 * show osdmap content
b05d2d9 * be explicit about journal append ack/commit safety
5d24169 * tweak to still allow primary-directed read balancing * pg_bits -> pg_num, smarter 'mod' function
943bbbf * recast in terms of read-balance attribute
dd2d7f9 merged rewrite of suresh's patches so far: * objecter reads from replicas, if directed to * primary-lock half implemented * popular objects added to replicated_objects list on replicas * replicas satisfy reads on listed objects, or fwd to primary * syntheticlicent 'exclude' option * wrapped into a preprocess_op() PG method * read balancing cleanup
affb267 merged trunk changes r1361:1396 into branches/sage/pgs
820a06b * fixed dir mtime updates on dentry creation/deletion
8c1a8d9 * account for open popularity properly (rd vs wr) * locker bugfixes
df4d6d5 merged trunk changes r1360:1393 into branches/sage/cephmds2
4f3abae * noisy about replication
dc1db55 * mds boot osdmap weirdness fixup
ebf0a39 * waiter debug output
6236b80 * fixed lock waiters
09b7d7f * use int for mds state var
12ed9df * some edits
653205e * added vim modeline
3a02059 * beginnings of ebofs journaling
10db815 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1385 29311d96-e01e-0410-9327-a35deaab8ce9
9fd9096 * clear dirfrag dirty bit when closing/purging
3e9dd40 * fixed some unsigned overflows
c72e30e * grab rank lock while changing local map!
d1de85d * mds bug in Server.cc
54cf315 * scatterlock fix
1cd3c4a * fixed bug with multiple mds restarts (log ambiguous import success/failure)
b96cbfa todo
bdc5655 typo
9f02806 * use stdint.h
66961f2 * mds bugfix: file_eval shouldn't change lock state when xlocked
66eb87f * bugfix for filelock xlocking
40f37d0 spurious conflicts
e9b7e21 hardwired in absolute .ceph_monmap path
f1a87dd * improved behavior of locker versus migrations and recovery
56830d4 * some simple recovery fixes
ca8acff * roadmap update, etc.
aade738 * some rejoin cleanup; missing still not implemented
3beb089 * rollback caps goof
8ddd710 * removed branches/riccardo/monitor2
638a325 * merged branches/riccardo/monitor2 into trunk * some paxos bugfixes/cleanup
361416a * merged trunk changes r1131:1363 into branches/riccardo/monitor1
b0469bd * merged suresh's read balancing changes
aaf363d merged trunk changes r1351:1360 into branches/sage/pgs
9d04a68 before branches/sage/cephmds2 was merged into trunk/ceph
13ab418 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1360 29311d96-e01e-0410-9327-a35deaab8ce9
6b365d7 merged branches/sage/cephmds2 into trunk/ceph
74a34f1 * from trunk
7c048c8 * fixed client_inc bug w/ fakesyn
48d55ae * fixed caps on open idiocy
1907282 * some dumb typos
5fa0268 merged trunk changes r1338:1353 into branches/sage/cephmds2
35ce952 * open_remote_ino rewrite * some scatterlock work.  not done yet. * rejoin cleans out xlock cruft
b86e591 * scatterlock fixes
4e21456 merged trunk changes r1138:1350 to branches/sage/pgs
06a85f1 * syntheticclient lseek
a511e19 * mds: osdmap handling bugfix * common/Thread.h: fixed stupid join() problem (again)
e0aa204 * allow multiple batchopenjournal pins
d8dd31a * chdir back to original dir on fuse shutdown, for benefit of gmon.out
53abf94 * scatterlock.  untested.
bd8c940 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1345 29311d96-e01e-0410-9327-a35deaab8ce9
f66e3b9 * lowered default pg count for now * fixed mds restart bug * osd quieter * default mds_beacon_grace is now higher
e1953a9 * fixed small locker, rejoin bug
be35730 * client make_request rewritten, now handle forwards and sessions and recovery gracefully * mds rejoin fixed up, recovery basically working.
a21552d * session recovery cleanup * EOpen batching
38a77c2 * rewrite of client mount process.  sessions opened for each mds. * mds recovery step reconnects with clients with open sessions
b97405e merged trunk changes 1256:1338 into branches/sage/cephmds2
edadd14 * more non-idemptoent clietn ops stuff
7bba52e * client idempotent ops
b3ffcce * prelim work for EOpen journaling * cache rejoin rewrite * export dir prep cleanup * thread cleanup
0579856 * some hashing cleanup
6c46386 * hardlock broken into auth, link, and dirfragtree locks
963bd25 * ambiguous auth cleanup, now generic in MDSCacheObject * mds.locker: first pass at remote xlocks
3cf427f added new prediction for new test
dd50894 * mds: generic waiters * mds.dir: cleaned up dentry waiters
c843188 * mds: more bits into MDSCacheObject * utime_t timestamp precision in inode
f039c23 added some renewal stuff
a0ff476 added 2 more workloads
25a393a added configurable prediction
4cb8c4a * mds.locker: huge rewrite.  cache objects now share lock code (for real).  not tested yet.
85bbbc8 * mds.server: more rewriting, now we explicitly rdlock path always, for proper auth check atomicity * mds: remote inode link groundwork, just need remote xlocks * mds.server: rewrote open O_TRUNC path
fb16ca7 redid some renewal stuff
a1dc12a * mds.migrator: fixed auth_pin vs exporting deadlock by allowing discover stage to abort. * mds/journal: fixed importing bug
b7af801 * mds and osd ops now set 'retry' flag, so osd|mds can eventually skip dup op checks
516e512 adding some test results to parse
e024a2c sequential, non random trace usage
65a4f4b added a ior2 workload
feee225 unlink
5de9a7f * rename reintegrated.  so much simpler, yay!
15aff09 * buffer.h encoder/decoder rewrite; can now encode/dequeue any stl-based structure, provide base encoders are defined
50a672e * reqid refactoring (metareqid_t vs osdreqid_t) * lock name cleanup
ea78497 * extensive rewrite of locker, server request handling, lock acquisition code * mds: path_traverse cleanup (no more onfinish--we cache negative dentries now)
4c00d13 ditto for lseek
cb8a866 does trace lseek stuff
5916f82 eh a bunch of stuff here and there
9364687 * mon: default to a ~128 PGs per osd (up from 4!)
520d3df unix group preloading
f1c7968 minor unix group tweaking
088e5f0 script to parse open/closes from trace for prediction
1ab4400 Prediction now actually work...with some hacky fixes
1e901bb * buffer: deque map<t,deque<u>>
88d3f21 * more mds lock notes
bf7efb0 * rename notes
fc112a7 Added clients side file access prediction
772e4e7 forgot the batch file
f89c21f on file batching working...with some client cache issues
53d4e98 * dentry unlink notification moves to stray dir (w/ discovers) * eval_stray, purge_stray * adjust_subtree_after_rename (untested, of course) * EMetaBlob cleanup to allow un/relinking.  need to test. * rename dirs checks for emptyness. * unlink/rename auth_pinning fixed up
61fc0d4 * mds: simplify unlink, rename logic by always moving existing primary inode into stray dir; purging will be async
12adbb9 * hadoop: minor cleanup
ceb020e * mds: make sure loggers open properly (w/ newsyn), and flush on shutdown
8d98b37 * mds: fix lost auth_pin
6d5728d * fixed rename semantics (helps to read the spec) * local rename makes anchortable updates. * local rename vs hard links behaves
96353bf even more debugging of Hadoop interface
d6f473d added some logging stuff
5c4ae62 * some mds ino cleanup * Renamer stripped out; handle_client_rename cleaned up, _rename_local stuff there * finished dirfrag refactoring * stray dir creation on create/boot, trimmer fixes, etc.
6c0dca0 clean up again, changed output
d00cf71 * mds: alloc RDCACHE during glockl * client: fixed truncate handling, implemented helper in FileCache * osdc: implemented truncate in ObjectCacher
cebf626 * SimpleMessenger only lets you do start_rank once
981f2a1 * thread join more forgiving
6683ede Even more debugging. Reading is currently broken.
5d8ce37 more debugging
f396c4b clean up stuff
a67c29d * clock_tare arg to allow wall clock time * cleaned out some old build targets
89c8662 * tested failure on requesting mds vs anchortable
af7614d * per-line locking on osd debug output (dstartl and dendl)
446a733 * some idempotent client ops groundwork * tested/fixed up a few AnchorTable failure cases * fixed remote_ino linking bug in Server.cc
1f5cc96 Debugging interface
786bf56 * ms_tcp_nodelay
c6a2e15 grr try this
8c2fcd7 * more SimpleMessenger cleanup
aa03d08 * changed SimpleMessenger to send using sendmsg(), to fix weird recv latency
d9b1a2d forgot crypto.o
ac3eab6 more clean up for getting numbers
bebce27 some optimizations, not sure they help
42bf150 some unix group cleanup
0d0e046 asdf
8a8cf2b * libhadoopcephfs.so
80ed795 key management changes
f275c16 more Hadoop stuff
f212de3 * some client cache tweaks
b9c6921 calc update latency w/ optimizaitons
eb07ec9 2007-03-19  Casey Marshall  <csm@soe.ucsc.edu>
c8c238e more latency recording added
070d854 Added read/write latency timing
a41774a added an mds latency testing file
6fc29fa moved cap call around, helps alleviate an assertion
bef33e1 fixed a deadlock problem, may come back to bite me
eb36db6 * singleauth waiting; discover waits * moved auth_pins out of Locker; explicitly in Server.cc handlers now * prepare_null_dentry/prepare_new_inode cleanup * reqeust_auth_pin stuff
17cce2b buffer flash crowd stuff ground work is working
fb147bf merged trunk changes r1208:1255 into branches/sage/cephmds2
6ed8c55 * O_TRUNC implemented in open()
b80c3a6 * fixed problem with client cache caps
9d06283 merged trunk changes r1223:1251 into branches/aleung/security1/ceph
62ffc11 * some discover cleanup * fixed CDentry state replication (preserves dirty pins) * fixed clientmap versioning vs journaling
785e6e5 * fixed bug with lost waiters on null dentries (e.g. mknod race)
2bcc95a * some changes to client cache: readers/writers block properly, wake up when data is flushed
974c3fe fixed trace_convert to write to previous offset
183857f Created a quota branch
5cb6d95 Added branch marnberg for quata
1d423e3 * csyn: start up N synthetic clients, not just 1
1b71965 some fixes for client shutdown
89c6aab * fixed getdir() on empty dir shutdown hang in client
4bb27d7 * fixed buglet with open(O_CREAT)
df01263 * fixed looping bug with clean_dir (called after trace playback)
88b0b7d * fix bug with lost waiters on null dentries (e.g. mknod race)
db4e931 Added test trace file and trace now plays
5a5c7f3 fixed it to not spit out root, which is already there from mds boot journal flush
93b3e0c script to first spit out all dirs used in a trace
8d3760d * more dirfrag refactoring.  slowly but surely. * fixed up message forwarding, even from path_traverse
786924e * unlink message handler tweak (clean out inode+dirfrags) * EMetaBlob interface cleanup: explicitly specify dentry type, unless updating existing
c44ced6 script to translate strace i/o data to ceph trace format
d40ae71 * local unlink works, unless primary and nlink>1
8e19f2b start of unlink rewrite
6f40cc9 * carry CDentry state over a migration
d4a8848 * AnchorTable/AnchorClient update to handle failure for table of initiator. * Simplified anchor ops. * Rollback.
a29ff7f make renewal an option, switched monmap key management
4e10806 Applying sages changes
79e24af * fixed read/write idiocy in MonitorStore
4d95972 * fixed read/write idiocy in MonitorStore
5c3e102 * anchortable rewrite.  now journals updates.  partial recovery logic; does not handle others' failures (i.e. disambiguate uncommitted ops.) * anchorclient rewrite.  does not yet retry ops if anchortable fails. * rewrite of MDCache::anchor_create() and _destroy().  no _update() yet.
8f2c19f * some more discover cleanup with open_remote_dir() * MClientRequest cleanup: args not in a union, self-documenting, cleaner.
defcd00 using cryptopp headers instead of ++
47b0059 merged trunk changes r1151:1222 into branches/aleung/security1/ceph
8eac477 turned some optimizations flags on for crypto stuff
c1e9220 * emacs headers, formatting
3562c8b * minor osdmap cleanup
baaee0f * fixed SyntheticCLient.read_file() to notice EOF
11add1f * added try_map_read, which checks for missing bufferheads without creating them.  for _is_cached.
f35b883 * fixed bug with writefile/readfile data fingerprinting (for detecting data corruption errors)
b803102 renewal stuff is mostly there and working...added some timing stuff for perf debugging
e980109 fixed some migrator memory leaks; bug in client getdir on empty dir; add_replica_dir in MDCache; fixed mdcache handle_expire behavior during EXPORT_WARNING
f2bedc9 - CDentry wasn't setting auth bit on import - discover_reply bugfix - improved MDCache.trim() and friends.. proper CEx logic. - cleaned up MDCache.shutdown_pass - Migrator::audit() will verify import/export_state is clean - importing, exporting pins on CDir - fixed bug with EMetaBlob expire logic (on import)
fa7d4cf Client periodic renewal request works
c7a1b84 error suppression file to make valgrind shut up about a bug in libc's writev
e8435da - mdcache wasn't deleting trimmed inodes - client metadata request queuing was goofed; fixed memory leak and other issues
c728d59 merged trunk changes r1171:1207 into branches/sage/cephmds2 (take 2, worked better this time.)
dc8f0e0 undo previous broken merge of trunk r1171:1207
d364c93 merged trunk changes r1171:1207 into branches/sage/cephmds2
958e3ec fixed lots of memory leaks!  cleaned up C_Gather.  Thread has stricter interface (join() dies if thread didn't start).  lots of objectcacher cleanup (including memory leakage).  some fakemessenger cleanup.
b6c7941 renewal stuff coming together, mds handling stuff incomplete
ce7bd32 Client cap caching totally redone
f849b45 sage helped me fix some stupid i was doing
ea993eb group bug fixed...i hope
8ac1851 filepath cleanup.  major discover code cleanup.  thrashing+log trimming is stable!
f2b2a33 fixed an initialization bug
5270810 update bug fixed
42bc516 2007-03-10  Casey Marshall  <csm@soe.ucsc.edu>
f646f4a fixed warnings on LP64; removed MonitorStore debug message
5c5e4d8 mds unix group handling better now
95b21cc some small discover fixes; migrator cleanup; a more serious overhaul is needed both for dirfrags, and to interact well with ambiguous auth and dir auth hints
0d5fa02 --fix_client_id 1/default off toggles a fixed group for all clients and uid based on clientid
73e2686 secure_io toggles security (on defaultly) and --no_sec doesnt do anything anymore
2a38c3e don't require 'fs' to be defined
6e0d88e multiset pins (with counters); some fixes with migration (mostly dirfrag_t fallout); lots of fixes with cdir->fetch and commit, esp w/ interaction with subtree migration.
700d946 fixed funny hash output thingy
b6bd884 changed hash output
4eaee5a Added an example grouping file
631a004 Oops, forgot to check in reply message
34bc782 add the sample file
7f23506 cleanup
e8b063c List verification is done
b9ce005 mds unix group management redone
93dfe2d a sample
a0bd45d random stuff here and there
e14f24e gobs of dirfrag_t refactoring.  mds readdir implementation.  minor client tweaks. ripped out more old hashing stuff.
23ade8a more dirfrag prep work.  cleaned out MDStore.  soem CInode and CDir constant cleanup.
34d3bcd use absolute paths when using fuse
c41901c some prelim cdir frag stuff.  mdstore fetch/commit moved into cdir, and significantly cleaned up
c49a04f Update protocol with Merkle trees bascially done
cf115de oops
284a61d big cleanup of OSD, generic PG interface.  do_op moved into PG.  new ObjectLayout added to Objecter interface (and ObjectCacher), pg in MOSDOp rolled into that.  new PG locking architecture.
f1f9e9c sharing of mdsmap with clients as appropriate; mds recovery bugfix; some mds cache documentation
171e5c5 merkle trees added, full cap stuff almost done
ffe5263 merged trunk changes r1107:1170 into branches/sage/cephmds2
611c608 eek, use SimpleMessenger.  surprised that worked at all!
cde976d client mds request retry, forward notification; messages housecleaning; messenger housecleaning; mds journaling of mount/unmount events, client map contents
f530986 base of update protocol there
4e2bfa2 moved everything to cryptopp5.4
95be0dc client describe_layout interface; monitorstore fuse-changes-cwd workaround; osdc debug printer cleanup
552137f less crap in the output
e1e1e97 little cleanup
2abaa3f added lseek to Client
42e7238 security can be disabled now with --no_sec
4da3810 basic cap caching done
332112b Added capids and caching class
1cdfa1f copiles and runs.  RAID4PG instantiation and pg creation commented out in OSD.cc until the virutal methods are implemented...
3efd474 build on 64-bit machines (LP64)
6f36b1e compiles, too
2f0aa62 wrote it out.. hmm..
8fa2c00 2007-03-01  Casey Marshall  <csm@soe.ucsc.edu>
85fcea7 minor fixes...i think we in a happy state (knock on wood)
c3df762 fixed cache rejoin.  --mds_dump_cache_on_map
3b8f05b import/export failure recovery basically working!
f293d98 Cleaned up the mon key gen
dbac310 merge trunk changes r1058:1150 into branches/aleung/security1/ceph - new monitor key boostrapping
ba197ff passing of caps works to s degree...still some issues to resolve. About to merge trunk into branch. note version number is case bad things happen.
81de513 more transplanted old guts. blood everywhere.
27ac80e comment
fa5e6eb newsyn fix for numclients>1, mds_beacon_* args for config.cc, simplemessenger now dies on dup register_entity, doesn't assert on missing local destination (still warns)
42c9f1c Start of new interface to use Ceph under Hadoop --Esteban
11632e9 More normal state...not that everything works yet but better
cd8c127 more stuff
5b9186f stupid bug fix for _is_cached and _trim_from_cache
98b3943 little changed...still in weird state :)
73f4d1c Stuffs kinda in a weird state...weird extcap compile error...cap caching on client buffer not totally done
1e0a427 der
a476b85 make mds notice incarnation, even when it starts up as a specific mds# (e.g. via newsyn)
9213a23 eek
4a10f2b hmm
f583f34 fixed stupid cache client shutdown bug
559d2bf reverse_import works with 2 nodes.  bystander subtree cleanup is going to be a little tricky.
2038950 online recovery from importer failure works.  open_remote_dir fixed.
6595ded yay!  still need to test online recovery, and write reverse_import.  cleaned out old crope crap.
18ca629 import/export stable with new subtree infrastructure.  now to fix recovery.
9c7f67d added basic implementation
edcf4c0 merge branches/riccardo/monitor1 changes into trunk (pg log storage fix, monitorstore, simplemssenger fixes, fakestore rewrite, and the latest monitor stuff)
a32d6d3 fixed pg log storage (and the stupid recovery problems); fakestore cleanup
90c7ca3 minor set_dest_inst cleanup
54ce20a fakestore rewrite.  new dir layout.  now only optionally fake collections or attrs.  verify xattr support on mount.
e9fb0a2 mdsmon startup/shutdown cleanup.  minor monitorstore fixup
3e58658 Read caps are being received by OSD...write caps are next
93528d8 monitorstore fixes
fd9422e fixed osd failure reporting; monitorstore mkfs; monitorstore cleanup
3968ca4 merged trunk changes r1107:1121 into branches/riccardo/monitor1
432611e Read cap is being passed through client
8dae85d Removed RC5 encryption, not compatible with older crypto libs
a60cdad Changed cap cache handling
2d23769 Resolved some capability generation issues
ba38fe2 cmonctl; omg gobs of dir_auth import/export crap, that i am about to scrap anyway.  fun times.
2fb0b4f untested auth_pin changes; ctime changes (i am an idiot)
9fe20ec Modified extcap buffer management
e50846f 2007-02-20  Casey Marshall  <csm@soe.ucsc.edu>
d8814bd minor cap bit handling fixes.  should tide us over until there's time for a more thorough code review.
ecd44c7 significant rework of export messaging.  cache expire rewritten to dup expire messages to old and new auth during ambiguous phase.  CDir.dir_auth_pending to track that.  CDentry state properly migrated now.  lots of related bugfixes.
771f8f2 2007-02-19  Casey Marshall  <csm@soe.ucsc.edu>
acea5fb 2007-02-17  Casey Marshall  <csm@soe.ucsc.edu>
d872f20 paxos message delivery, elector change
ed572c0 fixed port handling, nonce
0d081ba merged trunk changes r1084:1106 to branches/riccardo/monitor2 (namely, the mds updates merged back into trunk)
92f7e6e merge from branches/sage/cephmds2
7df5fac iasdf
bc0d400 openc hack, works for now
e68d24c debug prefix
41dcb87 pipe close bugfix
a734251 added the extcap class
9ce10fb Client gets cap back and begins passing to OSD
9511a6e merged trunk changes r1047:1098 into branches/sage/cephmds2
b796b30 move ip parsing into config.o, generic --bind option for all build targets
3d79d61 fixed get_new_proposal_number
f4e4556 function skeletons
58a1b3e paxos messages
53a7ffa create a mess of directories w/ a realistic nesting structure
bcb9b1e surviving exporter will recovery importer failure during export
ae472db some web page updates
a8f8019 osd ops tagged with reqid_t, which includes osd client (client|mds) incarnation.  types.h files restructured/cleaned up somewhat.
1b4868a ginormous message layer refactoring, i want to die
49784ff monitorstore.  paxos get_last_proposal_number.
c434146 paxos shell
8eef495 elector bugfix 2
f2d75fa elector bugfix
e4f8d29 beginnings of monitorstore thinger
18268f7 merged trunk changes r1068:1083 into branches/riccardo/monitor2
feb103f try to close bound socket to avoid TIME_WAIT after control-c
7856be3 tweak to cache purge thing
61a7f7b client key distro is close to done
d1cb0f5 Passing of keys is working...but not finished
7978d89 elector signedness cleanup
87c47f7 only use ar -rc for darwin, ld is faster the rest of the time
809da8b ebofs trim_from_cache(object, start, len)
133ed04 statvfs in client, as per newer fuse api
a73bbfa basic mds recovery now working, mostly missing graceful handling of surviving mds; synclient 'walk' tweaks
7426f9f Waiting for ClientMonitor to respond with ACK
e7619b6 Ticket's are updated and supposedly passable
83e1102 client blocking to get a user ticket
ccddcb4 First steps towards client auth
32ade6d user auth messages
a5dd885 fixed htons goof in SimpleMessenger; mkmonmap now works; monitor elector sorta working!
07ac5d3 creating branch for distributed monitor
cf298fc elector stuff for distributed monitor
e08a9eb A bit mote on the user.h
f113ad3 Modified the monmap to have keys
d60308f Added the (empty) user class
31d854b ebofs sync() tweaks (untested!); first pass at is_cached interface (with half-assed implementation)
b100a1f More map stuff, should be ready to serialize to .ceph_monmap
05c59eb got the seg fault fixed
d5d4231 more buffer encode templates for list<string> and map<T,string>
41770ec Doesn't compile at the moment but fixing that now
89334e7 merged trunk changes r1025:1057 into branches/aleung/security1/ceph
4bbd5ba more timer bugfixes; mds recovery disambiguates imports and exports, twiddles auth bits properly (at least with collective failure); still need to do cache rejoin, and deal with recovery of a surviving mds doing an import/export
3a82697 probe detect empty journal
ff1784e minor simplemessenger bugs
0bdfef5 another minor SafeTimer issue
e423ec5 fixed cancel_event with SafeTimer
86be297 silently ignore messages for entities that have shut themselves down
6840a1b more darwin tweaks
e1a5844 updates to build on darwin.  fuse untested.  need to edit Makefile to enable darwin cflags.
a98d4d4 more mds states; import map sharing; beginnging of cache rejoin framework; different mds log/journal cap strategy (make it empty)
540afc0 Preparing the monitor to recieve keys from the MDS
8314359 merged trunk changes r1038:1046 into branches/sage/cephmds2 (standalone are clustered cmon startup; mkmonmap)
15e3db0 EExportStart/Finish partially implemented.  next up is rejoin phase, auth bit adjustment, etc..
137c90f mkmonmap; cmon can startup standalone or in a specific monitor rank (given an existing monmap); monmap file read/write moved into MonMap class
381429c Modified the osd boot message to pass key string
a684066 Fixed a core dump?
1cf877a Added some of the initial keys
4b92f84 Keys can now turn to string and everything is a namespace
103b128 mds startup either to standby or to starting/creating via cmds flag.  fixed mdlog inode generation.
50f2b00 vastly improved timer conventions (new SafeTimer wrapper with a mutex ref); some messenger and Makefile cleanup
dcce282 merged trunk changes r1032:1037 into branches/sage/cephmds2 (csyn, Makefile tweaks)
3b8ae62 mds failure detection, shutdown, and basic takover working.
42dc444 fixed a make bug
11189de mds state beacon working (monitor doesn't detect failures yet)
a36c509 standalone synthetic client (csyn)
4d86037 Added files need to test crypto libraries. These should also be used as examples of use
5b2ef1a merged trunk changes r1019:1031 into sage/cephmds2
3786384 fixed fakemessenger whoops
95ebd79 more journaling work. initial bits of MDS states and revised startup process.
98b2658 NewerMessenger replaced with SimpleMessenger, which is much... simpler. new build targets for standalone monitor and mds: cmon and cmds. it's now possible to start up a distributed fs without mpi and newsyn. some cleanup in other messenger code. client boot process modified to contact montior explicitly for client id.
f0e1567 added security flags to the config files
7f00a63 Makefile now builds crytpo stuff into fakesyn (and only fakesyn)
3f1811b added the base crypto packages...requires crypto++5.2
1bfa322 creating a security related branch
34a5436 added my working dir
88a5f86 import/exports logged; mds log capped with import_map on shutdown
b54ffb0 svn change
1a1b3f4 new repository localtion
2332ff1 work so far on the journaling, mds update stuff
c80eca7 sage mds branch
9b45315 move into trunk
70327f3 move web into trunk
4432e5c git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@1016 29311d96-e01e-0410-9327-a35deaab8ce9
a46e96d oops
c047165 typos
a2211fe my stuff
5b94371 branches
aec461c trunk
55d3638 have_oc() bool
f5178db return
4ddca7c raw_hack_aligned only for CYGWIN.
807f4eb reencode request after setting client inst
30636b3 rearrange to not crap out under cygwin compile (statlite stuff)
3c93e6e return from non-void
6850112 fixed hack_aligned
6baff10 asf
c971fe6 optest
69ce53e ongoing alloc_inc/dec (clone() allocation) mess
531e975 nothin
044e272 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@999 29311d96-e01e-0410-9327-a35deaab8ce9
186368a raw not copyable
ab452c5 shut up
a2fdfc3 turn off clone() by default
b9ae4f4 comment
2e2359d quieter
4225e52 quieter
4f10914 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@992 29311d96-e01e-0410-9327-a35deaab8ce9
afc2edb git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@991 29311d96-e01e-0410-9327-a35deaab8ce9
4ec3a7d quieter
864abe6 smallere bofs cache; ms_die_on_failure
4d09bcd quieter
0f4fd68 onward
1c9cb9c exchange load (qlen) info
b761f0b rev
1c95b0f object revisions; acker is now second osd; primitive read balancing
9c20f99 improved forcefeeding of crush
0841a4b osd_balance_reads
5c1f460 better revision picking logic
05d1bb2 testing osd revision
073a55f rev in ObjectExtent
6e44869 don't test osdmap using old pg_t
283b68e improved support for forcing the first element of a crush result
8cf72d4 bugfix: usemaps in the extent ref count table
d790174 more on mpi
76dfaeb out,overload
3845ac9 out and overload
a447ee2 ebofs buffercache changes to fix behavior of clones. conflicting reads still need to be tested/resolved.
d9ea844 fixed > and < on object_t
e822b6f some preliminary object revision stuff; ebofs reference counts allocated extents
e12a0f0 future tense
7bfd49d bugfix
d3567e5 cleanup
b5aa44d pg_t stuff
dc966b5 pg_t stuff
2f86da0 tons of mds recovery stuffs
a7fa25d more
b51834b Journaler ignores fragmented entries at end of journal. does not truncate them, though!
2462e61 desribe_layout possibility
0b90cc5 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@960 29311d96-e01e-0410-9327-a35deaab8ce9
11ebb28 journaler_allow_split_entries
6ff1f7b reorder class elements
5d6c26e ceph paper link to usenix
dbf106f git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@956 29311d96-e01e-0410-9327-a35deaab8ce9
1c7ff0e operator[] on buffers
f096553 fixed port
886e755 exceed's flaky cut and paste is the bane of my existence
fc980ed git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@952 29311d96-e01e-0410-9327-a35deaab8ce9
7b35df8 typos
6527540 mknod mds event; type munging
d5f4044 mds reorg (locker separated from mdcache); inode, dir update events use ETraced
f48befa git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@948 29311d96-e01e-0410-9327-a35deaab8ce9
580c28a event fun
175ba5b updated!
77ecf6a idallocator recovery replay working!
d40a2c7 is_active()
90764b3 mds restructuring; logstreamer -> journaler; basic journaler recovery working; mds and osd boot changes; buffer bugfixes
40efd8c zero op (tho inactive)
46b4eab logstream trimming, recovery (untested)
e317e4f bugfix
2529afe new buffer.h; beginning of mds cleanup work
9cf37bb git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@938 29311d96-e01e-0410-9327-a35deaab8ce9
564ece9 sadf
eae81d2 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@936 29311d96-e01e-0410-9327-a35deaab8ce9
1236933 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@935 29311d96-e01e-0410-9327-a35deaab8ce9
62a5dd3 monitor device
7c6f78a anchortable separated out anchorclient; logstream updated; misc mds cleanup
c603ac2 caching fixes
6a8d6f8 namespace
5840c5e fixed objectcacher bug; LogStreamer, replaces mds/LogStream
6500419 namespace
b6dcfc0 cleanup mem leak
b71ce36 cleanup
8d269ef send_message fun
0baacd7 fail on lock held
0690b4c mds client map; send_message cleanup
7bfdd53 monitor fun
382a2d0 newer messenger
53ce37a tabs
430e47a headers
ff7ce8c new object_t struct; monitor work
19771b7 logo fix
3ab9358 other binaries working.  minor mon tweaks.
1b49b2a git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@916 29311d96-e01e-0410-9327-a35deaab8ce9
8fcfa31 tab cleanup; monitor maps, mds maps; monitor cleanup
2e98e54 crude arch diagram
24f6667 tabbing
09abb39 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@912 29311d96-e01e-0410-9327-a35deaab8ce9
6eaa8eb Added a link to the wiki
c7eace5 oops
e4861f8 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@909 29311d96-e01e-0410-9327-a35deaab8ce9
39700e7 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@908 29311d96-e01e-0410-9327-a35deaab8ce9
48751ce git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@907 29311d96-e01e-0410-9327-a35deaab8ce9
c533fac constifying entity_inst_t, starting to rework messenger lookup stuff...
f55e7d6 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@905 29311d96-e01e-0410-9327-a35deaab8ce9
c583dd5 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@904 29311d96-e01e-0410-9327-a35deaab8ce9
fd61c5f git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@903 29311d96-e01e-0410-9327-a35deaab8ce9
7c8b73e This commit was manufactured by cvs2svn to create tag 'merge_newrepop_add'.
119870c This commit was manufactured by cvs2svn to create tag 'merge_HEAD_newrepop_add2'.
68fa262 This commit was manufactured by cvs2svn to create tag 'merge_HEAD_newrepop_add'.
599b20b This commit was manufactured by cvs2svn to create tag 'from_newrepop_add'.
12439be This commit was manufactured by cvs2svn to create tag 'from_HEAD_newrepop_add2'.
043a148 This commit was manufactured by cvs2svn to create tag 'from_HEAD_newrepop_add'.
ea1aa73 This commit was manufactured by cvs2svn to create tag 'ceph_newrepop_add_root'.
73932db This commit was manufactured by cvs2svn to create branch 'ceph_newrepop_add_branch'.
cadaea9 *** empty log message ***
06bc7e6 *** empty log message ***
8543b8d *** empty log message ***
d373cff *** empty log message ***
2d3ffef New repository initialized by cvs2svn.
80702c9 git-svn-id: https://ceph.svn.sf.net/svnroot/ceph@889 29311d96-e01e-0410-9327-a35deaab8ce9
78f9a9d release rd caps on close.
13afdc9 cleaned up queueing in blockdevice
85d4b4f osd handles divergent logs now.
9931638 client oc on by default now
39e4c2d lazy io
1f800ab attribute dangling pointer bug
38ad938 flusher. failure upcall.
922c588 client readdir() realted stuff; some mds bug fixes;
ce2bbad g_conf has pg log padding and ebofs realloc crap
76d6c79 tare before startup
985169b *** empty log message ***
5dc9efc finally fixed, i think!
93cbf03 *** empty log message ***
a8917e8 ok, _now_ the parital thing is fixed.
7af8512 fixed partial bug.  still ugly, and there's a lingering issue with commit notification...
57ba78c *** empty log message ***
e4a188b fixed stupid evil memory bug thing
2cbbe08 *** empty log message ***
32025fb *** empty log message ***
a65b0bc bdev barrier
d2236e3 fixed file caps modes
8e07741 *** empty log message ***
899ded6 *** empty log message ***
12ceff8 ...
5622eda *** empty log message ***
e22b12a better!
fcf95d2 simplify realloc; still testing
80f1514 bug: mem access after delete
b104594 no core dump; conditional toch
ef41218 *** empty log message ***
ee14d98 cleanup of osd failure recovery
a9ff51d new clock stuff
b86414e ebofs realloc thing
aed420a post fast.
5ff714f read threading changes.  locking fixes.
77ea0c2 wait for sync before read.  untested.
d0f0df2 copy buffer
c8e6cf0 couple fixes.  prelim stuff for snapshots/cloning.
1693db3 newrepop merge
3ad6d13 *** empty log message ***
726e007 *** empty log message ***
381d4c1 *** empty log message ***
9a85357 *** empty log message ***
5e95b6d *** empty log message ***
c0c0716 *** empty log message ***
bf772ef *** empty log message ***
1353471 fixed sync() crap
0be4a26 fixed sync()
c39ee94 hack around pg log ebofs thing
fe1e4a2 fixed stpuid write blocking bug, yay!
b0d537e *** empty log message ***
1afc661 *** empty log message ***
548bbbb *** empty log message ***
fdd4aa5 *** empty log message ***
fcec5a9 aging stuff, ebofs bughunting
ec6347f *** empty log message ***
8ec9171 *** empty log message ***
60200eb freelist
8a9f6b6 load/save freelists
b9a9241 *** empty log message ***
687d5ce stuff
8482c61 recovery fixes
24c7029 *** empty log message ***
c5c26dc *** empty log message ***
169e4ed trim_inodes bug
ef2fbc2 *** empty log message ***
2b58c4c asdf
706886c removed some old hack_* funcs
da55e6d *** empty log message ***
8008182 *** empty log message ***
8974c7d 64bit?
207b646 *** empty log message ***
5369c4d *** empty log message ***
8eaf0a6 monitor switchover; makefile changes; ebofs no-write aging (untested)
8fbf68e *** empty log message ***
3d5233f *** empty log message ***
1bcee06 *** empty log message ***
fd7f577 *** empty log message ***
23b2e76 *** empty log message ***
3481d21 *** empty log message ***
4635eac no message
290a6f2 *** empty log message ***
d2bdb7a *** empty log message ***
bf66a61 first part of election algorithm
4ac5acd first part of election algorithm
eee6e4c *** empty log message ***
ba5d452 *** empty log message ***
250876b *** empty log message ***
febbfa9 *** empty log message ***
e63c872 *** empty log message ***
6353b88 *** empty log message ***
3949722 *** empty log message ***
fe13503 new monitor messages
29c1d71 *** empty log message ***
94285f2 *** empty log message ***
877f671 *** empty log message ***
45e2329 client oc fixup
7d2afd1 *** empty log message ***
02a94f8 *** empty log message ***
cdceb05 objectcacher trims, but doesn't flush
2eb210f *** empty log message ***
7fc860c stabilized new rados logging stuff
ebeb7c7 objectcacher fixes mostly
87e84ef objectcacher locking.  untested.
d88ae53 tons of rados and client stuff.  untested!
7ee52b9 some stabilizing!
c17c16b stabilized!
b120131 newmessenger progress!  new binaries!
8b15934 *** empty log message ***
3600aec *** empty log message ***
a56a37e more rados fun. osdmonitor separation from mds.
433d549 *** empty log message ***
4e321de *** empty log message ***
178a98b *** empty log message ***
88555a7 *** empty log message ***
5d63514 client file cache basically working
a4c15d9 *** empty log message ***
079b78d semi-busted client progress.
33dc2d3 new objectstore transactions.  way slicker!
5478ffc *** empty log message ***
7742a1b some rearranging
7dd1a5f *** empty log message ***
9b60b96 *** empty log message ***
9cbe39b more objectcacher changes some osd locking cleanup/tweaking
e2cc2d3 Implemented putting operations to the wait queue if target objects are locked for writing, and taking them back from the queue when objects become unlocked. Actual blocing is commented out for now, becuase of problems with ggetattr().
f3d7f30 objectcacher compiles.  some more osd changes (still not done yet)
3f9bc5c Modified Files:  	ObjectCacher.cc ObjectCacher.h Partial checkin
2f9a1a5 Modified Files:  	ObjectCacher.cc
dd96cfb *** empty log message ***
609e641 Added OSD_OP_* values for WRLOCK and WRUNLOCK, and handling of lock and unlock cases to OSD::op_nodify and op_rep_modify; moved common code from OSD::op_modify and op_rep_modify to the new function op_apply().
4887f9a *** empty log message ***
57be928 *** empty log message ***
0c69135 *** empty log message ***
33bae7f *** empty log message ***
3593900 lotsa osd-related changes
c8a77d9 *** empty log message ***
0e25112 *** empty log message ***
1d0de0d *** empty log message ***
5e54748 *** empty log message ***
917ba46 *** empty log message ***
1418c0d *** empty log message ***
1c820a0 *** empty log message ***
b29413a *** empty log message ***
c0ec659 *** empty log message ***
f67ae6f *** empty log message ***
b958b21 *** empty log message ***
e1957b9 osd_remount_at
3521b62 *** empty log message ***
32ecfd2 *** empty log message ***
af7ae6d *** empty log message ***
55cee5d *** empty log message ***
d1a475e *** empty log message ***
c287607 *** empty log message ***
f992e87 *** empty log message ***
a27f453 *** empty log message ***
ae3562e *** empty log message ***
241cfed *** empty log message ***
2e3f59c *** empty log message ***
150dc34 *** empty log message ***
34a2ad9 *** empty log message ***
7158902 *** empty log message ***
ac69fcb *** empty log message ***
d453c97 *** empty log message ***
0edda2e *** empty log message ***
b2150a9 *** empty log message ***
f090a97 *** empty log message ***
c061869 *** empty log message ***
15133a6 *** empty log message ***
1032be6 *** empty log message ***
bd6fc80 *** empty log message ***
4a3220c *** empty log message ***
bb0c607 *** empty log message ***
66eab36 *** empty log message ***
e9f9430 *** empty log message ***
cce471c *** empty log message ***
e754361 *** empty log message ***
2231221 *** empty log message ***
4aa1dfe *** empty log message ***
b65ef7d *** empty log message ***
fd30d9e *** empty log message ***
4124a32 *** empty log message ***
c6826b6 *** empty log message ***
cd0fc7a truncate bug; stupid
d3e50a6 release a tx node?
24c9230 *** empty log message ***
289c59d *** empty log message ***
c481bcf *** empty log message ***
c7141e1 *** empty log message ***
c34eb86 *** empty log message ***
343ca66 *** empty log message ***
1e3d4b7 *** empty log message ***
a4ea071 *** empty log message ***
9f4163a *** empty log message ***
4559dd5 *** empty log message ***
c607d05 *** empty log message ***
cd5a738 *** empty log message ***
b09e556 *** empty log message ***
5db9aa5 *** empty log message ***
6e21801 *** empty log message ***
b62bbba *** empty log message ***
3f06651 *** empty log message ***
784f8ec *** empty log message ***
13945fe *** empty log message ***
19160b6 *** empty log message ***
908c9bc *** empty log message ***
3ab99df *** empty log message ***
8dd5142 *** empty log message ***
421e540 *** empty log message ***
962cee0 *** empty log message ***
8801284 *** empty log message ***
a1e4594 import/export filelock transitions
4c01d71 *** empty log message ***
4f59877 *** empty log message ***
2a3d57f *** empty log message ***
fdbcbd2 *** empty log message ***
9dfbe32 *** empty log message ***
6965c53 better traffic control; objectstore aging
962394c *** empty log message ***
46f8257 *** empty log message ***
4c4c02b *** empty log message ***
68690dd *** empty log message ***
b5df4a4 *** empty log message ***
9547857 *** empty log message ***
3dbd237 *** empty log message ***
b5ee88a *** empty log message ***
49a605b save memory.. don't keep buffers after apply_write
bd1ac7c *** empty log message ***
5ff4f33 *** empty log message ***
178e181 *** empty log message ***
7800b07 *** empty log message ***
42af1f6 *** empty log message ***
1aaa3fc *** empty log message ***
80ebaa3 *** empty log message ***
345bf25 *** empty log message ***
73aaf7e *** empty log message ***
2e1eff3 *** empty log message ***
6393cf6 *** empty log message ***
91a04b0 *** empty log message ***
4ae7ec7 *** empty log message ***
e0cd38a *** empty log message ***
98cd119 *** empty log message ***
5619666 avoid stupid pg_update startup flurry
157183d *** empty log message ***
0cf77b5 *** empty log message ***
6859fe8 *** empty log message ***
9902cfd *** empty log message ***
42cf5b4 *** empty log message ***
4f21d5a *** empty log message ***
72518c6 *** empty log message ***
2de0cbb *** empty log message ***
42cec6f *** empty log message ***
c4bbad3 *** empty log message ***
6f82c4d *** empty log message ***
d3bc7d5 *** empty log message ***
41e34e5 *** empty log message ***
a53cbfa *** empty log message ***
f05d4cf *** empty log message ***
7a8e52d *** empty log message ***
4e7d056 *** empty log message ***
24a7b64 *** empty log message ***
3762e3a *** empty log message ***
903e2fb *** empty log message ***
8b5d61c *** empty log message ***
0d9ec21 *** empty log message ***
7c6568a dley unmount until sync writes are flushed
5da0be3 *** empty log message ***
2c528ab *** empty log message ***
a031ad6 *** empty log message ***
442552c *** empty log message ***
a5fef10 *** empty log message ***
15b247f *** empty log message ***
039b656 *** empty log message ***
b81522b *** empty log message ***
1657cac *** empty log message ***
a54b797 *** empty log message ***
b629ca6 *** empty log message ***
5dccc7d *** empty log message ***
b4bdd5d *** empty log message ***
509150a *** empty log message ***
b5ec02e truncate()
78cef27 *** empty log message ***
549c27f *** empty log message ***
6e63166 *** empty log message ***
6088a0f *** empty log message ***
8e4ac27 *** empty log message ***
7642998 fixed op queueing/threading stupidity
7f141a7 *** empty log message ***
b09d80d *** empty log message ***
c3c350c *** empty log message ***
0a70fed *** empty log message ***
343565f *** empty log message ***
f741218 C;VS: ----------------------------------------------------------------------
42610a9 faster
f4f37c5 *** empty log message ***
49a15b1 *** empty log message ***
a512b4e *** empty log message ***
281a7d3 *** empty log message ***
46eb777 *** empty log message ***
edaf3cd *** empty log message ***
5a0ae4c reintegrated obfs
73be88e *** empty log message ***
27111e5 *** empty log message ***
120a70c *** empty log message ***
a27897f *** empty log message ***
8bf725f *** empty log message ***
791ab53 *** empty log message ***
1414e04 *** empty log message ***
12133bd *** empty log message ***
742c3bf *** empty log message ***
cb56c17 *** empty log message ***
a3d83ab *** empty log message ***
1ac107a *** empty log message ***
e0c0c47 *** empty log message ***
ea43d66 *** empty log message ***
dad2ebe *** empty log message ***
5071a28 *** empty log message ***
1119d46 *** empty log message ***
e776ee5 *** empty log message ***
59f20a1 *** empty log message ***
7fd0b1b *** empty log message ***
2d911a3 *** empty log message ***
d651e58 *** empty log message ***
49291e9 *** empty log message ***
eba9b2d *** empty log message ***
79e21a2 *** empty log message ***
9b3bf5c *** empty log message ***
c630275 *** empty log message ***
ce8851f *** empty log message ***
e5f073c *** empty log message ***
12154ca *** empty log message ***
dd736df *** empty log message ***
5a7abb0 *** empty log message ***
2d84700 *** empty log message ***
3fc6cb3 *** empty log message ***
9a654dd *** empty log message ***
b29aa20 *** empty log message ***
947695f *** empty log message ***
f668209 *** empty log message ***
1a15a59 *** empty log message ***
110a6f0 *** empty log message ***
82350af *** empty log message ***
b4ccfba *** empty log message ***
7deb057 *** empty log message ***
53866b4 *** empty log message ***
fcbd7fc *** empty log message ***
1334786 *** empty log message ***
cf95d4f *** empty log message ***
afd5530 *** empty log message ***
3ab97af *** empty log message ***
27cef48 *** empty log message ***
aaf0ef0 *** empty log message ***
d5cd874 *** empty log message ***
a4e15d0 *** empty log message ***
fd5db76 *** empty log message ***
d44b0f3 *** empty log message ***
ba788e7 *** empty log message ***
c43e3a4 *** empty log message ***
fdfae34 *** empty log message ***
0b0f23c *** empty log message ***
02baeeb *** empty log message ***
e72f3ce *** empty log message ***
1f4a180 *** empty log message ***
c8b4f75 *** empty log message ***
242449a working pretty well!
20946a3 *** empty log message ***
0374319 *** empty log message ***
3e3e205 *** empty log message ***
2bbb810 *** empty log message ***
969fe2e *** empty log message ***
4be66ae *** empty log message ***
0b76b3d *** empty log message ***
0282b89 *** empty log message ***
0761216 *** empty log message ***
72bf7e7 *** empty log message ***
28efa36 *** empty log message ***
c50a325 *** empty log message ***
18d9132 *** empty log message ***
1bfdebf custom free func
5cd42f4 hmm
7de72cc *** empty log message ***
58227ec *** empty log message ***
2484df3 caps fun, but centralized writers ultimatley busted!
50f373c *** empty log message ***
ccd7490 *** empty log message ***
6071834 *** empty log message ***
fa1664b osd stuff working pretty well
ad779ae *** empty log message ***
6aafbae *** empty log message ***
c982780 *** empty log message ***
af48e22 *** empty log message ***
7f35d12 *** empty log message ***
8f6ce52 *** empty log message ***
4efd65d *** empty log message ***
69c3761 *** empty log message ***
7695df9 *** empty log message ***
e339fe0 *** empty log message ***
28670bb better
e260660 replication mostly working
98d20ec  Modified Files:  	config.cc config.h fakesyn.cc client/Buffercache.cc  	client/Buffercache.h client/Client.cc client/Client.h
fa5b470 *** empty log message ***
2b40417 *** empty log message ***
185b440 Modified Files:  	TODO config.cc config.h client/Buffercache.cc  	client/Buffercache.h client/Client.cc client/Client.h
44ba53c *** empty log message ***
88086b8 lots of OSD peering stuff (still not complete) TCPMessenger rewrite!!!
1915b86 layout is in inode
258300d  Modified Files:  	Cond.h Mutex.h
c64cf75 Modified Files: 	Buffercache.cc Buffercache.h Client.cc Client.h
f63690d disabled release locking stuff until this implemented correctly
8dabf4f *** empty log message ***
91ba93c *** empty log message ***
7ef2f6b lots of osd replication/recovery bits
1b6f270 OSDCluster -> OSDMap
b557dfc *** empty log message ***
1329a8f *** empty log message ***
8af8b8d *** empty log message ***
8e3cf0e hashed dirs on MDS! lots of cleanup too.
adfd89c *** empty log message ***
4449be3  Modified Files:  	Buffercache.cc Buffercache.h Client.cc Client.h
cd99de4  Modified Files:  	Buffercache.cc Buffercache.h Client.cc Client.h
42e438f  Modified Files:  	Buffercache.cc Client.cc
bdf5994  Modified Files:  	Buffercache.cc Buffercache.h Client.cc Client.h
a21f6ec Modified Files:  	client/Buffercache.cc client/Client.cc
4d4cbd4 Modified Files: 	include/buffer.h include/bufferlist.h
4fcc8f4 Modified Files:  	client/Client.cc client/Client.h client/Buffercache.cc  	client/Buffercache.h
35210312 *** empty log message ***
8c7283a lots of cleanup clock stuff bug fixes client capabilities! object store attributes, collections (untested in FakeStore)
176a49c *** empty log message ***
5711b3a *** empty log message ***
560eaf9 *** empty log message ***
5aaaccc *** empty log message ***
209a90e *** empty log message ***
2ad3066 *** empty log message ***
33475a3 Modified Files:  	client/Buffercache.cc
c25cb29 Modified Files:  	client/Buffercache.cc client/Client.cc
f21af4e  Modified Files:  	client/Client.cc
16cd59a Modified Files:  	client/Buffercache.cc client/Client.cc
939c859 *** empty log message ***
1c6ac1a *** empty log message ***
c26b4e5 full traces (w/ read and write)
eea765a *** empty log message ***
3fe218a client logs
a7f3331 *** empty log message ***
4eb8ae9 *** empty log message ***
1d7aa8f *** empty log message ***
a9efb21 *** empty log message ***
3169807 *** empty log message ***
4b9ac4b *** empty log message ***
15b67ed *** empty log message ***
92f0573 Modified Files:  	config.cc client/Buffercache.cc client/Buffercache.h  	client/Client.cc include/config.h
54b7bc4 *** empty log message ***
cf1c142 *** empty log message ***
5759e59 Modified Files:  	Makefile config.cc client/Buffercache.cc client/Buffercache.h  	client/Client.cc client/Client.h include/config.h
6ee92e2 osd replication
f652659 *** empty log message ***
5be02b6 *** empty log message ***
1cd6799 *** empty log message ***
e3b966e *** empty log message ***
482ad5d *** empty log message ***
57f7562 *** empty log message ***
3254534 *** empty log message ***
a564c96 *** empty log message ***
e03fd6f *** empty log message ***
315aeb4 *** empty log message ***
b8a98e6 *** empty log message ***
8dd2f47 *** empty log message ***
3c5a7f1 *** empty log message ***
b614753 *** empty log message ***
219b77f *** empty log message ***
c4872c0 *** empty log message ***
7881082 *** empty log message ***
56bd28a *** empty log message ***
db73dc4 *** empty log message ***
81e01f7 *** empty log message ***
9f550ae *** empty log message ***
508e02a *** empty log message ***
ff265b9 traces!
82e27fc Modified Files:  	client/Client.cc client/Client.h client/Buffercache.cc  	client/Buffercache.h
4f04a64 *** empty log message ***
91ec757 *** empty log message ***
73c3fa4 *** empty log message ***
a34312c synchronous writes unless buffer cache is enabled
d5e6f23 *** empty log message ***
b219045 *** empty log message ***
1e5e0fd don't reclaim fh's... hack until later!
30c474a *** empty log message ***
8503b6b *** empty log message ***
a01c764 *** empty log message ***
6493661 Modified Files:  	client/Buffercache.h client/Buffercache.cc include/config.h  	config.cc
4c9ee7c *** empty log message ***
fff3924 Modified Files: 	Makefile client/Client.cc client/Client.h include/buffer.h 	include/bufferlist.h
54491e3 *** empty log message ***
1ea60c9 *** empty log message ***
919f5ec *** empty log message ***
e7648fd *** empty log message ***
d73f46a *** empty log message ***
feb4730 Modified Files: Buffercache.cc Buffercache.h
c48638b mdstore readdir bugfix
b0e8d66 Modified Files: 	Buffercache.cc Buffercache.h Write path tested.
5a6260c *** empty log message ***
524e3a4 *** empty log message ***
4e4ab63 bufferized exports; mds shutdown bug
6e48217 *** empty log message ***
fbd43ea Filer fixes
59d6cd9 filer fixes?
923a115 *** empty log message ***
d3a243f *** empty log message ***
cb8e50d weird
262717a misc; buffer() _len init change (matches _alloc_len)
875fb43 *** empty log message ***
fe202dc *** empty log message ***
a9d737f bugfix w/ striping crap
2083fa4 *** empty log message ***
f09ca0d *** empty log message ***
e54aee1 more efficient reads for striping
a77e833 *** empty log message ***
2768cb9 *** empty log message ***
0fdf74c *** empty log message ***
71d798b *** empty log message ***
0870ab1 mdstore uses bufferlists, no more ropes
4434adf *** empty log message ***
acb5ca6 *** empty log message ***
ca4e99b *** empty log message ***
e4d37b0 hex filenames!
8ecd056 *** empty log message ***
da2923b *** empty log message ***
157bf90 *** empty log message ***
07fc14b *** empty log message ***
0f80865 *** empty log message ***
cce3a8f Modified Files:  	client/Buffercache.cc client/Buffercache.h
f199774 *** empty log message ***
dbf12de *** empty log message ***
3d7b6b3 client request/reply encoded into buffers, not ropes
ac9d0d4 *** empty log message ***
0e65074 *** empty log message ***
e794904 Added Files: 	Buffercache.cc Buffercache.h
c7fca00 *** empty log message ***
cc0c6cb *** empty log message ***
1084b9d file layout policies
89e4c24 *** empty log message ***
45d4bed *** empty log message ***
d73cef0 Feng adds the OBFS stuff into the pmds.
da16b96 *** empty log message ***
7804916 *** empty log message ***
d3ef7c4 fixed Context destructor snafu; Messenger serializes itself (no more CheesySerialize)
bb0b4db *** empty log message ***
c0fc56a *** empty log message ***
25468b3 buffer debug
389fe77 logger locks
aa516bc *** empty log message ***
ca06566 *** empty log message ***
2176392 *** empty log message ***
755f780 shut up
c4b08bc memory leaks, threadpool tweaks
f5ae814 *** empty log message ***
b266409 *** empty log message ***
9273135 *** empty log message ***
057aaef *** empty log message ***
94ade9d *** empty log message ***
4ef1430 Added tp to test ThreadPool.h
e880236 *** empty log message ***
4434bca First version.  Untested.
a7fdc27 *** empty log message ***
478b50d *** empty log message ***
0df31ac tcp messenger!
1fd67ea *** empty log message ***
e5b46b7 *** empty log message ***
f4678c3 *** empty log message ***
1ea8cae *** empty log message ***
f64729e *** empty log message ***
dbab170 *** empty log message ***
43f0911 *** empty log message ***
7416379 *** empty log message ***
0e89fe0 *** empty log message ***
a4bd398 *** empty log message ***
f69665c md cache bugs
84deee7 *** empty log message ***
daac6b0 memory leaks
85e25b9 *** empty log message ***
2a2331e *** empty log message ***
7e1717c memory leaks, etc.
cd9c673 rewrote mds log
5053f46 *** empty log message ***
399e845 *** empty log message ***
a1ba05c *** empty log message ***
d2197ce *** empty log message ***
fba2d5d *** empty log message ***
10e38fa *** empty log message ***
0e93a8a *** empty log message ***
eb7bfec *** empty log message ***
324f1e9 *** empty log message ***
252d5ec *** empty log message ***
31551a5 quick tweaks
4355545 buffer tweaks; logger tweaks; osd read/writes now go through MOSDOp(Reply), OSD checks cluster version, other replication groundwork
4fd53be *** empty log message ***
f5c405b *** empty log message ***
13c6eb0 *** empty log message ***
986830a *** empty log message ***
71dd008 *** empty log message ***
a5642a9 *** empty log message ***
6084ae4 *** empty log message ***
5a08031 *** empty log message ***
afd55dc *** empty log message ***
b3ce21e *** empty log message ***
896b9b3 *** empty log message ***
0f6e052 rush!
e8d2574 *** empty log message ***
e74adca Added Files:  	buffercache.h
ef8d098 random stuff, mostly time related
a45dc6f balancer stuff (popularity)
430a5a1 *** empty log message ***
8158f9e *** empty log message ***
ef0ba71 *** empty log message ***
0b754d3 *** empty log message ***
2b257d3 *** empty log message ***
45ba0d1 cleanup
d38f894 dumb bug in .copy
c158d0f async writes (in a lame way)
4a3f56d *** empty log message ***
937f8f1 *** empty log message ***
b09fc47 *** empty log message ***
d16a990 *** empty log message ***
66563e3 mpi messenger seems to be working!
4d0f46a *** empty log message ***
f699624 *** empty log message ***
8b5e39e *** empty log message ***
9045ec6 *** empty log message ***
1fb2642 *** empty log message ***
88f03b8 *** empty log message ***
e6f2f55 *** empty log message ***
e05e000 *** empty log message ***
222267e tons of buffer, mpi crap.. mpi not working yet
5f936ca *** empty log message ***
eb2674f use Filer for reads/writes
4275d65 *** empty log message ***
3a693b7 mkfs hook
4bd53d6 *** empty log message ***
edd7ef4 hard links sort of work (they're fragile)
c3d7d81 *** empty log message ***
c1f8e2c *** empty log message ***
c9a7641 *** empty log message ***
caf8d22 *** empty log message ***
81007b8 *** empty log message ***
b71a62a *** empty log message ***
960c19b *** empty log message ***
6cdfb3a *** empty log message ***
0beaa03 *** empty log message ***
8f3d130 *** empty log message ***
7dc2228 *** empty log message ***
cb39284 *** empty log message ***
74c5f2f *** empty log message ***
8d37272 *** empty log message ***
5f8c717 *** empty log message ***
a7fb4bc *** empty log message ***
00fadaa *** empty log message ***
0c8ddd7 *** empty log message ***
b17b6db *** empty log message ***
9cd4673 starting on hard links
df50017 mount/unmount, fixed symlink store/fetch bug
06fa3a8 more hard link groundwork
96c1bf9 *** empty log message ***
db07905 *** empty log message ***
4aed963 *** empty log message ***
cb323e6 *** empty log message ***
a6e5fa5 *** empty log message ***
42faba4 *** empty log message ***
3b3cb7e *** empty log message ***
6e29f88 *** empty log message ***
791ae61 changes per ethan's suggestions!
19b194b timers work
ba1cfdb *** empty log message ***
ae9e377 *** empty log message ***
cfeca6a foreign rename works, in small tests at least!
9cff0e9 foreign renames getting closer...
ef4b7eb *** empty log message ***
019a81b *** empty log message ***
1d291c1 *** empty log message ***
f6987a1 *** empty log message ***
6ddac1f *** empty log message ***
360683e Modified Files:  	client/Client.h
bdfe5e0 Modified Files:  	config.cc client/Client.cc client/Client.h include/config.h
c7f8a5f *** empty log message ***
1f7433a crap
ac542f7 *** empty log message ***
65daff4 *** empty log message ***
9e831d7 Modified Files:  	client/Client.cc client/Client.h
0d362c6 remote rename works! buggy tho.
695e81a rush disk groups
fb43a54 *** empty log message ***
ae62cbb *** empty log message ***
41c66a2 *** empty log message ***
9bda084 *** empty log message ***
3a8a2f2 *** empty log message ***
ff281d3 *** empty log message ***
5176d3e *** empty log message ***
4f705c3 *** empty log message ***
60488cc *** empty log message ***
ebedbaf *** empty log message ***
64ac277 new mpi builds.  untested.
7f9e267 For those that haven't already included <vector>.
6e84a8e Error reporting.
738440a Multithreaded version of MPI Messenger and associated tests.
9de7b80 Changes for multithreading.
c892f08 Second try: Update for MPICH2; use $@ & $^ to eliminate redundancy.
4aceb77 Modified for MPICH2.  Used $@ and $^ to eliminate some redundancy.
c6b7889 *** empty log message ***
ab4d992 *** empty log message ***
e24938b *** empty log message ***
2c0a604 Fix MPI paths for Szilard.
a786d5c fuse bits compile!
3ec0e28 *** empty log message ***
de8f631 *** empty log message ***
cde8de2 Modified Files:         fakesingleclient.cc client/Client.cc messages/MClientRequest.h
405f8a7 CVS----------------------------------------------------------------------
7c8f077 *** empty log message ***
c860097 Modified Files:  	fakesingleclient.cc client/Client.cc
8d578ad Modified Files:  	fakesingleclient.cc client/Client.cc
003d5a8 *** empty log message ***
8f64eab *** empty log message ***
08b2cd0 *** empty log message ***
26023cd Modified Files:  	client/Client.cc client/Client.h client/fuse.cc
e985056 *** empty log message ***
2730ffc more rename fixes
836ffe9 *** empty log message ***
dcfc7a5 *** empty log message ***
421affd er, works now i think!  more testing to come
96694a6 *** empty log message ***
71d15dc omg renames actually work (when on teh same mds at least). getting closer!
160f8da *** empty log message ***
8907f1e *** empty log message ***
8157459 *** empty log message ***
bdab1ad *** empty log message ***
a604867 *** empty log message ***
8d89d38 *** empty log message ***
e767d4a *** empty log message ***
9f2e908 *** empty log message ***
880a419 *** empty log message ***
870748b *** empty log message ***
149e119 *** empty log message ***
2ffb379 need to figure out MDS path locking, requset handling framework. fine w/ no rename, otherwise everythign falls apart...
d1d75ef *** empty log message ***
79cb138 *** empty log message ***
e65f511 *** empty log message ***
2b05eb1 yowsers
13400b7 *** empty log message ***
435bccf *** empty log message ***
ed71ba6 *** empty log message ***
ff58476 *** empty log message ***
78784e5 *** empty log message ***
ca0df73 rewrote most of hte locking code.  lot sof stuff ripped out for hte time being..
96b2c2f *** empty log message ***
69277a7 *** empty log message ***
b1ac4d8 *** empty log message ***
d82e54e some reorganization
9a9086d *** empty log message ***
4bbd5e4 *** empty log message ***
02a0eb2 *** empty log message ***
5698411 inos and fh's
772eec1 cleanup
7498ac9 *** empty log message ***
edbb52f *** empty log message ***
9dfe61b *** empty log message ***
50103fa *** empty log message ***
2e46092 *** empty log message ***
908bb37 *** empty log message ***
81beb94 *** empty log message ***
0b66d65 some bugfixes
4d9e615 *** empty log message ***
e4cd6c2 *** empty log message ***
797ef19 ll
d280e38 *** empty log message ***
e0290a0 *** empty log message ***
a4e87ce *** empty log message ***
d9dc4bb *** empty log message ***
15ba795 *** empty log message ***
1cf68bc *** empty log message ***
2634520 *** empty log message ***
f31e0ba *** empty log message ***
991d50d *** empty log message ***
cd0d8ec "progress"
4bb3422 *** empty log message ***
8781ab4 *** empty log message ***
a490fe6 ...
81c0fad good lord, here we go again
6b409c6 new auth model
c99a476 *** empty log message ***
a919aa5 *** empty log message ***
a391aba *** empty log message ***
2387851 *** empty log message ***
20125b9 *** empty log message ***
76eddbf *** empty log message ***
897885f *** empty log message ***
b1e2a98 *** empty log message ***
b2fbbfd *** empty log message ***
971e062 unlink sems to work, but the client is retarded
9d33c30 openwrc works.  starting on unlink
f18dded hashing compiles.. untested!
e7d2a8f hashed directory madness
565f7f9 *** empty log message ***
bbe3cd3 *** empty log message ***
9b7941a *** empty log message ***
cb4611c *** empty log message ***
22872c5 *** empty log message ***
ad6228a *** empty log message ***
80dfe99 *** empty log message ***
ab7cc84 *** empty log message ***
ce2378a *** empty log message ***
6c6c486 *** empty log message ***
318862a *** empty log message ***
b85cdf4 *** empty log message ***
27cf8d8 locks (untested)
76c7233 *** empty log message ***
f6d9a0a *** empty log message ***
2723afc *** empty log message ***
3e74ac1 *** empty log message ***
f578a27 *** empty log message ***
3383213 *** empty log message ***
c86fd98 *** empty log message ***
5a61afd *** empty log message ***
225f5e4 *** empty log message ***
689df81 cleaned up config crap
2ce81ec *** empty log message ***
eba9e7e *** empty log message ***
3bd996a *** empty log message ***
1d86b67 *** empty log message ***
ee63c70 *** empty log message ***
90a1c02 *** empty log message ***
bac0031 *** empty log message ***
25764921 import is currently broken
b247412 *** empty log message ***
61a5130 *** empty log message ***
9475610 *** empty log message ***
11e5ee0 *** empty log message ***
c57d70f *** empty log message ***
c27f51d *** empty log message ***
0077a02 *** empty log message ***
94ba59e *** empty log message ***
cdb0476 *** empty log message ***
a539bcf *** empty log message ***
8a53315 *** empty log message ***
e9ed589 *** empty log message ***
a2cfa89 *** empty log message ***
669d2a5 *** empty log message ***
b5e6cc8 *** empty log message ***
58f8a29 yay better
6fe1beb *** empty log message ***
65cb06b ughm
b891cc1 *** empty log message ***
45eab89 *** empty log message ***
20d7ed2 *** empty log message ***
0d1d57e YES
f73f344 closer
911aaac *** empty log message ***
fe6b5e4 so close
a8ab173 progress
4405bf6 *** empty log message ***
cb63be1 *** empty log message ***
db2cf1d *** empty log message ***
51c7a5c *** empty log message ***
cb8e932 logging working now
fa868d6 *** empty log message ***
af88317 *** empty log message ***
577aadc *** empty log message ***
5f147d3 *** empty log message ***
4a914f1 *** empty log message ***
03aa87e *** empty log message ***
5ede249 *** empty log message ***
5345042 *** empty log message ***
fc7e45c *** empty log message ***
12fe2f6 *** empty log message ***
84f5ba5 *** empty log message ***
91988b8 *** empty log message ***
cd4cfcc *** empty log message ***
dc19bf1 *** empty log message ***
849f41c *** empty log message ***
0ca67f3 *** empty log message ***
b5c7ba8 *** empty log message ***
e4c47e7 *** empty log message ***
ab4d115 *** empty log message ***
7536155 yay a real makefile
0926ac5 *** empty log message ***
b812bce *** empty log message ***
d5b362b last week
9afeaa0 *** empty log message ***
0daa6ab *** empty log message ***
fa8f4df *** empty log message ***
0ac5aed *** empty log message ***
1893aa1 *** empty log message ***
48cdbbf New repository initialized by cvs2svn.
